

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 29 20:02:22 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	dabs	1,0x7E,2
    67     0000                     
    68                           ; Version 2.35
    69                           ; Generated 13/04/2021 GMT
    70                           ; 
    71                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F18875 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103     0000                     	;# 
   104     0001                     	;# 
   105     0002                     	;# 
   106     0003                     	;# 
   107     0004                     	;# 
   108     0005                     	;# 
   109     0006                     	;# 
   110     0007                     	;# 
   111     0008                     	;# 
   112     0009                     	;# 
   113     000A                     	;# 
   114     000B                     	;# 
   115     000C                     	;# 
   116     000D                     	;# 
   117     000E                     	;# 
   118     000F                     	;# 
   119     0010                     	;# 
   120     0011                     	;# 
   121     0012                     	;# 
   122     0013                     	;# 
   123     0014                     	;# 
   124     0015                     	;# 
   125     0016                     	;# 
   126     0017                     	;# 
   127     0018                     	;# 
   128     0019                     	;# 
   129     001A                     	;# 
   130     001C                     	;# 
   131     001C                     	;# 
   132     001D                     	;# 
   133     001D                     	;# 
   134     001E                     	;# 
   135     001F                     	;# 
   136     008C                     	;# 
   137     008C                     	;# 
   138     008D                     	;# 
   139     008E                     	;# 
   140     008E                     	;# 
   141     008F                     	;# 
   142     0090                     	;# 
   143     0090                     	;# 
   144     0091                     	;# 
   145     0093                     	;# 
   146     0094                     	;# 
   147     0095                     	;# 
   148     0096                     	;# 
   149     0097                     	;# 
   150     0098                     	;# 
   151     0099                     	;# 
   152     009A                     	;# 
   153     009B                     	;# 
   154     009C                     	;# 
   155     009D                     	;# 
   156     009E                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010E                     	;# 
   161     010F                     	;# 
   162     0110                     	;# 
   163     0110                     	;# 
   164     0111                     	;# 
   165     0112                     	;# 
   166     0112                     	;# 
   167     0113                     	;# 
   168     0114                     	;# 
   169     0114                     	;# 
   170     0115                     	;# 
   171     0116                     	;# 
   172     0116                     	;# 
   173     0117                     	;# 
   174     0119                     	;# 
   175     0119                     	;# 
   176     0119                     	;# 
   177     011A                     	;# 
   178     011A                     	;# 
   179     011A                     	;# 
   180     011B                     	;# 
   181     011B                     	;# 
   182     011B                     	;# 
   183     011B                     	;# 
   184     011B                     	;# 
   185     011C                     	;# 
   186     011C                     	;# 
   187     011C                     	;# 
   188     011D                     	;# 
   189     011D                     	;# 
   190     011D                     	;# 
   191     011E                     	;# 
   192     011E                     	;# 
   193     011E                     	;# 
   194     011F                     	;# 
   195     011F                     	;# 
   196     011F                     	;# 
   197     011F                     	;# 
   198     011F                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     018E                     	;# 
   202     018F                     	;# 
   203     0190                     	;# 
   204     0191                     	;# 
   205     0192                     	;# 
   206     0196                     	;# 
   207     0197                     	;# 
   208     0198                     	;# 
   209     0199                     	;# 
   210     019A                     	;# 
   211     019B                     	;# 
   212     019C                     	;# 
   213     020C                     	;# 
   214     020C                     	;# 
   215     020D                     	;# 
   216     020E                     	;# 
   217     020F                     	;# 
   218     020F                     	;# 
   219     0210                     	;# 
   220     0210                     	;# 
   221     0211                     	;# 
   222     0211                     	;# 
   223     0212                     	;# 
   224     0212                     	;# 
   225     0213                     	;# 
   226     0214                     	;# 
   227     0215                     	;# 
   228     0215                     	;# 
   229     0216                     	;# 
   230     0216                     	;# 
   231     0217                     	;# 
   232     0217                     	;# 
   233     0218                     	;# 
   234     0218                     	;# 
   235     0219                     	;# 
   236     021A                     	;# 
   237     021B                     	;# 
   238     021B                     	;# 
   239     021C                     	;# 
   240     021C                     	;# 
   241     021D                     	;# 
   242     021D                     	;# 
   243     021E                     	;# 
   244     021F                     	;# 
   245     028C                     	;# 
   246     028C                     	;# 
   247     028D                     	;# 
   248     028D                     	;# 
   249     028E                     	;# 
   250     028F                     	;# 
   251     0290                     	;# 
   252     0290                     	;# 
   253     0291                     	;# 
   254     0292                     	;# 
   255     0292                     	;# 
   256     0293                     	;# 
   257     0293                     	;# 
   258     0294                     	;# 
   259     0295                     	;# 
   260     0296                     	;# 
   261     0296                     	;# 
   262     0297                     	;# 
   263     0298                     	;# 
   264     0298                     	;# 
   265     0299                     	;# 
   266     0299                     	;# 
   267     029A                     	;# 
   268     029B                     	;# 
   269     029C                     	;# 
   270     029C                     	;# 
   271     029D                     	;# 
   272     030C                     	;# 
   273     030C                     	;# 
   274     030D                     	;# 
   275     030E                     	;# 
   276     030F                     	;# 
   277     0310                     	;# 
   278     0310                     	;# 
   279     0311                     	;# 
   280     0312                     	;# 
   281     0313                     	;# 
   282     0314                     	;# 
   283     0314                     	;# 
   284     0315                     	;# 
   285     0316                     	;# 
   286     0317                     	;# 
   287     0318                     	;# 
   288     0318                     	;# 
   289     0319                     	;# 
   290     031A                     	;# 
   291     031B                     	;# 
   292     031C                     	;# 
   293     031C                     	;# 
   294     031D                     	;# 
   295     031E                     	;# 
   296     031F                     	;# 
   297     038C                     	;# 
   298     038C                     	;# 
   299     038D                     	;# 
   300     038E                     	;# 
   301     0390                     	;# 
   302     0390                     	;# 
   303     0391                     	;# 
   304     0392                     	;# 
   305     040C                     	;# 
   306     040D                     	;# 
   307     040E                     	;# 
   308     040F                     	;# 
   309     0410                     	;# 
   310     0411                     	;# 
   311     0416                     	;# 
   312     0416                     	;# 
   313     0417                     	;# 
   314     0418                     	;# 
   315     0418                     	;# 
   316     0419                     	;# 
   317     041A                     	;# 
   318     041A                     	;# 
   319     041B                     	;# 
   320     041C                     	;# 
   321     041C                     	;# 
   322     041D                     	;# 
   323     041E                     	;# 
   324     041F                     	;# 
   325     048C                     	;# 
   326     048C                     	;# 
   327     048D                     	;# 
   328     048E                     	;# 
   329     048F                     	;# 
   330     048F                     	;# 
   331     0490                     	;# 
   332     0491                     	;# 
   333     0492                     	;# 
   334     0492                     	;# 
   335     0493                     	;# 
   336     0494                     	;# 
   337     0495                     	;# 
   338     0495                     	;# 
   339     0496                     	;# 
   340     0497                     	;# 
   341     0498                     	;# 
   342     0499                     	;# 
   343     049A                     	;# 
   344     049B                     	;# 
   345     049C                     	;# 
   346     049D                     	;# 
   347     050C                     	;# 
   348     050C                     	;# 
   349     050D                     	;# 
   350     050E                     	;# 
   351     050F                     	;# 
   352     050F                     	;# 
   353     0510                     	;# 
   354     0511                     	;# 
   355     0512                     	;# 
   356     0512                     	;# 
   357     0513                     	;# 
   358     0514                     	;# 
   359     0515                     	;# 
   360     0515                     	;# 
   361     0516                     	;# 
   362     0517                     	;# 
   363     0518                     	;# 
   364     0519                     	;# 
   365     051A                     	;# 
   366     051B                     	;# 
   367     051C                     	;# 
   368     051D                     	;# 
   369     058C                     	;# 
   370     058C                     	;# 
   371     058D                     	;# 
   372     058E                     	;# 
   373     058F                     	;# 
   374     058F                     	;# 
   375     0590                     	;# 
   376     0591                     	;# 
   377     0592                     	;# 
   378     0593                     	;# 
   379     060C                     	;# 
   380     060D                     	;# 
   381     060E                     	;# 
   382     060F                     	;# 
   383     0610                     	;# 
   384     0611                     	;# 
   385     0612                     	;# 
   386     0613                     	;# 
   387     0614                     	;# 
   388     0616                     	;# 
   389     0617                     	;# 
   390     0618                     	;# 
   391     0619                     	;# 
   392     061A                     	;# 
   393     061B                     	;# 
   394     061C                     	;# 
   395     061D                     	;# 
   396     061E                     	;# 
   397     068C                     	;# 
   398     068D                     	;# 
   399     068E                     	;# 
   400     068F                     	;# 
   401     0690                     	;# 
   402     0691                     	;# 
   403     0692                     	;# 
   404     0693                     	;# 
   405     0694                     	;# 
   406     070C                     	;# 
   407     070D                     	;# 
   408     070E                     	;# 
   409     070F                     	;# 
   410     0710                     	;# 
   411     0711                     	;# 
   412     0712                     	;# 
   413     0713                     	;# 
   414     0714                     	;# 
   415     0716                     	;# 
   416     0717                     	;# 
   417     0718                     	;# 
   418     0719                     	;# 
   419     071A                     	;# 
   420     071B                     	;# 
   421     071C                     	;# 
   422     071D                     	;# 
   423     071E                     	;# 
   424     0796                     	;# 
   425     0797                     	;# 
   426     0798                     	;# 
   427     0799                     	;# 
   428     079A                     	;# 
   429     079B                     	;# 
   430     080C                     	;# 
   431     080D                     	;# 
   432     080E                     	;# 
   433     080F                     	;# 
   434     0810                     	;# 
   435     0811                     	;# 
   436     0812                     	;# 
   437     0813                     	;# 
   438     0814                     	;# 
   439     081A                     	;# 
   440     081B                     	;# 
   441     081C                     	;# 
   442     081D                     	;# 
   443     081E                     	;# 
   444     081F                     	;# 
   445     088C                     	;# 
   446     088D                     	;# 
   447     088E                     	;# 
   448     088F                     	;# 
   449     0890                     	;# 
   450     0891                     	;# 
   451     0892                     	;# 
   452     0893                     	;# 
   453     0895                     	;# 
   454     0896                     	;# 
   455     0897                     	;# 
   456     0898                     	;# 
   457     0899                     	;# 
   458     089A                     	;# 
   459     089B                     	;# 
   460     090C                     	;# 
   461     090E                     	;# 
   462     090F                     	;# 
   463     091F                     	;# 
   464     091F                     	;# 
   465     098F                     	;# 
   466     098F                     	;# 
   467     0990                     	;# 
   468     0991                     	;# 
   469     0992                     	;# 
   470     0993                     	;# 
   471     0994                     	;# 
   472     0995                     	;# 
   473     0996                     	;# 
   474     0997                     	;# 
   475     0E0F                     	;# 
   476     0E10                     	;# 
   477     0E11                     	;# 
   478     0E12                     	;# 
   479     0E13                     	;# 
   480     0E14                     	;# 
   481     0E15                     	;# 
   482     0E16                     	;# 
   483     0E17                     	;# 
   484     0E18                     	;# 
   485     0E19                     	;# 
   486     0E1A                     	;# 
   487     0E1B                     	;# 
   488     0E1C                     	;# 
   489     0E1D                     	;# 
   490     0E1E                     	;# 
   491     0E1F                     	;# 
   492     0E20                     	;# 
   493     0E21                     	;# 
   494     0E22                     	;# 
   495     0E23                     	;# 
   496     0E24                     	;# 
   497     0E25                     	;# 
   498     0E26                     	;# 
   499     0E27                     	;# 
   500     0E28                     	;# 
   501     0E29                     	;# 
   502     0E2A                     	;# 
   503     0E2B                     	;# 
   504     0E2C                     	;# 
   505     0E2D                     	;# 
   506     0E2E                     	;# 
   507     0E2F                     	;# 
   508     0E30                     	;# 
   509     0E31                     	;# 
   510     0E32                     	;# 
   511     0E33                     	;# 
   512     0E34                     	;# 
   513     0E35                     	;# 
   514     0E36                     	;# 
   515     0E37                     	;# 
   516     0E8F                     	;# 
   517     0E90                     	;# 
   518     0E91                     	;# 
   519     0E92                     	;# 
   520     0E93                     	;# 
   521     0E94                     	;# 
   522     0E95                     	;# 
   523     0E96                     	;# 
   524     0E97                     	;# 
   525     0E9C                     	;# 
   526     0E9D                     	;# 
   527     0E9E                     	;# 
   528     0EA1                     	;# 
   529     0EA2                     	;# 
   530     0EA3                     	;# 
   531     0EA4                     	;# 
   532     0EA5                     	;# 
   533     0EA9                     	;# 
   534     0EAA                     	;# 
   535     0EAB                     	;# 
   536     0EAC                     	;# 
   537     0EB1                     	;# 
   538     0EB2                     	;# 
   539     0EB3                     	;# 
   540     0EB8                     	;# 
   541     0EB9                     	;# 
   542     0EBA                     	;# 
   543     0EBB                     	;# 
   544     0EBC                     	;# 
   545     0EBD                     	;# 
   546     0EBE                     	;# 
   547     0EC3                     	;# 
   548     0EC5                     	;# 
   549     0EC6                     	;# 
   550     0EC7                     	;# 
   551     0EC8                     	;# 
   552     0EC9                     	;# 
   553     0ECA                     	;# 
   554     0ECB                     	;# 
   555     0ECC                     	;# 
   556     0F10                     	;# 
   557     0F11                     	;# 
   558     0F12                     	;# 
   559     0F13                     	;# 
   560     0F14                     	;# 
   561     0F15                     	;# 
   562     0F16                     	;# 
   563     0F17                     	;# 
   564     0F18                     	;# 
   565     0F19                     	;# 
   566     0F1A                     	;# 
   567     0F1B                     	;# 
   568     0F1C                     	;# 
   569     0F1D                     	;# 
   570     0F1E                     	;# 
   571     0F1F                     	;# 
   572     0F20                     	;# 
   573     0F21                     	;# 
   574     0F22                     	;# 
   575     0F23                     	;# 
   576     0F24                     	;# 
   577     0F25                     	;# 
   578     0F26                     	;# 
   579     0F27                     	;# 
   580     0F28                     	;# 
   581     0F29                     	;# 
   582     0F2A                     	;# 
   583     0F2B                     	;# 
   584     0F2C                     	;# 
   585     0F2D                     	;# 
   586     0F2E                     	;# 
   587     0F2F                     	;# 
   588     0F30                     	;# 
   589     0F31                     	;# 
   590     0F32                     	;# 
   591     0F38                     	;# 
   592     0F39                     	;# 
   593     0F3A                     	;# 
   594     0F3B                     	;# 
   595     0F3C                     	;# 
   596     0F3D                     	;# 
   597     0F3E                     	;# 
   598     0F3F                     	;# 
   599     0F40                     	;# 
   600     0F41                     	;# 
   601     0F43                     	;# 
   602     0F44                     	;# 
   603     0F45                     	;# 
   604     0F46                     	;# 
   605     0F47                     	;# 
   606     0F48                     	;# 
   607     0F49                     	;# 
   608     0F4A                     	;# 
   609     0F4B                     	;# 
   610     0F4C                     	;# 
   611     0F4E                     	;# 
   612     0F4F                     	;# 
   613     0F50                     	;# 
   614     0F51                     	;# 
   615     0F52                     	;# 
   616     0F53                     	;# 
   617     0F54                     	;# 
   618     0F55                     	;# 
   619     0F56                     	;# 
   620     0F57                     	;# 
   621     0F59                     	;# 
   622     0F5A                     	;# 
   623     0F5B                     	;# 
   624     0F5C                     	;# 
   625     0F5D                     	;# 
   626     0F61                     	;# 
   627     0F62                     	;# 
   628     0F64                     	;# 
   629     0F65                     	;# 
   630     0F66                     	;# 
   631     0F67                     	;# 
   632     0F68                     	;# 
   633     0F69                     	;# 
   634     0F6A                     	;# 
   635     0F6B                     	;# 
   636     0F6C                     	;# 
   637     0F6D                     	;# 
   638     0FE4                     	;# 
   639     0FE5                     	;# 
   640     0FE6                     	;# 
   641     0FE7                     	;# 
   642     0FE8                     	;# 
   643     0FE9                     	;# 
   644     0FEA                     	;# 
   645     0FEB                     	;# 
   646     0FED                     	;# 
   647     0FEE                     	;# 
   648     0FEF                     	;# 
   649     0000                     	;# 
   650     0001                     	;# 
   651     0002                     	;# 
   652     0003                     	;# 
   653     0004                     	;# 
   654     0005                     	;# 
   655     0006                     	;# 
   656     0007                     	;# 
   657     0008                     	;# 
   658     0009                     	;# 
   659     000A                     	;# 
   660     000B                     	;# 
   661     000C                     	;# 
   662     000D                     	;# 
   663     000E                     	;# 
   664     000F                     	;# 
   665     0010                     	;# 
   666     0011                     	;# 
   667     0012                     	;# 
   668     0013                     	;# 
   669     0014                     	;# 
   670     0015                     	;# 
   671     0016                     	;# 
   672     0017                     	;# 
   673     0018                     	;# 
   674     0019                     	;# 
   675     001A                     	;# 
   676     001C                     	;# 
   677     001C                     	;# 
   678     001D                     	;# 
   679     001D                     	;# 
   680     001E                     	;# 
   681     001F                     	;# 
   682     008C                     	;# 
   683     008C                     	;# 
   684     008D                     	;# 
   685     008E                     	;# 
   686     008E                     	;# 
   687     008F                     	;# 
   688     0090                     	;# 
   689     0090                     	;# 
   690     0091                     	;# 
   691     0093                     	;# 
   692     0094                     	;# 
   693     0095                     	;# 
   694     0096                     	;# 
   695     0097                     	;# 
   696     0098                     	;# 
   697     0099                     	;# 
   698     009A                     	;# 
   699     009B                     	;# 
   700     009C                     	;# 
   701     009D                     	;# 
   702     009E                     	;# 
   703     010C                     	;# 
   704     010D                     	;# 
   705     010E                     	;# 
   706     010E                     	;# 
   707     010F                     	;# 
   708     0110                     	;# 
   709     0110                     	;# 
   710     0111                     	;# 
   711     0112                     	;# 
   712     0112                     	;# 
   713     0113                     	;# 
   714     0114                     	;# 
   715     0114                     	;# 
   716     0115                     	;# 
   717     0116                     	;# 
   718     0116                     	;# 
   719     0117                     	;# 
   720     0119                     	;# 
   721     0119                     	;# 
   722     0119                     	;# 
   723     011A                     	;# 
   724     011A                     	;# 
   725     011A                     	;# 
   726     011B                     	;# 
   727     011B                     	;# 
   728     011B                     	;# 
   729     011B                     	;# 
   730     011B                     	;# 
   731     011C                     	;# 
   732     011C                     	;# 
   733     011C                     	;# 
   734     011D                     	;# 
   735     011D                     	;# 
   736     011D                     	;# 
   737     011E                     	;# 
   738     011E                     	;# 
   739     011E                     	;# 
   740     011F                     	;# 
   741     011F                     	;# 
   742     011F                     	;# 
   743     011F                     	;# 
   744     011F                     	;# 
   745     018C                     	;# 
   746     018D                     	;# 
   747     018E                     	;# 
   748     018F                     	;# 
   749     0190                     	;# 
   750     0191                     	;# 
   751     0192                     	;# 
   752     0196                     	;# 
   753     0197                     	;# 
   754     0198                     	;# 
   755     0199                     	;# 
   756     019A                     	;# 
   757     019B                     	;# 
   758     019C                     	;# 
   759     020C                     	;# 
   760     020C                     	;# 
   761     020D                     	;# 
   762     020E                     	;# 
   763     020F                     	;# 
   764     020F                     	;# 
   765     0210                     	;# 
   766     0210                     	;# 
   767     0211                     	;# 
   768     0211                     	;# 
   769     0212                     	;# 
   770     0212                     	;# 
   771     0213                     	;# 
   772     0214                     	;# 
   773     0215                     	;# 
   774     0215                     	;# 
   775     0216                     	;# 
   776     0216                     	;# 
   777     0217                     	;# 
   778     0217                     	;# 
   779     0218                     	;# 
   780     0218                     	;# 
   781     0219                     	;# 
   782     021A                     	;# 
   783     021B                     	;# 
   784     021B                     	;# 
   785     021C                     	;# 
   786     021C                     	;# 
   787     021D                     	;# 
   788     021D                     	;# 
   789     021E                     	;# 
   790     021F                     	;# 
   791     028C                     	;# 
   792     028C                     	;# 
   793     028D                     	;# 
   794     028D                     	;# 
   795     028E                     	;# 
   796     028F                     	;# 
   797     0290                     	;# 
   798     0290                     	;# 
   799     0291                     	;# 
   800     0292                     	;# 
   801     0292                     	;# 
   802     0293                     	;# 
   803     0293                     	;# 
   804     0294                     	;# 
   805     0295                     	;# 
   806     0296                     	;# 
   807     0296                     	;# 
   808     0297                     	;# 
   809     0298                     	;# 
   810     0298                     	;# 
   811     0299                     	;# 
   812     0299                     	;# 
   813     029A                     	;# 
   814     029B                     	;# 
   815     029C                     	;# 
   816     029C                     	;# 
   817     029D                     	;# 
   818     030C                     	;# 
   819     030C                     	;# 
   820     030D                     	;# 
   821     030E                     	;# 
   822     030F                     	;# 
   823     0310                     	;# 
   824     0310                     	;# 
   825     0311                     	;# 
   826     0312                     	;# 
   827     0313                     	;# 
   828     0314                     	;# 
   829     0314                     	;# 
   830     0315                     	;# 
   831     0316                     	;# 
   832     0317                     	;# 
   833     0318                     	;# 
   834     0318                     	;# 
   835     0319                     	;# 
   836     031A                     	;# 
   837     031B                     	;# 
   838     031C                     	;# 
   839     031C                     	;# 
   840     031D                     	;# 
   841     031E                     	;# 
   842     031F                     	;# 
   843     038C                     	;# 
   844     038C                     	;# 
   845     038D                     	;# 
   846     038E                     	;# 
   847     0390                     	;# 
   848     0390                     	;# 
   849     0391                     	;# 
   850     0392                     	;# 
   851     040C                     	;# 
   852     040D                     	;# 
   853     040E                     	;# 
   854     040F                     	;# 
   855     0410                     	;# 
   856     0411                     	;# 
   857     0416                     	;# 
   858     0416                     	;# 
   859     0417                     	;# 
   860     0418                     	;# 
   861     0418                     	;# 
   862     0419                     	;# 
   863     041A                     	;# 
   864     041A                     	;# 
   865     041B                     	;# 
   866     041C                     	;# 
   867     041C                     	;# 
   868     041D                     	;# 
   869     041E                     	;# 
   870     041F                     	;# 
   871     048C                     	;# 
   872     048C                     	;# 
   873     048D                     	;# 
   874     048E                     	;# 
   875     048F                     	;# 
   876     048F                     	;# 
   877     0490                     	;# 
   878     0491                     	;# 
   879     0492                     	;# 
   880     0492                     	;# 
   881     0493                     	;# 
   882     0494                     	;# 
   883     0495                     	;# 
   884     0495                     	;# 
   885     0496                     	;# 
   886     0497                     	;# 
   887     0498                     	;# 
   888     0499                     	;# 
   889     049A                     	;# 
   890     049B                     	;# 
   891     049C                     	;# 
   892     049D                     	;# 
   893     050C                     	;# 
   894     050C                     	;# 
   895     050D                     	;# 
   896     050E                     	;# 
   897     050F                     	;# 
   898     050F                     	;# 
   899     0510                     	;# 
   900     0511                     	;# 
   901     0512                     	;# 
   902     0512                     	;# 
   903     0513                     	;# 
   904     0514                     	;# 
   905     0515                     	;# 
   906     0515                     	;# 
   907     0516                     	;# 
   908     0517                     	;# 
   909     0518                     	;# 
   910     0519                     	;# 
   911     051A                     	;# 
   912     051B                     	;# 
   913     051C                     	;# 
   914     051D                     	;# 
   915     058C                     	;# 
   916     058C                     	;# 
   917     058D                     	;# 
   918     058E                     	;# 
   919     058F                     	;# 
   920     058F                     	;# 
   921     0590                     	;# 
   922     0591                     	;# 
   923     0592                     	;# 
   924     0593                     	;# 
   925     060C                     	;# 
   926     060D                     	;# 
   927     060E                     	;# 
   928     060F                     	;# 
   929     0610                     	;# 
   930     0611                     	;# 
   931     0612                     	;# 
   932     0613                     	;# 
   933     0614                     	;# 
   934     0616                     	;# 
   935     0617                     	;# 
   936     0618                     	;# 
   937     0619                     	;# 
   938     061A                     	;# 
   939     061B                     	;# 
   940     061C                     	;# 
   941     061D                     	;# 
   942     061E                     	;# 
   943     068C                     	;# 
   944     068D                     	;# 
   945     068E                     	;# 
   946     068F                     	;# 
   947     0690                     	;# 
   948     0691                     	;# 
   949     0692                     	;# 
   950     0693                     	;# 
   951     0694                     	;# 
   952     070C                     	;# 
   953     070D                     	;# 
   954     070E                     	;# 
   955     070F                     	;# 
   956     0710                     	;# 
   957     0711                     	;# 
   958     0712                     	;# 
   959     0713                     	;# 
   960     0714                     	;# 
   961     0716                     	;# 
   962     0717                     	;# 
   963     0718                     	;# 
   964     0719                     	;# 
   965     071A                     	;# 
   966     071B                     	;# 
   967     071C                     	;# 
   968     071D                     	;# 
   969     071E                     	;# 
   970     0796                     	;# 
   971     0797                     	;# 
   972     0798                     	;# 
   973     0799                     	;# 
   974     079A                     	;# 
   975     079B                     	;# 
   976     080C                     	;# 
   977     080D                     	;# 
   978     080E                     	;# 
   979     080F                     	;# 
   980     0810                     	;# 
   981     0811                     	;# 
   982     0812                     	;# 
   983     0813                     	;# 
   984     0814                     	;# 
   985     081A                     	;# 
   986     081B                     	;# 
   987     081C                     	;# 
   988     081D                     	;# 
   989     081E                     	;# 
   990     081F                     	;# 
   991     088C                     	;# 
   992     088D                     	;# 
   993     088E                     	;# 
   994     088F                     	;# 
   995     0890                     	;# 
   996     0891                     	;# 
   997     0892                     	;# 
   998     0893                     	;# 
   999     0895                     	;# 
  1000     0896                     	;# 
  1001     0897                     	;# 
  1002     0898                     	;# 
  1003     0899                     	;# 
  1004     089A                     	;# 
  1005     089B                     	;# 
  1006     090C                     	;# 
  1007     090E                     	;# 
  1008     090F                     	;# 
  1009     091F                     	;# 
  1010     091F                     	;# 
  1011     098F                     	;# 
  1012     098F                     	;# 
  1013     0990                     	;# 
  1014     0991                     	;# 
  1015     0992                     	;# 
  1016     0993                     	;# 
  1017     0994                     	;# 
  1018     0995                     	;# 
  1019     0996                     	;# 
  1020     0997                     	;# 
  1021     0E0F                     	;# 
  1022     0E10                     	;# 
  1023     0E11                     	;# 
  1024     0E12                     	;# 
  1025     0E13                     	;# 
  1026     0E14                     	;# 
  1027     0E15                     	;# 
  1028     0E16                     	;# 
  1029     0E17                     	;# 
  1030     0E18                     	;# 
  1031     0E19                     	;# 
  1032     0E1A                     	;# 
  1033     0E1B                     	;# 
  1034     0E1C                     	;# 
  1035     0E1D                     	;# 
  1036     0E1E                     	;# 
  1037     0E1F                     	;# 
  1038     0E20                     	;# 
  1039     0E21                     	;# 
  1040     0E22                     	;# 
  1041     0E23                     	;# 
  1042     0E24                     	;# 
  1043     0E25                     	;# 
  1044     0E26                     	;# 
  1045     0E27                     	;# 
  1046     0E28                     	;# 
  1047     0E29                     	;# 
  1048     0E2A                     	;# 
  1049     0E2B                     	;# 
  1050     0E2C                     	;# 
  1051     0E2D                     	;# 
  1052     0E2E                     	;# 
  1053     0E2F                     	;# 
  1054     0E30                     	;# 
  1055     0E31                     	;# 
  1056     0E32                     	;# 
  1057     0E33                     	;# 
  1058     0E34                     	;# 
  1059     0E35                     	;# 
  1060     0E36                     	;# 
  1061     0E37                     	;# 
  1062     0E8F                     	;# 
  1063     0E90                     	;# 
  1064     0E91                     	;# 
  1065     0E92                     	;# 
  1066     0E93                     	;# 
  1067     0E94                     	;# 
  1068     0E95                     	;# 
  1069     0E96                     	;# 
  1070     0E97                     	;# 
  1071     0E9C                     	;# 
  1072     0E9D                     	;# 
  1073     0E9E                     	;# 
  1074     0EA1                     	;# 
  1075     0EA2                     	;# 
  1076     0EA3                     	;# 
  1077     0EA4                     	;# 
  1078     0EA5                     	;# 
  1079     0EA9                     	;# 
  1080     0EAA                     	;# 
  1081     0EAB                     	;# 
  1082     0EAC                     	;# 
  1083     0EB1                     	;# 
  1084     0EB2                     	;# 
  1085     0EB3                     	;# 
  1086     0EB8                     	;# 
  1087     0EB9                     	;# 
  1088     0EBA                     	;# 
  1089     0EBB                     	;# 
  1090     0EBC                     	;# 
  1091     0EBD                     	;# 
  1092     0EBE                     	;# 
  1093     0EC3                     	;# 
  1094     0EC5                     	;# 
  1095     0EC6                     	;# 
  1096     0EC7                     	;# 
  1097     0EC8                     	;# 
  1098     0EC9                     	;# 
  1099     0ECA                     	;# 
  1100     0ECB                     	;# 
  1101     0ECC                     	;# 
  1102     0F10                     	;# 
  1103     0F11                     	;# 
  1104     0F12                     	;# 
  1105     0F13                     	;# 
  1106     0F14                     	;# 
  1107     0F15                     	;# 
  1108     0F16                     	;# 
  1109     0F17                     	;# 
  1110     0F18                     	;# 
  1111     0F19                     	;# 
  1112     0F1A                     	;# 
  1113     0F1B                     	;# 
  1114     0F1C                     	;# 
  1115     0F1D                     	;# 
  1116     0F1E                     	;# 
  1117     0F1F                     	;# 
  1118     0F20                     	;# 
  1119     0F21                     	;# 
  1120     0F22                     	;# 
  1121     0F23                     	;# 
  1122     0F24                     	;# 
  1123     0F25                     	;# 
  1124     0F26                     	;# 
  1125     0F27                     	;# 
  1126     0F28                     	;# 
  1127     0F29                     	;# 
  1128     0F2A                     	;# 
  1129     0F2B                     	;# 
  1130     0F2C                     	;# 
  1131     0F2D                     	;# 
  1132     0F2E                     	;# 
  1133     0F2F                     	;# 
  1134     0F30                     	;# 
  1135     0F31                     	;# 
  1136     0F32                     	;# 
  1137     0F38                     	;# 
  1138     0F39                     	;# 
  1139     0F3A                     	;# 
  1140     0F3B                     	;# 
  1141     0F3C                     	;# 
  1142     0F3D                     	;# 
  1143     0F3E                     	;# 
  1144     0F3F                     	;# 
  1145     0F40                     	;# 
  1146     0F41                     	;# 
  1147     0F43                     	;# 
  1148     0F44                     	;# 
  1149     0F45                     	;# 
  1150     0F46                     	;# 
  1151     0F47                     	;# 
  1152     0F48                     	;# 
  1153     0F49                     	;# 
  1154     0F4A                     	;# 
  1155     0F4B                     	;# 
  1156     0F4C                     	;# 
  1157     0F4E                     	;# 
  1158     0F4F                     	;# 
  1159     0F50                     	;# 
  1160     0F51                     	;# 
  1161     0F52                     	;# 
  1162     0F53                     	;# 
  1163     0F54                     	;# 
  1164     0F55                     	;# 
  1165     0F56                     	;# 
  1166     0F57                     	;# 
  1167     0F59                     	;# 
  1168     0F5A                     	;# 
  1169     0F5B                     	;# 
  1170     0F5C                     	;# 
  1171     0F5D                     	;# 
  1172     0F61                     	;# 
  1173     0F62                     	;# 
  1174     0F64                     	;# 
  1175     0F65                     	;# 
  1176     0F66                     	;# 
  1177     0F67                     	;# 
  1178     0F68                     	;# 
  1179     0F69                     	;# 
  1180     0F6A                     	;# 
  1181     0F6B                     	;# 
  1182     0F6C                     	;# 
  1183     0F6D                     	;# 
  1184     0FE4                     	;# 
  1185     0FE5                     	;# 
  1186     0FE6                     	;# 
  1187     0FE7                     	;# 
  1188     0FE8                     	;# 
  1189     0FE9                     	;# 
  1190     0FEA                     	;# 
  1191     0FEB                     	;# 
  1192     0FED                     	;# 
  1193     0FEE                     	;# 
  1194     0FEF                     	;# 
  1195     0000                     	;# 
  1196     0001                     	;# 
  1197     0002                     	;# 
  1198     0003                     	;# 
  1199     0004                     	;# 
  1200     0005                     	;# 
  1201     0006                     	;# 
  1202     0007                     	;# 
  1203     0008                     	;# 
  1204     0009                     	;# 
  1205     000A                     	;# 
  1206     000B                     	;# 
  1207     000C                     	;# 
  1208     000D                     	;# 
  1209     000E                     	;# 
  1210     000F                     	;# 
  1211     0010                     	;# 
  1212     0011                     	;# 
  1213     0012                     	;# 
  1214     0013                     	;# 
  1215     0014                     	;# 
  1216     0015                     	;# 
  1217     0016                     	;# 
  1218     0017                     	;# 
  1219     0018                     	;# 
  1220     0019                     	;# 
  1221     001A                     	;# 
  1222     001C                     	;# 
  1223     001C                     	;# 
  1224     001D                     	;# 
  1225     001D                     	;# 
  1226     001E                     	;# 
  1227     001F                     	;# 
  1228     008C                     	;# 
  1229     008C                     	;# 
  1230     008D                     	;# 
  1231     008E                     	;# 
  1232     008E                     	;# 
  1233     008F                     	;# 
  1234     0090                     	;# 
  1235     0090                     	;# 
  1236     0091                     	;# 
  1237     0093                     	;# 
  1238     0094                     	;# 
  1239     0095                     	;# 
  1240     0096                     	;# 
  1241     0097                     	;# 
  1242     0098                     	;# 
  1243     0099                     	;# 
  1244     009A                     	;# 
  1245     009B                     	;# 
  1246     009C                     	;# 
  1247     009D                     	;# 
  1248     009E                     	;# 
  1249     010C                     	;# 
  1250     010D                     	;# 
  1251     010E                     	;# 
  1252     010E                     	;# 
  1253     010F                     	;# 
  1254     0110                     	;# 
  1255     0110                     	;# 
  1256     0111                     	;# 
  1257     0112                     	;# 
  1258     0112                     	;# 
  1259     0113                     	;# 
  1260     0114                     	;# 
  1261     0114                     	;# 
  1262     0115                     	;# 
  1263     0116                     	;# 
  1264     0116                     	;# 
  1265     0117                     	;# 
  1266     0119                     	;# 
  1267     0119                     	;# 
  1268     0119                     	;# 
  1269     011A                     	;# 
  1270     011A                     	;# 
  1271     011A                     	;# 
  1272     011B                     	;# 
  1273     011B                     	;# 
  1274     011B                     	;# 
  1275     011B                     	;# 
  1276     011B                     	;# 
  1277     011C                     	;# 
  1278     011C                     	;# 
  1279     011C                     	;# 
  1280     011D                     	;# 
  1281     011D                     	;# 
  1282     011D                     	;# 
  1283     011E                     	;# 
  1284     011E                     	;# 
  1285     011E                     	;# 
  1286     011F                     	;# 
  1287     011F                     	;# 
  1288     011F                     	;# 
  1289     011F                     	;# 
  1290     011F                     	;# 
  1291     018C                     	;# 
  1292     018D                     	;# 
  1293     018E                     	;# 
  1294     018F                     	;# 
  1295     0190                     	;# 
  1296     0191                     	;# 
  1297     0192                     	;# 
  1298     0196                     	;# 
  1299     0197                     	;# 
  1300     0198                     	;# 
  1301     0199                     	;# 
  1302     019A                     	;# 
  1303     019B                     	;# 
  1304     019C                     	;# 
  1305     020C                     	;# 
  1306     020C                     	;# 
  1307     020D                     	;# 
  1308     020E                     	;# 
  1309     020F                     	;# 
  1310     020F                     	;# 
  1311     0210                     	;# 
  1312     0210                     	;# 
  1313     0211                     	;# 
  1314     0211                     	;# 
  1315     0212                     	;# 
  1316     0212                     	;# 
  1317     0213                     	;# 
  1318     0214                     	;# 
  1319     0215                     	;# 
  1320     0215                     	;# 
  1321     0216                     	;# 
  1322     0216                     	;# 
  1323     0217                     	;# 
  1324     0217                     	;# 
  1325     0218                     	;# 
  1326     0218                     	;# 
  1327     0219                     	;# 
  1328     021A                     	;# 
  1329     021B                     	;# 
  1330     021B                     	;# 
  1331     021C                     	;# 
  1332     021C                     	;# 
  1333     021D                     	;# 
  1334     021D                     	;# 
  1335     021E                     	;# 
  1336     021F                     	;# 
  1337     028C                     	;# 
  1338     028C                     	;# 
  1339     028D                     	;# 
  1340     028D                     	;# 
  1341     028E                     	;# 
  1342     028F                     	;# 
  1343     0290                     	;# 
  1344     0290                     	;# 
  1345     0291                     	;# 
  1346     0292                     	;# 
  1347     0292                     	;# 
  1348     0293                     	;# 
  1349     0293                     	;# 
  1350     0294                     	;# 
  1351     0295                     	;# 
  1352     0296                     	;# 
  1353     0296                     	;# 
  1354     0297                     	;# 
  1355     0298                     	;# 
  1356     0298                     	;# 
  1357     0299                     	;# 
  1358     0299                     	;# 
  1359     029A                     	;# 
  1360     029B                     	;# 
  1361     029C                     	;# 
  1362     029C                     	;# 
  1363     029D                     	;# 
  1364     030C                     	;# 
  1365     030C                     	;# 
  1366     030D                     	;# 
  1367     030E                     	;# 
  1368     030F                     	;# 
  1369     0310                     	;# 
  1370     0310                     	;# 
  1371     0311                     	;# 
  1372     0312                     	;# 
  1373     0313                     	;# 
  1374     0314                     	;# 
  1375     0314                     	;# 
  1376     0315                     	;# 
  1377     0316                     	;# 
  1378     0317                     	;# 
  1379     0318                     	;# 
  1380     0318                     	;# 
  1381     0319                     	;# 
  1382     031A                     	;# 
  1383     031B                     	;# 
  1384     031C                     	;# 
  1385     031C                     	;# 
  1386     031D                     	;# 
  1387     031E                     	;# 
  1388     031F                     	;# 
  1389     038C                     	;# 
  1390     038C                     	;# 
  1391     038D                     	;# 
  1392     038E                     	;# 
  1393     0390                     	;# 
  1394     0390                     	;# 
  1395     0391                     	;# 
  1396     0392                     	;# 
  1397     040C                     	;# 
  1398     040D                     	;# 
  1399     040E                     	;# 
  1400     040F                     	;# 
  1401     0410                     	;# 
  1402     0411                     	;# 
  1403     0416                     	;# 
  1404     0416                     	;# 
  1405     0417                     	;# 
  1406     0418                     	;# 
  1407     0418                     	;# 
  1408     0419                     	;# 
  1409     041A                     	;# 
  1410     041A                     	;# 
  1411     041B                     	;# 
  1412     041C                     	;# 
  1413     041C                     	;# 
  1414     041D                     	;# 
  1415     041E                     	;# 
  1416     041F                     	;# 
  1417     048C                     	;# 
  1418     048C                     	;# 
  1419     048D                     	;# 
  1420     048E                     	;# 
  1421     048F                     	;# 
  1422     048F                     	;# 
  1423     0490                     	;# 
  1424     0491                     	;# 
  1425     0492                     	;# 
  1426     0492                     	;# 
  1427     0493                     	;# 
  1428     0494                     	;# 
  1429     0495                     	;# 
  1430     0495                     	;# 
  1431     0496                     	;# 
  1432     0497                     	;# 
  1433     0498                     	;# 
  1434     0499                     	;# 
  1435     049A                     	;# 
  1436     049B                     	;# 
  1437     049C                     	;# 
  1438     049D                     	;# 
  1439     050C                     	;# 
  1440     050C                     	;# 
  1441     050D                     	;# 
  1442     050E                     	;# 
  1443     050F                     	;# 
  1444     050F                     	;# 
  1445     0510                     	;# 
  1446     0511                     	;# 
  1447     0512                     	;# 
  1448     0512                     	;# 
  1449     0513                     	;# 
  1450     0514                     	;# 
  1451     0515                     	;# 
  1452     0515                     	;# 
  1453     0516                     	;# 
  1454     0517                     	;# 
  1455     0518                     	;# 
  1456     0519                     	;# 
  1457     051A                     	;# 
  1458     051B                     	;# 
  1459     051C                     	;# 
  1460     051D                     	;# 
  1461     058C                     	;# 
  1462     058C                     	;# 
  1463     058D                     	;# 
  1464     058E                     	;# 
  1465     058F                     	;# 
  1466     058F                     	;# 
  1467     0590                     	;# 
  1468     0591                     	;# 
  1469     0592                     	;# 
  1470     0593                     	;# 
  1471     060C                     	;# 
  1472     060D                     	;# 
  1473     060E                     	;# 
  1474     060F                     	;# 
  1475     0610                     	;# 
  1476     0611                     	;# 
  1477     0612                     	;# 
  1478     0613                     	;# 
  1479     0614                     	;# 
  1480     0616                     	;# 
  1481     0617                     	;# 
  1482     0618                     	;# 
  1483     0619                     	;# 
  1484     061A                     	;# 
  1485     061B                     	;# 
  1486     061C                     	;# 
  1487     061D                     	;# 
  1488     061E                     	;# 
  1489     068C                     	;# 
  1490     068D                     	;# 
  1491     068E                     	;# 
  1492     068F                     	;# 
  1493     0690                     	;# 
  1494     0691                     	;# 
  1495     0692                     	;# 
  1496     0693                     	;# 
  1497     0694                     	;# 
  1498     070C                     	;# 
  1499     070D                     	;# 
  1500     070E                     	;# 
  1501     070F                     	;# 
  1502     0710                     	;# 
  1503     0711                     	;# 
  1504     0712                     	;# 
  1505     0713                     	;# 
  1506     0714                     	;# 
  1507     0716                     	;# 
  1508     0717                     	;# 
  1509     0718                     	;# 
  1510     0719                     	;# 
  1511     071A                     	;# 
  1512     071B                     	;# 
  1513     071C                     	;# 
  1514     071D                     	;# 
  1515     071E                     	;# 
  1516     0796                     	;# 
  1517     0797                     	;# 
  1518     0798                     	;# 
  1519     0799                     	;# 
  1520     079A                     	;# 
  1521     079B                     	;# 
  1522     080C                     	;# 
  1523     080D                     	;# 
  1524     080E                     	;# 
  1525     080F                     	;# 
  1526     0810                     	;# 
  1527     0811                     	;# 
  1528     0812                     	;# 
  1529     0813                     	;# 
  1530     0814                     	;# 
  1531     081A                     	;# 
  1532     081B                     	;# 
  1533     081C                     	;# 
  1534     081D                     	;# 
  1535     081E                     	;# 
  1536     081F                     	;# 
  1537     088C                     	;# 
  1538     088D                     	;# 
  1539     088E                     	;# 
  1540     088F                     	;# 
  1541     0890                     	;# 
  1542     0891                     	;# 
  1543     0892                     	;# 
  1544     0893                     	;# 
  1545     0895                     	;# 
  1546     0896                     	;# 
  1547     0897                     	;# 
  1548     0898                     	;# 
  1549     0899                     	;# 
  1550     089A                     	;# 
  1551     089B                     	;# 
  1552     090C                     	;# 
  1553     090E                     	;# 
  1554     090F                     	;# 
  1555     091F                     	;# 
  1556     091F                     	;# 
  1557     098F                     	;# 
  1558     098F                     	;# 
  1559     0990                     	;# 
  1560     0991                     	;# 
  1561     0992                     	;# 
  1562     0993                     	;# 
  1563     0994                     	;# 
  1564     0995                     	;# 
  1565     0996                     	;# 
  1566     0997                     	;# 
  1567     0E0F                     	;# 
  1568     0E10                     	;# 
  1569     0E11                     	;# 
  1570     0E12                     	;# 
  1571     0E13                     	;# 
  1572     0E14                     	;# 
  1573     0E15                     	;# 
  1574     0E16                     	;# 
  1575     0E17                     	;# 
  1576     0E18                     	;# 
  1577     0E19                     	;# 
  1578     0E1A                     	;# 
  1579     0E1B                     	;# 
  1580     0E1C                     	;# 
  1581     0E1D                     	;# 
  1582     0E1E                     	;# 
  1583     0E1F                     	;# 
  1584     0E20                     	;# 
  1585     0E21                     	;# 
  1586     0E22                     	;# 
  1587     0E23                     	;# 
  1588     0E24                     	;# 
  1589     0E25                     	;# 
  1590     0E26                     	;# 
  1591     0E27                     	;# 
  1592     0E28                     	;# 
  1593     0E29                     	;# 
  1594     0E2A                     	;# 
  1595     0E2B                     	;# 
  1596     0E2C                     	;# 
  1597     0E2D                     	;# 
  1598     0E2E                     	;# 
  1599     0E2F                     	;# 
  1600     0E30                     	;# 
  1601     0E31                     	;# 
  1602     0E32                     	;# 
  1603     0E33                     	;# 
  1604     0E34                     	;# 
  1605     0E35                     	;# 
  1606     0E36                     	;# 
  1607     0E37                     	;# 
  1608     0E8F                     	;# 
  1609     0E90                     	;# 
  1610     0E91                     	;# 
  1611     0E92                     	;# 
  1612     0E93                     	;# 
  1613     0E94                     	;# 
  1614     0E95                     	;# 
  1615     0E96                     	;# 
  1616     0E97                     	;# 
  1617     0E9C                     	;# 
  1618     0E9D                     	;# 
  1619     0E9E                     	;# 
  1620     0EA1                     	;# 
  1621     0EA2                     	;# 
  1622     0EA3                     	;# 
  1623     0EA4                     	;# 
  1624     0EA5                     	;# 
  1625     0EA9                     	;# 
  1626     0EAA                     	;# 
  1627     0EAB                     	;# 
  1628     0EAC                     	;# 
  1629     0EB1                     	;# 
  1630     0EB2                     	;# 
  1631     0EB3                     	;# 
  1632     0EB8                     	;# 
  1633     0EB9                     	;# 
  1634     0EBA                     	;# 
  1635     0EBB                     	;# 
  1636     0EBC                     	;# 
  1637     0EBD                     	;# 
  1638     0EBE                     	;# 
  1639     0EC3                     	;# 
  1640     0EC5                     	;# 
  1641     0EC6                     	;# 
  1642     0EC7                     	;# 
  1643     0EC8                     	;# 
  1644     0EC9                     	;# 
  1645     0ECA                     	;# 
  1646     0ECB                     	;# 
  1647     0ECC                     	;# 
  1648     0F10                     	;# 
  1649     0F11                     	;# 
  1650     0F12                     	;# 
  1651     0F13                     	;# 
  1652     0F14                     	;# 
  1653     0F15                     	;# 
  1654     0F16                     	;# 
  1655     0F17                     	;# 
  1656     0F18                     	;# 
  1657     0F19                     	;# 
  1658     0F1A                     	;# 
  1659     0F1B                     	;# 
  1660     0F1C                     	;# 
  1661     0F1D                     	;# 
  1662     0F1E                     	;# 
  1663     0F1F                     	;# 
  1664     0F20                     	;# 
  1665     0F21                     	;# 
  1666     0F22                     	;# 
  1667     0F23                     	;# 
  1668     0F24                     	;# 
  1669     0F25                     	;# 
  1670     0F26                     	;# 
  1671     0F27                     	;# 
  1672     0F28                     	;# 
  1673     0F29                     	;# 
  1674     0F2A                     	;# 
  1675     0F2B                     	;# 
  1676     0F2C                     	;# 
  1677     0F2D                     	;# 
  1678     0F2E                     	;# 
  1679     0F2F                     	;# 
  1680     0F30                     	;# 
  1681     0F31                     	;# 
  1682     0F32                     	;# 
  1683     0F38                     	;# 
  1684     0F39                     	;# 
  1685     0F3A                     	;# 
  1686     0F3B                     	;# 
  1687     0F3C                     	;# 
  1688     0F3D                     	;# 
  1689     0F3E                     	;# 
  1690     0F3F                     	;# 
  1691     0F40                     	;# 
  1692     0F41                     	;# 
  1693     0F43                     	;# 
  1694     0F44                     	;# 
  1695     0F45                     	;# 
  1696     0F46                     	;# 
  1697     0F47                     	;# 
  1698     0F48                     	;# 
  1699     0F49                     	;# 
  1700     0F4A                     	;# 
  1701     0F4B                     	;# 
  1702     0F4C                     	;# 
  1703     0F4E                     	;# 
  1704     0F4F                     	;# 
  1705     0F50                     	;# 
  1706     0F51                     	;# 
  1707     0F52                     	;# 
  1708     0F53                     	;# 
  1709     0F54                     	;# 
  1710     0F55                     	;# 
  1711     0F56                     	;# 
  1712     0F57                     	;# 
  1713     0F59                     	;# 
  1714     0F5A                     	;# 
  1715     0F5B                     	;# 
  1716     0F5C                     	;# 
  1717     0F5D                     	;# 
  1718     0F61                     	;# 
  1719     0F62                     	;# 
  1720     0F64                     	;# 
  1721     0F65                     	;# 
  1722     0F66                     	;# 
  1723     0F67                     	;# 
  1724     0F68                     	;# 
  1725     0F69                     	;# 
  1726     0F6A                     	;# 
  1727     0F6B                     	;# 
  1728     0F6C                     	;# 
  1729     0F6D                     	;# 
  1730     0FE4                     	;# 
  1731     0FE5                     	;# 
  1732     0FE6                     	;# 
  1733     0FE7                     	;# 
  1734     0FE8                     	;# 
  1735     0FE9                     	;# 
  1736     0FEA                     	;# 
  1737     0FEB                     	;# 
  1738     0FED                     	;# 
  1739     0FEE                     	;# 
  1740     0FEF                     	;# 
  1741     0000                     	;# 
  1742     0001                     	;# 
  1743     0002                     	;# 
  1744     0003                     	;# 
  1745     0004                     	;# 
  1746     0005                     	;# 
  1747     0006                     	;# 
  1748     0007                     	;# 
  1749     0008                     	;# 
  1750     0009                     	;# 
  1751     000A                     	;# 
  1752     000B                     	;# 
  1753     000C                     	;# 
  1754     000D                     	;# 
  1755     000E                     	;# 
  1756     000F                     	;# 
  1757     0010                     	;# 
  1758     0011                     	;# 
  1759     0012                     	;# 
  1760     0013                     	;# 
  1761     0014                     	;# 
  1762     0015                     	;# 
  1763     0016                     	;# 
  1764     0017                     	;# 
  1765     0018                     	;# 
  1766     0019                     	;# 
  1767     001A                     	;# 
  1768     001C                     	;# 
  1769     001C                     	;# 
  1770     001D                     	;# 
  1771     001D                     	;# 
  1772     001E                     	;# 
  1773     001F                     	;# 
  1774     008C                     	;# 
  1775     008C                     	;# 
  1776     008D                     	;# 
  1777     008E                     	;# 
  1778     008E                     	;# 
  1779     008F                     	;# 
  1780     0090                     	;# 
  1781     0090                     	;# 
  1782     0091                     	;# 
  1783     0093                     	;# 
  1784     0094                     	;# 
  1785     0095                     	;# 
  1786     0096                     	;# 
  1787     0097                     	;# 
  1788     0098                     	;# 
  1789     0099                     	;# 
  1790     009A                     	;# 
  1791     009B                     	;# 
  1792     009C                     	;# 
  1793     009D                     	;# 
  1794     009E                     	;# 
  1795     010C                     	;# 
  1796     010D                     	;# 
  1797     010E                     	;# 
  1798     010E                     	;# 
  1799     010F                     	;# 
  1800     0110                     	;# 
  1801     0110                     	;# 
  1802     0111                     	;# 
  1803     0112                     	;# 
  1804     0112                     	;# 
  1805     0113                     	;# 
  1806     0114                     	;# 
  1807     0114                     	;# 
  1808     0115                     	;# 
  1809     0116                     	;# 
  1810     0116                     	;# 
  1811     0117                     	;# 
  1812     0119                     	;# 
  1813     0119                     	;# 
  1814     0119                     	;# 
  1815     011A                     	;# 
  1816     011A                     	;# 
  1817     011A                     	;# 
  1818     011B                     	;# 
  1819     011B                     	;# 
  1820     011B                     	;# 
  1821     011B                     	;# 
  1822     011B                     	;# 
  1823     011C                     	;# 
  1824     011C                     	;# 
  1825     011C                     	;# 
  1826     011D                     	;# 
  1827     011D                     	;# 
  1828     011D                     	;# 
  1829     011E                     	;# 
  1830     011E                     	;# 
  1831     011E                     	;# 
  1832     011F                     	;# 
  1833     011F                     	;# 
  1834     011F                     	;# 
  1835     011F                     	;# 
  1836     011F                     	;# 
  1837     018C                     	;# 
  1838     018D                     	;# 
  1839     018E                     	;# 
  1840     018F                     	;# 
  1841     0190                     	;# 
  1842     0191                     	;# 
  1843     0192                     	;# 
  1844     0196                     	;# 
  1845     0197                     	;# 
  1846     0198                     	;# 
  1847     0199                     	;# 
  1848     019A                     	;# 
  1849     019B                     	;# 
  1850     019C                     	;# 
  1851     020C                     	;# 
  1852     020C                     	;# 
  1853     020D                     	;# 
  1854     020E                     	;# 
  1855     020F                     	;# 
  1856     020F                     	;# 
  1857     0210                     	;# 
  1858     0210                     	;# 
  1859     0211                     	;# 
  1860     0211                     	;# 
  1861     0212                     	;# 
  1862     0212                     	;# 
  1863     0213                     	;# 
  1864     0214                     	;# 
  1865     0215                     	;# 
  1866     0215                     	;# 
  1867     0216                     	;# 
  1868     0216                     	;# 
  1869     0217                     	;# 
  1870     0217                     	;# 
  1871     0218                     	;# 
  1872     0218                     	;# 
  1873     0219                     	;# 
  1874     021A                     	;# 
  1875     021B                     	;# 
  1876     021B                     	;# 
  1877     021C                     	;# 
  1878     021C                     	;# 
  1879     021D                     	;# 
  1880     021D                     	;# 
  1881     021E                     	;# 
  1882     021F                     	;# 
  1883     028C                     	;# 
  1884     028C                     	;# 
  1885     028D                     	;# 
  1886     028D                     	;# 
  1887     028E                     	;# 
  1888     028F                     	;# 
  1889     0290                     	;# 
  1890     0290                     	;# 
  1891     0291                     	;# 
  1892     0292                     	;# 
  1893     0292                     	;# 
  1894     0293                     	;# 
  1895     0293                     	;# 
  1896     0294                     	;# 
  1897     0295                     	;# 
  1898     0296                     	;# 
  1899     0296                     	;# 
  1900     0297                     	;# 
  1901     0298                     	;# 
  1902     0298                     	;# 
  1903     0299                     	;# 
  1904     0299                     	;# 
  1905     029A                     	;# 
  1906     029B                     	;# 
  1907     029C                     	;# 
  1908     029C                     	;# 
  1909     029D                     	;# 
  1910     030C                     	;# 
  1911     030C                     	;# 
  1912     030D                     	;# 
  1913     030E                     	;# 
  1914     030F                     	;# 
  1915     0310                     	;# 
  1916     0310                     	;# 
  1917     0311                     	;# 
  1918     0312                     	;# 
  1919     0313                     	;# 
  1920     0314                     	;# 
  1921     0314                     	;# 
  1922     0315                     	;# 
  1923     0316                     	;# 
  1924     0317                     	;# 
  1925     0318                     	;# 
  1926     0318                     	;# 
  1927     0319                     	;# 
  1928     031A                     	;# 
  1929     031B                     	;# 
  1930     031C                     	;# 
  1931     031C                     	;# 
  1932     031D                     	;# 
  1933     031E                     	;# 
  1934     031F                     	;# 
  1935     038C                     	;# 
  1936     038C                     	;# 
  1937     038D                     	;# 
  1938     038E                     	;# 
  1939     0390                     	;# 
  1940     0390                     	;# 
  1941     0391                     	;# 
  1942     0392                     	;# 
  1943     040C                     	;# 
  1944     040D                     	;# 
  1945     040E                     	;# 
  1946     040F                     	;# 
  1947     0410                     	;# 
  1948     0411                     	;# 
  1949     0416                     	;# 
  1950     0416                     	;# 
  1951     0417                     	;# 
  1952     0418                     	;# 
  1953     0418                     	;# 
  1954     0419                     	;# 
  1955     041A                     	;# 
  1956     041A                     	;# 
  1957     041B                     	;# 
  1958     041C                     	;# 
  1959     041C                     	;# 
  1960     041D                     	;# 
  1961     041E                     	;# 
  1962     041F                     	;# 
  1963     048C                     	;# 
  1964     048C                     	;# 
  1965     048D                     	;# 
  1966     048E                     	;# 
  1967     048F                     	;# 
  1968     048F                     	;# 
  1969     0490                     	;# 
  1970     0491                     	;# 
  1971     0492                     	;# 
  1972     0492                     	;# 
  1973     0493                     	;# 
  1974     0494                     	;# 
  1975     0495                     	;# 
  1976     0495                     	;# 
  1977     0496                     	;# 
  1978     0497                     	;# 
  1979     0498                     	;# 
  1980     0499                     	;# 
  1981     049A                     	;# 
  1982     049B                     	;# 
  1983     049C                     	;# 
  1984     049D                     	;# 
  1985     050C                     	;# 
  1986     050C                     	;# 
  1987     050D                     	;# 
  1988     050E                     	;# 
  1989     050F                     	;# 
  1990     050F                     	;# 
  1991     0510                     	;# 
  1992     0511                     	;# 
  1993     0512                     	;# 
  1994     0512                     	;# 
  1995     0513                     	;# 
  1996     0514                     	;# 
  1997     0515                     	;# 
  1998     0515                     	;# 
  1999     0516                     	;# 
  2000     0517                     	;# 
  2001     0518                     	;# 
  2002     0519                     	;# 
  2003     051A                     	;# 
  2004     051B                     	;# 
  2005     051C                     	;# 
  2006     051D                     	;# 
  2007     058C                     	;# 
  2008     058C                     	;# 
  2009     058D                     	;# 
  2010     058E                     	;# 
  2011     058F                     	;# 
  2012     058F                     	;# 
  2013     0590                     	;# 
  2014     0591                     	;# 
  2015     0592                     	;# 
  2016     0593                     	;# 
  2017     060C                     	;# 
  2018     060D                     	;# 
  2019     060E                     	;# 
  2020     060F                     	;# 
  2021     0610                     	;# 
  2022     0611                     	;# 
  2023     0612                     	;# 
  2024     0613                     	;# 
  2025     0614                     	;# 
  2026     0616                     	;# 
  2027     0617                     	;# 
  2028     0618                     	;# 
  2029     0619                     	;# 
  2030     061A                     	;# 
  2031     061B                     	;# 
  2032     061C                     	;# 
  2033     061D                     	;# 
  2034     061E                     	;# 
  2035     068C                     	;# 
  2036     068D                     	;# 
  2037     068E                     	;# 
  2038     068F                     	;# 
  2039     0690                     	;# 
  2040     0691                     	;# 
  2041     0692                     	;# 
  2042     0693                     	;# 
  2043     0694                     	;# 
  2044     070C                     	;# 
  2045     070D                     	;# 
  2046     070E                     	;# 
  2047     070F                     	;# 
  2048     0710                     	;# 
  2049     0711                     	;# 
  2050     0712                     	;# 
  2051     0713                     	;# 
  2052     0714                     	;# 
  2053     0716                     	;# 
  2054     0717                     	;# 
  2055     0718                     	;# 
  2056     0719                     	;# 
  2057     071A                     	;# 
  2058     071B                     	;# 
  2059     071C                     	;# 
  2060     071D                     	;# 
  2061     071E                     	;# 
  2062     0796                     	;# 
  2063     0797                     	;# 
  2064     0798                     	;# 
  2065     0799                     	;# 
  2066     079A                     	;# 
  2067     079B                     	;# 
  2068     080C                     	;# 
  2069     080D                     	;# 
  2070     080E                     	;# 
  2071     080F                     	;# 
  2072     0810                     	;# 
  2073     0811                     	;# 
  2074     0812                     	;# 
  2075     0813                     	;# 
  2076     0814                     	;# 
  2077     081A                     	;# 
  2078     081B                     	;# 
  2079     081C                     	;# 
  2080     081D                     	;# 
  2081     081E                     	;# 
  2082     081F                     	;# 
  2083     088C                     	;# 
  2084     088D                     	;# 
  2085     088E                     	;# 
  2086     088F                     	;# 
  2087     0890                     	;# 
  2088     0891                     	;# 
  2089     0892                     	;# 
  2090     0893                     	;# 
  2091     0895                     	;# 
  2092     0896                     	;# 
  2093     0897                     	;# 
  2094     0898                     	;# 
  2095     0899                     	;# 
  2096     089A                     	;# 
  2097     089B                     	;# 
  2098     090C                     	;# 
  2099     090E                     	;# 
  2100     090F                     	;# 
  2101     091F                     	;# 
  2102     091F                     	;# 
  2103     098F                     	;# 
  2104     098F                     	;# 
  2105     0990                     	;# 
  2106     0991                     	;# 
  2107     0992                     	;# 
  2108     0993                     	;# 
  2109     0994                     	;# 
  2110     0995                     	;# 
  2111     0996                     	;# 
  2112     0997                     	;# 
  2113     0E0F                     	;# 
  2114     0E10                     	;# 
  2115     0E11                     	;# 
  2116     0E12                     	;# 
  2117     0E13                     	;# 
  2118     0E14                     	;# 
  2119     0E15                     	;# 
  2120     0E16                     	;# 
  2121     0E17                     	;# 
  2122     0E18                     	;# 
  2123     0E19                     	;# 
  2124     0E1A                     	;# 
  2125     0E1B                     	;# 
  2126     0E1C                     	;# 
  2127     0E1D                     	;# 
  2128     0E1E                     	;# 
  2129     0E1F                     	;# 
  2130     0E20                     	;# 
  2131     0E21                     	;# 
  2132     0E22                     	;# 
  2133     0E23                     	;# 
  2134     0E24                     	;# 
  2135     0E25                     	;# 
  2136     0E26                     	;# 
  2137     0E27                     	;# 
  2138     0E28                     	;# 
  2139     0E29                     	;# 
  2140     0E2A                     	;# 
  2141     0E2B                     	;# 
  2142     0E2C                     	;# 
  2143     0E2D                     	;# 
  2144     0E2E                     	;# 
  2145     0E2F                     	;# 
  2146     0E30                     	;# 
  2147     0E31                     	;# 
  2148     0E32                     	;# 
  2149     0E33                     	;# 
  2150     0E34                     	;# 
  2151     0E35                     	;# 
  2152     0E36                     	;# 
  2153     0E37                     	;# 
  2154     0E8F                     	;# 
  2155     0E90                     	;# 
  2156     0E91                     	;# 
  2157     0E92                     	;# 
  2158     0E93                     	;# 
  2159     0E94                     	;# 
  2160     0E95                     	;# 
  2161     0E96                     	;# 
  2162     0E97                     	;# 
  2163     0E9C                     	;# 
  2164     0E9D                     	;# 
  2165     0E9E                     	;# 
  2166     0EA1                     	;# 
  2167     0EA2                     	;# 
  2168     0EA3                     	;# 
  2169     0EA4                     	;# 
  2170     0EA5                     	;# 
  2171     0EA9                     	;# 
  2172     0EAA                     	;# 
  2173     0EAB                     	;# 
  2174     0EAC                     	;# 
  2175     0EB1                     	;# 
  2176     0EB2                     	;# 
  2177     0EB3                     	;# 
  2178     0EB8                     	;# 
  2179     0EB9                     	;# 
  2180     0EBA                     	;# 
  2181     0EBB                     	;# 
  2182     0EBC                     	;# 
  2183     0EBD                     	;# 
  2184     0EBE                     	;# 
  2185     0EC3                     	;# 
  2186     0EC5                     	;# 
  2187     0EC6                     	;# 
  2188     0EC7                     	;# 
  2189     0EC8                     	;# 
  2190     0EC9                     	;# 
  2191     0ECA                     	;# 
  2192     0ECB                     	;# 
  2193     0ECC                     	;# 
  2194     0F10                     	;# 
  2195     0F11                     	;# 
  2196     0F12                     	;# 
  2197     0F13                     	;# 
  2198     0F14                     	;# 
  2199     0F15                     	;# 
  2200     0F16                     	;# 
  2201     0F17                     	;# 
  2202     0F18                     	;# 
  2203     0F19                     	;# 
  2204     0F1A                     	;# 
  2205     0F1B                     	;# 
  2206     0F1C                     	;# 
  2207     0F1D                     	;# 
  2208     0F1E                     	;# 
  2209     0F1F                     	;# 
  2210     0F20                     	;# 
  2211     0F21                     	;# 
  2212     0F22                     	;# 
  2213     0F23                     	;# 
  2214     0F24                     	;# 
  2215     0F25                     	;# 
  2216     0F26                     	;# 
  2217     0F27                     	;# 
  2218     0F28                     	;# 
  2219     0F29                     	;# 
  2220     0F2A                     	;# 
  2221     0F2B                     	;# 
  2222     0F2C                     	;# 
  2223     0F2D                     	;# 
  2224     0F2E                     	;# 
  2225     0F2F                     	;# 
  2226     0F30                     	;# 
  2227     0F31                     	;# 
  2228     0F32                     	;# 
  2229     0F38                     	;# 
  2230     0F39                     	;# 
  2231     0F3A                     	;# 
  2232     0F3B                     	;# 
  2233     0F3C                     	;# 
  2234     0F3D                     	;# 
  2235     0F3E                     	;# 
  2236     0F3F                     	;# 
  2237     0F40                     	;# 
  2238     0F41                     	;# 
  2239     0F43                     	;# 
  2240     0F44                     	;# 
  2241     0F45                     	;# 
  2242     0F46                     	;# 
  2243     0F47                     	;# 
  2244     0F48                     	;# 
  2245     0F49                     	;# 
  2246     0F4A                     	;# 
  2247     0F4B                     	;# 
  2248     0F4C                     	;# 
  2249     0F4E                     	;# 
  2250     0F4F                     	;# 
  2251     0F50                     	;# 
  2252     0F51                     	;# 
  2253     0F52                     	;# 
  2254     0F53                     	;# 
  2255     0F54                     	;# 
  2256     0F55                     	;# 
  2257     0F56                     	;# 
  2258     0F57                     	;# 
  2259     0F59                     	;# 
  2260     0F5A                     	;# 
  2261     0F5B                     	;# 
  2262     0F5C                     	;# 
  2263     0F5D                     	;# 
  2264     0F61                     	;# 
  2265     0F62                     	;# 
  2266     0F64                     	;# 
  2267     0F65                     	;# 
  2268     0F66                     	;# 
  2269     0F67                     	;# 
  2270     0F68                     	;# 
  2271     0F69                     	;# 
  2272     0F6A                     	;# 
  2273     0F6B                     	;# 
  2274     0F6C                     	;# 
  2275     0F6D                     	;# 
  2276     0FE4                     	;# 
  2277     0FE5                     	;# 
  2278     0FE6                     	;# 
  2279     0FE7                     	;# 
  2280     0FE8                     	;# 
  2281     0FE9                     	;# 
  2282     0FEA                     	;# 
  2283     0FEB                     	;# 
  2284     0FED                     	;# 
  2285     0FEE                     	;# 
  2286     0FEF                     	;# 
  2287     0000                     	;# 
  2288     0001                     	;# 
  2289     0002                     	;# 
  2290     0003                     	;# 
  2291     0004                     	;# 
  2292     0005                     	;# 
  2293     0006                     	;# 
  2294     0007                     	;# 
  2295     0008                     	;# 
  2296     0009                     	;# 
  2297     000A                     	;# 
  2298     000B                     	;# 
  2299     000C                     	;# 
  2300     000D                     	;# 
  2301     000E                     	;# 
  2302     000F                     	;# 
  2303     0010                     	;# 
  2304     0011                     	;# 
  2305     0012                     	;# 
  2306     0013                     	;# 
  2307     0014                     	;# 
  2308     0015                     	;# 
  2309     0016                     	;# 
  2310     0017                     	;# 
  2311     0018                     	;# 
  2312     0019                     	;# 
  2313     001A                     	;# 
  2314     001C                     	;# 
  2315     001C                     	;# 
  2316     001D                     	;# 
  2317     001D                     	;# 
  2318     001E                     	;# 
  2319     001F                     	;# 
  2320     008C                     	;# 
  2321     008C                     	;# 
  2322     008D                     	;# 
  2323     008E                     	;# 
  2324     008E                     	;# 
  2325     008F                     	;# 
  2326     0090                     	;# 
  2327     0090                     	;# 
  2328     0091                     	;# 
  2329     0093                     	;# 
  2330     0094                     	;# 
  2331     0095                     	;# 
  2332     0096                     	;# 
  2333     0097                     	;# 
  2334     0098                     	;# 
  2335     0099                     	;# 
  2336     009A                     	;# 
  2337     009B                     	;# 
  2338     009C                     	;# 
  2339     009D                     	;# 
  2340     009E                     	;# 
  2341     010C                     	;# 
  2342     010D                     	;# 
  2343     010E                     	;# 
  2344     010E                     	;# 
  2345     010F                     	;# 
  2346     0110                     	;# 
  2347     0110                     	;# 
  2348     0111                     	;# 
  2349     0112                     	;# 
  2350     0112                     	;# 
  2351     0113                     	;# 
  2352     0114                     	;# 
  2353     0114                     	;# 
  2354     0115                     	;# 
  2355     0116                     	;# 
  2356     0116                     	;# 
  2357     0117                     	;# 
  2358     0119                     	;# 
  2359     0119                     	;# 
  2360     0119                     	;# 
  2361     011A                     	;# 
  2362     011A                     	;# 
  2363     011A                     	;# 
  2364     011B                     	;# 
  2365     011B                     	;# 
  2366     011B                     	;# 
  2367     011B                     	;# 
  2368     011B                     	;# 
  2369     011C                     	;# 
  2370     011C                     	;# 
  2371     011C                     	;# 
  2372     011D                     	;# 
  2373     011D                     	;# 
  2374     011D                     	;# 
  2375     011E                     	;# 
  2376     011E                     	;# 
  2377     011E                     	;# 
  2378     011F                     	;# 
  2379     011F                     	;# 
  2380     011F                     	;# 
  2381     011F                     	;# 
  2382     011F                     	;# 
  2383     018C                     	;# 
  2384     018D                     	;# 
  2385     018E                     	;# 
  2386     018F                     	;# 
  2387     0190                     	;# 
  2388     0191                     	;# 
  2389     0192                     	;# 
  2390     0196                     	;# 
  2391     0197                     	;# 
  2392     0198                     	;# 
  2393     0199                     	;# 
  2394     019A                     	;# 
  2395     019B                     	;# 
  2396     019C                     	;# 
  2397     020C                     	;# 
  2398     020C                     	;# 
  2399     020D                     	;# 
  2400     020E                     	;# 
  2401     020F                     	;# 
  2402     020F                     	;# 
  2403     0210                     	;# 
  2404     0210                     	;# 
  2405     0211                     	;# 
  2406     0211                     	;# 
  2407     0212                     	;# 
  2408     0212                     	;# 
  2409     0213                     	;# 
  2410     0214                     	;# 
  2411     0215                     	;# 
  2412     0215                     	;# 
  2413     0216                     	;# 
  2414     0216                     	;# 
  2415     0217                     	;# 
  2416     0217                     	;# 
  2417     0218                     	;# 
  2418     0218                     	;# 
  2419     0219                     	;# 
  2420     021A                     	;# 
  2421     021B                     	;# 
  2422     021B                     	;# 
  2423     021C                     	;# 
  2424     021C                     	;# 
  2425     021D                     	;# 
  2426     021D                     	;# 
  2427     021E                     	;# 
  2428     021F                     	;# 
  2429     028C                     	;# 
  2430     028C                     	;# 
  2431     028D                     	;# 
  2432     028D                     	;# 
  2433     028E                     	;# 
  2434     028F                     	;# 
  2435     0290                     	;# 
  2436     0290                     	;# 
  2437     0291                     	;# 
  2438     0292                     	;# 
  2439     0292                     	;# 
  2440     0293                     	;# 
  2441     0293                     	;# 
  2442     0294                     	;# 
  2443     0295                     	;# 
  2444     0296                     	;# 
  2445     0296                     	;# 
  2446     0297                     	;# 
  2447     0298                     	;# 
  2448     0298                     	;# 
  2449     0299                     	;# 
  2450     0299                     	;# 
  2451     029A                     	;# 
  2452     029B                     	;# 
  2453     029C                     	;# 
  2454     029C                     	;# 
  2455     029D                     	;# 
  2456     030C                     	;# 
  2457     030C                     	;# 
  2458     030D                     	;# 
  2459     030E                     	;# 
  2460     030F                     	;# 
  2461     0310                     	;# 
  2462     0310                     	;# 
  2463     0311                     	;# 
  2464     0312                     	;# 
  2465     0313                     	;# 
  2466     0314                     	;# 
  2467     0314                     	;# 
  2468     0315                     	;# 
  2469     0316                     	;# 
  2470     0317                     	;# 
  2471     0318                     	;# 
  2472     0318                     	;# 
  2473     0319                     	;# 
  2474     031A                     	;# 
  2475     031B                     	;# 
  2476     031C                     	;# 
  2477     031C                     	;# 
  2478     031D                     	;# 
  2479     031E                     	;# 
  2480     031F                     	;# 
  2481     038C                     	;# 
  2482     038C                     	;# 
  2483     038D                     	;# 
  2484     038E                     	;# 
  2485     0390                     	;# 
  2486     0390                     	;# 
  2487     0391                     	;# 
  2488     0392                     	;# 
  2489     040C                     	;# 
  2490     040D                     	;# 
  2491     040E                     	;# 
  2492     040F                     	;# 
  2493     0410                     	;# 
  2494     0411                     	;# 
  2495     0416                     	;# 
  2496     0416                     	;# 
  2497     0417                     	;# 
  2498     0418                     	;# 
  2499     0418                     	;# 
  2500     0419                     	;# 
  2501     041A                     	;# 
  2502     041A                     	;# 
  2503     041B                     	;# 
  2504     041C                     	;# 
  2505     041C                     	;# 
  2506     041D                     	;# 
  2507     041E                     	;# 
  2508     041F                     	;# 
  2509     048C                     	;# 
  2510     048C                     	;# 
  2511     048D                     	;# 
  2512     048E                     	;# 
  2513     048F                     	;# 
  2514     048F                     	;# 
  2515     0490                     	;# 
  2516     0491                     	;# 
  2517     0492                     	;# 
  2518     0492                     	;# 
  2519     0493                     	;# 
  2520     0494                     	;# 
  2521     0495                     	;# 
  2522     0495                     	;# 
  2523     0496                     	;# 
  2524     0497                     	;# 
  2525     0498                     	;# 
  2526     0499                     	;# 
  2527     049A                     	;# 
  2528     049B                     	;# 
  2529     049C                     	;# 
  2530     049D                     	;# 
  2531     050C                     	;# 
  2532     050C                     	;# 
  2533     050D                     	;# 
  2534     050E                     	;# 
  2535     050F                     	;# 
  2536     050F                     	;# 
  2537     0510                     	;# 
  2538     0511                     	;# 
  2539     0512                     	;# 
  2540     0512                     	;# 
  2541     0513                     	;# 
  2542     0514                     	;# 
  2543     0515                     	;# 
  2544     0515                     	;# 
  2545     0516                     	;# 
  2546     0517                     	;# 
  2547     0518                     	;# 
  2548     0519                     	;# 
  2549     051A                     	;# 
  2550     051B                     	;# 
  2551     051C                     	;# 
  2552     051D                     	;# 
  2553     058C                     	;# 
  2554     058C                     	;# 
  2555     058D                     	;# 
  2556     058E                     	;# 
  2557     058F                     	;# 
  2558     058F                     	;# 
  2559     0590                     	;# 
  2560     0591                     	;# 
  2561     0592                     	;# 
  2562     0593                     	;# 
  2563     060C                     	;# 
  2564     060D                     	;# 
  2565     060E                     	;# 
  2566     060F                     	;# 
  2567     0610                     	;# 
  2568     0611                     	;# 
  2569     0612                     	;# 
  2570     0613                     	;# 
  2571     0614                     	;# 
  2572     0616                     	;# 
  2573     0617                     	;# 
  2574     0618                     	;# 
  2575     0619                     	;# 
  2576     061A                     	;# 
  2577     061B                     	;# 
  2578     061C                     	;# 
  2579     061D                     	;# 
  2580     061E                     	;# 
  2581     068C                     	;# 
  2582     068D                     	;# 
  2583     068E                     	;# 
  2584     068F                     	;# 
  2585     0690                     	;# 
  2586     0691                     	;# 
  2587     0692                     	;# 
  2588     0693                     	;# 
  2589     0694                     	;# 
  2590     070C                     	;# 
  2591     070D                     	;# 
  2592     070E                     	;# 
  2593     070F                     	;# 
  2594     0710                     	;# 
  2595     0711                     	;# 
  2596     0712                     	;# 
  2597     0713                     	;# 
  2598     0714                     	;# 
  2599     0716                     	;# 
  2600     0717                     	;# 
  2601     0718                     	;# 
  2602     0719                     	;# 
  2603     071A                     	;# 
  2604     071B                     	;# 
  2605     071C                     	;# 
  2606     071D                     	;# 
  2607     071E                     	;# 
  2608     0796                     	;# 
  2609     0797                     	;# 
  2610     0798                     	;# 
  2611     0799                     	;# 
  2612     079A                     	;# 
  2613     079B                     	;# 
  2614     080C                     	;# 
  2615     080D                     	;# 
  2616     080E                     	;# 
  2617     080F                     	;# 
  2618     0810                     	;# 
  2619     0811                     	;# 
  2620     0812                     	;# 
  2621     0813                     	;# 
  2622     0814                     	;# 
  2623     081A                     	;# 
  2624     081B                     	;# 
  2625     081C                     	;# 
  2626     081D                     	;# 
  2627     081E                     	;# 
  2628     081F                     	;# 
  2629     088C                     	;# 
  2630     088D                     	;# 
  2631     088E                     	;# 
  2632     088F                     	;# 
  2633     0890                     	;# 
  2634     0891                     	;# 
  2635     0892                     	;# 
  2636     0893                     	;# 
  2637     0895                     	;# 
  2638     0896                     	;# 
  2639     0897                     	;# 
  2640     0898                     	;# 
  2641     0899                     	;# 
  2642     089A                     	;# 
  2643     089B                     	;# 
  2644     090C                     	;# 
  2645     090E                     	;# 
  2646     090F                     	;# 
  2647     091F                     	;# 
  2648     091F                     	;# 
  2649     098F                     	;# 
  2650     098F                     	;# 
  2651     0990                     	;# 
  2652     0991                     	;# 
  2653     0992                     	;# 
  2654     0993                     	;# 
  2655     0994                     	;# 
  2656     0995                     	;# 
  2657     0996                     	;# 
  2658     0997                     	;# 
  2659     0E0F                     	;# 
  2660     0E10                     	;# 
  2661     0E11                     	;# 
  2662     0E12                     	;# 
  2663     0E13                     	;# 
  2664     0E14                     	;# 
  2665     0E15                     	;# 
  2666     0E16                     	;# 
  2667     0E17                     	;# 
  2668     0E18                     	;# 
  2669     0E19                     	;# 
  2670     0E1A                     	;# 
  2671     0E1B                     	;# 
  2672     0E1C                     	;# 
  2673     0E1D                     	;# 
  2674     0E1E                     	;# 
  2675     0E1F                     	;# 
  2676     0E20                     	;# 
  2677     0E21                     	;# 
  2678     0E22                     	;# 
  2679     0E23                     	;# 
  2680     0E24                     	;# 
  2681     0E25                     	;# 
  2682     0E26                     	;# 
  2683     0E27                     	;# 
  2684     0E28                     	;# 
  2685     0E29                     	;# 
  2686     0E2A                     	;# 
  2687     0E2B                     	;# 
  2688     0E2C                     	;# 
  2689     0E2D                     	;# 
  2690     0E2E                     	;# 
  2691     0E2F                     	;# 
  2692     0E30                     	;# 
  2693     0E31                     	;# 
  2694     0E32                     	;# 
  2695     0E33                     	;# 
  2696     0E34                     	;# 
  2697     0E35                     	;# 
  2698     0E36                     	;# 
  2699     0E37                     	;# 
  2700     0E8F                     	;# 
  2701     0E90                     	;# 
  2702     0E91                     	;# 
  2703     0E92                     	;# 
  2704     0E93                     	;# 
  2705     0E94                     	;# 
  2706     0E95                     	;# 
  2707     0E96                     	;# 
  2708     0E97                     	;# 
  2709     0E9C                     	;# 
  2710     0E9D                     	;# 
  2711     0E9E                     	;# 
  2712     0EA1                     	;# 
  2713     0EA2                     	;# 
  2714     0EA3                     	;# 
  2715     0EA4                     	;# 
  2716     0EA5                     	;# 
  2717     0EA9                     	;# 
  2718     0EAA                     	;# 
  2719     0EAB                     	;# 
  2720     0EAC                     	;# 
  2721     0EB1                     	;# 
  2722     0EB2                     	;# 
  2723     0EB3                     	;# 
  2724     0EB8                     	;# 
  2725     0EB9                     	;# 
  2726     0EBA                     	;# 
  2727     0EBB                     	;# 
  2728     0EBC                     	;# 
  2729     0EBD                     	;# 
  2730     0EBE                     	;# 
  2731     0EC3                     	;# 
  2732     0EC5                     	;# 
  2733     0EC6                     	;# 
  2734     0EC7                     	;# 
  2735     0EC8                     	;# 
  2736     0EC9                     	;# 
  2737     0ECA                     	;# 
  2738     0ECB                     	;# 
  2739     0ECC                     	;# 
  2740     0F10                     	;# 
  2741     0F11                     	;# 
  2742     0F12                     	;# 
  2743     0F13                     	;# 
  2744     0F14                     	;# 
  2745     0F15                     	;# 
  2746     0F16                     	;# 
  2747     0F17                     	;# 
  2748     0F18                     	;# 
  2749     0F19                     	;# 
  2750     0F1A                     	;# 
  2751     0F1B                     	;# 
  2752     0F1C                     	;# 
  2753     0F1D                     	;# 
  2754     0F1E                     	;# 
  2755     0F1F                     	;# 
  2756     0F20                     	;# 
  2757     0F21                     	;# 
  2758     0F22                     	;# 
  2759     0F23                     	;# 
  2760     0F24                     	;# 
  2761     0F25                     	;# 
  2762     0F26                     	;# 
  2763     0F27                     	;# 
  2764     0F28                     	;# 
  2765     0F29                     	;# 
  2766     0F2A                     	;# 
  2767     0F2B                     	;# 
  2768     0F2C                     	;# 
  2769     0F2D                     	;# 
  2770     0F2E                     	;# 
  2771     0F2F                     	;# 
  2772     0F30                     	;# 
  2773     0F31                     	;# 
  2774     0F32                     	;# 
  2775     0F38                     	;# 
  2776     0F39                     	;# 
  2777     0F3A                     	;# 
  2778     0F3B                     	;# 
  2779     0F3C                     	;# 
  2780     0F3D                     	;# 
  2781     0F3E                     	;# 
  2782     0F3F                     	;# 
  2783     0F40                     	;# 
  2784     0F41                     	;# 
  2785     0F43                     	;# 
  2786     0F44                     	;# 
  2787     0F45                     	;# 
  2788     0F46                     	;# 
  2789     0F47                     	;# 
  2790     0F48                     	;# 
  2791     0F49                     	;# 
  2792     0F4A                     	;# 
  2793     0F4B                     	;# 
  2794     0F4C                     	;# 
  2795     0F4E                     	;# 
  2796     0F4F                     	;# 
  2797     0F50                     	;# 
  2798     0F51                     	;# 
  2799     0F52                     	;# 
  2800     0F53                     	;# 
  2801     0F54                     	;# 
  2802     0F55                     	;# 
  2803     0F56                     	;# 
  2804     0F57                     	;# 
  2805     0F59                     	;# 
  2806     0F5A                     	;# 
  2807     0F5B                     	;# 
  2808     0F5C                     	;# 
  2809     0F5D                     	;# 
  2810     0F61                     	;# 
  2811     0F62                     	;# 
  2812     0F64                     	;# 
  2813     0F65                     	;# 
  2814     0F66                     	;# 
  2815     0F67                     	;# 
  2816     0F68                     	;# 
  2817     0F69                     	;# 
  2818     0F6A                     	;# 
  2819     0F6B                     	;# 
  2820     0F6C                     	;# 
  2821     0F6D                     	;# 
  2822     0FE4                     	;# 
  2823     0FE5                     	;# 
  2824     0FE6                     	;# 
  2825     0FE7                     	;# 
  2826     0FE8                     	;# 
  2827     0FE9                     	;# 
  2828     0FEA                     	;# 
  2829     0FEB                     	;# 
  2830     0FED                     	;# 
  2831     0FEE                     	;# 
  2832     0FEF                     	;# 
  2833     0000                     	;# 
  2834     0001                     	;# 
  2835     0002                     	;# 
  2836     0003                     	;# 
  2837     0004                     	;# 
  2838     0005                     	;# 
  2839     0006                     	;# 
  2840     0007                     	;# 
  2841     0008                     	;# 
  2842     0009                     	;# 
  2843     000A                     	;# 
  2844     000B                     	;# 
  2845     000C                     	;# 
  2846     000D                     	;# 
  2847     000E                     	;# 
  2848     000F                     	;# 
  2849     0010                     	;# 
  2850     0011                     	;# 
  2851     0012                     	;# 
  2852     0013                     	;# 
  2853     0014                     	;# 
  2854     0015                     	;# 
  2855     0016                     	;# 
  2856     0017                     	;# 
  2857     0018                     	;# 
  2858     0019                     	;# 
  2859     001A                     	;# 
  2860     001C                     	;# 
  2861     001C                     	;# 
  2862     001D                     	;# 
  2863     001D                     	;# 
  2864     001E                     	;# 
  2865     001F                     	;# 
  2866     008C                     	;# 
  2867     008C                     	;# 
  2868     008D                     	;# 
  2869     008E                     	;# 
  2870     008E                     	;# 
  2871     008F                     	;# 
  2872     0090                     	;# 
  2873     0090                     	;# 
  2874     0091                     	;# 
  2875     0093                     	;# 
  2876     0094                     	;# 
  2877     0095                     	;# 
  2878     0096                     	;# 
  2879     0097                     	;# 
  2880     0098                     	;# 
  2881     0099                     	;# 
  2882     009A                     	;# 
  2883     009B                     	;# 
  2884     009C                     	;# 
  2885     009D                     	;# 
  2886     009E                     	;# 
  2887     010C                     	;# 
  2888     010D                     	;# 
  2889     010E                     	;# 
  2890     010E                     	;# 
  2891     010F                     	;# 
  2892     0110                     	;# 
  2893     0110                     	;# 
  2894     0111                     	;# 
  2895     0112                     	;# 
  2896     0112                     	;# 
  2897     0113                     	;# 
  2898     0114                     	;# 
  2899     0114                     	;# 
  2900     0115                     	;# 
  2901     0116                     	;# 
  2902     0116                     	;# 
  2903     0117                     	;# 
  2904     0119                     	;# 
  2905     0119                     	;# 
  2906     0119                     	;# 
  2907     011A                     	;# 
  2908     011A                     	;# 
  2909     011A                     	;# 
  2910     011B                     	;# 
  2911     011B                     	;# 
  2912     011B                     	;# 
  2913     011B                     	;# 
  2914     011B                     	;# 
  2915     011C                     	;# 
  2916     011C                     	;# 
  2917     011C                     	;# 
  2918     011D                     	;# 
  2919     011D                     	;# 
  2920     011D                     	;# 
  2921     011E                     	;# 
  2922     011E                     	;# 
  2923     011E                     	;# 
  2924     011F                     	;# 
  2925     011F                     	;# 
  2926     011F                     	;# 
  2927     011F                     	;# 
  2928     011F                     	;# 
  2929     018C                     	;# 
  2930     018D                     	;# 
  2931     018E                     	;# 
  2932     018F                     	;# 
  2933     0190                     	;# 
  2934     0191                     	;# 
  2935     0192                     	;# 
  2936     0196                     	;# 
  2937     0197                     	;# 
  2938     0198                     	;# 
  2939     0199                     	;# 
  2940     019A                     	;# 
  2941     019B                     	;# 
  2942     019C                     	;# 
  2943     020C                     	;# 
  2944     020C                     	;# 
  2945     020D                     	;# 
  2946     020E                     	;# 
  2947     020F                     	;# 
  2948     020F                     	;# 
  2949     0210                     	;# 
  2950     0210                     	;# 
  2951     0211                     	;# 
  2952     0211                     	;# 
  2953     0212                     	;# 
  2954     0212                     	;# 
  2955     0213                     	;# 
  2956     0214                     	;# 
  2957     0215                     	;# 
  2958     0215                     	;# 
  2959     0216                     	;# 
  2960     0216                     	;# 
  2961     0217                     	;# 
  2962     0217                     	;# 
  2963     0218                     	;# 
  2964     0218                     	;# 
  2965     0219                     	;# 
  2966     021A                     	;# 
  2967     021B                     	;# 
  2968     021B                     	;# 
  2969     021C                     	;# 
  2970     021C                     	;# 
  2971     021D                     	;# 
  2972     021D                     	;# 
  2973     021E                     	;# 
  2974     021F                     	;# 
  2975     028C                     	;# 
  2976     028C                     	;# 
  2977     028D                     	;# 
  2978     028D                     	;# 
  2979     028E                     	;# 
  2980     028F                     	;# 
  2981     0290                     	;# 
  2982     0290                     	;# 
  2983     0291                     	;# 
  2984     0292                     	;# 
  2985     0292                     	;# 
  2986     0293                     	;# 
  2987     0293                     	;# 
  2988     0294                     	;# 
  2989     0295                     	;# 
  2990     0296                     	;# 
  2991     0296                     	;# 
  2992     0297                     	;# 
  2993     0298                     	;# 
  2994     0298                     	;# 
  2995     0299                     	;# 
  2996     0299                     	;# 
  2997     029A                     	;# 
  2998     029B                     	;# 
  2999     029C                     	;# 
  3000     029C                     	;# 
  3001     029D                     	;# 
  3002     030C                     	;# 
  3003     030C                     	;# 
  3004     030D                     	;# 
  3005     030E                     	;# 
  3006     030F                     	;# 
  3007     0310                     	;# 
  3008     0310                     	;# 
  3009     0311                     	;# 
  3010     0312                     	;# 
  3011     0313                     	;# 
  3012     0314                     	;# 
  3013     0314                     	;# 
  3014     0315                     	;# 
  3015     0316                     	;# 
  3016     0317                     	;# 
  3017     0318                     	;# 
  3018     0318                     	;# 
  3019     0319                     	;# 
  3020     031A                     	;# 
  3021     031B                     	;# 
  3022     031C                     	;# 
  3023     031C                     	;# 
  3024     031D                     	;# 
  3025     031E                     	;# 
  3026     031F                     	;# 
  3027     038C                     	;# 
  3028     038C                     	;# 
  3029     038D                     	;# 
  3030     038E                     	;# 
  3031     0390                     	;# 
  3032     0390                     	;# 
  3033     0391                     	;# 
  3034     0392                     	;# 
  3035     040C                     	;# 
  3036     040D                     	;# 
  3037     040E                     	;# 
  3038     040F                     	;# 
  3039     0410                     	;# 
  3040     0411                     	;# 
  3041     0416                     	;# 
  3042     0416                     	;# 
  3043     0417                     	;# 
  3044     0418                     	;# 
  3045     0418                     	;# 
  3046     0419                     	;# 
  3047     041A                     	;# 
  3048     041A                     	;# 
  3049     041B                     	;# 
  3050     041C                     	;# 
  3051     041C                     	;# 
  3052     041D                     	;# 
  3053     041E                     	;# 
  3054     041F                     	;# 
  3055     048C                     	;# 
  3056     048C                     	;# 
  3057     048D                     	;# 
  3058     048E                     	;# 
  3059     048F                     	;# 
  3060     048F                     	;# 
  3061     0490                     	;# 
  3062     0491                     	;# 
  3063     0492                     	;# 
  3064     0492                     	;# 
  3065     0493                     	;# 
  3066     0494                     	;# 
  3067     0495                     	;# 
  3068     0495                     	;# 
  3069     0496                     	;# 
  3070     0497                     	;# 
  3071     0498                     	;# 
  3072     0499                     	;# 
  3073     049A                     	;# 
  3074     049B                     	;# 
  3075     049C                     	;# 
  3076     049D                     	;# 
  3077     050C                     	;# 
  3078     050C                     	;# 
  3079     050D                     	;# 
  3080     050E                     	;# 
  3081     050F                     	;# 
  3082     050F                     	;# 
  3083     0510                     	;# 
  3084     0511                     	;# 
  3085     0512                     	;# 
  3086     0512                     	;# 
  3087     0513                     	;# 
  3088     0514                     	;# 
  3089     0515                     	;# 
  3090     0515                     	;# 
  3091     0516                     	;# 
  3092     0517                     	;# 
  3093     0518                     	;# 
  3094     0519                     	;# 
  3095     051A                     	;# 
  3096     051B                     	;# 
  3097     051C                     	;# 
  3098     051D                     	;# 
  3099     058C                     	;# 
  3100     058C                     	;# 
  3101     058D                     	;# 
  3102     058E                     	;# 
  3103     058F                     	;# 
  3104     058F                     	;# 
  3105     0590                     	;# 
  3106     0591                     	;# 
  3107     0592                     	;# 
  3108     0593                     	;# 
  3109     060C                     	;# 
  3110     060D                     	;# 
  3111     060E                     	;# 
  3112     060F                     	;# 
  3113     0610                     	;# 
  3114     0611                     	;# 
  3115     0612                     	;# 
  3116     0613                     	;# 
  3117     0614                     	;# 
  3118     0616                     	;# 
  3119     0617                     	;# 
  3120     0618                     	;# 
  3121     0619                     	;# 
  3122     061A                     	;# 
  3123     061B                     	;# 
  3124     061C                     	;# 
  3125     061D                     	;# 
  3126     061E                     	;# 
  3127     068C                     	;# 
  3128     068D                     	;# 
  3129     068E                     	;# 
  3130     068F                     	;# 
  3131     0690                     	;# 
  3132     0691                     	;# 
  3133     0692                     	;# 
  3134     0693                     	;# 
  3135     0694                     	;# 
  3136     070C                     	;# 
  3137     070D                     	;# 
  3138     070E                     	;# 
  3139     070F                     	;# 
  3140     0710                     	;# 
  3141     0711                     	;# 
  3142     0712                     	;# 
  3143     0713                     	;# 
  3144     0714                     	;# 
  3145     0716                     	;# 
  3146     0717                     	;# 
  3147     0718                     	;# 
  3148     0719                     	;# 
  3149     071A                     	;# 
  3150     071B                     	;# 
  3151     071C                     	;# 
  3152     071D                     	;# 
  3153     071E                     	;# 
  3154     0796                     	;# 
  3155     0797                     	;# 
  3156     0798                     	;# 
  3157     0799                     	;# 
  3158     079A                     	;# 
  3159     079B                     	;# 
  3160     080C                     	;# 
  3161     080D                     	;# 
  3162     080E                     	;# 
  3163     080F                     	;# 
  3164     0810                     	;# 
  3165     0811                     	;# 
  3166     0812                     	;# 
  3167     0813                     	;# 
  3168     0814                     	;# 
  3169     081A                     	;# 
  3170     081B                     	;# 
  3171     081C                     	;# 
  3172     081D                     	;# 
  3173     081E                     	;# 
  3174     081F                     	;# 
  3175     088C                     	;# 
  3176     088D                     	;# 
  3177     088E                     	;# 
  3178     088F                     	;# 
  3179     0890                     	;# 
  3180     0891                     	;# 
  3181     0892                     	;# 
  3182     0893                     	;# 
  3183     0895                     	;# 
  3184     0896                     	;# 
  3185     0897                     	;# 
  3186     0898                     	;# 
  3187     0899                     	;# 
  3188     089A                     	;# 
  3189     089B                     	;# 
  3190     090C                     	;# 
  3191     090E                     	;# 
  3192     090F                     	;# 
  3193     091F                     	;# 
  3194     091F                     	;# 
  3195     098F                     	;# 
  3196     098F                     	;# 
  3197     0990                     	;# 
  3198     0991                     	;# 
  3199     0992                     	;# 
  3200     0993                     	;# 
  3201     0994                     	;# 
  3202     0995                     	;# 
  3203     0996                     	;# 
  3204     0997                     	;# 
  3205     0E0F                     	;# 
  3206     0E10                     	;# 
  3207     0E11                     	;# 
  3208     0E12                     	;# 
  3209     0E13                     	;# 
  3210     0E14                     	;# 
  3211     0E15                     	;# 
  3212     0E16                     	;# 
  3213     0E17                     	;# 
  3214     0E18                     	;# 
  3215     0E19                     	;# 
  3216     0E1A                     	;# 
  3217     0E1B                     	;# 
  3218     0E1C                     	;# 
  3219     0E1D                     	;# 
  3220     0E1E                     	;# 
  3221     0E1F                     	;# 
  3222     0E20                     	;# 
  3223     0E21                     	;# 
  3224     0E22                     	;# 
  3225     0E23                     	;# 
  3226     0E24                     	;# 
  3227     0E25                     	;# 
  3228     0E26                     	;# 
  3229     0E27                     	;# 
  3230     0E28                     	;# 
  3231     0E29                     	;# 
  3232     0E2A                     	;# 
  3233     0E2B                     	;# 
  3234     0E2C                     	;# 
  3235     0E2D                     	;# 
  3236     0E2E                     	;# 
  3237     0E2F                     	;# 
  3238     0E30                     	;# 
  3239     0E31                     	;# 
  3240     0E32                     	;# 
  3241     0E33                     	;# 
  3242     0E34                     	;# 
  3243     0E35                     	;# 
  3244     0E36                     	;# 
  3245     0E37                     	;# 
  3246     0E8F                     	;# 
  3247     0E90                     	;# 
  3248     0E91                     	;# 
  3249     0E92                     	;# 
  3250     0E93                     	;# 
  3251     0E94                     	;# 
  3252     0E95                     	;# 
  3253     0E96                     	;# 
  3254     0E97                     	;# 
  3255     0E9C                     	;# 
  3256     0E9D                     	;# 
  3257     0E9E                     	;# 
  3258     0EA1                     	;# 
  3259     0EA2                     	;# 
  3260     0EA3                     	;# 
  3261     0EA4                     	;# 
  3262     0EA5                     	;# 
  3263     0EA9                     	;# 
  3264     0EAA                     	;# 
  3265     0EAB                     	;# 
  3266     0EAC                     	;# 
  3267     0EB1                     	;# 
  3268     0EB2                     	;# 
  3269     0EB3                     	;# 
  3270     0EB8                     	;# 
  3271     0EB9                     	;# 
  3272     0EBA                     	;# 
  3273     0EBB                     	;# 
  3274     0EBC                     	;# 
  3275     0EBD                     	;# 
  3276     0EBE                     	;# 
  3277     0EC3                     	;# 
  3278     0EC5                     	;# 
  3279     0EC6                     	;# 
  3280     0EC7                     	;# 
  3281     0EC8                     	;# 
  3282     0EC9                     	;# 
  3283     0ECA                     	;# 
  3284     0ECB                     	;# 
  3285     0ECC                     	;# 
  3286     0F10                     	;# 
  3287     0F11                     	;# 
  3288     0F12                     	;# 
  3289     0F13                     	;# 
  3290     0F14                     	;# 
  3291     0F15                     	;# 
  3292     0F16                     	;# 
  3293     0F17                     	;# 
  3294     0F18                     	;# 
  3295     0F19                     	;# 
  3296     0F1A                     	;# 
  3297     0F1B                     	;# 
  3298     0F1C                     	;# 
  3299     0F1D                     	;# 
  3300     0F1E                     	;# 
  3301     0F1F                     	;# 
  3302     0F20                     	;# 
  3303     0F21                     	;# 
  3304     0F22                     	;# 
  3305     0F23                     	;# 
  3306     0F24                     	;# 
  3307     0F25                     	;# 
  3308     0F26                     	;# 
  3309     0F27                     	;# 
  3310     0F28                     	;# 
  3311     0F29                     	;# 
  3312     0F2A                     	;# 
  3313     0F2B                     	;# 
  3314     0F2C                     	;# 
  3315     0F2D                     	;# 
  3316     0F2E                     	;# 
  3317     0F2F                     	;# 
  3318     0F30                     	;# 
  3319     0F31                     	;# 
  3320     0F32                     	;# 
  3321     0F38                     	;# 
  3322     0F39                     	;# 
  3323     0F3A                     	;# 
  3324     0F3B                     	;# 
  3325     0F3C                     	;# 
  3326     0F3D                     	;# 
  3327     0F3E                     	;# 
  3328     0F3F                     	;# 
  3329     0F40                     	;# 
  3330     0F41                     	;# 
  3331     0F43                     	;# 
  3332     0F44                     	;# 
  3333     0F45                     	;# 
  3334     0F46                     	;# 
  3335     0F47                     	;# 
  3336     0F48                     	;# 
  3337     0F49                     	;# 
  3338     0F4A                     	;# 
  3339     0F4B                     	;# 
  3340     0F4C                     	;# 
  3341     0F4E                     	;# 
  3342     0F4F                     	;# 
  3343     0F50                     	;# 
  3344     0F51                     	;# 
  3345     0F52                     	;# 
  3346     0F53                     	;# 
  3347     0F54                     	;# 
  3348     0F55                     	;# 
  3349     0F56                     	;# 
  3350     0F57                     	;# 
  3351     0F59                     	;# 
  3352     0F5A                     	;# 
  3353     0F5B                     	;# 
  3354     0F5C                     	;# 
  3355     0F5D                     	;# 
  3356     0F61                     	;# 
  3357     0F62                     	;# 
  3358     0F64                     	;# 
  3359     0F65                     	;# 
  3360     0F66                     	;# 
  3361     0F67                     	;# 
  3362     0F68                     	;# 
  3363     0F69                     	;# 
  3364     0F6A                     	;# 
  3365     0F6B                     	;# 
  3366     0F6C                     	;# 
  3367     0F6D                     	;# 
  3368     0FE4                     	;# 
  3369     0FE5                     	;# 
  3370     0FE6                     	;# 
  3371     0FE7                     	;# 
  3372     0FE8                     	;# 
  3373     0FE9                     	;# 
  3374     0FEA                     	;# 
  3375     0FEB                     	;# 
  3376     0FED                     	;# 
  3377     0FEE                     	;# 
  3378     0FEF                     	;# 
  3379     0000                     	;# 
  3380     0001                     	;# 
  3381     0002                     	;# 
  3382     0003                     	;# 
  3383     0004                     	;# 
  3384     0005                     	;# 
  3385     0006                     	;# 
  3386     0007                     	;# 
  3387     0008                     	;# 
  3388     0009                     	;# 
  3389     000A                     	;# 
  3390     000B                     	;# 
  3391     000C                     	;# 
  3392     000D                     	;# 
  3393     000E                     	;# 
  3394     000F                     	;# 
  3395     0010                     	;# 
  3396     0011                     	;# 
  3397     0012                     	;# 
  3398     0013                     	;# 
  3399     0014                     	;# 
  3400     0015                     	;# 
  3401     0016                     	;# 
  3402     0017                     	;# 
  3403     0018                     	;# 
  3404     0019                     	;# 
  3405     001A                     	;# 
  3406     001C                     	;# 
  3407     001C                     	;# 
  3408     001D                     	;# 
  3409     001D                     	;# 
  3410     001E                     	;# 
  3411     001F                     	;# 
  3412     008C                     	;# 
  3413     008C                     	;# 
  3414     008D                     	;# 
  3415     008E                     	;# 
  3416     008E                     	;# 
  3417     008F                     	;# 
  3418     0090                     	;# 
  3419     0090                     	;# 
  3420     0091                     	;# 
  3421     0093                     	;# 
  3422     0094                     	;# 
  3423     0095                     	;# 
  3424     0096                     	;# 
  3425     0097                     	;# 
  3426     0098                     	;# 
  3427     0099                     	;# 
  3428     009A                     	;# 
  3429     009B                     	;# 
  3430     009C                     	;# 
  3431     009D                     	;# 
  3432     009E                     	;# 
  3433     010C                     	;# 
  3434     010D                     	;# 
  3435     010E                     	;# 
  3436     010E                     	;# 
  3437     010F                     	;# 
  3438     0110                     	;# 
  3439     0110                     	;# 
  3440     0111                     	;# 
  3441     0112                     	;# 
  3442     0112                     	;# 
  3443     0113                     	;# 
  3444     0114                     	;# 
  3445     0114                     	;# 
  3446     0115                     	;# 
  3447     0116                     	;# 
  3448     0116                     	;# 
  3449     0117                     	;# 
  3450     0119                     	;# 
  3451     0119                     	;# 
  3452     0119                     	;# 
  3453     011A                     	;# 
  3454     011A                     	;# 
  3455     011A                     	;# 
  3456     011B                     	;# 
  3457     011B                     	;# 
  3458     011B                     	;# 
  3459     011B                     	;# 
  3460     011B                     	;# 
  3461     011C                     	;# 
  3462     011C                     	;# 
  3463     011C                     	;# 
  3464     011D                     	;# 
  3465     011D                     	;# 
  3466     011D                     	;# 
  3467     011E                     	;# 
  3468     011E                     	;# 
  3469     011E                     	;# 
  3470     011F                     	;# 
  3471     011F                     	;# 
  3472     011F                     	;# 
  3473     011F                     	;# 
  3474     011F                     	;# 
  3475     018C                     	;# 
  3476     018D                     	;# 
  3477     018E                     	;# 
  3478     018F                     	;# 
  3479     0190                     	;# 
  3480     0191                     	;# 
  3481     0192                     	;# 
  3482     0196                     	;# 
  3483     0197                     	;# 
  3484     0198                     	;# 
  3485     0199                     	;# 
  3486     019A                     	;# 
  3487     019B                     	;# 
  3488     019C                     	;# 
  3489     020C                     	;# 
  3490     020C                     	;# 
  3491     020D                     	;# 
  3492     020E                     	;# 
  3493     020F                     	;# 
  3494     020F                     	;# 
  3495     0210                     	;# 
  3496     0210                     	;# 
  3497     0211                     	;# 
  3498     0211                     	;# 
  3499     0212                     	;# 
  3500     0212                     	;# 
  3501     0213                     	;# 
  3502     0214                     	;# 
  3503     0215                     	;# 
  3504     0215                     	;# 
  3505     0216                     	;# 
  3506     0216                     	;# 
  3507     0217                     	;# 
  3508     0217                     	;# 
  3509     0218                     	;# 
  3510     0218                     	;# 
  3511     0219                     	;# 
  3512     021A                     	;# 
  3513     021B                     	;# 
  3514     021B                     	;# 
  3515     021C                     	;# 
  3516     021C                     	;# 
  3517     021D                     	;# 
  3518     021D                     	;# 
  3519     021E                     	;# 
  3520     021F                     	;# 
  3521     028C                     	;# 
  3522     028C                     	;# 
  3523     028D                     	;# 
  3524     028D                     	;# 
  3525     028E                     	;# 
  3526     028F                     	;# 
  3527     0290                     	;# 
  3528     0290                     	;# 
  3529     0291                     	;# 
  3530     0292                     	;# 
  3531     0292                     	;# 
  3532     0293                     	;# 
  3533     0293                     	;# 
  3534     0294                     	;# 
  3535     0295                     	;# 
  3536     0296                     	;# 
  3537     0296                     	;# 
  3538     0297                     	;# 
  3539     0298                     	;# 
  3540     0298                     	;# 
  3541     0299                     	;# 
  3542     0299                     	;# 
  3543     029A                     	;# 
  3544     029B                     	;# 
  3545     029C                     	;# 
  3546     029C                     	;# 
  3547     029D                     	;# 
  3548     030C                     	;# 
  3549     030C                     	;# 
  3550     030D                     	;# 
  3551     030E                     	;# 
  3552     030F                     	;# 
  3553     0310                     	;# 
  3554     0310                     	;# 
  3555     0311                     	;# 
  3556     0312                     	;# 
  3557     0313                     	;# 
  3558     0314                     	;# 
  3559     0314                     	;# 
  3560     0315                     	;# 
  3561     0316                     	;# 
  3562     0317                     	;# 
  3563     0318                     	;# 
  3564     0318                     	;# 
  3565     0319                     	;# 
  3566     031A                     	;# 
  3567     031B                     	;# 
  3568     031C                     	;# 
  3569     031C                     	;# 
  3570     031D                     	;# 
  3571     031E                     	;# 
  3572     031F                     	;# 
  3573     038C                     	;# 
  3574     038C                     	;# 
  3575     038D                     	;# 
  3576     038E                     	;# 
  3577     0390                     	;# 
  3578     0390                     	;# 
  3579     0391                     	;# 
  3580     0392                     	;# 
  3581     040C                     	;# 
  3582     040D                     	;# 
  3583     040E                     	;# 
  3584     040F                     	;# 
  3585     0410                     	;# 
  3586     0411                     	;# 
  3587     0416                     	;# 
  3588     0416                     	;# 
  3589     0417                     	;# 
  3590     0418                     	;# 
  3591     0418                     	;# 
  3592     0419                     	;# 
  3593     041A                     	;# 
  3594     041A                     	;# 
  3595     041B                     	;# 
  3596     041C                     	;# 
  3597     041C                     	;# 
  3598     041D                     	;# 
  3599     041E                     	;# 
  3600     041F                     	;# 
  3601     048C                     	;# 
  3602     048C                     	;# 
  3603     048D                     	;# 
  3604     048E                     	;# 
  3605     048F                     	;# 
  3606     048F                     	;# 
  3607     0490                     	;# 
  3608     0491                     	;# 
  3609     0492                     	;# 
  3610     0492                     	;# 
  3611     0493                     	;# 
  3612     0494                     	;# 
  3613     0495                     	;# 
  3614     0495                     	;# 
  3615     0496                     	;# 
  3616     0497                     	;# 
  3617     0498                     	;# 
  3618     0499                     	;# 
  3619     049A                     	;# 
  3620     049B                     	;# 
  3621     049C                     	;# 
  3622     049D                     	;# 
  3623     050C                     	;# 
  3624     050C                     	;# 
  3625     050D                     	;# 
  3626     050E                     	;# 
  3627     050F                     	;# 
  3628     050F                     	;# 
  3629     0510                     	;# 
  3630     0511                     	;# 
  3631     0512                     	;# 
  3632     0512                     	;# 
  3633     0513                     	;# 
  3634     0514                     	;# 
  3635     0515                     	;# 
  3636     0515                     	;# 
  3637     0516                     	;# 
  3638     0517                     	;# 
  3639     0518                     	;# 
  3640     0519                     	;# 
  3641     051A                     	;# 
  3642     051B                     	;# 
  3643     051C                     	;# 
  3644     051D                     	;# 
  3645     058C                     	;# 
  3646     058C                     	;# 
  3647     058D                     	;# 
  3648     058E                     	;# 
  3649     058F                     	;# 
  3650     058F                     	;# 
  3651     0590                     	;# 
  3652     0591                     	;# 
  3653     0592                     	;# 
  3654     0593                     	;# 
  3655     060C                     	;# 
  3656     060D                     	;# 
  3657     060E                     	;# 
  3658     060F                     	;# 
  3659     0610                     	;# 
  3660     0611                     	;# 
  3661     0612                     	;# 
  3662     0613                     	;# 
  3663     0614                     	;# 
  3664     0616                     	;# 
  3665     0617                     	;# 
  3666     0618                     	;# 
  3667     0619                     	;# 
  3668     061A                     	;# 
  3669     061B                     	;# 
  3670     061C                     	;# 
  3671     061D                     	;# 
  3672     061E                     	;# 
  3673     068C                     	;# 
  3674     068D                     	;# 
  3675     068E                     	;# 
  3676     068F                     	;# 
  3677     0690                     	;# 
  3678     0691                     	;# 
  3679     0692                     	;# 
  3680     0693                     	;# 
  3681     0694                     	;# 
  3682     070C                     	;# 
  3683     070D                     	;# 
  3684     070E                     	;# 
  3685     070F                     	;# 
  3686     0710                     	;# 
  3687     0711                     	;# 
  3688     0712                     	;# 
  3689     0713                     	;# 
  3690     0714                     	;# 
  3691     0716                     	;# 
  3692     0717                     	;# 
  3693     0718                     	;# 
  3694     0719                     	;# 
  3695     071A                     	;# 
  3696     071B                     	;# 
  3697     071C                     	;# 
  3698     071D                     	;# 
  3699     071E                     	;# 
  3700     0796                     	;# 
  3701     0797                     	;# 
  3702     0798                     	;# 
  3703     0799                     	;# 
  3704     079A                     	;# 
  3705     079B                     	;# 
  3706     080C                     	;# 
  3707     080D                     	;# 
  3708     080E                     	;# 
  3709     080F                     	;# 
  3710     0810                     	;# 
  3711     0811                     	;# 
  3712     0812                     	;# 
  3713     0813                     	;# 
  3714     0814                     	;# 
  3715     081A                     	;# 
  3716     081B                     	;# 
  3717     081C                     	;# 
  3718     081D                     	;# 
  3719     081E                     	;# 
  3720     081F                     	;# 
  3721     088C                     	;# 
  3722     088D                     	;# 
  3723     088E                     	;# 
  3724     088F                     	;# 
  3725     0890                     	;# 
  3726     0891                     	;# 
  3727     0892                     	;# 
  3728     0893                     	;# 
  3729     0895                     	;# 
  3730     0896                     	;# 
  3731     0897                     	;# 
  3732     0898                     	;# 
  3733     0899                     	;# 
  3734     089A                     	;# 
  3735     089B                     	;# 
  3736     090C                     	;# 
  3737     090E                     	;# 
  3738     090F                     	;# 
  3739     091F                     	;# 
  3740     091F                     	;# 
  3741     098F                     	;# 
  3742     098F                     	;# 
  3743     0990                     	;# 
  3744     0991                     	;# 
  3745     0992                     	;# 
  3746     0993                     	;# 
  3747     0994                     	;# 
  3748     0995                     	;# 
  3749     0996                     	;# 
  3750     0997                     	;# 
  3751     0E0F                     	;# 
  3752     0E10                     	;# 
  3753     0E11                     	;# 
  3754     0E12                     	;# 
  3755     0E13                     	;# 
  3756     0E14                     	;# 
  3757     0E15                     	;# 
  3758     0E16                     	;# 
  3759     0E17                     	;# 
  3760     0E18                     	;# 
  3761     0E19                     	;# 
  3762     0E1A                     	;# 
  3763     0E1B                     	;# 
  3764     0E1C                     	;# 
  3765     0E1D                     	;# 
  3766     0E1E                     	;# 
  3767     0E1F                     	;# 
  3768     0E20                     	;# 
  3769     0E21                     	;# 
  3770     0E22                     	;# 
  3771     0E23                     	;# 
  3772     0E24                     	;# 
  3773     0E25                     	;# 
  3774     0E26                     	;# 
  3775     0E27                     	;# 
  3776     0E28                     	;# 
  3777     0E29                     	;# 
  3778     0E2A                     	;# 
  3779     0E2B                     	;# 
  3780     0E2C                     	;# 
  3781     0E2D                     	;# 
  3782     0E2E                     	;# 
  3783     0E2F                     	;# 
  3784     0E30                     	;# 
  3785     0E31                     	;# 
  3786     0E32                     	;# 
  3787     0E33                     	;# 
  3788     0E34                     	;# 
  3789     0E35                     	;# 
  3790     0E36                     	;# 
  3791     0E37                     	;# 
  3792     0E8F                     	;# 
  3793     0E90                     	;# 
  3794     0E91                     	;# 
  3795     0E92                     	;# 
  3796     0E93                     	;# 
  3797     0E94                     	;# 
  3798     0E95                     	;# 
  3799     0E96                     	;# 
  3800     0E97                     	;# 
  3801     0E9C                     	;# 
  3802     0E9D                     	;# 
  3803     0E9E                     	;# 
  3804     0EA1                     	;# 
  3805     0EA2                     	;# 
  3806     0EA3                     	;# 
  3807     0EA4                     	;# 
  3808     0EA5                     	;# 
  3809     0EA9                     	;# 
  3810     0EAA                     	;# 
  3811     0EAB                     	;# 
  3812     0EAC                     	;# 
  3813     0EB1                     	;# 
  3814     0EB2                     	;# 
  3815     0EB3                     	;# 
  3816     0EB8                     	;# 
  3817     0EB9                     	;# 
  3818     0EBA                     	;# 
  3819     0EBB                     	;# 
  3820     0EBC                     	;# 
  3821     0EBD                     	;# 
  3822     0EBE                     	;# 
  3823     0EC3                     	;# 
  3824     0EC5                     	;# 
  3825     0EC6                     	;# 
  3826     0EC7                     	;# 
  3827     0EC8                     	;# 
  3828     0EC9                     	;# 
  3829     0ECA                     	;# 
  3830     0ECB                     	;# 
  3831     0ECC                     	;# 
  3832     0F10                     	;# 
  3833     0F11                     	;# 
  3834     0F12                     	;# 
  3835     0F13                     	;# 
  3836     0F14                     	;# 
  3837     0F15                     	;# 
  3838     0F16                     	;# 
  3839     0F17                     	;# 
  3840     0F18                     	;# 
  3841     0F19                     	;# 
  3842     0F1A                     	;# 
  3843     0F1B                     	;# 
  3844     0F1C                     	;# 
  3845     0F1D                     	;# 
  3846     0F1E                     	;# 
  3847     0F1F                     	;# 
  3848     0F20                     	;# 
  3849     0F21                     	;# 
  3850     0F22                     	;# 
  3851     0F23                     	;# 
  3852     0F24                     	;# 
  3853     0F25                     	;# 
  3854     0F26                     	;# 
  3855     0F27                     	;# 
  3856     0F28                     	;# 
  3857     0F29                     	;# 
  3858     0F2A                     	;# 
  3859     0F2B                     	;# 
  3860     0F2C                     	;# 
  3861     0F2D                     	;# 
  3862     0F2E                     	;# 
  3863     0F2F                     	;# 
  3864     0F30                     	;# 
  3865     0F31                     	;# 
  3866     0F32                     	;# 
  3867     0F38                     	;# 
  3868     0F39                     	;# 
  3869     0F3A                     	;# 
  3870     0F3B                     	;# 
  3871     0F3C                     	;# 
  3872     0F3D                     	;# 
  3873     0F3E                     	;# 
  3874     0F3F                     	;# 
  3875     0F40                     	;# 
  3876     0F41                     	;# 
  3877     0F43                     	;# 
  3878     0F44                     	;# 
  3879     0F45                     	;# 
  3880     0F46                     	;# 
  3881     0F47                     	;# 
  3882     0F48                     	;# 
  3883     0F49                     	;# 
  3884     0F4A                     	;# 
  3885     0F4B                     	;# 
  3886     0F4C                     	;# 
  3887     0F4E                     	;# 
  3888     0F4F                     	;# 
  3889     0F50                     	;# 
  3890     0F51                     	;# 
  3891     0F52                     	;# 
  3892     0F53                     	;# 
  3893     0F54                     	;# 
  3894     0F55                     	;# 
  3895     0F56                     	;# 
  3896     0F57                     	;# 
  3897     0F59                     	;# 
  3898     0F5A                     	;# 
  3899     0F5B                     	;# 
  3900     0F5C                     	;# 
  3901     0F5D                     	;# 
  3902     0F61                     	;# 
  3903     0F62                     	;# 
  3904     0F64                     	;# 
  3905     0F65                     	;# 
  3906     0F66                     	;# 
  3907     0F67                     	;# 
  3908     0F68                     	;# 
  3909     0F69                     	;# 
  3910     0F6A                     	;# 
  3911     0F6B                     	;# 
  3912     0F6C                     	;# 
  3913     0F6D                     	;# 
  3914     0FE4                     	;# 
  3915     0FE5                     	;# 
  3916     0FE6                     	;# 
  3917     0FE7                     	;# 
  3918     0FE8                     	;# 
  3919     0FE9                     	;# 
  3920     0FEA                     	;# 
  3921     0FEB                     	;# 
  3922     0FED                     	;# 
  3923     0FEE                     	;# 
  3924     0FEF                     	;# 
  3925     0000                     	;# 
  3926     0001                     	;# 
  3927     0002                     	;# 
  3928     0003                     	;# 
  3929     0004                     	;# 
  3930     0005                     	;# 
  3931     0006                     	;# 
  3932     0007                     	;# 
  3933     0008                     	;# 
  3934     0009                     	;# 
  3935     000A                     	;# 
  3936     000B                     	;# 
  3937     000C                     	;# 
  3938     000D                     	;# 
  3939     000E                     	;# 
  3940     000F                     	;# 
  3941     0010                     	;# 
  3942     0011                     	;# 
  3943     0012                     	;# 
  3944     0013                     	;# 
  3945     0014                     	;# 
  3946     0015                     	;# 
  3947     0016                     	;# 
  3948     0017                     	;# 
  3949     0018                     	;# 
  3950     0019                     	;# 
  3951     001A                     	;# 
  3952     001C                     	;# 
  3953     001C                     	;# 
  3954     001D                     	;# 
  3955     001D                     	;# 
  3956     001E                     	;# 
  3957     001F                     	;# 
  3958     008C                     	;# 
  3959     008C                     	;# 
  3960     008D                     	;# 
  3961     008E                     	;# 
  3962     008E                     	;# 
  3963     008F                     	;# 
  3964     0090                     	;# 
  3965     0090                     	;# 
  3966     0091                     	;# 
  3967     0093                     	;# 
  3968     0094                     	;# 
  3969     0095                     	;# 
  3970     0096                     	;# 
  3971     0097                     	;# 
  3972     0098                     	;# 
  3973     0099                     	;# 
  3974     009A                     	;# 
  3975     009B                     	;# 
  3976     009C                     	;# 
  3977     009D                     	;# 
  3978     009E                     	;# 
  3979     010C                     	;# 
  3980     010D                     	;# 
  3981     010E                     	;# 
  3982     010E                     	;# 
  3983     010F                     	;# 
  3984     0110                     	;# 
  3985     0110                     	;# 
  3986     0111                     	;# 
  3987     0112                     	;# 
  3988     0112                     	;# 
  3989     0113                     	;# 
  3990     0114                     	;# 
  3991     0114                     	;# 
  3992     0115                     	;# 
  3993     0116                     	;# 
  3994     0116                     	;# 
  3995     0117                     	;# 
  3996     0119                     	;# 
  3997     0119                     	;# 
  3998     0119                     	;# 
  3999     011A                     	;# 
  4000     011A                     	;# 
  4001     011A                     	;# 
  4002     011B                     	;# 
  4003     011B                     	;# 
  4004     011B                     	;# 
  4005     011B                     	;# 
  4006     011B                     	;# 
  4007     011C                     	;# 
  4008     011C                     	;# 
  4009     011C                     	;# 
  4010     011D                     	;# 
  4011     011D                     	;# 
  4012     011D                     	;# 
  4013     011E                     	;# 
  4014     011E                     	;# 
  4015     011E                     	;# 
  4016     011F                     	;# 
  4017     011F                     	;# 
  4018     011F                     	;# 
  4019     011F                     	;# 
  4020     011F                     	;# 
  4021     018C                     	;# 
  4022     018D                     	;# 
  4023     018E                     	;# 
  4024     018F                     	;# 
  4025     0190                     	;# 
  4026     0191                     	;# 
  4027     0192                     	;# 
  4028     0196                     	;# 
  4029     0197                     	;# 
  4030     0198                     	;# 
  4031     0199                     	;# 
  4032     019A                     	;# 
  4033     019B                     	;# 
  4034     019C                     	;# 
  4035     020C                     	;# 
  4036     020C                     	;# 
  4037     020D                     	;# 
  4038     020E                     	;# 
  4039     020F                     	;# 
  4040     020F                     	;# 
  4041     0210                     	;# 
  4042     0210                     	;# 
  4043     0211                     	;# 
  4044     0211                     	;# 
  4045     0212                     	;# 
  4046     0212                     	;# 
  4047     0213                     	;# 
  4048     0214                     	;# 
  4049     0215                     	;# 
  4050     0215                     	;# 
  4051     0216                     	;# 
  4052     0216                     	;# 
  4053     0217                     	;# 
  4054     0217                     	;# 
  4055     0218                     	;# 
  4056     0218                     	;# 
  4057     0219                     	;# 
  4058     021A                     	;# 
  4059     021B                     	;# 
  4060     021B                     	;# 
  4061     021C                     	;# 
  4062     021C                     	;# 
  4063     021D                     	;# 
  4064     021D                     	;# 
  4065     021E                     	;# 
  4066     021F                     	;# 
  4067     028C                     	;# 
  4068     028C                     	;# 
  4069     028D                     	;# 
  4070     028D                     	;# 
  4071     028E                     	;# 
  4072     028F                     	;# 
  4073     0290                     	;# 
  4074     0290                     	;# 
  4075     0291                     	;# 
  4076     0292                     	;# 
  4077     0292                     	;# 
  4078     0293                     	;# 
  4079     0293                     	;# 
  4080     0294                     	;# 
  4081     0295                     	;# 
  4082     0296                     	;# 
  4083     0296                     	;# 
  4084     0297                     	;# 
  4085     0298                     	;# 
  4086     0298                     	;# 
  4087     0299                     	;# 
  4088     0299                     	;# 
  4089     029A                     	;# 
  4090     029B                     	;# 
  4091     029C                     	;# 
  4092     029C                     	;# 
  4093     029D                     	;# 
  4094     030C                     	;# 
  4095     030C                     	;# 
  4096     030D                     	;# 
  4097     030E                     	;# 
  4098     030F                     	;# 
  4099     0310                     	;# 
  4100     0310                     	;# 
  4101     0311                     	;# 
  4102     0312                     	;# 
  4103     0313                     	;# 
  4104     0314                     	;# 
  4105     0314                     	;# 
  4106     0315                     	;# 
  4107     0316                     	;# 
  4108     0317                     	;# 
  4109     0318                     	;# 
  4110     0318                     	;# 
  4111     0319                     	;# 
  4112     031A                     	;# 
  4113     031B                     	;# 
  4114     031C                     	;# 
  4115     031C                     	;# 
  4116     031D                     	;# 
  4117     031E                     	;# 
  4118     031F                     	;# 
  4119     038C                     	;# 
  4120     038C                     	;# 
  4121     038D                     	;# 
  4122     038E                     	;# 
  4123     0390                     	;# 
  4124     0390                     	;# 
  4125     0391                     	;# 
  4126     0392                     	;# 
  4127     040C                     	;# 
  4128     040D                     	;# 
  4129     040E                     	;# 
  4130     040F                     	;# 
  4131     0410                     	;# 
  4132     0411                     	;# 
  4133     0416                     	;# 
  4134     0416                     	;# 
  4135     0417                     	;# 
  4136     0418                     	;# 
  4137     0418                     	;# 
  4138     0419                     	;# 
  4139     041A                     	;# 
  4140     041A                     	;# 
  4141     041B                     	;# 
  4142     041C                     	;# 
  4143     041C                     	;# 
  4144     041D                     	;# 
  4145     041E                     	;# 
  4146     041F                     	;# 
  4147     048C                     	;# 
  4148     048C                     	;# 
  4149     048D                     	;# 
  4150     048E                     	;# 
  4151     048F                     	;# 
  4152     048F                     	;# 
  4153     0490                     	;# 
  4154     0491                     	;# 
  4155     0492                     	;# 
  4156     0492                     	;# 
  4157     0493                     	;# 
  4158     0494                     	;# 
  4159     0495                     	;# 
  4160     0495                     	;# 
  4161     0496                     	;# 
  4162     0497                     	;# 
  4163     0498                     	;# 
  4164     0499                     	;# 
  4165     049A                     	;# 
  4166     049B                     	;# 
  4167     049C                     	;# 
  4168     049D                     	;# 
  4169     050C                     	;# 
  4170     050C                     	;# 
  4171     050D                     	;# 
  4172     050E                     	;# 
  4173     050F                     	;# 
  4174     050F                     	;# 
  4175     0510                     	;# 
  4176     0511                     	;# 
  4177     0512                     	;# 
  4178     0512                     	;# 
  4179     0513                     	;# 
  4180     0514                     	;# 
  4181     0515                     	;# 
  4182     0515                     	;# 
  4183     0516                     	;# 
  4184     0517                     	;# 
  4185     0518                     	;# 
  4186     0519                     	;# 
  4187     051A                     	;# 
  4188     051B                     	;# 
  4189     051C                     	;# 
  4190     051D                     	;# 
  4191     058C                     	;# 
  4192     058C                     	;# 
  4193     058D                     	;# 
  4194     058E                     	;# 
  4195     058F                     	;# 
  4196     058F                     	;# 
  4197     0590                     	;# 
  4198     0591                     	;# 
  4199     0592                     	;# 
  4200     0593                     	;# 
  4201     060C                     	;# 
  4202     060D                     	;# 
  4203     060E                     	;# 
  4204     060F                     	;# 
  4205     0610                     	;# 
  4206     0611                     	;# 
  4207     0612                     	;# 
  4208     0613                     	;# 
  4209     0614                     	;# 
  4210     0616                     	;# 
  4211     0617                     	;# 
  4212     0618                     	;# 
  4213     0619                     	;# 
  4214     061A                     	;# 
  4215     061B                     	;# 
  4216     061C                     	;# 
  4217     061D                     	;# 
  4218     061E                     	;# 
  4219     068C                     	;# 
  4220     068D                     	;# 
  4221     068E                     	;# 
  4222     068F                     	;# 
  4223     0690                     	;# 
  4224     0691                     	;# 
  4225     0692                     	;# 
  4226     0693                     	;# 
  4227     0694                     	;# 
  4228     070C                     	;# 
  4229     070D                     	;# 
  4230     070E                     	;# 
  4231     070F                     	;# 
  4232     0710                     	;# 
  4233     0711                     	;# 
  4234     0712                     	;# 
  4235     0713                     	;# 
  4236     0714                     	;# 
  4237     0716                     	;# 
  4238     0717                     	;# 
  4239     0718                     	;# 
  4240     0719                     	;# 
  4241     071A                     	;# 
  4242     071B                     	;# 
  4243     071C                     	;# 
  4244     071D                     	;# 
  4245     071E                     	;# 
  4246     0796                     	;# 
  4247     0797                     	;# 
  4248     0798                     	;# 
  4249     0799                     	;# 
  4250     079A                     	;# 
  4251     079B                     	;# 
  4252     080C                     	;# 
  4253     080D                     	;# 
  4254     080E                     	;# 
  4255     080F                     	;# 
  4256     0810                     	;# 
  4257     0811                     	;# 
  4258     0812                     	;# 
  4259     0813                     	;# 
  4260     0814                     	;# 
  4261     081A                     	;# 
  4262     081B                     	;# 
  4263     081C                     	;# 
  4264     081D                     	;# 
  4265     081E                     	;# 
  4266     081F                     	;# 
  4267     088C                     	;# 
  4268     088D                     	;# 
  4269     088E                     	;# 
  4270     088F                     	;# 
  4271     0890                     	;# 
  4272     0891                     	;# 
  4273     0892                     	;# 
  4274     0893                     	;# 
  4275     0895                     	;# 
  4276     0896                     	;# 
  4277     0897                     	;# 
  4278     0898                     	;# 
  4279     0899                     	;# 
  4280     089A                     	;# 
  4281     089B                     	;# 
  4282     090C                     	;# 
  4283     090E                     	;# 
  4284     090F                     	;# 
  4285     091F                     	;# 
  4286     091F                     	;# 
  4287     098F                     	;# 
  4288     098F                     	;# 
  4289     0990                     	;# 
  4290     0991                     	;# 
  4291     0992                     	;# 
  4292     0993                     	;# 
  4293     0994                     	;# 
  4294     0995                     	;# 
  4295     0996                     	;# 
  4296     0997                     	;# 
  4297     0E0F                     	;# 
  4298     0E10                     	;# 
  4299     0E11                     	;# 
  4300     0E12                     	;# 
  4301     0E13                     	;# 
  4302     0E14                     	;# 
  4303     0E15                     	;# 
  4304     0E16                     	;# 
  4305     0E17                     	;# 
  4306     0E18                     	;# 
  4307     0E19                     	;# 
  4308     0E1A                     	;# 
  4309     0E1B                     	;# 
  4310     0E1C                     	;# 
  4311     0E1D                     	;# 
  4312     0E1E                     	;# 
  4313     0E1F                     	;# 
  4314     0E20                     	;# 
  4315     0E21                     	;# 
  4316     0E22                     	;# 
  4317     0E23                     	;# 
  4318     0E24                     	;# 
  4319     0E25                     	;# 
  4320     0E26                     	;# 
  4321     0E27                     	;# 
  4322     0E28                     	;# 
  4323     0E29                     	;# 
  4324     0E2A                     	;# 
  4325     0E2B                     	;# 
  4326     0E2C                     	;# 
  4327     0E2D                     	;# 
  4328     0E2E                     	;# 
  4329     0E2F                     	;# 
  4330     0E30                     	;# 
  4331     0E31                     	;# 
  4332     0E32                     	;# 
  4333     0E33                     	;# 
  4334     0E34                     	;# 
  4335     0E35                     	;# 
  4336     0E36                     	;# 
  4337     0E37                     	;# 
  4338     0E8F                     	;# 
  4339     0E90                     	;# 
  4340     0E91                     	;# 
  4341     0E92                     	;# 
  4342     0E93                     	;# 
  4343     0E94                     	;# 
  4344     0E95                     	;# 
  4345     0E96                     	;# 
  4346     0E97                     	;# 
  4347     0E9C                     	;# 
  4348     0E9D                     	;# 
  4349     0E9E                     	;# 
  4350     0EA1                     	;# 
  4351     0EA2                     	;# 
  4352     0EA3                     	;# 
  4353     0EA4                     	;# 
  4354     0EA5                     	;# 
  4355     0EA9                     	;# 
  4356     0EAA                     	;# 
  4357     0EAB                     	;# 
  4358     0EAC                     	;# 
  4359     0EB1                     	;# 
  4360     0EB2                     	;# 
  4361     0EB3                     	;# 
  4362     0EB8                     	;# 
  4363     0EB9                     	;# 
  4364     0EBA                     	;# 
  4365     0EBB                     	;# 
  4366     0EBC                     	;# 
  4367     0EBD                     	;# 
  4368     0EBE                     	;# 
  4369     0EC3                     	;# 
  4370     0EC5                     	;# 
  4371     0EC6                     	;# 
  4372     0EC7                     	;# 
  4373     0EC8                     	;# 
  4374     0EC9                     	;# 
  4375     0ECA                     	;# 
  4376     0ECB                     	;# 
  4377     0ECC                     	;# 
  4378     0F10                     	;# 
  4379     0F11                     	;# 
  4380     0F12                     	;# 
  4381     0F13                     	;# 
  4382     0F14                     	;# 
  4383     0F15                     	;# 
  4384     0F16                     	;# 
  4385     0F17                     	;# 
  4386     0F18                     	;# 
  4387     0F19                     	;# 
  4388     0F1A                     	;# 
  4389     0F1B                     	;# 
  4390     0F1C                     	;# 
  4391     0F1D                     	;# 
  4392     0F1E                     	;# 
  4393     0F1F                     	;# 
  4394     0F20                     	;# 
  4395     0F21                     	;# 
  4396     0F22                     	;# 
  4397     0F23                     	;# 
  4398     0F24                     	;# 
  4399     0F25                     	;# 
  4400     0F26                     	;# 
  4401     0F27                     	;# 
  4402     0F28                     	;# 
  4403     0F29                     	;# 
  4404     0F2A                     	;# 
  4405     0F2B                     	;# 
  4406     0F2C                     	;# 
  4407     0F2D                     	;# 
  4408     0F2E                     	;# 
  4409     0F2F                     	;# 
  4410     0F30                     	;# 
  4411     0F31                     	;# 
  4412     0F32                     	;# 
  4413     0F38                     	;# 
  4414     0F39                     	;# 
  4415     0F3A                     	;# 
  4416     0F3B                     	;# 
  4417     0F3C                     	;# 
  4418     0F3D                     	;# 
  4419     0F3E                     	;# 
  4420     0F3F                     	;# 
  4421     0F40                     	;# 
  4422     0F41                     	;# 
  4423     0F43                     	;# 
  4424     0F44                     	;# 
  4425     0F45                     	;# 
  4426     0F46                     	;# 
  4427     0F47                     	;# 
  4428     0F48                     	;# 
  4429     0F49                     	;# 
  4430     0F4A                     	;# 
  4431     0F4B                     	;# 
  4432     0F4C                     	;# 
  4433     0F4E                     	;# 
  4434     0F4F                     	;# 
  4435     0F50                     	;# 
  4436     0F51                     	;# 
  4437     0F52                     	;# 
  4438     0F53                     	;# 
  4439     0F54                     	;# 
  4440     0F55                     	;# 
  4441     0F56                     	;# 
  4442     0F57                     	;# 
  4443     0F59                     	;# 
  4444     0F5A                     	;# 
  4445     0F5B                     	;# 
  4446     0F5C                     	;# 
  4447     0F5D                     	;# 
  4448     0F61                     	;# 
  4449     0F62                     	;# 
  4450     0F64                     	;# 
  4451     0F65                     	;# 
  4452     0F66                     	;# 
  4453     0F67                     	;# 
  4454     0F68                     	;# 
  4455     0F69                     	;# 
  4456     0F6A                     	;# 
  4457     0F6B                     	;# 
  4458     0F6C                     	;# 
  4459     0F6D                     	;# 
  4460     0FE4                     	;# 
  4461     0FE5                     	;# 
  4462     0FE6                     	;# 
  4463     0FE7                     	;# 
  4464     0FE8                     	;# 
  4465     0FE9                     	;# 
  4466     0FEA                     	;# 
  4467     0FEB                     	;# 
  4468     0FED                     	;# 
  4469     0FEE                     	;# 
  4470     0FEF                     	;# 
  4471     0000                     	;# 
  4472     0001                     	;# 
  4473     0002                     	;# 
  4474     0003                     	;# 
  4475     0004                     	;# 
  4476     0005                     	;# 
  4477     0006                     	;# 
  4478     0007                     	;# 
  4479     0008                     	;# 
  4480     0009                     	;# 
  4481     000A                     	;# 
  4482     000B                     	;# 
  4483     000C                     	;# 
  4484     000D                     	;# 
  4485     000E                     	;# 
  4486     000F                     	;# 
  4487     0010                     	;# 
  4488     0011                     	;# 
  4489     0012                     	;# 
  4490     0013                     	;# 
  4491     0014                     	;# 
  4492     0015                     	;# 
  4493     0016                     	;# 
  4494     0017                     	;# 
  4495     0018                     	;# 
  4496     0019                     	;# 
  4497     001A                     	;# 
  4498     001C                     	;# 
  4499     001C                     	;# 
  4500     001D                     	;# 
  4501     001D                     	;# 
  4502     001E                     	;# 
  4503     001F                     	;# 
  4504     008C                     	;# 
  4505     008C                     	;# 
  4506     008D                     	;# 
  4507     008E                     	;# 
  4508     008E                     	;# 
  4509     008F                     	;# 
  4510     0090                     	;# 
  4511     0090                     	;# 
  4512     0091                     	;# 
  4513     0093                     	;# 
  4514     0094                     	;# 
  4515     0095                     	;# 
  4516     0096                     	;# 
  4517     0097                     	;# 
  4518     0098                     	;# 
  4519     0099                     	;# 
  4520     009A                     	;# 
  4521     009B                     	;# 
  4522     009C                     	;# 
  4523     009D                     	;# 
  4524     009E                     	;# 
  4525     010C                     	;# 
  4526     010D                     	;# 
  4527     010E                     	;# 
  4528     010E                     	;# 
  4529     010F                     	;# 
  4530     0110                     	;# 
  4531     0110                     	;# 
  4532     0111                     	;# 
  4533     0112                     	;# 
  4534     0112                     	;# 
  4535     0113                     	;# 
  4536     0114                     	;# 
  4537     0114                     	;# 
  4538     0115                     	;# 
  4539     0116                     	;# 
  4540     0116                     	;# 
  4541     0117                     	;# 
  4542     0119                     	;# 
  4543     0119                     	;# 
  4544     0119                     	;# 
  4545     011A                     	;# 
  4546     011A                     	;# 
  4547     011A                     	;# 
  4548     011B                     	;# 
  4549     011B                     	;# 
  4550     011B                     	;# 
  4551     011B                     	;# 
  4552     011B                     	;# 
  4553     011C                     	;# 
  4554     011C                     	;# 
  4555     011C                     	;# 
  4556     011D                     	;# 
  4557     011D                     	;# 
  4558     011D                     	;# 
  4559     011E                     	;# 
  4560     011E                     	;# 
  4561     011E                     	;# 
  4562     011F                     	;# 
  4563     011F                     	;# 
  4564     011F                     	;# 
  4565     011F                     	;# 
  4566     011F                     	;# 
  4567     018C                     	;# 
  4568     018D                     	;# 
  4569     018E                     	;# 
  4570     018F                     	;# 
  4571     0190                     	;# 
  4572     0191                     	;# 
  4573     0192                     	;# 
  4574     0196                     	;# 
  4575     0197                     	;# 
  4576     0198                     	;# 
  4577     0199                     	;# 
  4578     019A                     	;# 
  4579     019B                     	;# 
  4580     019C                     	;# 
  4581     020C                     	;# 
  4582     020C                     	;# 
  4583     020D                     	;# 
  4584     020E                     	;# 
  4585     020F                     	;# 
  4586     020F                     	;# 
  4587     0210                     	;# 
  4588     0210                     	;# 
  4589     0211                     	;# 
  4590     0211                     	;# 
  4591     0212                     	;# 
  4592     0212                     	;# 
  4593     0213                     	;# 
  4594     0214                     	;# 
  4595     0215                     	;# 
  4596     0215                     	;# 
  4597     0216                     	;# 
  4598     0216                     	;# 
  4599     0217                     	;# 
  4600     0217                     	;# 
  4601     0218                     	;# 
  4602     0218                     	;# 
  4603     0219                     	;# 
  4604     021A                     	;# 
  4605     021B                     	;# 
  4606     021B                     	;# 
  4607     021C                     	;# 
  4608     021C                     	;# 
  4609     021D                     	;# 
  4610     021D                     	;# 
  4611     021E                     	;# 
  4612     021F                     	;# 
  4613     028C                     	;# 
  4614     028C                     	;# 
  4615     028D                     	;# 
  4616     028D                     	;# 
  4617     028E                     	;# 
  4618     028F                     	;# 
  4619     0290                     	;# 
  4620     0290                     	;# 
  4621     0291                     	;# 
  4622     0292                     	;# 
  4623     0292                     	;# 
  4624     0293                     	;# 
  4625     0293                     	;# 
  4626     0294                     	;# 
  4627     0295                     	;# 
  4628     0296                     	;# 
  4629     0296                     	;# 
  4630     0297                     	;# 
  4631     0298                     	;# 
  4632     0298                     	;# 
  4633     0299                     	;# 
  4634     0299                     	;# 
  4635     029A                     	;# 
  4636     029B                     	;# 
  4637     029C                     	;# 
  4638     029C                     	;# 
  4639     029D                     	;# 
  4640     030C                     	;# 
  4641     030C                     	;# 
  4642     030D                     	;# 
  4643     030E                     	;# 
  4644     030F                     	;# 
  4645     0310                     	;# 
  4646     0310                     	;# 
  4647     0311                     	;# 
  4648     0312                     	;# 
  4649     0313                     	;# 
  4650     0314                     	;# 
  4651     0314                     	;# 
  4652     0315                     	;# 
  4653     0316                     	;# 
  4654     0317                     	;# 
  4655     0318                     	;# 
  4656     0318                     	;# 
  4657     0319                     	;# 
  4658     031A                     	;# 
  4659     031B                     	;# 
  4660     031C                     	;# 
  4661     031C                     	;# 
  4662     031D                     	;# 
  4663     031E                     	;# 
  4664     031F                     	;# 
  4665     038C                     	;# 
  4666     038C                     	;# 
  4667     038D                     	;# 
  4668     038E                     	;# 
  4669     0390                     	;# 
  4670     0390                     	;# 
  4671     0391                     	;# 
  4672     0392                     	;# 
  4673     040C                     	;# 
  4674     040D                     	;# 
  4675     040E                     	;# 
  4676     040F                     	;# 
  4677     0410                     	;# 
  4678     0411                     	;# 
  4679     0416                     	;# 
  4680     0416                     	;# 
  4681     0417                     	;# 
  4682     0418                     	;# 
  4683     0418                     	;# 
  4684     0419                     	;# 
  4685     041A                     	;# 
  4686     041A                     	;# 
  4687     041B                     	;# 
  4688     041C                     	;# 
  4689     041C                     	;# 
  4690     041D                     	;# 
  4691     041E                     	;# 
  4692     041F                     	;# 
  4693     048C                     	;# 
  4694     048C                     	;# 
  4695     048D                     	;# 
  4696     048E                     	;# 
  4697     048F                     	;# 
  4698     048F                     	;# 
  4699     0490                     	;# 
  4700     0491                     	;# 
  4701     0492                     	;# 
  4702     0492                     	;# 
  4703     0493                     	;# 
  4704     0494                     	;# 
  4705     0495                     	;# 
  4706     0495                     	;# 
  4707     0496                     	;# 
  4708     0497                     	;# 
  4709     0498                     	;# 
  4710     0499                     	;# 
  4711     049A                     	;# 
  4712     049B                     	;# 
  4713     049C                     	;# 
  4714     049D                     	;# 
  4715     050C                     	;# 
  4716     050C                     	;# 
  4717     050D                     	;# 
  4718     050E                     	;# 
  4719     050F                     	;# 
  4720     050F                     	;# 
  4721     0510                     	;# 
  4722     0511                     	;# 
  4723     0512                     	;# 
  4724     0512                     	;# 
  4725     0513                     	;# 
  4726     0514                     	;# 
  4727     0515                     	;# 
  4728     0515                     	;# 
  4729     0516                     	;# 
  4730     0517                     	;# 
  4731     0518                     	;# 
  4732     0519                     	;# 
  4733     051A                     	;# 
  4734     051B                     	;# 
  4735     051C                     	;# 
  4736     051D                     	;# 
  4737     058C                     	;# 
  4738     058C                     	;# 
  4739     058D                     	;# 
  4740     058E                     	;# 
  4741     058F                     	;# 
  4742     058F                     	;# 
  4743     0590                     	;# 
  4744     0591                     	;# 
  4745     0592                     	;# 
  4746     0593                     	;# 
  4747     060C                     	;# 
  4748     060D                     	;# 
  4749     060E                     	;# 
  4750     060F                     	;# 
  4751     0610                     	;# 
  4752     0611                     	;# 
  4753     0612                     	;# 
  4754     0613                     	;# 
  4755     0614                     	;# 
  4756     0616                     	;# 
  4757     0617                     	;# 
  4758     0618                     	;# 
  4759     0619                     	;# 
  4760     061A                     	;# 
  4761     061B                     	;# 
  4762     061C                     	;# 
  4763     061D                     	;# 
  4764     061E                     	;# 
  4765     068C                     	;# 
  4766     068D                     	;# 
  4767     068E                     	;# 
  4768     068F                     	;# 
  4769     0690                     	;# 
  4770     0691                     	;# 
  4771     0692                     	;# 
  4772     0693                     	;# 
  4773     0694                     	;# 
  4774     070C                     	;# 
  4775     070D                     	;# 
  4776     070E                     	;# 
  4777     070F                     	;# 
  4778     0710                     	;# 
  4779     0711                     	;# 
  4780     0712                     	;# 
  4781     0713                     	;# 
  4782     0714                     	;# 
  4783     0716                     	;# 
  4784     0717                     	;# 
  4785     0718                     	;# 
  4786     0719                     	;# 
  4787     071A                     	;# 
  4788     071B                     	;# 
  4789     071C                     	;# 
  4790     071D                     	;# 
  4791     071E                     	;# 
  4792     0796                     	;# 
  4793     0797                     	;# 
  4794     0798                     	;# 
  4795     0799                     	;# 
  4796     079A                     	;# 
  4797     079B                     	;# 
  4798     080C                     	;# 
  4799     080D                     	;# 
  4800     080E                     	;# 
  4801     080F                     	;# 
  4802     0810                     	;# 
  4803     0811                     	;# 
  4804     0812                     	;# 
  4805     0813                     	;# 
  4806     0814                     	;# 
  4807     081A                     	;# 
  4808     081B                     	;# 
  4809     081C                     	;# 
  4810     081D                     	;# 
  4811     081E                     	;# 
  4812     081F                     	;# 
  4813     088C                     	;# 
  4814     088D                     	;# 
  4815     088E                     	;# 
  4816     088F                     	;# 
  4817     0890                     	;# 
  4818     0891                     	;# 
  4819     0892                     	;# 
  4820     0893                     	;# 
  4821     0895                     	;# 
  4822     0896                     	;# 
  4823     0897                     	;# 
  4824     0898                     	;# 
  4825     0899                     	;# 
  4826     089A                     	;# 
  4827     089B                     	;# 
  4828     090C                     	;# 
  4829     090E                     	;# 
  4830     090F                     	;# 
  4831     091F                     	;# 
  4832     091F                     	;# 
  4833     098F                     	;# 
  4834     098F                     	;# 
  4835     0990                     	;# 
  4836     0991                     	;# 
  4837     0992                     	;# 
  4838     0993                     	;# 
  4839     0994                     	;# 
  4840     0995                     	;# 
  4841     0996                     	;# 
  4842     0997                     	;# 
  4843     0E0F                     	;# 
  4844     0E10                     	;# 
  4845     0E11                     	;# 
  4846     0E12                     	;# 
  4847     0E13                     	;# 
  4848     0E14                     	;# 
  4849     0E15                     	;# 
  4850     0E16                     	;# 
  4851     0E17                     	;# 
  4852     0E18                     	;# 
  4853     0E19                     	;# 
  4854     0E1A                     	;# 
  4855     0E1B                     	;# 
  4856     0E1C                     	;# 
  4857     0E1D                     	;# 
  4858     0E1E                     	;# 
  4859     0E1F                     	;# 
  4860     0E20                     	;# 
  4861     0E21                     	;# 
  4862     0E22                     	;# 
  4863     0E23                     	;# 
  4864     0E24                     	;# 
  4865     0E25                     	;# 
  4866     0E26                     	;# 
  4867     0E27                     	;# 
  4868     0E28                     	;# 
  4869     0E29                     	;# 
  4870     0E2A                     	;# 
  4871     0E2B                     	;# 
  4872     0E2C                     	;# 
  4873     0E2D                     	;# 
  4874     0E2E                     	;# 
  4875     0E2F                     	;# 
  4876     0E30                     	;# 
  4877     0E31                     	;# 
  4878     0E32                     	;# 
  4879     0E33                     	;# 
  4880     0E34                     	;# 
  4881     0E35                     	;# 
  4882     0E36                     	;# 
  4883     0E37                     	;# 
  4884     0E8F                     	;# 
  4885     0E90                     	;# 
  4886     0E91                     	;# 
  4887     0E92                     	;# 
  4888     0E93                     	;# 
  4889     0E94                     	;# 
  4890     0E95                     	;# 
  4891     0E96                     	;# 
  4892     0E97                     	;# 
  4893     0E9C                     	;# 
  4894     0E9D                     	;# 
  4895     0E9E                     	;# 
  4896     0EA1                     	;# 
  4897     0EA2                     	;# 
  4898     0EA3                     	;# 
  4899     0EA4                     	;# 
  4900     0EA5                     	;# 
  4901     0EA9                     	;# 
  4902     0EAA                     	;# 
  4903     0EAB                     	;# 
  4904     0EAC                     	;# 
  4905     0EB1                     	;# 
  4906     0EB2                     	;# 
  4907     0EB3                     	;# 
  4908     0EB8                     	;# 
  4909     0EB9                     	;# 
  4910     0EBA                     	;# 
  4911     0EBB                     	;# 
  4912     0EBC                     	;# 
  4913     0EBD                     	;# 
  4914     0EBE                     	;# 
  4915     0EC3                     	;# 
  4916     0EC5                     	;# 
  4917     0EC6                     	;# 
  4918     0EC7                     	;# 
  4919     0EC8                     	;# 
  4920     0EC9                     	;# 
  4921     0ECA                     	;# 
  4922     0ECB                     	;# 
  4923     0ECC                     	;# 
  4924     0F10                     	;# 
  4925     0F11                     	;# 
  4926     0F12                     	;# 
  4927     0F13                     	;# 
  4928     0F14                     	;# 
  4929     0F15                     	;# 
  4930     0F16                     	;# 
  4931     0F17                     	;# 
  4932     0F18                     	;# 
  4933     0F19                     	;# 
  4934     0F1A                     	;# 
  4935     0F1B                     	;# 
  4936     0F1C                     	;# 
  4937     0F1D                     	;# 
  4938     0F1E                     	;# 
  4939     0F1F                     	;# 
  4940     0F20                     	;# 
  4941     0F21                     	;# 
  4942     0F22                     	;# 
  4943     0F23                     	;# 
  4944     0F24                     	;# 
  4945     0F25                     	;# 
  4946     0F26                     	;# 
  4947     0F27                     	;# 
  4948     0F28                     	;# 
  4949     0F29                     	;# 
  4950     0F2A                     	;# 
  4951     0F2B                     	;# 
  4952     0F2C                     	;# 
  4953     0F2D                     	;# 
  4954     0F2E                     	;# 
  4955     0F2F                     	;# 
  4956     0F30                     	;# 
  4957     0F31                     	;# 
  4958     0F32                     	;# 
  4959     0F38                     	;# 
  4960     0F39                     	;# 
  4961     0F3A                     	;# 
  4962     0F3B                     	;# 
  4963     0F3C                     	;# 
  4964     0F3D                     	;# 
  4965     0F3E                     	;# 
  4966     0F3F                     	;# 
  4967     0F40                     	;# 
  4968     0F41                     	;# 
  4969     0F43                     	;# 
  4970     0F44                     	;# 
  4971     0F45                     	;# 
  4972     0F46                     	;# 
  4973     0F47                     	;# 
  4974     0F48                     	;# 
  4975     0F49                     	;# 
  4976     0F4A                     	;# 
  4977     0F4B                     	;# 
  4978     0F4C                     	;# 
  4979     0F4E                     	;# 
  4980     0F4F                     	;# 
  4981     0F50                     	;# 
  4982     0F51                     	;# 
  4983     0F52                     	;# 
  4984     0F53                     	;# 
  4985     0F54                     	;# 
  4986     0F55                     	;# 
  4987     0F56                     	;# 
  4988     0F57                     	;# 
  4989     0F59                     	;# 
  4990     0F5A                     	;# 
  4991     0F5B                     	;# 
  4992     0F5C                     	;# 
  4993     0F5D                     	;# 
  4994     0F61                     	;# 
  4995     0F62                     	;# 
  4996     0F64                     	;# 
  4997     0F65                     	;# 
  4998     0F66                     	;# 
  4999     0F67                     	;# 
  5000     0F68                     	;# 
  5001     0F69                     	;# 
  5002     0F6A                     	;# 
  5003     0F6B                     	;# 
  5004     0F6C                     	;# 
  5005     0F6D                     	;# 
  5006     0FE4                     	;# 
  5007     0FE5                     	;# 
  5008     0FE6                     	;# 
  5009     0FE7                     	;# 
  5010     0FE8                     	;# 
  5011     0FE9                     	;# 
  5012     0FEA                     	;# 
  5013     0FEB                     	;# 
  5014     0FED                     	;# 
  5015     0FEE                     	;# 
  5016     0FEF                     	;# 
  5017     0000                     	;# 
  5018     0001                     	;# 
  5019     0002                     	;# 
  5020     0003                     	;# 
  5021     0004                     	;# 
  5022     0005                     	;# 
  5023     0006                     	;# 
  5024     0007                     	;# 
  5025     0008                     	;# 
  5026     0009                     	;# 
  5027     000A                     	;# 
  5028     000B                     	;# 
  5029     000C                     	;# 
  5030     000D                     	;# 
  5031     000E                     	;# 
  5032     000F                     	;# 
  5033     0010                     	;# 
  5034     0011                     	;# 
  5035     0012                     	;# 
  5036     0013                     	;# 
  5037     0014                     	;# 
  5038     0015                     	;# 
  5039     0016                     	;# 
  5040     0017                     	;# 
  5041     0018                     	;# 
  5042     0019                     	;# 
  5043     001A                     	;# 
  5044     001C                     	;# 
  5045     001C                     	;# 
  5046     001D                     	;# 
  5047     001D                     	;# 
  5048     001E                     	;# 
  5049     001F                     	;# 
  5050     008C                     	;# 
  5051     008C                     	;# 
  5052     008D                     	;# 
  5053     008E                     	;# 
  5054     008E                     	;# 
  5055     008F                     	;# 
  5056     0090                     	;# 
  5057     0090                     	;# 
  5058     0091                     	;# 
  5059     0093                     	;# 
  5060     0094                     	;# 
  5061     0095                     	;# 
  5062     0096                     	;# 
  5063     0097                     	;# 
  5064     0098                     	;# 
  5065     0099                     	;# 
  5066     009A                     	;# 
  5067     009B                     	;# 
  5068     009C                     	;# 
  5069     009D                     	;# 
  5070     009E                     	;# 
  5071     010C                     	;# 
  5072     010D                     	;# 
  5073     010E                     	;# 
  5074     010E                     	;# 
  5075     010F                     	;# 
  5076     0110                     	;# 
  5077     0110                     	;# 
  5078     0111                     	;# 
  5079     0112                     	;# 
  5080     0112                     	;# 
  5081     0113                     	;# 
  5082     0114                     	;# 
  5083     0114                     	;# 
  5084     0115                     	;# 
  5085     0116                     	;# 
  5086     0116                     	;# 
  5087     0117                     	;# 
  5088     0119                     	;# 
  5089     0119                     	;# 
  5090     0119                     	;# 
  5091     011A                     	;# 
  5092     011A                     	;# 
  5093     011A                     	;# 
  5094     011B                     	;# 
  5095     011B                     	;# 
  5096     011B                     	;# 
  5097     011B                     	;# 
  5098     011B                     	;# 
  5099     011C                     	;# 
  5100     011C                     	;# 
  5101     011C                     	;# 
  5102     011D                     	;# 
  5103     011D                     	;# 
  5104     011D                     	;# 
  5105     011E                     	;# 
  5106     011E                     	;# 
  5107     011E                     	;# 
  5108     011F                     	;# 
  5109     011F                     	;# 
  5110     011F                     	;# 
  5111     011F                     	;# 
  5112     011F                     	;# 
  5113     018C                     	;# 
  5114     018D                     	;# 
  5115     018E                     	;# 
  5116     018F                     	;# 
  5117     0190                     	;# 
  5118     0191                     	;# 
  5119     0192                     	;# 
  5120     0196                     	;# 
  5121     0197                     	;# 
  5122     0198                     	;# 
  5123     0199                     	;# 
  5124     019A                     	;# 
  5125     019B                     	;# 
  5126     019C                     	;# 
  5127     020C                     	;# 
  5128     020C                     	;# 
  5129     020D                     	;# 
  5130     020E                     	;# 
  5131     020F                     	;# 
  5132     020F                     	;# 
  5133     0210                     	;# 
  5134     0210                     	;# 
  5135     0211                     	;# 
  5136     0211                     	;# 
  5137     0212                     	;# 
  5138     0212                     	;# 
  5139     0213                     	;# 
  5140     0214                     	;# 
  5141     0215                     	;# 
  5142     0215                     	;# 
  5143     0216                     	;# 
  5144     0216                     	;# 
  5145     0217                     	;# 
  5146     0217                     	;# 
  5147     0218                     	;# 
  5148     0218                     	;# 
  5149     0219                     	;# 
  5150     021A                     	;# 
  5151     021B                     	;# 
  5152     021B                     	;# 
  5153     021C                     	;# 
  5154     021C                     	;# 
  5155     021D                     	;# 
  5156     021D                     	;# 
  5157     021E                     	;# 
  5158     021F                     	;# 
  5159     028C                     	;# 
  5160     028C                     	;# 
  5161     028D                     	;# 
  5162     028D                     	;# 
  5163     028E                     	;# 
  5164     028F                     	;# 
  5165     0290                     	;# 
  5166     0290                     	;# 
  5167     0291                     	;# 
  5168     0292                     	;# 
  5169     0292                     	;# 
  5170     0293                     	;# 
  5171     0293                     	;# 
  5172     0294                     	;# 
  5173     0295                     	;# 
  5174     0296                     	;# 
  5175     0296                     	;# 
  5176     0297                     	;# 
  5177     0298                     	;# 
  5178     0298                     	;# 
  5179     0299                     	;# 
  5180     0299                     	;# 
  5181     029A                     	;# 
  5182     029B                     	;# 
  5183     029C                     	;# 
  5184     029C                     	;# 
  5185     029D                     	;# 
  5186     030C                     	;# 
  5187     030C                     	;# 
  5188     030D                     	;# 
  5189     030E                     	;# 
  5190     030F                     	;# 
  5191     0310                     	;# 
  5192     0310                     	;# 
  5193     0311                     	;# 
  5194     0312                     	;# 
  5195     0313                     	;# 
  5196     0314                     	;# 
  5197     0314                     	;# 
  5198     0315                     	;# 
  5199     0316                     	;# 
  5200     0317                     	;# 
  5201     0318                     	;# 
  5202     0318                     	;# 
  5203     0319                     	;# 
  5204     031A                     	;# 
  5205     031B                     	;# 
  5206     031C                     	;# 
  5207     031C                     	;# 
  5208     031D                     	;# 
  5209     031E                     	;# 
  5210     031F                     	;# 
  5211     038C                     	;# 
  5212     038C                     	;# 
  5213     038D                     	;# 
  5214     038E                     	;# 
  5215     0390                     	;# 
  5216     0390                     	;# 
  5217     0391                     	;# 
  5218     0392                     	;# 
  5219     040C                     	;# 
  5220     040D                     	;# 
  5221     040E                     	;# 
  5222     040F                     	;# 
  5223     0410                     	;# 
  5224     0411                     	;# 
  5225     0416                     	;# 
  5226     0416                     	;# 
  5227     0417                     	;# 
  5228     0418                     	;# 
  5229     0418                     	;# 
  5230     0419                     	;# 
  5231     041A                     	;# 
  5232     041A                     	;# 
  5233     041B                     	;# 
  5234     041C                     	;# 
  5235     041C                     	;# 
  5236     041D                     	;# 
  5237     041E                     	;# 
  5238     041F                     	;# 
  5239     048C                     	;# 
  5240     048C                     	;# 
  5241     048D                     	;# 
  5242     048E                     	;# 
  5243     048F                     	;# 
  5244     048F                     	;# 
  5245     0490                     	;# 
  5246     0491                     	;# 
  5247     0492                     	;# 
  5248     0492                     	;# 
  5249     0493                     	;# 
  5250     0494                     	;# 
  5251     0495                     	;# 
  5252     0495                     	;# 
  5253     0496                     	;# 
  5254     0497                     	;# 
  5255     0498                     	;# 
  5256     0499                     	;# 
  5257     049A                     	;# 
  5258     049B                     	;# 
  5259     049C                     	;# 
  5260     049D                     	;# 
  5261     050C                     	;# 
  5262     050C                     	;# 
  5263     050D                     	;# 
  5264     050E                     	;# 
  5265     050F                     	;# 
  5266     050F                     	;# 
  5267     0510                     	;# 
  5268     0511                     	;# 
  5269     0512                     	;# 
  5270     0512                     	;# 
  5271     0513                     	;# 
  5272     0514                     	;# 
  5273     0515                     	;# 
  5274     0515                     	;# 
  5275     0516                     	;# 
  5276     0517                     	;# 
  5277     0518                     	;# 
  5278     0519                     	;# 
  5279     051A                     	;# 
  5280     051B                     	;# 
  5281     051C                     	;# 
  5282     051D                     	;# 
  5283     058C                     	;# 
  5284     058C                     	;# 
  5285     058D                     	;# 
  5286     058E                     	;# 
  5287     058F                     	;# 
  5288     058F                     	;# 
  5289     0590                     	;# 
  5290     0591                     	;# 
  5291     0592                     	;# 
  5292     0593                     	;# 
  5293     060C                     	;# 
  5294     060D                     	;# 
  5295     060E                     	;# 
  5296     060F                     	;# 
  5297     0610                     	;# 
  5298     0611                     	;# 
  5299     0612                     	;# 
  5300     0613                     	;# 
  5301     0614                     	;# 
  5302     0616                     	;# 
  5303     0617                     	;# 
  5304     0618                     	;# 
  5305     0619                     	;# 
  5306     061A                     	;# 
  5307     061B                     	;# 
  5308     061C                     	;# 
  5309     061D                     	;# 
  5310     061E                     	;# 
  5311     068C                     	;# 
  5312     068D                     	;# 
  5313     068E                     	;# 
  5314     068F                     	;# 
  5315     0690                     	;# 
  5316     0691                     	;# 
  5317     0692                     	;# 
  5318     0693                     	;# 
  5319     0694                     	;# 
  5320     070C                     	;# 
  5321     070D                     	;# 
  5322     070E                     	;# 
  5323     070F                     	;# 
  5324     0710                     	;# 
  5325     0711                     	;# 
  5326     0712                     	;# 
  5327     0713                     	;# 
  5328     0714                     	;# 
  5329     0716                     	;# 
  5330     0717                     	;# 
  5331     0718                     	;# 
  5332     0719                     	;# 
  5333     071A                     	;# 
  5334     071B                     	;# 
  5335     071C                     	;# 
  5336     071D                     	;# 
  5337     071E                     	;# 
  5338     0796                     	;# 
  5339     0797                     	;# 
  5340     0798                     	;# 
  5341     0799                     	;# 
  5342     079A                     	;# 
  5343     079B                     	;# 
  5344     080C                     	;# 
  5345     080D                     	;# 
  5346     080E                     	;# 
  5347     080F                     	;# 
  5348     0810                     	;# 
  5349     0811                     	;# 
  5350     0812                     	;# 
  5351     0813                     	;# 
  5352     0814                     	;# 
  5353     081A                     	;# 
  5354     081B                     	;# 
  5355     081C                     	;# 
  5356     081D                     	;# 
  5357     081E                     	;# 
  5358     081F                     	;# 
  5359     088C                     	;# 
  5360     088D                     	;# 
  5361     088E                     	;# 
  5362     088F                     	;# 
  5363     0890                     	;# 
  5364     0891                     	;# 
  5365     0892                     	;# 
  5366     0893                     	;# 
  5367     0895                     	;# 
  5368     0896                     	;# 
  5369     0897                     	;# 
  5370     0898                     	;# 
  5371     0899                     	;# 
  5372     089A                     	;# 
  5373     089B                     	;# 
  5374     090C                     	;# 
  5375     090E                     	;# 
  5376     090F                     	;# 
  5377     091F                     	;# 
  5378     091F                     	;# 
  5379     098F                     	;# 
  5380     098F                     	;# 
  5381     0990                     	;# 
  5382     0991                     	;# 
  5383     0992                     	;# 
  5384     0993                     	;# 
  5385     0994                     	;# 
  5386     0995                     	;# 
  5387     0996                     	;# 
  5388     0997                     	;# 
  5389     0E0F                     	;# 
  5390     0E10                     	;# 
  5391     0E11                     	;# 
  5392     0E12                     	;# 
  5393     0E13                     	;# 
  5394     0E14                     	;# 
  5395     0E15                     	;# 
  5396     0E16                     	;# 
  5397     0E17                     	;# 
  5398     0E18                     	;# 
  5399     0E19                     	;# 
  5400     0E1A                     	;# 
  5401     0E1B                     	;# 
  5402     0E1C                     	;# 
  5403     0E1D                     	;# 
  5404     0E1E                     	;# 
  5405     0E1F                     	;# 
  5406     0E20                     	;# 
  5407     0E21                     	;# 
  5408     0E22                     	;# 
  5409     0E23                     	;# 
  5410     0E24                     	;# 
  5411     0E25                     	;# 
  5412     0E26                     	;# 
  5413     0E27                     	;# 
  5414     0E28                     	;# 
  5415     0E29                     	;# 
  5416     0E2A                     	;# 
  5417     0E2B                     	;# 
  5418     0E2C                     	;# 
  5419     0E2D                     	;# 
  5420     0E2E                     	;# 
  5421     0E2F                     	;# 
  5422     0E30                     	;# 
  5423     0E31                     	;# 
  5424     0E32                     	;# 
  5425     0E33                     	;# 
  5426     0E34                     	;# 
  5427     0E35                     	;# 
  5428     0E36                     	;# 
  5429     0E37                     	;# 
  5430     0E8F                     	;# 
  5431     0E90                     	;# 
  5432     0E91                     	;# 
  5433     0E92                     	;# 
  5434     0E93                     	;# 
  5435     0E94                     	;# 
  5436     0E95                     	;# 
  5437     0E96                     	;# 
  5438     0E97                     	;# 
  5439     0E9C                     	;# 
  5440     0E9D                     	;# 
  5441     0E9E                     	;# 
  5442     0EA1                     	;# 
  5443     0EA2                     	;# 
  5444     0EA3                     	;# 
  5445     0EA4                     	;# 
  5446     0EA5                     	;# 
  5447     0EA9                     	;# 
  5448     0EAA                     	;# 
  5449     0EAB                     	;# 
  5450     0EAC                     	;# 
  5451     0EB1                     	;# 
  5452     0EB2                     	;# 
  5453     0EB3                     	;# 
  5454     0EB8                     	;# 
  5455     0EB9                     	;# 
  5456     0EBA                     	;# 
  5457     0EBB                     	;# 
  5458     0EBC                     	;# 
  5459     0EBD                     	;# 
  5460     0EBE                     	;# 
  5461     0EC3                     	;# 
  5462     0EC5                     	;# 
  5463     0EC6                     	;# 
  5464     0EC7                     	;# 
  5465     0EC8                     	;# 
  5466     0EC9                     	;# 
  5467     0ECA                     	;# 
  5468     0ECB                     	;# 
  5469     0ECC                     	;# 
  5470     0F10                     	;# 
  5471     0F11                     	;# 
  5472     0F12                     	;# 
  5473     0F13                     	;# 
  5474     0F14                     	;# 
  5475     0F15                     	;# 
  5476     0F16                     	;# 
  5477     0F17                     	;# 
  5478     0F18                     	;# 
  5479     0F19                     	;# 
  5480     0F1A                     	;# 
  5481     0F1B                     	;# 
  5482     0F1C                     	;# 
  5483     0F1D                     	;# 
  5484     0F1E                     	;# 
  5485     0F1F                     	;# 
  5486     0F20                     	;# 
  5487     0F21                     	;# 
  5488     0F22                     	;# 
  5489     0F23                     	;# 
  5490     0F24                     	;# 
  5491     0F25                     	;# 
  5492     0F26                     	;# 
  5493     0F27                     	;# 
  5494     0F28                     	;# 
  5495     0F29                     	;# 
  5496     0F2A                     	;# 
  5497     0F2B                     	;# 
  5498     0F2C                     	;# 
  5499     0F2D                     	;# 
  5500     0F2E                     	;# 
  5501     0F2F                     	;# 
  5502     0F30                     	;# 
  5503     0F31                     	;# 
  5504     0F32                     	;# 
  5505     0F38                     	;# 
  5506     0F39                     	;# 
  5507     0F3A                     	;# 
  5508     0F3B                     	;# 
  5509     0F3C                     	;# 
  5510     0F3D                     	;# 
  5511     0F3E                     	;# 
  5512     0F3F                     	;# 
  5513     0F40                     	;# 
  5514     0F41                     	;# 
  5515     0F43                     	;# 
  5516     0F44                     	;# 
  5517     0F45                     	;# 
  5518     0F46                     	;# 
  5519     0F47                     	;# 
  5520     0F48                     	;# 
  5521     0F49                     	;# 
  5522     0F4A                     	;# 
  5523     0F4B                     	;# 
  5524     0F4C                     	;# 
  5525     0F4E                     	;# 
  5526     0F4F                     	;# 
  5527     0F50                     	;# 
  5528     0F51                     	;# 
  5529     0F52                     	;# 
  5530     0F53                     	;# 
  5531     0F54                     	;# 
  5532     0F55                     	;# 
  5533     0F56                     	;# 
  5534     0F57                     	;# 
  5535     0F59                     	;# 
  5536     0F5A                     	;# 
  5537     0F5B                     	;# 
  5538     0F5C                     	;# 
  5539     0F5D                     	;# 
  5540     0F61                     	;# 
  5541     0F62                     	;# 
  5542     0F64                     	;# 
  5543     0F65                     	;# 
  5544     0F66                     	;# 
  5545     0F67                     	;# 
  5546     0F68                     	;# 
  5547     0F69                     	;# 
  5548     0F6A                     	;# 
  5549     0F6B                     	;# 
  5550     0F6C                     	;# 
  5551     0F6D                     	;# 
  5552     0FE4                     	;# 
  5553     0FE5                     	;# 
  5554     0FE6                     	;# 
  5555     0FE7                     	;# 
  5556     0FE8                     	;# 
  5557     0FE9                     	;# 
  5558     0FEA                     	;# 
  5559     0FEB                     	;# 
  5560     0FED                     	;# 
  5561     0FEE                     	;# 
  5562     0FEF                     	;# 
  5563                           
  5564 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  5565     0000                     
  5566 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  5567     0000                     
  5568 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  5569     0000                     
  5570 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  5571     0000                     
  5572 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  5573     0000                     
  5574 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  5575     0000                     
  5576 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  5577     0000                     
  5578 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  5579     0000                     
  5580 ;; Function _I2C1_DO_TX is unused but had its address taken
  5581     0000                     
  5582 ;; Function _I2C1_DO_RX is unused but had its address taken
  5583     0000                     
  5584 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  5585     0000                     
  5586 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  5587     0000                     
  5588 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  5589     0000                     
  5590 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  5591     0000                     
  5592 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  5593     0000                     
  5594 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  5595     0000                     
  5596 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  5597     0000                     
  5598 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  5599     0000                     
  5600 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  5601     0000                     
  5602 ;; Function _I2C1_DO_RESET is unused but had its address taken
  5603     0000                     
  5604 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  5605     0000                     
  5606 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  5607     0000                     
  5608 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  5609     0000                     
  5610                           	psect	stringtext1
  5611     1000                     __pstringtext1:
  5612     1000                     _i2c1_fsmStateTable:
  5613     1000  3400               	retlw	0
  5614     1001  3400               	retlw	0
  5615     1002  3400               	retlw	0
  5616     1003  3400               	retlw	0
  5617     1004  3400               	retlw	0
  5618     1005  3400               	retlw	0
  5619     1006  3400               	retlw	0
  5620     1007  3400               	retlw	0
  5621     1008  3400               	retlw	0
  5622     1009  3400               	retlw	0
  5623     100A  3400               	retlw	0
  5624     100B  3400               	retlw	0
  5625     100C  3400               	retlw	0
  5626     100D  3400               	retlw	0
  5627     100E  3400               	retlw	0
  5628     100F  3400               	retlw	0
  5629     1010  3400               	retlw	0
  5630     1011  3400               	retlw	0
  5631     1012  3400               	retlw	0
  5632     1013  3400               	retlw	0
  5633     1014  3400               	retlw	0
  5634     1015  3400               	retlw	0
  5635     1016  3400               	retlw	0
  5636     1017  3400               	retlw	0
  5637     1018  3400               	retlw	0
  5638     1019  3400               	retlw	0
  5639     101A  3400               	retlw	0
  5640     101B  3400               	retlw	0
  5641     101C  3400               	retlw	0
  5642     101D  3400               	retlw	0
  5643     101E  3400               	retlw	0
  5644     101F  3400               	retlw	0
  5645     1020                     __end_of_i2c1_fsmStateTable:
  5646                           
  5647                           	psect	nvBANK0
  5648     006C                     __pnvBANK0:
  5649     006C                     _TMR1_InterruptHandler:
  5650     006C                     	ds	2
  5651     000B                     _INTCONbits	set	11
  5652     0014                     _TRISD	set	20
  5653     0013                     _TRISC	set	19
  5654     0012                     _TRISB	set	18
  5655     0011                     _TRISA	set	17
  5656     0015                     _TRISE	set	21
  5657     0018                     _LATC	set	24
  5658     0017                     _LATB	set	23
  5659     0016                     _LATA	set	22
  5660     0019                     _LATD	set	25
  5661     001A                     _LATE	set	26
  5662     0013                     _TRISCbits	set	19
  5663     0094                     _ADCON1bits	set	148
  5664     008E                     _ADPREVL	set	142
  5665     008F                     _ADPREVH	set	143
  5666     0097                     _ADSTATbits	set	151
  5667     0090                     _ADACCL	set	144
  5668     0091                     _ADACCH	set	145
  5669     0095                     _ADCON2bits	set	149
  5670     0096                     _ADCON3bits	set	150
  5671     008C                     _ADRESL	set	140
  5672     008D                     _ADRESH	set	141
  5673     0093                     _ADCON0bits	set	147
  5674     009D                     _ADACQ	set	157
  5675     0093                     _ADCON0	set	147
  5676     0098                     _ADCLK	set	152
  5677     0099                     _ADACT	set	153
  5678     009A                     _ADREF	set	154
  5679     0097                     _ADSTAT	set	151
  5680     0096                     _ADCON3	set	150
  5681     0095                     _ADCON2	set	149
  5682     0094                     _ADCON1	set	148
  5683     009C                     _ADPRE	set	156
  5684     009B                     _ADCAP	set	155
  5685     009E                     _ADPCH	set	158
  5686     0116                     _ADERRL	set	278
  5687     0117                     _ADERRH	set	279
  5688     0114                     _ADFLTRL	set	276
  5689     0115                     _ADFLTRH	set	277
  5690     010C                     _ADCNT	set	268
  5691     010D                     _ADRPT	set	269
  5692     0113                     _ADSTPTH	set	275
  5693     0112                     _ADSTPTL	set	274
  5694     0111                     _ADUTHH	set	273
  5695     0110                     _ADUTHL	set	272
  5696     010F                     _ADLTHH	set	271
  5697     010E                     _ADLTHL	set	270
  5698     018C                     _SSP1BUF	set	396
  5699     018F                     _SSP1STATbits	set	399
  5700     0191                     _SSP1CON2bits	set	401
  5701     0190                     _SSP1CON1bits	set	400
  5702     018D                     _SSP1ADD	set	397
  5703     0191                     _SSP1CON2	set	401
  5704     0190                     _SSP1CON1	set	400
  5705     018F                     _SSP1STAT	set	399
  5706     020F                     _T1GCONbits	set	527
  5707     020E                     _T1CONbits	set	526
  5708     020E                     _T1CON	set	526
  5709     020C                     _TMR1L	set	524
  5710     020D                     _TMR1H	set	525
  5711     0211                     _T1CLK	set	529
  5712     0210                     _T1GATE	set	528
  5713     020F                     _T1GCON	set	527
  5714     071A                     _PIE4bits	set	1818
  5715     0710                     _PIR4bits	set	1808
  5716     0719                     _PIE3bits	set	1817
  5717     070F                     _PIR3bits	set	1807
  5718     079B                     _PMD5	set	1947
  5719     079A                     _PMD4	set	1946
  5720     0799                     _PMD3	set	1945
  5721     0798                     _PMD2	set	1944
  5722     0797                     _PMD1	set	1943
  5723     0796                     _PMD0	set	1942
  5724     0892                     _OSCTUNE	set	2194
  5725     0893                     _OSCFRQ	set	2195
  5726     0891                     _OSCEN	set	2193
  5727     088F                     _OSCCON3	set	2191
  5728     088D                     _OSCCON1	set	2189
  5729     0EC6                     _SSP1DATPPS	set	3782
  5730     0EC5                     _SSP1CLKPPS	set	3781
  5731     0F24                     _RC4PPS	set	3876
  5732     0F23                     _RC3PPS	set	3875
  5733     0F68                     _INLVLE	set	3944
  5734     0F5D                     _INLVLD	set	3933
  5735     0F52                     _INLVLC	set	3922
  5736     0F47                     _INLVLB	set	3911
  5737     0F3C                     _INLVLA	set	3900
  5738     0F67                     _SLRCONE	set	3943
  5739     0F5C                     _SLRCOND	set	3932
  5740     0F51                     _SLRCONC	set	3921
  5741     0F46                     _SLRCONB	set	3910
  5742     0F3B                     _SLRCONA	set	3899
  5743     0F5B                     _ODCOND	set	3931
  5744     0F50                     _ODCONC	set	3920
  5745     0F45                     _ODCONB	set	3909
  5746     0F3A                     _ODCONA	set	3898
  5747     0F66                     _ODCONE	set	3942
  5748     0F4F                     _WPUC	set	3919
  5749     0F39                     _WPUA	set	3897
  5750     0F44                     _WPUB	set	3908
  5751     0F65                     _WPUE	set	3941
  5752     0F5A                     _WPUD	set	3930
  5753     0F38                     _ANSELA	set	3896
  5754     0F64                     _ANSELE	set	3940
  5755     0F43                     _ANSELB	set	3907
  5756     0F4E                     _ANSELC	set	3918
  5757     0F59                     _ANSELD	set	3929
  5758                           
  5759                           	psect	stringtext2
  5760     1020                     __pstringtext2:
  5761     1020                     STR_1:
  5762     1020  3425               	retlw	37	;'%'
  5763     1021  3430               	retlw	48	;'0'
  5764     1022  3432               	retlw	50	;'2'
  5765     1023  3464               	retlw	100	;'d'
  5766     1024  343A               	retlw	58	;':'
  5767     1025  3425               	retlw	37	;'%'
  5768     1026  3430               	retlw	48	;'0'
  5769     1027  3432               	retlw	50	;'2'
  5770     1028  3464               	retlw	100	;'d'
  5771     1029  343A               	retlw	58	;':'
  5772     102A  3425               	retlw	37	;'%'
  5773     102B  3430               	retlw	48	;'0'
  5774     102C  3432               	retlw	50	;'2'
  5775     102D  3464               	retlw	100	;'d'
  5776     102E  3400               	retlw	0
  5777                           
  5778                           	psect	stringtext3
  5779     102F                     __pstringtext3:
  5780     102F                     STR_2:
  5781     102F  3425               	retlw	37	;'%'
  5782     1030  3430               	retlw	48	;'0'
  5783     1031  3432               	retlw	50	;'2'
  5784     1032  3464               	retlw	100	;'d'
  5785     1033  3420               	retlw	32	;' '
  5786     1034  3443               	retlw	67	;'C'
  5787     1035  3420               	retlw	32	;' '
  5788     1036  3400               	retlw	0
  5789                           
  5790                           	psect	stringtext4
  5791     1037                     __pstringtext4:
  5792     1037                     STR_3:
  5793     1037  344C               	retlw	76	;'L'
  5794     1038  3425               	retlw	37	;'%'
  5795     1039  3464               	retlw	100	;'d'
  5796     103A  3400               	retlw	0
  5797                           
  5798                           	psect	stringtext5
  5799     103B                     __pstringtext5:
  5800     103B                     STR_4:
  5801     103B  3441               	retlw	65	;'A'
  5802     103C  3400               	retlw	0
  5803                           
  5804                           	psect	stringtext6
  5805     103D                     __pstringtext6:
  5806     103D                     STR_5:
  5807     103D  3443               	retlw	67	;'C'
  5808     103E  3400               	retlw	0
  5809                           
  5810                           	psect	stringtext7
  5811     103F                     __pstringtext7:
  5812     103F                     STR_8:
  5813     103F  344C               	retlw	76	;'L'
  5814     1040  3400               	retlw	0
  5815                           
  5816                           	psect	stringtext8
  5817     1041                     __pstringtext8:
  5818     1041                     STR_6:
  5819     1041  3454               	retlw	84	;'T'
  5820     1042  3400               	retlw	0
  5821                           
  5822                           	psect	stringtext9
  5823     0000                     __pstringtext9:
  5824     1035                     
  5825                           	psect	cinit
  5826     001A                     start_initialization:	
  5827                           ; #config settings
  5828                           
  5829     001A                     __initialization:
  5830                           
  5831                           ; Clear objects allocated to COMMON
  5832     001A  01FA               	clrf	__pbssCOMMON& (0+127)
  5833     001B  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  5834                           
  5835                           ; Clear objects allocated to BANK0
  5836     001C  0020               	movlb	0	; select bank0
  5837     001D  01E7               	clrf	__pbssBANK0& (0+127)
  5838     001E  01E8               	clrf	(__pbssBANK0+1)& (0+127)
  5839     001F  01E9               	clrf	(__pbssBANK0+2)& (0+127)
  5840     0020  01EA               	clrf	(__pbssBANK0+3)& (0+127)
  5841     0021  01EB               	clrf	(__pbssBANK0+4)& (0+127)
  5842                           
  5843                           ; Clear objects allocated to BANK1
  5844     0022  30C8               	movlw	low __pbssBANK1
  5845     0023  0084               	movwf	4
  5846     0024  3000               	movlw	high __pbssBANK1
  5847     0025  0085               	movwf	5
  5848     0026  301E               	movlw	30
  5849     0027  318D  2515  3180   	fcall	clear_ram0
  5850                           
  5851                           ; Clear objects allocated to BANK2
  5852     002A  3020               	movlw	low __pbssBANK2
  5853     002B  0084               	movwf	4
  5854     002C  3001               	movlw	high __pbssBANK2
  5855     002D  0085               	movwf	5
  5856     002E  3020               	movlw	32
  5857     002F  318D  2515  3180   	fcall	clear_ram0
  5858     0032                     end_of_initialization:	
  5859                           ;End of C runtime variable initialization code
  5860                           
  5861     0032                     __end_of__initialization:
  5862     0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5863     0033  0020               	movlb	0
  5864     0034  3180  2836         	ljmp	_main	;jump to C main() function
  5865                           
  5866                           	psect	bssCOMMON
  5867     007A                     __pbssCOMMON:
  5868     007A                     _timer1ReloadVal:
  5869     007A                     	ds	2
  5870                           
  5871                           	psect	bssBANK0
  5872     0067                     __pbssBANK0:
  5873     0067                     _width:
  5874     0067                     	ds	2
  5875     0069                     _prec:
  5876     0069                     	ds	2
  5877     006B                     _flags:
  5878     006B                     	ds	1
  5879                           
  5880                           	psect	bssBANK1
  5881     00C8                     __pbssBANK1:
  5882     00C8                     _I2C1_Status:
  5883     00C8                     	ds	29
  5884     00E5                     _one_second:
  5885     00E5                     	ds	1
  5886                           
  5887                           	psect	bssBANK2
  5888     0120                     __pbssBANK2:
  5889     0120                     _dbuf:
  5890     0120                     	ds	32
  5891                           
  5892                           	psect	clrtext
  5893     0D15                     clear_ram0:	
  5894                           ;	Called with FSR0 containing the base address, and
  5895                           ;	WREG with the size to clear
  5896                           
  5897     0D15  0064               	clrwdt	;clear the watchdog before getting into this loop
  5898     0D16                     clrloop0:
  5899     0D16  0180               	clrf	0	;clear RAM location pointed to by FSR
  5900     0D17  3101               	addfsr 0,1
  5901     0D18  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5902     0D19  2D16               	goto	clrloop0	;have we reached the end yet?
  5903     0D1A  3400               	retlw	0	;all done for this memory range, return
  5904                           
  5905                           	psect	cstackBANK1
  5906     00A0                     __pcstackBANK1:
  5907     00A0                     main@time_buffer:
  5908                           
  5909                           ; 8 bytes @ 0x0
  5910     00A0                     	ds	8
  5911     00A8                     main@measure_buffer:
  5912                           
  5913                           ; 6 bytes @ 0x8
  5914     00A8                     	ds	6
  5915     00AE                     main@CLKM:
  5916                           
  5917                           ; 2 bytes @ 0xE
  5918     00AE                     	ds	2
  5919     00B0                     main@ALAF:
  5920                           
  5921                           ; 2 bytes @ 0x10
  5922     00B0                     	ds	2
  5923     00B2                     main@ALAH:
  5924                           
  5925                           ; 2 bytes @ 0x12
  5926     00B2                     	ds	2
  5927     00B4                     main@ALAM:
  5928                           
  5929                           ; 2 bytes @ 0x14
  5930     00B4                     	ds	2
  5931     00B6                     main@ALAS:
  5932                           
  5933                           ; 2 bytes @ 0x16
  5934     00B6                     	ds	2
  5935     00B8                     main@ALAT:
  5936                           
  5937                           ; 2 bytes @ 0x18
  5938     00B8                     	ds	2
  5939     00BA                     main@ALAL:
  5940                           
  5941                           ; 2 bytes @ 0x1A
  5942     00BA                     	ds	2
  5943     00BC                     main@count:
  5944                           
  5945                           ; 2 bytes @ 0x1C
  5946     00BC                     	ds	2
  5947     00BE                     main@PMON:
  5948                           
  5949                           ; 2 bytes @ 0x1E
  5950     00BE                     	ds	2
  5951     00C0                     main@temperature:
  5952                           
  5953                           ; 1 bytes @ 0x20
  5954     00C0                     	ds	1
  5955     00C1                     main@luminosity:
  5956                           
  5957                           ; 1 bytes @ 0x21
  5958     00C1                     	ds	1
  5959     00C2                     main@hours:
  5960                           
  5961                           ; 2 bytes @ 0x22
  5962     00C2                     	ds	2
  5963     00C4                     main@minutes:
  5964                           
  5965                           ; 2 bytes @ 0x24
  5966     00C4                     	ds	2
  5967     00C6                     main@seconds:
  5968                           
  5969                           ; 2 bytes @ 0x26
  5970     00C6                     	ds	2
  5971                           
  5972                           	psect	cstackCOMMON
  5973     0070                     __pcstackCOMMON:
  5974     0070                     ?_PMD_Initialize:
  5975     0070                     ?_I2C1_Initialize:	
  5976                           ; 1 bytes @ 0x0
  5977                           
  5978     0070                     ?_PIN_MANAGER_Initialize:	
  5979                           ; 1 bytes @ 0x0
  5980                           
  5981     0070                     ?_OSCILLATOR_Initialize:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984     0070                     ?_ADCC_Initialize:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987     0070                     ?_TMR1_Initialize:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990     0070                     ?_TMR1_DefaultInterruptHandler:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993     0070                     ??_TMR1_DefaultInterruptHandler:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996     0070                     ?_putch:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999     0070                     ?_OpenI2C:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002     0070                     ?_ReadI2C:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005     0070                     ?_WriteI2C:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008     0070                     ?_LCDsend:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011     0070                     ?_LCDrecv:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014     0070                     ?_LCDinit:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017     0070                     ?_LCDcmd:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020     0070                     ?_LCDchar:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023     0070                     ?_SYSTEM_Initialize:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026     0070                     ?_TMR1_WriteTimer:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029     0070                     ?_TMR1_ISR:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032     0070                     ?_INTERRUPT_InterruptManager:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035     0070                     ?_Timer1:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038     0070                     ??_Timer1:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041     0070                     ?_readTC74:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044     0070                     ?_main:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047     0070                     putch@c:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050     0070                     TMR1_WriteTimer@timerVal:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053                           
  6054                           ; 2 bytes @ 0x0
  6055     0070                     	ds	2
  6056     0072                     ??_PMD_Initialize:
  6057     0072                     ??_I2C1_Initialize:	
  6058                           ; 1 bytes @ 0x2
  6059                           
  6060     0072                     ??_PIN_MANAGER_Initialize:	
  6061                           ; 1 bytes @ 0x2
  6062                           
  6063     0072                     ??_OSCILLATOR_Initialize:	
  6064                           ; 1 bytes @ 0x2
  6065                           
  6066     0072                     ??_ADCC_Initialize:	
  6067                           ; 1 bytes @ 0x2
  6068                           
  6069     0072                     ?_TMR1_SetInterruptHandler:	
  6070                           ; 1 bytes @ 0x2
  6071                           
  6072     0072                     ??_putch:	
  6073                           ; 1 bytes @ 0x2
  6074                           
  6075     0072                     ??_OpenI2C:	
  6076                           ; 1 bytes @ 0x2
  6077                           
  6078     0072                     ??_ReadI2C:	
  6079                           ; 1 bytes @ 0x2
  6080                           
  6081     0072                     ??_WriteI2C:	
  6082                           ; 1 bytes @ 0x2
  6083                           
  6084     0072                     ??_TMR1_WriteTimer:	
  6085                           ; 1 bytes @ 0x2
  6086                           
  6087     0072                     ??_TMR1_ISR:	
  6088                           ; 1 bytes @ 0x2
  6089                           
  6090     0072                     ??_INTERRUPT_InterruptManager:	
  6091                           ; 1 bytes @ 0x2
  6092                           
  6093     0072                     ?_fputc:	
  6094                           ; 1 bytes @ 0x2
  6095                           
  6096     0072                     ?_ADCC_GetSingleConversion:	
  6097                           ; 2 bytes @ 0x2
  6098                           
  6099     0072                     ?___wmul:	
  6100                           ; 2 bytes @ 0x2
  6101                           
  6102     0072                     ?___awdiv:	
  6103                           ; 2 bytes @ 0x2
  6104                           
  6105     0072                     ?___awmod:	
  6106                           ; 2 bytes @ 0x2
  6107                           
  6108     0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  6109                           ; 2 bytes @ 0x2
  6110                           
  6111     0072                     ___wmul@multiplier:	
  6112                           ; 2 bytes @ 0x2
  6113                           
  6114     0072                     ___awdiv@divisor:	
  6115                           ; 2 bytes @ 0x2
  6116                           
  6117     0072                     ___awmod@divisor:	
  6118                           ; 2 bytes @ 0x2
  6119                           
  6120     0072                     fputc@c:	
  6121                           ; 2 bytes @ 0x2
  6122                           
  6123                           
  6124                           ; 2 bytes @ 0x2
  6125     0072                     	ds	1
  6126     0073                     WriteI2C@data_out:
  6127                           
  6128                           ; 1 bytes @ 0x3
  6129     0073                     	ds	1
  6130     0074                     ??_TMR1_Initialize:
  6131     0074                     ??_TMR1_SetInterruptHandler:	
  6132                           ; 1 bytes @ 0x4
  6133                           
  6134     0074                     ??_LCDsend:	
  6135                           ; 1 bytes @ 0x4
  6136                           
  6137     0074                     ??_LCDrecv:	
  6138                           ; 1 bytes @ 0x4
  6139                           
  6140     0074                     ?_LCDsend2x4:	
  6141                           ; 1 bytes @ 0x4
  6142                           
  6143     0074                     ??_SYSTEM_Initialize:	
  6144                           ; 1 bytes @ 0x4
  6145                           
  6146     0074                     ??_ADCC_GetSingleConversion:	
  6147                           ; 1 bytes @ 0x4
  6148                           
  6149     0074                     ??_readTC74:	
  6150                           ; 1 bytes @ 0x4
  6151                           
  6152     0074                     LCDsend2x4@mode:	
  6153                           ; 1 bytes @ 0x4
  6154                           
  6155     0074                     ADCC_GetSingleConversion@channel:	
  6156                           ; 1 bytes @ 0x4
  6157                           
  6158     0074                     fputc@fp:	
  6159                           ; 1 bytes @ 0x4
  6160                           
  6161     0074                     ___wmul@multiplicand:	
  6162                           ; 1 bytes @ 0x4
  6163                           
  6164     0074                     ___awdiv@dividend:	
  6165                           ; 2 bytes @ 0x4
  6166                           
  6167     0074                     ___awmod@dividend:	
  6168                           ; 2 bytes @ 0x4
  6169                           
  6170                           
  6171                           ; 2 bytes @ 0x4
  6172     0074                     	ds	1
  6173     0075                     ??_fputc:
  6174     0075                     ??_LCDsend2x4:	
  6175                           ; 1 bytes @ 0x5
  6176                           
  6177     0075                     LCDsend@c:	
  6178                           ; 1 bytes @ 0x5
  6179                           
  6180     0075                     readTC74@value:	
  6181                           ; 1 bytes @ 0x5
  6182                           
  6183                           
  6184                           ; 1 bytes @ 0x5
  6185     0075                     	ds	1
  6186     0076                     ??___wmul:
  6187     0076                     ??___awdiv:	
  6188                           ; 1 bytes @ 0x6
  6189                           
  6190     0076                     ??___awmod:	
  6191                           ; 1 bytes @ 0x6
  6192                           
  6193     0076                     LCDrecv@hc:	
  6194                           ; 1 bytes @ 0x6
  6195                           
  6196     0076                     LCDsend2x4@c:	
  6197                           ; 1 bytes @ 0x6
  6198                           
  6199     0076                     ___wmul@product:	
  6200                           ; 1 bytes @ 0x6
  6201                           
  6202                           
  6203                           ; 2 bytes @ 0x6
  6204     0076                     	ds	1
  6205     0077                     LCDrecv@lc:
  6206     0077                     LCDsend2x4@hc:	
  6207                           ; 1 bytes @ 0x7
  6208                           
  6209     0077                     ___awmod@counter:	
  6210                           ; 1 bytes @ 0x7
  6211                           
  6212                           
  6213                           ; 1 bytes @ 0x7
  6214     0077                     	ds	1
  6215     0078                     ?_read_prec_or_width:
  6216     0078                     LCDrecv@mode:	
  6217                           ; 2 bytes @ 0x8
  6218                           
  6219     0078                     LCDsend2x4@lc:	
  6220                           ; 1 bytes @ 0x8
  6221                           
  6222     0078                     ___awmod@sign:	
  6223                           ; 1 bytes @ 0x8
  6224                           
  6225     0078                     read_prec_or_width@ap:	
  6226                           ; 1 bytes @ 0x8
  6227                           
  6228                           
  6229                           ; 1 bytes @ 0x8
  6230     0078                     	ds	1
  6231     0079                     ??_LCDinit:
  6232     0079                     ??_LCDcmd:	
  6233                           ; 1 bytes @ 0x9
  6234                           
  6235     0079                     ??_LCDchar:	
  6236                           ; 1 bytes @ 0x9
  6237                           
  6238     0079                     ??_LCDbusy:	
  6239                           ; 1 bytes @ 0x9
  6240                           
  6241     0079                     LCDcmd@c:	
  6242                           ; 1 bytes @ 0x9
  6243                           
  6244     0079                     LCDchar@c:	
  6245                           ; 1 bytes @ 0x9
  6246                           
  6247                           
  6248                           ; 1 bytes @ 0x9
  6249     0079                     	ds	1
  6250     007A                     ??_LCDpos:
  6251                           
  6252                           	psect	cstackBANK0
  6253     0020                     __pcstackBANK0:	
  6254                           ; 1 bytes @ 0xA
  6255                           
  6256     0020                     ?_LCDstr:
  6257     0020                     ?_LCDpos:	
  6258                           ; 1 bytes @ 0x0
  6259                           
  6260     0020                     ??_read_prec_or_width:	
  6261                           ; 1 bytes @ 0x0
  6262                           
  6263     0020                     ?_fputs:	
  6264                           ; 1 bytes @ 0x0
  6265                           
  6266     0020                     ?_abs:	
  6267                           ; 2 bytes @ 0x0
  6268                           
  6269     0020                     ?_LCDbusy:	
  6270                           ; 2 bytes @ 0x0
  6271                           
  6272     0020                     LCDpos@c:	
  6273                           ; 2 bytes @ 0x0
  6274                           
  6275     0020                     ___awdiv@counter:	
  6276                           ; 1 bytes @ 0x0
  6277                           
  6278     0020                     fputs@fp:	
  6279                           ; 1 bytes @ 0x0
  6280                           
  6281     0020                     LCDstr@p:	
  6282                           ; 1 bytes @ 0x0
  6283                           
  6284     0020                     abs@a:	
  6285                           ; 2 bytes @ 0x0
  6286                           
  6287                           
  6288                           ; 2 bytes @ 0x0
  6289     0020                     	ds	1
  6290     0021                     ??_fputs:
  6291     0021                     LCDpos@l:	
  6292                           ; 1 bytes @ 0x1
  6293                           
  6294     0021                     ___awdiv@sign:	
  6295                           ; 1 bytes @ 0x1
  6296                           
  6297                           
  6298                           ; 1 bytes @ 0x1
  6299     0021                     	ds	1
  6300     0022                     ??_abs:
  6301     0022                     ??_LCDstr:	
  6302                           ; 1 bytes @ 0x2
  6303                           
  6304     0022                     LCDpos@p:	
  6305                           ; 1 bytes @ 0x2
  6306                           
  6307     0022                     ___awdiv@quotient:	
  6308                           ; 1 bytes @ 0x2
  6309                           
  6310                           
  6311                           ; 2 bytes @ 0x2
  6312     0022                     	ds	1
  6313     0023                     read_prec_or_width@c:
  6314     0023                     fputs@c:	
  6315                           ; 1 bytes @ 0x3
  6316                           
  6317                           
  6318                           ; 1 bytes @ 0x3
  6319     0023                     	ds	1
  6320     0024                     LCDstr@c:
  6321     0024                     read_prec_or_width@n:	
  6322                           ; 1 bytes @ 0x4
  6323                           
  6324     0024                     fputs@i:	
  6325                           ; 2 bytes @ 0x4
  6326                           
  6327                           
  6328                           ; 2 bytes @ 0x4
  6329     0024                     	ds	2
  6330     0026                     read_prec_or_width@fmt:
  6331     0026                     fputs@s:	
  6332                           ; 1 bytes @ 0x6
  6333                           
  6334                           
  6335                           ; 1 bytes @ 0x6
  6336     0026                     	ds	1
  6337     0027                     ?_pad:
  6338     0027                     pad@buf:	
  6339                           ; 1 bytes @ 0x7
  6340                           
  6341                           
  6342                           ; 1 bytes @ 0x7
  6343     0027                     	ds	1
  6344     0028                     pad@p:
  6345                           
  6346                           ; 2 bytes @ 0x8
  6347     0028                     	ds	2
  6348     002A                     ??_pad:
  6349                           
  6350                           ; 1 bytes @ 0xA
  6351     002A                     	ds	1
  6352     002B                     pad@i:
  6353                           
  6354                           ; 2 bytes @ 0xB
  6355     002B                     	ds	2
  6356     002D                     pad@fp:
  6357                           
  6358                           ; 1 bytes @ 0xD
  6359     002D                     	ds	1
  6360     002E                     ?_dtoa:
  6361     002E                     dtoa@d:	
  6362                           ; 1 bytes @ 0xE
  6363                           
  6364                           
  6365                           ; 2 bytes @ 0xE
  6366     002E                     	ds	2
  6367     0030                     ??_dtoa:
  6368                           
  6369                           ; 1 bytes @ 0x10
  6370     0030                     	ds	1
  6371     0031                     dtoa@fp:
  6372                           
  6373                           ; 1 bytes @ 0x11
  6374     0031                     	ds	1
  6375     0032                     _dtoa$2651:
  6376                           
  6377                           ; 2 bytes @ 0x12
  6378     0032                     	ds	2
  6379     0034                     dtoa@p:
  6380                           
  6381                           ; 1 bytes @ 0x14
  6382     0034                     	ds	1
  6383     0035                     dtoa@w:
  6384                           
  6385                           ; 2 bytes @ 0x15
  6386     0035                     	ds	2
  6387     0037                     dtoa@s:
  6388                           
  6389                           ; 1 bytes @ 0x17
  6390     0037                     	ds	1
  6391     0038                     dtoa@i:
  6392                           
  6393                           ; 2 bytes @ 0x18
  6394     0038                     	ds	2
  6395     003A                     ?_vfpfcnvrt:
  6396     003A                     vfpfcnvrt@fmt:	
  6397                           ; 1 bytes @ 0x1A
  6398                           
  6399                           
  6400                           ; 1 bytes @ 0x1A
  6401     003A                     	ds	1
  6402     003B                     vfpfcnvrt@ap:
  6403                           
  6404                           ; 1 bytes @ 0x1B
  6405     003B                     	ds	1
  6406     003C                     ??_vfpfcnvrt:
  6407                           
  6408                           ; 1 bytes @ 0x1C
  6409     003C                     	ds	4
  6410     0040                     vfpfcnvrt@convarg:
  6411                           
  6412                           ; 4 bytes @ 0x20
  6413     0040                     	ds	4
  6414     0044                     vfpfcnvrt@done:
  6415                           
  6416                           ; 1 bytes @ 0x24
  6417     0044                     	ds	1
  6418     0045                     vfpfcnvrt@fp:
  6419                           
  6420                           ; 1 bytes @ 0x25
  6421     0045                     	ds	1
  6422     0046                     vfpfcnvrt@cp:
  6423                           
  6424                           ; 2 bytes @ 0x26
  6425     0046                     	ds	2
  6426     0048                     ?_vfprintf:
  6427     0048                     vfprintf@fmt:	
  6428                           ; 2 bytes @ 0x28
  6429                           
  6430                           
  6431                           ; 2 bytes @ 0x28
  6432     0048                     	ds	2
  6433     004A                     vfprintf@ap:
  6434                           
  6435                           ; 1 bytes @ 0x2A
  6436     004A                     	ds	1
  6437     004B                     ??_vfprintf:
  6438                           
  6439                           ; 1 bytes @ 0x2B
  6440     004B                     	ds	1
  6441     004C                     vfprintf@fp:
  6442                           
  6443                           ; 1 bytes @ 0x2C
  6444     004C                     	ds	1
  6445     004D                     vfprintf@cfmt:
  6446                           
  6447                           ; 2 bytes @ 0x2D
  6448     004D                     	ds	2
  6449     004F                     ?_sprintf:
  6450     004F                     sprintf@fmt:	
  6451                           ; 2 bytes @ 0x2F
  6452                           
  6453                           
  6454                           ; 2 bytes @ 0x2F
  6455     004F                     	ds	8
  6456     0057                     ??_sprintf:
  6457                           
  6458                           ; 1 bytes @ 0x37
  6459     0057                     	ds	1
  6460     0058                     sprintf@ap:
  6461                           
  6462                           ; 1 bytes @ 0x38
  6463     0058                     	ds	1
  6464     0059                     sprintf@s:
  6465                           
  6466                           ; 1 bytes @ 0x39
  6467     0059                     	ds	1
  6468     005A                     sprintf@f:
  6469                           
  6470                           ; 11 bytes @ 0x3A
  6471     005A                     	ds	11
  6472     0065                     ??_main:
  6473                           
  6474                           ; 1 bytes @ 0x45
  6475     0065                     	ds	2
  6476                           
  6477                           	psect	maintext
  6478     0036                     __pmaintext:	
  6479 ;;
  6480 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6481 ;;
  6482 ;; *************** function _main *****************
  6483 ;; Defined at:
  6484 ;;		line 95 in file "main.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  time_buffer     8    0[BANK1 ] unsigned char [8]
  6489 ;;  measure_buff    6    8[BANK1 ] unsigned char [6]
  6490 ;;  seconds         2   38[BANK1 ] int 
  6491 ;;  minutes         2   36[BANK1 ] int 
  6492 ;;  hours           2   34[BANK1 ] int 
  6493 ;;  PMON            2   30[BANK1 ] int 
  6494 ;;  count           2   28[BANK1 ] int 
  6495 ;;  ALAL            2   26[BANK1 ] int 
  6496 ;;  ALAT            2   24[BANK1 ] int 
  6497 ;;  ALAS            2   22[BANK1 ] int 
  6498 ;;  ALAM            2   20[BANK1 ] int 
  6499 ;;  ALAH            2   18[BANK1 ] int 
  6500 ;;  ALAF            2   16[BANK1 ] int 
  6501 ;;  CLKM            2   14[BANK1 ] int 
  6502 ;;  CLKH            2    0        int 
  6503 ;;  TALA            2    0        int 
  6504 ;;  luminosity      1   33[BANK1 ] unsigned char 
  6505 ;;  temperature     1   32[BANK1 ] unsigned char 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : B1F/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;      Locals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Totals:         0       2      40       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;Total ram usage:       42 bytes
  6520 ;; Hardware stack levels required when called: 11
  6521 ;; This function calls:
  6522 ;;		_ADCC_GetSingleConversion
  6523 ;;		_LCDbusy
  6524 ;;		_LCDcmd
  6525 ;;		_LCDinit
  6526 ;;		_LCDpos
  6527 ;;		_LCDstr
  6528 ;;		_OpenI2C
  6529 ;;		_SYSTEM_Initialize
  6530 ;;		_TMR1_SetInterruptHandler
  6531 ;;		_readTC74
  6532 ;;		_sprintf
  6533 ;; This function is called by:
  6534 ;;		Startup code after reset
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538     0036                     _main:	
  6539                           ;psect for function _main
  6540                           
  6541     0036                     l5013:	
  6542                           ;incstack = 0
  6543                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6544                           
  6545     0036  0021               	movlb	1	; select bank1
  6546     0037  01AE               	clrf	main@CLKM^(0+128)
  6547     0038  01AF               	clrf	(main@CLKM+1)^(0+128)
  6548     0039                     l5015:
  6549                           
  6550                           ;main.c: 105:     int hours = CLKH, minutes = CLKM, seconds = 0;
  6551     0039  01C2               	clrf	main@hours^(0+128)
  6552     003A  01C3               	clrf	(main@hours+1)^(0+128)
  6553     003B                     l5017:
  6554     003B  01C4               	clrf	main@minutes^(0+128)
  6555     003C  01C5               	clrf	(main@minutes+1)^(0+128)
  6556     003D  01C6               	clrf	main@seconds^(0+128)
  6557     003E  01C7               	clrf	(main@seconds+1)^(0+128)
  6558     003F                     l5019:
  6559                           
  6560                           ;main.c: 108:     int PMON = 3;
  6561     003F  3003               	movlw	3
  6562     0040  00BE               	movwf	main@PMON^(0+128)
  6563     0041  3000               	movlw	0
  6564     0042  00BF               	movwf	(main@PMON^(0+128)+1)
  6565     0043                     l5021:
  6566                           
  6567                           ;main.c: 109:     int count = PMON-1;
  6568     0043  3002               	movlw	2
  6569     0044  00BC               	movwf	main@count^(0+128)
  6570     0045  3000               	movlw	0
  6571     0046  00BD               	movwf	(main@count^(0+128)+1)
  6572     0047                     l5023:
  6573                           
  6574                           ;main.c: 112:     int ALAF = 1;
  6575     0047  3001               	movlw	1
  6576     0048  00B0               	movwf	main@ALAF^(0+128)
  6577     0049  3000               	movlw	0
  6578     004A  00B1               	movwf	(main@ALAF^(0+128)+1)
  6579     004B                     l5025:
  6580                           
  6581                           ;main.c: 113:     int ALAH = -1, ALAM = -1, ALAS = -1;
  6582     004B  30FF               	movlw	255
  6583     004C  00B2               	movwf	main@ALAH^(0+128)
  6584     004D  30FF               	movlw	255
  6585     004E  00B3               	movwf	(main@ALAH^(0+128)+1)
  6586     004F                     l5027:
  6587     004F  30FF               	movlw	255
  6588     0050  00B4               	movwf	main@ALAM^(0+128)
  6589     0051  30FF               	movlw	255
  6590     0052  00B5               	movwf	(main@ALAM^(0+128)+1)
  6591     0053                     l5029:
  6592     0053  30FF               	movlw	255
  6593     0054  00B6               	movwf	main@ALAS^(0+128)
  6594     0055  30FF               	movlw	255
  6595     0056  00B7               	movwf	(main@ALAS^(0+128)+1)
  6596     0057                     l5031:
  6597                           
  6598                           ;main.c: 114:     int ALAT = 20, ALAL = 2;
  6599     0057  3014               	movlw	20
  6600     0058  00B8               	movwf	main@ALAT^(0+128)
  6601     0059  3000               	movlw	0
  6602     005A  00B9               	movwf	(main@ALAT^(0+128)+1)
  6603     005B                     l5033:
  6604     005B  3002               	movlw	2
  6605     005C  00BA               	movwf	main@ALAL^(0+128)
  6606     005D  3000               	movlw	0
  6607     005E  00BB               	movwf	(main@ALAL^(0+128)+1)
  6608     005F                     l5035:
  6609     005F                     l5037:
  6610                           
  6611                           ;main.c: 119:     SYSTEM_Initialize();
  6612     005F  318D  259A  3180   	fcall	_SYSTEM_Initialize
  6613     0062                     l5039:
  6614                           
  6615                           ;main.c: 121:     (INTCONbits.GIE = 1);
  6616     0062  178B               	bsf	11,7	;volatile
  6617     0063                     l5041:
  6618                           
  6619                           ;main.c: 123:     (INTCONbits.PEIE = 1);
  6620     0063  170B               	bsf	11,6	;volatile
  6621     0064                     l5043:
  6622                           
  6623                           ;main.c: 125:     TMR1_SetInterruptHandler(Timer1);
  6624     0064  300B               	movlw	low _Timer1
  6625     0065  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6626     0066  300D               	movlw	high _Timer1
  6627     0067  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6628     0068  318D  250F  3180   	fcall	_TMR1_SetInterruptHandler
  6629     006B                     l5045:
  6630                           
  6631                           ;main.c: 127:     OpenI2C();
  6632     006B  318D  2545  3180   	fcall	_OpenI2C
  6633     006E                     l5047:
  6634                           
  6635                           ;main.c: 133:     LCDinit();
  6636     006E  3186  2652  3180   	fcall	_LCDinit
  6637     0071                     l5049:
  6638                           
  6639                           ;main.c: 136:     {;main.c: 138:         if(one_second){
  6640     0071  0021               	movlb	1	; select bank1
  6641     0072  0865               	movf	_one_second^(0+128),w	;volatile
  6642     0073  1903               	btfsc	3,2
  6643     0074  2876               	goto	u4021
  6644     0075  2877               	goto	u4020
  6645     0076                     u4021:
  6646     0076  2871               	goto	l5049
  6647     0077                     u4020:
  6648     0077                     l5051:
  6649                           
  6650                           ;main.c: 140:             LCDcmd(0x80);
  6651     0077  3080               	movlw	128
  6652     0078  318D  251B  3180   	fcall	_LCDcmd
  6653     007B                     l5053:
  6654                           
  6655                           ;main.c: 142:             sprintf(time_buffer, "%02d:%02d:%02d", hours, minutes, seconds
      +                          );
  6656     007B  3020               	movlw	low (STR_1| (0+32768))
  6657     007C  0020               	movlb	0	; select bank0
  6658     007D  00CF               	movwf	sprintf@fmt
  6659     007E  3090               	movlw	high (STR_1| (0+32768))
  6660     007F  00D0               	movwf	sprintf@fmt+1
  6661     0080  0021               	movlb	1	; select bank1
  6662     0081  0843               	movf	(main@hours+1)^(0+128),w
  6663     0082  0020               	movlb	0	; select bank0
  6664     0083  00D2               	movwf	?_sprintf+3
  6665     0084  0021               	movlb	1	; select bank1
  6666     0085  0842               	movf	main@hours^(0+128),w
  6667     0086  0020               	movlb	0	; select bank0
  6668     0087  00D1               	movwf	?_sprintf+2
  6669     0088  0021               	movlb	1	; select bank1
  6670     0089  0845               	movf	(main@minutes+1)^(0+128),w
  6671     008A  0020               	movlb	0	; select bank0
  6672     008B  00D4               	movwf	?_sprintf+5
  6673     008C  0021               	movlb	1	; select bank1
  6674     008D  0844               	movf	main@minutes^(0+128),w
  6675     008E  0020               	movlb	0	; select bank0
  6676     008F  00D3               	movwf	?_sprintf+4
  6677     0090  0021               	movlb	1	; select bank1
  6678     0091  0847               	movf	(main@seconds+1)^(0+128),w
  6679     0092  0020               	movlb	0	; select bank0
  6680     0093  00D6               	movwf	?_sprintf+7
  6681     0094  0021               	movlb	1	; select bank1
  6682     0095  0846               	movf	main@seconds^(0+128),w
  6683     0096  0020               	movlb	0	; select bank0
  6684     0097  00D5               	movwf	?_sprintf+6
  6685     0098  30A0               	movlw	(low (main@time_buffer| 0))& (0+255)
  6686     0099  318E  265B  3180   	fcall	_sprintf
  6687     009C                     l5055:
  6688                           
  6689                           ;main.c: 144:             LCDstr(time_buffer);
  6690     009C  30A0               	movlw	low main@time_buffer
  6691     009D  0020               	movlb	0	; select bank0
  6692     009E  00A0               	movwf	LCDstr@p
  6693     009F  3000               	movlw	high main@time_buffer
  6694     00A0  00A1               	movwf	LCDstr@p+1
  6695     00A1  318D  25EF  3180   	fcall	_LCDstr
  6696     00A4                     l5057:
  6697                           
  6698                           ;main.c: 146:             count++;
  6699     00A4  3001               	movlw	1
  6700     00A5  0021               	movlb	1	; select bank1
  6701     00A6  07BC               	addwf	main@count^(0+128),f
  6702     00A7  3000               	movlw	0
  6703     00A8  3DBD               	addwfc	(main@count+1)^(0+128),f
  6704     00A9                     l5059:
  6705                           
  6706                           ;main.c: 148:             if(count == PMON){
  6707     00A9  083F               	movf	(main@PMON+1)^(0+128),w
  6708     00AA  063D               	xorwf	(main@count+1)^(0+128),w
  6709     00AB  1D03               	skipz
  6710     00AC  28AF               	goto	u4035
  6711     00AD  083E               	movf	main@PMON^(0+128),w
  6712     00AE  063C               	xorwf	main@count^(0+128),w
  6713     00AF                     u4035:
  6714     00AF  1D03               	skipz
  6715     00B0  28B2               	goto	u4031
  6716     00B1  28B3               	goto	u4030
  6717     00B2                     u4031:
  6718     00B2  2913               	goto	l5083
  6719     00B3                     u4030:
  6720     00B3                     l5061:
  6721                           
  6722                           ;main.c: 150:                 temperature = readTC74();
  6723     00B3  3183  2323  3180   	fcall	_readTC74
  6724     00B6  0021               	movlb	1	; select bank1
  6725     00B7  00C0               	movwf	main@temperature^(0+128)
  6726     00B8                     l5063:
  6727                           
  6728                           ;main.c: 151:                 luminosity = ADCC_GetSingleConversion(0x0) >> 8;
  6729     00B8  3000               	movlw	0
  6730     00B9  318D  2563  3180   	fcall	_ADCC_GetSingleConversion
  6731     00BC  0873               	movf	?_ADCC_GetSingleConversion+1,w
  6732     00BD  0021               	movlb	1	; select bank1
  6733     00BE  00C1               	movwf	main@luminosity^(0+128)
  6734     00BF                     l5065:
  6735                           
  6736                           ;main.c: 154:                 LCDcmd(0xc0);
  6737     00BF  30C0               	movlw	192
  6738     00C0  318D  251B  3180   	fcall	_LCDcmd
  6739     00C3                     l5067:
  6740                           
  6741                           ;main.c: 155:                 sprintf(measure_buffer, "%02d C ", temperature);
  6742     00C3  302F               	movlw	low (STR_2| (0+32768))
  6743     00C4  0020               	movlb	0	; select bank0
  6744     00C5  00CF               	movwf	sprintf@fmt
  6745     00C6  3090               	movlw	high (STR_2| (0+32768))
  6746     00C7  00D0               	movwf	sprintf@fmt+1
  6747     00C8  0021               	movlb	1	; select bank1
  6748     00C9  0840               	movf	main@temperature^(0+128),w
  6749     00CA  0020               	movlb	0	; select bank0
  6750     00CB  00E5               	movwf	??_main
  6751     00CC  01E6               	clrf	??_main+1
  6752     00CD  0865               	movf	??_main,w
  6753     00CE  00D1               	movwf	?_sprintf+2
  6754     00CF  0866               	movf	??_main+1,w
  6755     00D0  00D2               	movwf	?_sprintf+3
  6756     00D1  30A8               	movlw	(low (main@measure_buffer| 0))& (0+255)
  6757     00D2  318E  265B  3180   	fcall	_sprintf
  6758     00D5                     l5069:	
  6759                           ;main.c: 156:                 while (LCDbusy());
  6760                           
  6761     00D5  318D  2587  3180   	fcall	_LCDbusy
  6762     00D8  0020               	movlb	0	; select bank0
  6763     00D9  0820               	movf	?_LCDbusy,w
  6764     00DA  0421               	iorwf	?_LCDbusy+1,w
  6765     00DB  1D03               	btfss	3,2
  6766     00DC  28DE               	goto	u4041
  6767     00DD  28DF               	goto	u4040
  6768     00DE                     u4041:
  6769     00DE  28D5               	goto	l5069
  6770     00DF                     u4040:
  6771     00DF                     l5071:
  6772                           
  6773                           ;main.c: 157:                 LCDstr(measure_buffer);
  6774     00DF  30A8               	movlw	low main@measure_buffer
  6775     00E0  00A0               	movwf	LCDstr@p
  6776     00E1  3000               	movlw	high main@measure_buffer
  6777     00E2  00A1               	movwf	LCDstr@p+1
  6778     00E3  318D  25EF  3180   	fcall	_LCDstr
  6779     00E6                     l5073:
  6780                           
  6781                           ;main.c: 160:                 LCDpos(1,14);
  6782     00E6  300E               	movlw	14
  6783     00E7  0020               	movlb	0	; select bank0
  6784     00E8  00A0               	movwf	LCDpos@c
  6785     00E9  3001               	movlw	1
  6786     00EA  318D  25AD  3180   	fcall	_LCDpos
  6787     00ED                     l5075:
  6788                           
  6789                           ;main.c: 161:                 sprintf(measure_buffer, "L%d", luminosity);
  6790     00ED  3037               	movlw	low (STR_3| (0+32768))
  6791     00EE  0020               	movlb	0	; select bank0
  6792     00EF  00CF               	movwf	sprintf@fmt
  6793     00F0  3090               	movlw	high (STR_3| (0+32768))
  6794     00F1  00D0               	movwf	sprintf@fmt+1
  6795     00F2  0021               	movlb	1	; select bank1
  6796     00F3  0841               	movf	main@luminosity^(0+128),w
  6797     00F4  0020               	movlb	0	; select bank0
  6798     00F5  00E5               	movwf	??_main
  6799     00F6  01E6               	clrf	??_main+1
  6800     00F7  0865               	movf	??_main,w
  6801     00F8  00D1               	movwf	?_sprintf+2
  6802     00F9  0866               	movf	??_main+1,w
  6803     00FA  00D2               	movwf	?_sprintf+3
  6804     00FB  30A8               	movlw	(low (main@measure_buffer| 0))& (0+255)
  6805     00FC  318E  265B  3180   	fcall	_sprintf
  6806     00FF                     l5077:	
  6807                           ;main.c: 162:                 while (LCDbusy());
  6808                           
  6809     00FF  318D  2587  3180   	fcall	_LCDbusy
  6810     0102  0020               	movlb	0	; select bank0
  6811     0103  0820               	movf	?_LCDbusy,w
  6812     0104  0421               	iorwf	?_LCDbusy+1,w
  6813     0105  1D03               	btfss	3,2
  6814     0106  2908               	goto	u4051
  6815     0107  2909               	goto	u4050
  6816     0108                     u4051:
  6817     0108  28FF               	goto	l5077
  6818     0109                     u4050:
  6819     0109                     l5079:
  6820                           
  6821                           ;main.c: 163:                 LCDstr(measure_buffer);
  6822     0109  30A8               	movlw	low main@measure_buffer
  6823     010A  00A0               	movwf	LCDstr@p
  6824     010B  3000               	movlw	high main@measure_buffer
  6825     010C  00A1               	movwf	LCDstr@p+1
  6826     010D  318D  25EF  3180   	fcall	_LCDstr
  6827     0110                     l5081:
  6828                           
  6829                           ;main.c: 166:                 count = 0;
  6830     0110  0021               	movlb	1	; select bank1
  6831     0111  01BC               	clrf	main@count^(0+128)
  6832     0112  01BD               	clrf	(main@count+1)^(0+128)
  6833     0113                     l5083:
  6834                           
  6835                           ;main.c: 169:             if(ALAF) {
  6836     0113  0830               	movf	main@ALAF^(0+128),w
  6837     0114  0431               	iorwf	(main@ALAF+1)^(0+128),w
  6838     0115  1903               	btfsc	3,2
  6839     0116  2918               	goto	u4061
  6840     0117  2919               	goto	u4060
  6841     0118                     u4061:
  6842     0118  29A6               	goto	l5115
  6843     0119                     u4060:
  6844     0119                     l5085:
  6845                           
  6846                           ;main.c: 171:                 LCDpos(0,15);
  6847     0119  300F               	movlw	15
  6848     011A  0020               	movlb	0	; select bank0
  6849     011B  00A0               	movwf	LCDpos@c
  6850     011C  3000               	movlw	0
  6851     011D  318D  25AD  3180   	fcall	_LCDpos
  6852     0120                     l5087:
  6853                           
  6854                           ;main.c: 172:                 LCDstr("A");
  6855     0120  303B               	movlw	low (STR_4| (0+32768))
  6856     0121  0020               	movlb	0	; select bank0
  6857     0122  00A0               	movwf	LCDstr@p
  6858     0123  3090               	movlw	high (STR_4| (0+32768))
  6859     0124  00A1               	movwf	LCDstr@p+1
  6860     0125  318D  25EF  3180   	fcall	_LCDstr
  6861     0128                     l5089:
  6862                           
  6863                           ;main.c: 174:                 LCDpos(0,11);
  6864     0128  300B               	movlw	11
  6865     0129  0020               	movlb	0	; select bank0
  6866     012A  00A0               	movwf	LCDpos@c
  6867     012B  3000               	movlw	0
  6868     012C  318D  25AD  3180   	fcall	_LCDpos
  6869     012F                     l5091:
  6870                           
  6871                           ;main.c: 175:                 if(hours == ALAH && minutes == ALAM && seconds == ALAS)
  6872     012F  0021               	movlb	1	; select bank1
  6873     0130  0833               	movf	(main@ALAH+1)^(0+128),w
  6874     0131  0643               	xorwf	(main@hours+1)^(0+128),w
  6875     0132  1D03               	skipz
  6876     0133  2936               	goto	u4075
  6877     0134  0832               	movf	main@ALAH^(0+128),w
  6878     0135  0642               	xorwf	main@hours^(0+128),w
  6879     0136                     u4075:
  6880     0136  1D03               	skipz
  6881     0137  2939               	goto	u4071
  6882     0138  293A               	goto	u4070
  6883     0139                     u4071:
  6884     0139  2956               	goto	l5099
  6885     013A                     u4070:
  6886     013A                     l5093:
  6887     013A  0835               	movf	(main@ALAM+1)^(0+128),w
  6888     013B  0645               	xorwf	(main@minutes+1)^(0+128),w
  6889     013C  1D03               	skipz
  6890     013D  2940               	goto	u4085
  6891     013E  0834               	movf	main@ALAM^(0+128),w
  6892     013F  0644               	xorwf	main@minutes^(0+128),w
  6893     0140                     u4085:
  6894     0140  1D03               	skipz
  6895     0141  2943               	goto	u4081
  6896     0142  2944               	goto	u4080
  6897     0143                     u4081:
  6898     0143  2956               	goto	l5099
  6899     0144                     u4080:
  6900     0144                     l5095:
  6901     0144  0837               	movf	(main@ALAS+1)^(0+128),w
  6902     0145  0647               	xorwf	(main@seconds+1)^(0+128),w
  6903     0146  1D03               	skipz
  6904     0147  294A               	goto	u4095
  6905     0148  0836               	movf	main@ALAS^(0+128),w
  6906     0149  0646               	xorwf	main@seconds^(0+128),w
  6907     014A                     u4095:
  6908     014A  1D03               	skipz
  6909     014B  294D               	goto	u4091
  6910     014C  294E               	goto	u4090
  6911     014D                     u4091:
  6912     014D  2956               	goto	l5099
  6913     014E                     u4090:
  6914     014E                     l5097:
  6915                           
  6916                           ;main.c: 176:                     LCDstr("C");
  6917     014E  303D               	movlw	low (STR_5| (0+32768))
  6918     014F  0020               	movlb	0	; select bank0
  6919     0150  00A0               	movwf	LCDstr@p
  6920     0151  3090               	movlw	high (STR_5| (0+32768))
  6921     0152  00A1               	movwf	LCDstr@p+1
  6922     0153  318D  25EF  3180   	fcall	_LCDstr
  6923     0156                     l5099:
  6924                           
  6925                           ;main.c: 178:                 LCDpos(0,12);
  6926     0156  300C               	movlw	12
  6927     0157  0020               	movlb	0	; select bank0
  6928     0158  00A0               	movwf	LCDpos@c
  6929     0159  3000               	movlw	0
  6930     015A  318D  25AD  3180   	fcall	_LCDpos
  6931     015D                     l5101:
  6932                           
  6933                           ;main.c: 179:                 if(temperature > ALAT)
  6934     015D  0021               	movlb	1	; select bank1
  6935     015E  0839               	movf	(main@ALAT+1)^(0+128),w
  6936     015F  3A80               	xorlw	128
  6937     0160  0020               	movlb	0	; select bank0
  6938     0161  00E5               	movwf	??_main
  6939     0162  3080               	movlw	128
  6940     0163  0265               	subwf	??_main,w
  6941     0164  1D03               	skipz
  6942     0165  2969               	goto	u4105
  6943     0166  0021               	movlb	1	; select bank1
  6944     0167  0840               	movf	main@temperature^(0+128),w
  6945     0168  0238               	subwf	main@ALAT^(0+128),w
  6946     0169                     u4105:
  6947     0169  1803               	skipnc
  6948     016A  296C               	goto	u4101
  6949     016B  296D               	goto	u4100
  6950     016C                     u4101:
  6951     016C  2976               	goto	l5105
  6952     016D                     u4100:
  6953     016D                     l5103:
  6954                           
  6955                           ;main.c: 180:                     LCDstr("T");
  6956     016D  3041               	movlw	low (STR_6| (0+32768))
  6957     016E  0020               	movlb	0	; select bank0
  6958     016F  00A0               	movwf	LCDstr@p
  6959     0170  3090               	movlw	high (STR_6| (0+32768))
  6960     0171  00A1               	movwf	LCDstr@p+1
  6961     0172  318D  25EF  3180   	fcall	_LCDstr
  6962     0175  297E               	goto	l5107
  6963     0176                     l5105:
  6964                           
  6965                           ;main.c: 182:                     LCDstr(" ");
  6966     0176  3035               	movlw	low ((STR_2+6)| (0+32768))
  6967     0177  0020               	movlb	0	; select bank0
  6968     0178  00A0               	movwf	LCDstr@p
  6969     0179  3090               	movlw	high ((STR_2+6)| (0+32768))
  6970     017A  00A1               	movwf	LCDstr@p+1
  6971     017B  318D  25EF  3180   	fcall	_LCDstr
  6972     017E                     l5107:
  6973                           
  6974                           ;main.c: 184:                 LCDpos(0,13);
  6975     017E  300D               	movlw	13
  6976     017F  0020               	movlb	0	; select bank0
  6977     0180  00A0               	movwf	LCDpos@c
  6978     0181  3000               	movlw	0
  6979     0182  318D  25AD  3180   	fcall	_LCDpos
  6980     0185                     l5109:
  6981                           
  6982                           ;main.c: 185:                 if(luminosity > ALAL)
  6983     0185  0021               	movlb	1	; select bank1
  6984     0186  083B               	movf	(main@ALAL+1)^(0+128),w
  6985     0187  3A80               	xorlw	128
  6986     0188  0020               	movlb	0	; select bank0
  6987     0189  00E5               	movwf	??_main
  6988     018A  3080               	movlw	128
  6989     018B  0265               	subwf	??_main,w
  6990     018C  1D03               	skipz
  6991     018D  2991               	goto	u4115
  6992     018E  0021               	movlb	1	; select bank1
  6993     018F  0841               	movf	main@luminosity^(0+128),w
  6994     0190  023A               	subwf	main@ALAL^(0+128),w
  6995     0191                     u4115:
  6996     0191  1803               	skipnc
  6997     0192  2994               	goto	u4111
  6998     0193  2995               	goto	u4110
  6999     0194                     u4111:
  7000     0194  299E               	goto	l5113
  7001     0195                     u4110:
  7002     0195                     l5111:
  7003                           
  7004                           ;main.c: 186:                     LCDstr("L");
  7005     0195  303F               	movlw	low (STR_8| (0+32768))
  7006     0196  0020               	movlb	0	; select bank0
  7007     0197  00A0               	movwf	LCDstr@p
  7008     0198  3090               	movlw	high (STR_8| (0+32768))
  7009     0199  00A1               	movwf	LCDstr@p+1
  7010     019A  318D  25EF  3180   	fcall	_LCDstr
  7011     019D  29A6               	goto	l5115
  7012     019E                     l5113:
  7013                           
  7014                           ;main.c: 188:                     LCDstr(" ");
  7015     019E  3035               	movlw	low ((STR_2+6)| (0+32768))
  7016     019F  0020               	movlb	0	; select bank0
  7017     01A0  00A0               	movwf	LCDstr@p
  7018     01A1  3090               	movlw	high ((STR_2+6)| (0+32768))
  7019     01A2  00A1               	movwf	LCDstr@p+1
  7020     01A3  318D  25EF  3180   	fcall	_LCDstr
  7021     01A6                     l5115:
  7022                           
  7023                           ;main.c: 191:             if(seconds < 59)
  7024     01A6  0021               	movlb	1	; select bank1
  7025     01A7  0847               	movf	(main@seconds+1)^(0+128),w
  7026     01A8  3A80               	xorlw	128
  7027     01A9  0020               	movlb	0	; select bank0
  7028     01AA  00E5               	movwf	??_main
  7029     01AB  3080               	movlw	128
  7030     01AC  0265               	subwf	??_main,w
  7031     01AD  1D03               	skipz
  7032     01AE  29B2               	goto	u4125
  7033     01AF  303B               	movlw	59
  7034     01B0  0021               	movlb	1	; select bank1
  7035     01B1  0246               	subwf	main@seconds^(0+128),w
  7036     01B2                     u4125:
  7037     01B2  1803               	skipnc
  7038     01B3  29B5               	goto	u4121
  7039     01B4  29B6               	goto	u4120
  7040     01B5                     u4121:
  7041     01B5  29BC               	goto	l5119
  7042     01B6                     u4120:
  7043     01B6                     l5117:
  7044                           
  7045                           ;main.c: 192:                 seconds++;
  7046     01B6  3001               	movlw	1
  7047     01B7  0021               	movlb	1	; select bank1
  7048     01B8  07C6               	addwf	main@seconds^(0+128),f
  7049     01B9  3000               	movlw	0
  7050     01BA  3DC7               	addwfc	(main@seconds+1)^(0+128),f
  7051     01BB  29DB               	goto	l5129
  7052     01BC                     l5119:
  7053                           
  7054                           ;main.c: 194:                 seconds=0;
  7055     01BC  0021               	movlb	1	; select bank1
  7056     01BD  01C6               	clrf	main@seconds^(0+128)
  7057     01BE  01C7               	clrf	(main@seconds+1)^(0+128)
  7058     01BF                     l5121:
  7059                           
  7060                           ;main.c: 195:                 if(minutes < 59)
  7061     01BF  0845               	movf	(main@minutes+1)^(0+128),w
  7062     01C0  3A80               	xorlw	128
  7063     01C1  0020               	movlb	0	; select bank0
  7064     01C2  00E5               	movwf	??_main
  7065     01C3  3080               	movlw	128
  7066     01C4  0265               	subwf	??_main,w
  7067     01C5  1D03               	skipz
  7068     01C6  29CA               	goto	u4135
  7069     01C7  303B               	movlw	59
  7070     01C8  0021               	movlb	1	; select bank1
  7071     01C9  0244               	subwf	main@minutes^(0+128),w
  7072     01CA                     u4135:
  7073     01CA  1803               	skipnc
  7074     01CB  29CD               	goto	u4131
  7075     01CC  29CE               	goto	u4130
  7076     01CD                     u4131:
  7077     01CD  29D4               	goto	l5125
  7078     01CE                     u4130:
  7079     01CE                     l5123:
  7080                           
  7081                           ;main.c: 196:                     minutes++;
  7082     01CE  3001               	movlw	1
  7083     01CF  0021               	movlb	1	; select bank1
  7084     01D0  07C4               	addwf	main@minutes^(0+128),f
  7085     01D1  3000               	movlw	0
  7086     01D2  3DC5               	addwfc	(main@minutes+1)^(0+128),f
  7087     01D3  29DB               	goto	l5129
  7088     01D4                     l5125:
  7089                           
  7090                           ;main.c: 198:                     minutes=0;
  7091     01D4  0021               	movlb	1	; select bank1
  7092     01D5  01C4               	clrf	main@minutes^(0+128)
  7093     01D6  01C5               	clrf	(main@minutes+1)^(0+128)
  7094     01D7                     l5127:
  7095                           
  7096                           ;main.c: 199:                     hours++;
  7097     01D7  3001               	movlw	1
  7098     01D8  07C2               	addwf	main@hours^(0+128),f
  7099     01D9  3000               	movlw	0
  7100     01DA  3DC3               	addwfc	(main@hours+1)^(0+128),f
  7101     01DB                     l5129:
  7102                           
  7103                           ;main.c: 203:             one_second = 0;
  7104     01DB  01E5               	clrf	_one_second^(0+128)	;volatile
  7105     01DC  2871               	goto	l5049
  7106     01DD  3180  2818         	ljmp	start
  7107     01DF                     __end_of_main:
  7108                           
  7109                           	psect	text1
  7110     0E5B                     __ptext1:	
  7111 ;; *************** function _sprintf *****************
  7112 ;; Defined at:
  7113 ;;		line 9 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_sprintf.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  s               1    wreg     PTR unsigned char 
  7116 ;;		 -> main@measure_buffer(6), main@time_buffer(8), 
  7117 ;;  fmt             2   47[BANK0 ] PTR const unsigned char 
  7118 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  s               1   57[BANK0 ] PTR unsigned char 
  7121 ;;		 -> main@measure_buffer(6), main@time_buffer(8), 
  7122 ;;  f              11   58[BANK0 ] struct _IO_FILE
  7123 ;;  ret             2    0        int 
  7124 ;;  ap              1   56[BANK0 ] PTR void [1]
  7125 ;;		 -> ?_sprintf(2), 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  2   47[BANK0 ] int 
  7128 ;; Registers used:
  7129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7135 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7137 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7138 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7139 ;;Total ram usage:       22 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; Hardware stack levels required when called: 10
  7142 ;; This function calls:
  7143 ;;		_vfprintf
  7144 ;; This function is called by:
  7145 ;;		_main
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149     0E5B                     _sprintf:	
  7150                           ;psect for function _sprintf
  7151                           
  7152                           
  7153                           ;incstack = 0
  7154                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7155                           ;sprintf@s stored from wreg
  7156     0E5B  0020               	movlb	0	; select bank0
  7157     0E5C  00D9               	movwf	sprintf@s
  7158     0E5D                     l5001:
  7159     0E5D  3051               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  7160     0E5E  00D8               	movwf	sprintf@ap
  7161     0E5F  0859               	movf	sprintf@s,w
  7162     0E60  00DA               	movwf	sprintf@f
  7163     0E61                     l5003:
  7164     0E61  01DC               	clrf	sprintf@f+2
  7165     0E62  01DD               	clrf	sprintf@f+3
  7166     0E63                     l5005:
  7167     0E63  01E3               	clrf	sprintf@f+9
  7168     0E64  01E4               	clrf	sprintf@f+10
  7169     0E65                     l5007:
  7170     0E65  0850               	movf	sprintf@fmt+1,w
  7171     0E66  00C9               	movwf	vfprintf@fmt+1
  7172     0E67  084F               	movf	sprintf@fmt,w
  7173     0E68  00C8               	movwf	vfprintf@fmt
  7174     0E69  3058               	movlw	(low (sprintf@ap| 0))& (0+255)
  7175     0E6A  00CA               	movwf	vfprintf@ap
  7176     0E6B  305A               	movlw	(low (sprintf@f| 0))& (0+255)
  7177     0E6C  318E  2622  318E   	fcall	_vfprintf
  7178     0E6F                     l5009:
  7179     0E6F  0020               	movlb	0	; select bank0
  7180     0E70  085C               	movf	sprintf@f+2,w
  7181     0E71  0759               	addwf	sprintf@s,w
  7182     0E72  00D7               	movwf	??_sprintf
  7183     0E73  0857               	movf	??_sprintf,w
  7184     0E74  0086               	movwf	6
  7185     0E75  0187               	clrf	7
  7186     0E76  0181               	clrf	1
  7187     0E77                     l1825:
  7188     0E77  0008               	return
  7189     0E78                     __end_of_sprintf:
  7190                           
  7191                           	psect	text2
  7192     0E22                     __ptext2:	
  7193 ;; *************** function _vfprintf *****************
  7194 ;; Defined at:
  7195 ;;		line 1817 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  fp              1    wreg     PTR struct _IO_FILE
  7198 ;;		 -> sprintf@f(11), 
  7199 ;;  fmt             2   40[BANK0 ] PTR const unsigned char 
  7200 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  7201 ;;  ap              1   42[BANK0 ] PTR PTR void 
  7202 ;;		 -> sprintf@ap(1), 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  7205 ;;		 -> sprintf@f(11), 
  7206 ;;  cfmt            2   45[BANK0 ] PTR unsigned char 
  7207 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  2   40[BANK0 ] int 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7217 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;Total ram usage:        7 bytes
  7222 ;; Hardware stack levels used: 1
  7223 ;; Hardware stack levels required when called: 9
  7224 ;; This function calls:
  7225 ;;		_vfpfcnvrt
  7226 ;; This function is called by:
  7227 ;;		_sprintf
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231     0E22                     _vfprintf:	
  7232                           ;psect for function _vfprintf
  7233                           
  7234                           
  7235                           ;incstack = 0
  7236                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7237                           ;vfprintf@fp stored from wreg
  7238     0E22  0020               	movlb	0	; select bank0
  7239     0E23  00CC               	movwf	vfprintf@fp
  7240     0E24                     l4965:
  7241                           
  7242                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
  7243     0E24  0849               	movf	vfprintf@fmt+1,w
  7244     0E25  00CE               	movwf	vfprintf@cfmt+1
  7245     0E26  0848               	movf	vfprintf@fmt,w
  7246     0E27  00CD               	movwf	vfprintf@cfmt
  7247                           
  7248                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  7249     0E28  2E31               	goto	l4969
  7250     0E29                     l4967:
  7251                           
  7252                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  7253     0E29  304D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7254     0E2A  00BA               	movwf	vfpfcnvrt@fmt
  7255     0E2B  084A               	movf	vfprintf@ap,w
  7256     0E2C  00BB               	movwf	vfpfcnvrt@ap
  7257     0E2D  084C               	movf	vfprintf@fp,w
  7258     0E2E  3184  242C  318E   	fcall	_vfpfcnvrt
  7259     0E31                     l4969:
  7260                           
  7261                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  7262     0E31  0020               	movlb	0	; select bank0
  7263     0E32  084D               	movf	vfprintf@cfmt,w
  7264     0E33  0084               	movwf	4
  7265     0E34  084E               	movf	vfprintf@cfmt+1,w
  7266     0E35  0085               	movwf	5
  7267     0E36  0012               	moviw fsr0++
  7268     0E37  1D03               	btfss	3,2
  7269     0E38  2E3A               	goto	u3981
  7270     0E39  2E3B               	goto	u3980
  7271     0E3A                     u3981:
  7272     0E3A  2E29               	goto	l4967
  7273     0E3B                     u3980:
  7274     0E3B                     l4971:
  7275                           
  7276                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  7277     0E3B  01C8               	clrf	?_vfprintf
  7278     0E3C  01C9               	clrf	?_vfprintf+1
  7279     0E3D                     l1895:
  7280     0E3D  0008               	return
  7281     0E3E                     __end_of_vfprintf:
  7282                           
  7283                           	psect	text3
  7284     042C                     __ptext3:	
  7285 ;; *************** function _vfpfcnvrt *****************
  7286 ;; Defined at:
  7287 ;;		line 1177 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  fp              1    wreg     PTR struct _IO_FILE
  7290 ;;		 -> sprintf@f(11), 
  7291 ;;  fmt             1   26[BANK0 ] PTR PTR unsigned char 
  7292 ;;		 -> vfprintf@cfmt(2), 
  7293 ;;  ap              1   27[BANK0 ] PTR PTR void 
  7294 ;;		 -> sprintf@ap(1), 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  7297 ;;		 -> sprintf@f(11), 
  7298 ;;  convarg         4   32[BANK0 ] struct .
  7299 ;;  cp              2   38[BANK0 ] PTR unsigned char 
  7300 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  7301 ;;  done            1   36[BANK0 ] _Bool 
  7302 ;;  c               1    0        unsigned char 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;Total ram usage:       14 bytes
  7317 ;; Hardware stack levels used: 1
  7318 ;; Hardware stack levels required when called: 8
  7319 ;; This function calls:
  7320 ;;		_dtoa
  7321 ;;		_fputc
  7322 ;;		_read_prec_or_width
  7323 ;; This function is called by:
  7324 ;;		_vfprintf
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328     042C                     _vfpfcnvrt:	
  7329                           ;psect for function _vfpfcnvrt
  7330                           
  7331                           
  7332                           ;incstack = 0
  7333                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7334                           ;vfpfcnvrt@fp stored from wreg
  7335     042C  0020               	movlb	0	; select bank0
  7336     042D  00C5               	movwf	vfpfcnvrt@fp
  7337     042E                     l4911:
  7338                           
  7339                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.45/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7340     042E  083A               	movf	vfpfcnvrt@fmt,w
  7341     042F  0086               	movwf	6
  7342     0430  0187               	clrf	7
  7343     0431  3F40               	moviw [0]fsr1
  7344     0432  00BC               	movwf	??_vfpfcnvrt
  7345     0433  3F41               	moviw [1]fsr1
  7346     0434  00BD               	movwf	??_vfpfcnvrt+1
  7347     0435  083C               	movf	??_vfpfcnvrt,w
  7348     0436  0084               	movwf	4
  7349     0437  083D               	movf	??_vfpfcnvrt+1,w
  7350     0438  0085               	movwf	5
  7351     0439  0012               	moviw fsr0++
  7352     043A  3A25               	xorlw	37
  7353     043B  1D03               	btfss	3,2
  7354     043C  2C3E               	goto	u3931
  7355     043D  2C3F               	goto	u3930
  7356     043E                     u3931:
  7357     043E  2CDA               	goto	l4955
  7358     043F                     u3930:
  7359     043F                     l4913:
  7360                           
  7361                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
  7362     043F  083A               	movf	vfpfcnvrt@fmt,w
  7363     0440  0086               	movwf	6
  7364     0441  0187               	clrf	7
  7365     0442  3001               	movlw	1
  7366     0443  0781               	addwf	1,f
  7367     0444  3141               	addfsr 1,1
  7368     0445  1803               	skipnc
  7369     0446  0A81               	incf	1,f
  7370     0447                     l4915:
  7371                           
  7372                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
  7373     0447  01E7               	clrf	_width
  7374     0448  01E8               	clrf	_width+1
  7375     0449  1003               	clrc
  7376     044A  3000               	movlw	0
  7377     044B  1803               	btfsc	3,0
  7378     044C  3001               	movlw	1
  7379     044D  00EB               	movwf	_flags
  7380     044E                     l4917:
  7381                           
  7382                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
  7383     044E  30FF               	movlw	255
  7384     044F  00E9               	movwf	_prec
  7385     0450  30FF               	movlw	255
  7386     0451  00EA               	movwf	_prec+1
  7387     0452                     l4919:
  7388                           
  7389                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1209:         done = 0;
  7390     0452  01C4               	clrf	vfpfcnvrt@done
  7391                           
  7392                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
  7393     0453  2C79               	goto	l4927
  7394     0454                     l1881:	
  7395                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1219:                 case '0
      +                          ' :
  7396                           
  7397                           
  7398                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1220:                     fla
      +                          gs |= (1 << 1);
  7399     0454  14EB               	bsf	_flags,1
  7400     0455                     l4921:
  7401                           
  7402                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1221:                     ++*
      +                          fmt;
  7403     0455  083A               	movf	vfpfcnvrt@fmt,w
  7404     0456  0086               	movwf	6
  7405     0457  0187               	clrf	7
  7406     0458  3001               	movlw	1
  7407     0459  0781               	addwf	1,f
  7408     045A  3141               	addfsr 1,1
  7409     045B  1803               	skipnc
  7410     045C  0A81               	incf	1,f
  7411                           
  7412                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1222:                     bre
      +                          ak;
  7413     045D  2C79               	goto	l4927
  7414     045E                     l1883:	
  7415                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1242:                 default
      +                          :
  7416                           
  7417                           
  7418                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1243:                     don
      +                          e = 1;
  7419     045E  01C4               	clrf	vfpfcnvrt@done
  7420     045F  0AC4               	incf	vfpfcnvrt@done,f
  7421                           
  7422                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1244:                     bre
      +                          ak;
  7423     0460  2C79               	goto	l4927
  7424     0461                     l4925:
  7425     0461  083A               	movf	vfpfcnvrt@fmt,w
  7426     0462  0086               	movwf	6
  7427     0463  0187               	clrf	7
  7428     0464  3F40               	moviw [0]fsr1
  7429     0465  00BC               	movwf	??_vfpfcnvrt
  7430     0466  3F41               	moviw [1]fsr1
  7431     0467  00BD               	movwf	??_vfpfcnvrt+1
  7432     0468  083C               	movf	??_vfpfcnvrt,w
  7433     0469  0084               	movwf	4
  7434     046A  083D               	movf	??_vfpfcnvrt+1,w
  7435     046B  0085               	movwf	5
  7436     046C  0800               	movf	0,w	;code access
  7437     046D  00BE               	movwf	??_vfpfcnvrt+2
  7438     046E  01BF               	clrf	??_vfpfcnvrt+3
  7439                           
  7440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7441                           ; Switch size 1, requested type "simple"
  7442                           ; Number of cases is 1, Range of values is 0 to 0
  7443                           ; switch strategies available:
  7444                           ; Name         Instructions Cycles
  7445                           ; simple_byte            4     3 (average)
  7446                           ; direct_byte            8     6 (fixed)
  7447                           ; jumptable            260     6 (fixed)
  7448                           ;	Chosen strategy is simple_byte
  7449     046F  083F               	movf	??_vfpfcnvrt+3,w
  7450     0470  3A00               	xorlw	0	; case 0
  7451     0471  1903               	skipnz
  7452     0472  2C74               	goto	l5151
  7453     0473  2C5E               	goto	l1883
  7454     0474                     l5151:
  7455                           
  7456                           ; Switch size 1, requested type "simple"
  7457                           ; Number of cases is 1, Range of values is 48 to 48
  7458                           ; switch strategies available:
  7459                           ; Name         Instructions Cycles
  7460                           ; simple_byte            4     3 (average)
  7461                           ; direct_byte           11     9 (fixed)
  7462                           ; jumptable            263     9 (fixed)
  7463                           ;	Chosen strategy is simple_byte
  7464     0474  083E               	movf	??_vfpfcnvrt+2,w
  7465     0475  3A30               	xorlw	48	; case 48
  7466     0476  1903               	skipnz
  7467     0477  2C54               	goto	l1881
  7468     0478  2C5E               	goto	l1883
  7469     0479                     l4927:
  7470                           
  7471                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
  7472     0479  0844               	movf	vfpfcnvrt@done,w
  7473     047A  1903               	btfsc	3,2
  7474     047B  2C7D               	goto	u3941
  7475     047C  2C7E               	goto	u3940
  7476     047D                     u3941:
  7477     047D  2C61               	goto	l4925
  7478     047E                     u3940:
  7479     047E                     l4929:
  7480                           
  7481                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1256:   width = read_prec_or_
      +                          width(fmt, ap);
  7482     047E  083B               	movf	vfpfcnvrt@ap,w
  7483     047F  00F8               	movwf	read_prec_or_width@ap
  7484     0480  083A               	movf	vfpfcnvrt@fmt,w
  7485     0481  3186  26CE  3184   	fcall	_read_prec_or_width
  7486     0484  0879               	movf	?_read_prec_or_width+1,w
  7487     0485  0020               	movlb	0	; select bank0
  7488     0486  00E8               	movwf	_width+1
  7489     0487  0878               	movf	?_read_prec_or_width,w
  7490     0488  00E7               	movwf	_width
  7491     0489                     l4931:
  7492                           
  7493                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1257:   if (width < 0) {
  7494     0489  1FE8               	btfss	_width+1,7
  7495     048A  2C8C               	goto	u3951
  7496     048B  2C8D               	goto	u3950
  7497     048C                     u3951:
  7498     048C  2C93               	goto	l4937
  7499     048D                     u3950:
  7500     048D                     l4933:
  7501                           
  7502                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1 << 0);
  7503     048D  146B               	bsf	_flags,0
  7504     048E                     l4935:
  7505                           
  7506                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1259:    width = -width;
  7507     048E  09E7               	comf	_width,f
  7508     048F  09E8               	comf	_width+1,f
  7509     0490  0AE7               	incf	_width,f
  7510     0491  1903               	skipnz
  7511     0492  0AE8               	incf	_width+1,f
  7512     0493                     l4937:
  7513                           
  7514                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  7515     0493  083A               	movf	vfpfcnvrt@fmt,w
  7516     0494  0086               	movwf	6
  7517     0495  0187               	clrf	7
  7518     0496  3F40               	moviw [0]fsr1
  7519     0497  00C6               	movwf	vfpfcnvrt@cp
  7520     0498  3F41               	moviw [1]fsr1
  7521     0499  00C7               	movwf	vfpfcnvrt@cp+1
  7522     049A                     l4939:
  7523                           
  7524                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == 'd' || *cp
      +                           == 'i') {
  7525     049A  0846               	movf	vfpfcnvrt@cp,w
  7526     049B  0084               	movwf	4
  7527     049C  0847               	movf	vfpfcnvrt@cp+1,w
  7528     049D  0085               	movwf	5
  7529     049E  0012               	moviw fsr0++
  7530     049F  3A64               	xorlw	100
  7531     04A0  1903               	btfsc	3,2
  7532     04A1  2CA3               	goto	u3961
  7533     04A2  2CA4               	goto	u3960
  7534     04A3                     u3961:
  7535     04A3  2CAE               	goto	l4943
  7536     04A4                     u3960:
  7537     04A4                     l4941:
  7538     04A4  0846               	movf	vfpfcnvrt@cp,w
  7539     04A5  0084               	movwf	4
  7540     04A6  0847               	movf	vfpfcnvrt@cp+1,w
  7541     04A7  0085               	movwf	5
  7542     04A8  0012               	moviw fsr0++
  7543     04A9  3A69               	xorlw	105
  7544     04AA  1D03               	btfss	3,2
  7545     04AB  2CAD               	goto	u3971
  7546     04AC  2CAE               	goto	u3970
  7547     04AD                     u3971:
  7548     04AD  2CD0               	goto	l4951
  7549     04AE                     u3970:
  7550     04AE                     l4943:
  7551                           
  7552                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1404:    convarg.sint = (vfpf
      +                          _sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7553     04AE  083B               	movf	vfpfcnvrt@ap,w
  7554     04AF  0086               	movwf	6
  7555     04B0  0187               	clrf	7
  7556     04B1  0801               	movf	1,w
  7557     04B2  0084               	movwf	4
  7558     04B3  0185               	clrf	5
  7559     04B4  3002               	movlw	2
  7560     04B5  0781               	addwf	1,f
  7561     04B6  3F00               	moviw [0]fsr0
  7562     04B7  00C0               	movwf	vfpfcnvrt@convarg
  7563     04B8  3F01               	moviw [1]fsr0
  7564     04B9  00C1               	movwf	vfpfcnvrt@convarg+1
  7565     04BA                     l4945:
  7566                           
  7567                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1;
  7568     04BA  0846               	movf	vfpfcnvrt@cp,w
  7569     04BB  3E01               	addlw	1
  7570     04BC  00BC               	movwf	??_vfpfcnvrt
  7571     04BD  3000               	movlw	0
  7572     04BE  3D47               	addwfc	vfpfcnvrt@cp+1,w
  7573     04BF  00BD               	movwf	??_vfpfcnvrt+1
  7574     04C0  083A               	movf	vfpfcnvrt@fmt,w
  7575     04C1  0086               	movwf	6
  7576     04C2  0187               	clrf	7
  7577     04C3  083C               	movf	??_vfpfcnvrt,w
  7578     04C4  3FC0               	movwi [0]fsr1
  7579     04C5  083D               	movf	??_vfpfcnvrt+1,w
  7580     04C6  3FC1               	movwi [1]fsr1
  7581     04C7                     l4947:
  7582                           
  7583                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1432:    return (void) dtoa(f
      +                          p, convarg.sint);;	Return value of _vfpfcnvrt is never used
  7584     04C7  0841               	movf	vfpfcnvrt@convarg+1,w
  7585     04C8  00AF               	movwf	dtoa@d+1
  7586     04C9  0840               	movf	vfpfcnvrt@convarg,w
  7587     04CA  00AE               	movwf	dtoa@d
  7588     04CB  0845               	movf	vfpfcnvrt@fp,w
  7589     04CC  3185  25A5  3184   	fcall	_dtoa
  7590     04CF  2CF2               	goto	l1889
  7591     04D0                     l4951:
  7592                           
  7593                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  7594     04D0  0020               	movlb	0	; select bank0
  7595     04D1  083A               	movf	vfpfcnvrt@fmt,w
  7596     04D2  0086               	movwf	6
  7597     04D3  0187               	clrf	7
  7598     04D4  3001               	movlw	1
  7599     04D5  0781               	addwf	1,f
  7600     04D6  3141               	addfsr 1,1
  7601     04D7  1803               	skipnc
  7602     04D8  0A81               	incf	1,f
  7603     04D9  2CF2               	goto	l1889
  7604     04DA                     l4955:
  7605                           
  7606                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  7607     04DA  083A               	movf	vfpfcnvrt@fmt,w
  7608     04DB  0086               	movwf	6
  7609     04DC  0187               	clrf	7
  7610     04DD  3F40               	moviw [0]fsr1
  7611     04DE  00BC               	movwf	??_vfpfcnvrt
  7612     04DF  3F41               	moviw [1]fsr1
  7613     04E0  00BD               	movwf	??_vfpfcnvrt+1
  7614     04E1  083C               	movf	??_vfpfcnvrt,w
  7615     04E2  0084               	movwf	4
  7616     04E3  083D               	movf	??_vfpfcnvrt+1,w
  7617     04E4  0085               	movwf	5
  7618     04E5  0800               	movf	0,w	;code access
  7619     04E6  00BE               	movwf	??_vfpfcnvrt+2
  7620     04E7  01BF               	clrf	??_vfpfcnvrt+3
  7621     04E8  083E               	movf	??_vfpfcnvrt+2,w
  7622     04E9  00F2               	movwf	fputc@c
  7623     04EA  083F               	movf	??_vfpfcnvrt+3,w
  7624     04EB  00F3               	movwf	fputc@c+1
  7625     04EC  0845               	movf	vfpfcnvrt@fp,w
  7626     04ED  00F4               	movwf	fputc@fp
  7627     04EE  318F  27B0  3184   	fcall	_fputc
  7628     04F1  2CD0               	goto	l4951
  7629     04F2                     l1889:
  7630     04F2  0008               	return
  7631     04F3                     __end_of_vfpfcnvrt:
  7632                           
  7633                           	psect	text4
  7634     06CE                     __ptext4:	
  7635 ;; *************** function _read_prec_or_width *****************
  7636 ;; Defined at:
  7637 ;;		line 1158 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  fmt             1    wreg     PTR PTR const unsigned c
  7640 ;;		 -> vfprintf@cfmt(2), 
  7641 ;;  ap              1    8[COMMON] PTR PTR void [1]
  7642 ;;		 -> sprintf@ap(1), 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  fmt             1    6[BANK0 ] PTR PTR const unsigned c
  7645 ;;		 -> vfprintf@cfmt(2), 
  7646 ;;  c               1    3[BANK0 ] unsigned char 
  7647 ;;  n               2    4[BANK0 ] int 
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  2    8[COMMON] int 
  7650 ;; Registers used:
  7651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;Total ram usage:        9 bytes
  7662 ;; Hardware stack levels used: 1
  7663 ;; Hardware stack levels required when called: 4
  7664 ;; This function calls:
  7665 ;;		___wmul
  7666 ;; This function is called by:
  7667 ;;		_vfpfcnvrt
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671     06CE                     _read_prec_or_width:	
  7672                           ;psect for function _read_prec_or_width
  7673                           
  7674                           
  7675                           ;incstack = 0
  7676                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7677                           ;read_prec_or_width@fmt stored from wreg
  7678     06CE  0020               	movlb	0	; select bank0
  7679     06CF  00A6               	movwf	read_prec_or_width@fmt
  7680     06D0                     l3627:
  7681                           
  7682                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  7683     06D0  01A4               	clrf	read_prec_or_width@n
  7684     06D1  01A5               	clrf	read_prec_or_width@n+1
  7685     06D2                     l3629:
  7686                           
  7687                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
  7688     06D2  0826               	movf	read_prec_or_width@fmt,w
  7689     06D3  0086               	movwf	6
  7690     06D4  0187               	clrf	7
  7691     06D5  3F40               	moviw [0]fsr1
  7692     06D6  00A0               	movwf	??_read_prec_or_width
  7693     06D7  3F41               	moviw [1]fsr1
  7694     06D8  00A1               	movwf	??_read_prec_or_width+1
  7695     06D9  0820               	movf	??_read_prec_or_width,w
  7696     06DA  0084               	movwf	4
  7697     06DB  0821               	movf	??_read_prec_or_width+1,w
  7698     06DC  0085               	movwf	5
  7699     06DD  0012               	moviw fsr0++
  7700     06DE  3A2A               	xorlw	42
  7701     06DF  1D03               	btfss	3,2
  7702     06E0  2EE2               	goto	u2361
  7703     06E1  2EE3               	goto	u2360
  7704     06E2                     u2361:
  7705     06E2  2F15               	goto	l3639
  7706     06E3                     u2360:
  7707     06E3                     l3631:
  7708                           
  7709                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
  7710     06E3  0826               	movf	read_prec_or_width@fmt,w
  7711     06E4  0086               	movwf	6
  7712     06E5  0187               	clrf	7
  7713     06E6  3001               	movlw	1
  7714     06E7  0781               	addwf	1,f
  7715     06E8  3141               	addfsr 1,1
  7716     06E9  1803               	skipnc
  7717     06EA  0A81               	incf	1,f
  7718     06EB                     l3633:
  7719                           
  7720                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
  7721     06EB  0878               	movf	read_prec_or_width@ap,w
  7722     06EC  0086               	movwf	6
  7723     06ED  0187               	clrf	7
  7724     06EE  0801               	movf	1,w
  7725     06EF  0084               	movwf	4
  7726     06F0  0185               	clrf	5
  7727     06F1  3002               	movlw	2
  7728     06F2  0781               	addwf	1,f
  7729     06F3  3F00               	moviw [0]fsr0
  7730     06F4  00A4               	movwf	read_prec_or_width@n
  7731     06F5  3F01               	moviw [1]fsr0
  7732     06F6  00A5               	movwf	read_prec_or_width@n+1
  7733                           
  7734                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1163:     } else {
  7735     06F7  2F29               	goto	l3641
  7736     06F8                     l3635:
  7737                           
  7738                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
  7739     06F8  0823               	movf	read_prec_or_width@c,w
  7740     06F9  00A0               	movwf	??_read_prec_or_width
  7741     06FA  01A1               	clrf	??_read_prec_or_width+1
  7742     06FB  0825               	movf	read_prec_or_width@n+1,w
  7743     06FC  00F3               	movwf	___wmul@multiplier+1
  7744     06FD  0824               	movf	read_prec_or_width@n,w
  7745     06FE  00F2               	movwf	___wmul@multiplier
  7746     06FF  300A               	movlw	10
  7747     0700  00F4               	movwf	___wmul@multiplicand
  7748     0701  3000               	movlw	0
  7749     0702  00F5               	movwf	___wmul@multiplicand+1
  7750     0703  3187  27E1  3186   	fcall	___wmul
  7751     0706  0020               	movlb	0	; select bank0
  7752     0707  0820               	movf	??_read_prec_or_width,w
  7753     0708  0772               	addwf	?___wmul,w
  7754     0709  00A4               	movwf	read_prec_or_width@n
  7755     070A  0821               	movf	??_read_prec_or_width+1,w
  7756     070B  3D73               	addwfc	?___wmul+1,w
  7757     070C  00A5               	movwf	read_prec_or_width@n+1
  7758     070D                     l3637:
  7759                           
  7760                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
  7761     070D  0826               	movf	read_prec_or_width@fmt,w
  7762     070E  0086               	movwf	6
  7763     070F  0187               	clrf	7
  7764     0710  3001               	movlw	1
  7765     0711  0781               	addwf	1,f
  7766     0712  3141               	addfsr 1,1
  7767     0713  1803               	skipnc
  7768     0714  0A81               	incf	1,f
  7769     0715                     l3639:
  7770                           
  7771                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
  7772     0715  0826               	movf	read_prec_or_width@fmt,w
  7773     0716  0086               	movwf	6
  7774     0717  0187               	clrf	7
  7775     0718  3F40               	moviw [0]fsr1
  7776     0719  00A0               	movwf	??_read_prec_or_width
  7777     071A  3F41               	moviw [1]fsr1
  7778     071B  00A1               	movwf	??_read_prec_or_width+1
  7779     071C  0820               	movf	??_read_prec_or_width,w
  7780     071D  0084               	movwf	4
  7781     071E  0821               	movf	??_read_prec_or_width+1,w
  7782     071F  0085               	movwf	5
  7783     0720  0800               	movf	0,w	;code access
  7784     0721  3ED0               	addlw	208
  7785     0722  00A3               	movwf	read_prec_or_width@c
  7786     0723  300A               	movlw	10
  7787     0724  0223               	subwf	read_prec_or_width@c,w
  7788     0725  1C03               	skipc
  7789     0726  2F28               	goto	u2371
  7790     0727  2F29               	goto	u2370
  7791     0728                     u2371:
  7792     0728  2EF8               	goto	l3635
  7793     0729                     u2370:
  7794     0729                     l3641:
  7795                           
  7796                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1170:     return n;
  7797     0729  0825               	movf	read_prec_or_width@n+1,w
  7798     072A  00F9               	movwf	?_read_prec_or_width+1
  7799     072B  0824               	movf	read_prec_or_width@n,w
  7800     072C  00F8               	movwf	?_read_prec_or_width
  7801     072D                     l1874:
  7802     072D  0008               	return
  7803     072E                     __end_of_read_prec_or_width:
  7804                           
  7805                           	psect	text5
  7806     07E1                     __ptext5:	
  7807 ;; *************** function ___wmul *****************
  7808 ;; Defined at:
  7809 ;;		line 15 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  multiplier      2    2[COMMON] unsigned int 
  7812 ;;  multiplicand    2    4[COMMON] unsigned int 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  product         2    6[COMMON] unsigned int 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  2    2[COMMON] unsigned int 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2, status,0
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;Total ram usage:        6 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; Hardware stack levels required when called: 3
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_read_prec_or_width
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838     07E1                     ___wmul:	
  7839                           ;psect for function ___wmul
  7840                           
  7841     07E1                     l3431:	
  7842                           ;incstack = 0
  7843                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7844                           
  7845     07E1  01F6               	clrf	___wmul@product
  7846     07E2  01F7               	clrf	___wmul@product+1
  7847     07E3                     l3433:
  7848     07E3  1C72               	btfss	___wmul@multiplier,0
  7849     07E4  2FE6               	goto	u1891
  7850     07E5  2FE7               	goto	u1890
  7851     07E6                     u1891:
  7852     07E6  2FEB               	goto	l1362
  7853     07E7                     u1890:
  7854     07E7                     l3435:
  7855     07E7  0874               	movf	___wmul@multiplicand,w
  7856     07E8  07F6               	addwf	___wmul@product,f
  7857     07E9  0875               	movf	___wmul@multiplicand+1,w
  7858     07EA  3DF7               	addwfc	___wmul@product+1,f
  7859     07EB                     l1362:
  7860     07EB  3001               	movlw	1
  7861     07EC                     u1905:
  7862     07EC  35F4               	lslf	___wmul@multiplicand,f
  7863     07ED  0DF5               	rlf	___wmul@multiplicand+1,f
  7864     07EE  0B89               	decfsz	9,f
  7865     07EF  2FEC               	goto	u1905
  7866     07F0                     l3437:
  7867     07F0  3001               	movlw	1
  7868     07F1                     u1915:
  7869     07F1  36F3               	lsrf	___wmul@multiplier+1,f
  7870     07F2  0CF2               	rrf	___wmul@multiplier,f
  7871     07F3  0B89               	decfsz	9,f
  7872     07F4  2FF1               	goto	u1915
  7873     07F5                     l3439:
  7874     07F5  0872               	movf	___wmul@multiplier,w
  7875     07F6  0473               	iorwf	___wmul@multiplier+1,w
  7876     07F7  1D03               	btfss	3,2
  7877     07F8  2FFA               	goto	u1921
  7878     07F9  2FFB               	goto	u1920
  7879     07FA                     u1921:
  7880     07FA  2FE3               	goto	l3433
  7881     07FB                     u1920:
  7882     07FB                     l3441:
  7883     07FB  0877               	movf	___wmul@product+1,w
  7884     07FC  00F3               	movwf	?___wmul+1
  7885     07FD  0876               	movf	___wmul@product,w
  7886     07FE  00F2               	movwf	?___wmul
  7887     07FF                     l1364:
  7888     07FF  0008               	return
  7889     0800                     __end_of___wmul:
  7890                           
  7891                           	psect	text6
  7892     05A5                     __ptext6:	
  7893 ;; *************** function _dtoa *****************
  7894 ;; Defined at:
  7895 ;;		line 513 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  fp              1    wreg     PTR struct _IO_FILE
  7898 ;;		 -> sprintf@f(11), 
  7899 ;;  d               2   14[BANK0 ] int 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  fp              1   17[BANK0 ] PTR struct _IO_FILE
  7902 ;;		 -> sprintf@f(11), 
  7903 ;;  i               2   24[BANK0 ] int 
  7904 ;;  w               2   21[BANK0 ] int 
  7905 ;;  s               1   23[BANK0 ] unsigned char 
  7906 ;;  p               1   20[BANK0 ] _Bool 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  1    wreg      void 
  7909 ;; Registers used:
  7910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7917 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7918 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;Total ram usage:       12 bytes
  7921 ;; Hardware stack levels used: 1
  7922 ;; Hardware stack levels required when called: 7
  7923 ;; This function calls:
  7924 ;;		___awdiv
  7925 ;;		___awmod
  7926 ;;		_abs
  7927 ;;		_pad
  7928 ;; This function is called by:
  7929 ;;		_vfpfcnvrt
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933     05A5                     _dtoa:	
  7934                           ;psect for function _dtoa
  7935                           
  7936                           
  7937                           ;incstack = 0
  7938                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7939                           ;dtoa@fp stored from wreg
  7940     05A5  0020               	movlb	0	; select bank0
  7941     05A6  00B1               	movwf	dtoa@fp
  7942     05A7                     l4865:
  7943                           
  7944                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 513: static void dtoa(FILE *f
      +                          p, vfpf_sint_t d);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 514: {;/opt/
      +                          microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 515:  char s;;/opt/microchip/xc8/v2
      +                          .45/pic/sources/c99/common/doprnt.c: 516:     int i, w;;/opt/microchip/xc8/v2.45/pic/sou
      +                          rces/c99/common/doprnt.c: 520:  _Bool p = 1;
  7945     05A7  01B4               	clrf	dtoa@p
  7946     05A8  0AB4               	incf	dtoa@p,f
  7947     05A9                     l4867:
  7948                           
  7949                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 524:     s = d < 0 ? 1 : 0;
  7950     05A9  1BAF               	btfsc	dtoa@d+1,7
  7951     05AA  2DAC               	goto	u3831
  7952     05AB  2DAE               	goto	u3830
  7953     05AC                     u3831:
  7954     05AC  3001               	movlw	1
  7955     05AD  2DAF               	goto	u3840
  7956     05AE                     u3830:
  7957     05AE  3000               	movlw	0
  7958     05AF                     u3840:
  7959     05AF  00B7               	movwf	dtoa@s
  7960                           
  7961                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 535:     w = width;
  7962     05B0  0868               	movf	_width+1,w
  7963     05B1  00B6               	movwf	dtoa@w+1
  7964     05B2  0867               	movf	_width,w
  7965     05B3  00B5               	movwf	dtoa@w
  7966     05B4                     l4869:
  7967                           
  7968                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 536:     if (s
  7969     05B4  0837               	movf	dtoa@s,w
  7970     05B5  1903               	btfsc	3,2
  7971     05B6  2DB8               	goto	u3851
  7972     05B7  2DB9               	goto	u3850
  7973     05B8                     u3851:
  7974     05B8  2DCD               	goto	l1853
  7975     05B9                     u3850:
  7976     05B9                     l4871:
  7977                           
  7978                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 540:     ) {;/opt/microchip/x
      +                          c8/v2.45/pic/sources/c99/common/doprnt.c: 541:         --w;
  7979     05B9  30FF               	movlw	255
  7980     05BA  07B5               	addwf	dtoa@w,f
  7981     05BB  30FF               	movlw	255
  7982     05BC  3DB6               	addwfc	dtoa@w+1,f
  7983     05BD                     l4873:
  7984                           
  7985                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' : '+';
  7986     05BD  0837               	movf	dtoa@s,w
  7987     05BE  1D03               	btfss	3,2
  7988     05BF  2DC1               	goto	u3861
  7989     05C0  2DC2               	goto	u3860
  7990     05C1                     u3861:
  7991     05C1  2DC7               	goto	l4877
  7992     05C2                     u3860:
  7993     05C2                     l4875:
  7994     05C2  302B               	movlw	43
  7995     05C3  00B2               	movwf	_dtoa$2651
  7996     05C4  3000               	movlw	0
  7997     05C5  00B3               	movwf	_dtoa$2651+1
  7998     05C6  2DCB               	goto	l1857
  7999     05C7                     l4877:
  8000     05C7  302D               	movlw	45
  8001     05C8  00B2               	movwf	_dtoa$2651
  8002     05C9  3000               	movlw	0
  8003     05CA  00B3               	movwf	_dtoa$2651+1
  8004     05CB                     l1857:
  8005     05CB  0832               	movf	_dtoa$2651,w
  8006     05CC  00B7               	movwf	dtoa@s
  8007     05CD                     l1853:	
  8008                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 543:     }
  8009                           
  8010                           
  8011                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(dbuf) - 1
      +                          ;
  8012     05CD  301F               	movlw	31
  8013     05CE  00B8               	movwf	dtoa@i
  8014     05CF  3000               	movlw	0
  8015     05D0  00B9               	movwf	dtoa@i+1
  8016     05D1                     l4879:
  8017                           
  8018                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '\0';
  8019     05D1  0022               	movlb	2	; select bank2
  8020     05D2  01BF               	clrf	(_dbuf^(0+256)+31)
  8021                           
  8022                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
  8023     05D3  2E09               	goto	l4891
  8024     05D4                     l4881:
  8025                           
  8026                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 563:     )) {;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 564:         --i;
  8027     05D4  30FF               	movlw	255
  8028     05D5  07B8               	addwf	dtoa@i,f
  8029     05D6  30FF               	movlw	255
  8030     05D7  3DB9               	addwfc	dtoa@i+1,f
  8031     05D8                     l4883:
  8032                           
  8033                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 565:         dbuf[i] = (char)
      +                          ((int)'0' + abs(d % 10));
  8034     05D8  0838               	movf	dtoa@i,w
  8035     05D9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8036     05DA  0086               	movwf	6
  8037     05DB  3001               	movlw	1	; select bank2/3
  8038     05DC  0087               	movwf	7
  8039     05DD  300A               	movlw	10
  8040     05DE  00F2               	movwf	___awmod@divisor
  8041     05DF  3000               	movlw	0
  8042     05E0  00F3               	movwf	___awmod@divisor+1
  8043     05E1  082F               	movf	dtoa@d+1,w
  8044     05E2  00F5               	movwf	___awmod@dividend+1
  8045     05E3  082E               	movf	dtoa@d,w
  8046     05E4  00F4               	movwf	___awmod@dividend
  8047     05E5  3187  278E  3185   	fcall	___awmod
  8048     05E8  0873               	movf	?___awmod+1,w
  8049     05E9  0020               	movlb	0	; select bank0
  8050     05EA  00A1               	movwf	abs@a+1
  8051     05EB  0872               	movf	?___awmod,w
  8052     05EC  00A0               	movwf	abs@a
  8053     05ED  318D  2575  3185   	fcall	_abs
  8054     05F0  0020               	movlb	0	; select bank0
  8055     05F1  0820               	movf	?_abs,w
  8056     05F2  3E30               	addlw	48
  8057     05F3  0081               	movwf	1
  8058     05F4                     l4885:
  8059                           
  8060                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 569:   p = 0;
  8061     05F4  01B4               	clrf	dtoa@p
  8062     05F5                     l4887:
  8063                           
  8064                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 571:         --w;
  8065     05F5  30FF               	movlw	255
  8066     05F6  07B5               	addwf	dtoa@w,f
  8067     05F7  30FF               	movlw	255
  8068     05F8  3DB6               	addwfc	dtoa@w+1,f
  8069     05F9                     l4889:
  8070                           
  8071                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 572:         d = d / 10;
  8072     05F9  300A               	movlw	10
  8073     05FA  00F2               	movwf	___awdiv@divisor
  8074     05FB  3000               	movlw	0
  8075     05FC  00F3               	movwf	___awdiv@divisor+1
  8076     05FD  082F               	movf	dtoa@d+1,w
  8077     05FE  00F5               	movwf	___awdiv@dividend+1
  8078     05FF  082E               	movf	dtoa@d,w
  8079     0600  00F4               	movwf	___awdiv@dividend
  8080     0601  3187  272E  3185   	fcall	___awdiv
  8081     0604  0873               	movf	?___awdiv+1,w
  8082     0605  0020               	movlb	0	; select bank0
  8083     0606  00AF               	movwf	dtoa@d+1
  8084     0607  0872               	movf	?___awdiv,w
  8085     0608  00AE               	movwf	dtoa@d
  8086     0609                     l4891:
  8087                           
  8088                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
  8089     0609  0020               	movlb	0	; select bank0
  8090     060A  0839               	movf	dtoa@i+1,w
  8091     060B  3A80               	xorlw	128
  8092     060C  00B0               	movwf	??_dtoa
  8093     060D  3080               	movlw	128
  8094     060E  0230               	subwf	??_dtoa,w
  8095     060F  1D03               	skipz
  8096     0610  2E13               	goto	u3875
  8097     0611  3001               	movlw	1
  8098     0612  0238               	subwf	dtoa@i,w
  8099     0613                     u3875:
  8100     0613  1C03               	skipc
  8101     0614  2E16               	goto	u3871
  8102     0615  2E17               	goto	u3870
  8103     0616                     u3871:
  8104     0616  2E35               	goto	l4901
  8105     0617                     u3870:
  8106     0617                     l4893:
  8107     0617  0020               	movlb	0	; select bank0
  8108     0618  082E               	movf	dtoa@d,w
  8109     0619  042F               	iorwf	dtoa@d+1,w
  8110     061A  1D03               	btfss	3,2
  8111     061B  2E1D               	goto	u3881
  8112     061C  2E1E               	goto	u3880
  8113     061D                     u3881:
  8114     061D  2DD4               	goto	l4881
  8115     061E                     u3880:
  8116     061E                     l4895:
  8117     061E  0834               	movf	dtoa@p,w
  8118     061F  1D03               	btfss	3,2
  8119     0620  2E22               	goto	u3891
  8120     0621  2E23               	goto	u3890
  8121     0622                     u3891:
  8122     0622  2DD4               	goto	l4881
  8123     0623                     u3890:
  8124     0623                     l4897:
  8125     0623  0836               	movf	dtoa@w+1,w
  8126     0624  3A80               	xorlw	128
  8127     0625  00B0               	movwf	??_dtoa
  8128     0626  3080               	movlw	128
  8129     0627  0230               	subwf	??_dtoa,w
  8130     0628  1D03               	skipz
  8131     0629  2E2C               	goto	u3905
  8132     062A  3001               	movlw	1
  8133     062B  0235               	subwf	dtoa@w,w
  8134     062C                     u3905:
  8135     062C  1C03               	skipc
  8136     062D  2E2F               	goto	u3901
  8137     062E  2E30               	goto	u3900
  8138     062F                     u3901:
  8139     062F  2E35               	goto	l4901
  8140     0630                     u3900:
  8141     0630                     l4899:
  8142     0630  0020               	movlb	0	; select bank0
  8143     0631  18EB               	btfsc	_flags,1
  8144     0632  2E34               	goto	u3911
  8145     0633  2E35               	goto	u3910
  8146     0634                     u3911:
  8147     0634  2DD4               	goto	l4881
  8148     0635                     u3910:
  8149     0635                     l4901:
  8150                           
  8151                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 576:     if (s != 0) {
  8152     0635  0020               	movlb	0	; select bank0
  8153     0636  0837               	movf	dtoa@s,w
  8154     0637  1903               	btfsc	3,2
  8155     0638  2E3A               	goto	u3921
  8156     0639  2E3B               	goto	u3920
  8157     063A                     u3921:
  8158     063A  2E46               	goto	l4907
  8159     063B                     u3920:
  8160     063B                     l4903:
  8161                           
  8162                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 577:         --i;
  8163     063B  30FF               	movlw	255
  8164     063C  07B8               	addwf	dtoa@i,f
  8165     063D  30FF               	movlw	255
  8166     063E  3DB9               	addwfc	dtoa@i+1,f
  8167     063F                     l4905:
  8168                           
  8169                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 578:         dbuf[i] = s;
  8170     063F  0838               	movf	dtoa@i,w
  8171     0640  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8172     0641  0086               	movwf	6
  8173     0642  3001               	movlw	1	; select bank2/3
  8174     0643  0087               	movwf	7
  8175     0644  0837               	movf	dtoa@s,w
  8176     0645  0081               	movwf	1
  8177     0646                     l4907:
  8178                           
  8179                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 582:     return (void) pad(fp
      +                          , &dbuf[i], w);
  8180     0646  0838               	movf	dtoa@i,w
  8181     0647  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8182     0648  00A7               	movwf	pad@buf
  8183     0649  0836               	movf	dtoa@w+1,w
  8184     064A  00A9               	movwf	pad@p+1
  8185     064B  0835               	movf	dtoa@w,w
  8186     064C  00A8               	movwf	pad@p
  8187     064D  0831               	movf	dtoa@fp,w
  8188     064E  318E  269D  3185   	fcall	_pad
  8189     0651                     l1866:
  8190     0651  0008               	return
  8191     0652                     __end_of_dtoa:
  8192                           
  8193                           	psect	text7
  8194     0E9D                     __ptext7:	
  8195 ;; *************** function _pad *****************
  8196 ;; Defined at:
  8197 ;;		line 193 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  fp              1    wreg     PTR struct _IO_FILE
  8200 ;;		 -> sprintf@f(11), 
  8201 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  8202 ;;		 -> dbuf(32), 
  8203 ;;  p               2    8[BANK0 ] int 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  8206 ;;		 -> sprintf@f(11), 
  8207 ;;  i               2   11[BANK0 ] int 
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      void 
  8210 ;; Registers used:
  8211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8217 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8221 ;;Total ram usage:        7 bytes
  8222 ;; Hardware stack levels used: 1
  8223 ;; Hardware stack levels required when called: 6
  8224 ;; This function calls:
  8225 ;;		_fputc
  8226 ;;		_fputs
  8227 ;; This function is called by:
  8228 ;;		_dtoa
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232     0E9D                     _pad:	
  8233                           ;psect for function _pad
  8234                           
  8235                           
  8236                           ;incstack = 0
  8237                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8238                           ;pad@fp stored from wreg
  8239     0E9D  0020               	movlb	0	; select bank0
  8240     0E9E  00AD               	movwf	pad@fp
  8241     0E9F                     l4841:
  8242                           
  8243                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 193: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 194: {;/op
      +                          t/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc
      +                          8/v2.45/pic/sources/c99/common/doprnt.c: 199:     if (flags & (1 << 0)) {
  8244     0E9F  1C6B               	btfss	_flags,0
  8245     0EA0  2EA2               	goto	u3781
  8246     0EA1  2EA3               	goto	u3780
  8247     0EA2                     u3781:
  8248     0EA2  2EA9               	goto	l4845
  8249     0EA3                     u3780:
  8250     0EA3                     l4843:
  8251                           
  8252                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 200:         fputs((const cha
      +                          r *)buf, fp);
  8253     0EA3  082D               	movf	pad@fp,w
  8254     0EA4  00A0               	movwf	fputs@fp
  8255     0EA5  0827               	movf	pad@buf,w
  8256     0EA6  318E  2678  318E   	fcall	_fputs
  8257     0EA9                     l4845:
  8258                           
  8259                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  8260     0EA9  0020               	movlb	0	; select bank0
  8261     0EAA  1FA9               	btfss	pad@p+1,7
  8262     0EAB  2EAD               	goto	u3791
  8263     0EAC  2EAE               	goto	u3790
  8264     0EAD                     u3791:
  8265     0EAD  2EB0               	goto	l1845
  8266     0EAE                     u3790:
  8267     0EAE                     l4847:
  8268                           
  8269                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  8270     0EAE  01A8               	clrf	pad@p
  8271     0EAF  01A9               	clrf	pad@p+1
  8272     0EB0                     l1845:	
  8273                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 207:  }
  8274                           
  8275                           
  8276                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  8277     0EB0  01AB               	clrf	pad@i
  8278     0EB1  01AC               	clrf	pad@i+1
  8279                           
  8280                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  8281     0EB2  2EC2               	goto	l4853
  8282     0EB3                     l4849:
  8283                           
  8284                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
  8285     0EB3  3020               	movlw	32
  8286     0EB4  00F2               	movwf	fputc@c
  8287     0EB5  3000               	movlw	0
  8288     0EB6  00F3               	movwf	fputc@c+1
  8289     0EB7  0020               	movlb	0	; select bank0
  8290     0EB8  082D               	movf	pad@fp,w
  8291     0EB9  00F4               	movwf	fputc@fp
  8292     0EBA  318F  27B0  318E   	fcall	_fputc
  8293     0EBD                     l4851:
  8294                           
  8295                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 211:         ++i;
  8296     0EBD  3001               	movlw	1
  8297     0EBE  0020               	movlb	0	; select bank0
  8298     0EBF  07AB               	addwf	pad@i,f
  8299     0EC0  3000               	movlw	0
  8300     0EC1  3DAC               	addwfc	pad@i+1,f
  8301     0EC2                     l4853:
  8302                           
  8303                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  8304     0EC2  082C               	movf	pad@i+1,w
  8305     0EC3  3A80               	xorlw	128
  8306     0EC4  00AA               	movwf	??_pad
  8307     0EC5  0829               	movf	pad@p+1,w
  8308     0EC6  3A80               	xorlw	128
  8309     0EC7  022A               	subwf	??_pad,w
  8310     0EC8  1D03               	skipz
  8311     0EC9  2ECC               	goto	u3805
  8312     0ECA  0828               	movf	pad@p,w
  8313     0ECB  022B               	subwf	pad@i,w
  8314     0ECC                     u3805:
  8315     0ECC  1C03               	skipc
  8316     0ECD  2ECF               	goto	u3801
  8317     0ECE  2ED0               	goto	u3800
  8318     0ECF                     u3801:
  8319     0ECF  2EB3               	goto	l4849
  8320     0ED0                     u3800:
  8321     0ED0                     l1848:
  8322                           
  8323                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 216:     if (!(flags & (1 << 
      +                          0))) {
  8324     0ED0  0020               	movlb	0	; select bank0
  8325     0ED1  186B               	btfsc	_flags,0
  8326     0ED2  2ED4               	goto	u3811
  8327     0ED3  2ED5               	goto	u3810
  8328     0ED4                     u3811:
  8329     0ED4  2EDB               	goto	l1850
  8330     0ED5                     u3810:
  8331     0ED5                     l4855:
  8332                           
  8333                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
  8334     0ED5  082D               	movf	pad@fp,w
  8335     0ED6  00A0               	movwf	fputs@fp
  8336     0ED7  0827               	movf	pad@buf,w
  8337     0ED8  318E  2678  318E   	fcall	_fputs
  8338     0EDB                     l1850:
  8339     0EDB  0008               	return
  8340     0EDC                     __end_of_pad:
  8341                           
  8342                           	psect	text8
  8343     0E78                     __ptext8:	
  8344 ;; *************** function _fputs *****************
  8345 ;; Defined at:
  8346 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputs.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  s               1    wreg     PTR const unsigned char 
  8349 ;;		 -> dbuf(32), 
  8350 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  8351 ;;		 -> sprintf@f(11), 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  8354 ;;		 -> dbuf(32), 
  8355 ;;  i               2    4[BANK0 ] int 
  8356 ;;  c               1    3[BANK0 ] unsigned char 
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  2    0[BANK0 ] int 
  8359 ;; Registers used:
  8360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8366 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;Total ram usage:        7 bytes
  8371 ;; Hardware stack levels used: 1
  8372 ;; Hardware stack levels required when called: 5
  8373 ;; This function calls:
  8374 ;;		_fputc
  8375 ;; This function is called by:
  8376 ;;		_pad
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380     0E78                     _fputs:	
  8381                           ;psect for function _fputs
  8382                           
  8383                           
  8384                           ;incstack = 0
  8385                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8386                           ;fputs@s stored from wreg
  8387     0E78  0020               	movlb	0	; select bank0
  8388     0E79  00A6               	movwf	fputs@s
  8389     0E7A                     l4789:
  8390     0E7A  01A4               	clrf	fputs@i
  8391     0E7B  01A5               	clrf	fputs@i+1
  8392     0E7C  2E8E               	goto	l4795
  8393     0E7D                     l4791:
  8394     0E7D  0823               	movf	fputs@c,w
  8395     0E7E  00A1               	movwf	??_fputs
  8396     0E7F  01A2               	clrf	??_fputs+1
  8397     0E80  0821               	movf	??_fputs,w
  8398     0E81  00F2               	movwf	fputc@c
  8399     0E82  0822               	movf	??_fputs+1,w
  8400     0E83  00F3               	movwf	fputc@c+1
  8401     0E84  0820               	movf	fputs@fp,w
  8402     0E85  00F4               	movwf	fputc@fp
  8403     0E86  318F  27B0  318E   	fcall	_fputc
  8404     0E89                     l4793:
  8405     0E89  3001               	movlw	1
  8406     0E8A  0020               	movlb	0	; select bank0
  8407     0E8B  07A4               	addwf	fputs@i,f
  8408     0E8C  3000               	movlw	0
  8409     0E8D  3DA5               	addwfc	fputs@i+1,f
  8410     0E8E                     l4795:
  8411     0E8E  0824               	movf	fputs@i,w
  8412     0E8F  0726               	addwf	fputs@s,w
  8413     0E90  00A1               	movwf	??_fputs
  8414     0E91  0821               	movf	??_fputs,w
  8415     0E92  0086               	movwf	6
  8416     0E93  3001               	movlw	1	; select bank2/3
  8417     0E94  0087               	movwf	7
  8418     0E95  0801               	movf	1,w
  8419     0E96  00A3               	movwf	fputs@c
  8420     0E97  0823               	movf	fputs@c,w
  8421     0E98  1D03               	btfss	3,2
  8422     0E99  2E9B               	goto	u3671
  8423     0E9A  2E9C               	goto	u3670
  8424     0E9B                     u3671:
  8425     0E9B  2E7D               	goto	l4791
  8426     0E9C                     u3670:
  8427     0E9C                     l1922:
  8428     0E9C  0008               	return
  8429     0E9D                     __end_of_fputs:
  8430                           
  8431                           	psect	text9
  8432     0FB0                     __ptext9:	
  8433 ;; *************** function _fputc *****************
  8434 ;; Defined at:
  8435 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputc.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  c               2    2[COMMON] int 
  8438 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  8439 ;;		 -> sprintf@f(11), 
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;		None
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  2    2[COMMON] int 
  8444 ;; Registers used:
  8445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8451 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;Total ram usage:        8 bytes
  8456 ;; Hardware stack levels used: 1
  8457 ;; Hardware stack levels required when called: 4
  8458 ;; This function calls:
  8459 ;;		_putch
  8460 ;; This function is called by:
  8461 ;;		_pad
  8462 ;;		_vfpfcnvrt
  8463 ;;		_fputs
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467     0FB0                     _fputc:	
  8468                           ;psect for function _fputc
  8469                           
  8470     0FB0                     l3407:	
  8471                           ;incstack = 0
  8472                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8473                           
  8474     0FB0  0874               	movf	fputc@fp,w
  8475     0FB1  1903               	btfsc	3,2
  8476     0FB2  2FB4               	goto	u1841
  8477     0FB3  2FB5               	goto	u1840
  8478     0FB4                     u1841:
  8479     0FB4  2FBA               	goto	l3411
  8480     0FB5                     u1840:
  8481     0FB5                     l3409:
  8482     0FB5  0874               	movf	fputc@fp,w
  8483     0FB6  1D03               	btfss	3,2
  8484     0FB7  2FB9               	goto	u1851
  8485     0FB8  2FBA               	goto	u1850
  8486     0FB9                     u1851:
  8487     0FB9  2FBF               	goto	l3413
  8488     0FBA                     u1850:
  8489     0FBA                     l3411:
  8490     0FBA  0872               	movf	fputc@c,w
  8491     0FBB  3180  2003  318F   	fcall	_putch
  8492     0FBE  2FFF               	goto	l1914
  8493     0FBF                     l3413:
  8494     0FBF  0874               	movf	fputc@fp,w
  8495     0FC0  3E09               	addlw	9
  8496     0FC1  0086               	movwf	6
  8497     0FC2  0187               	clrf	7
  8498     0FC3  0016               	moviw fsr1++
  8499     0FC4  0401               	iorwf	1,w
  8500     0FC5  1903               	btfsc	3,2
  8501     0FC6  2FC8               	goto	u1861
  8502     0FC7  2FC9               	goto	u1860
  8503     0FC8                     u1861:
  8504     0FC8  2FE7               	goto	l3417
  8505     0FC9                     u1860:
  8506     0FC9                     l3415:
  8507     0FC9  0874               	movf	fputc@fp,w
  8508     0FCA  3E09               	addlw	9
  8509     0FCB  0086               	movwf	6
  8510     0FCC  0187               	clrf	7
  8511     0FCD  3F40               	moviw [0]fsr1
  8512     0FCE  00F5               	movwf	??_fputc
  8513     0FCF  3F41               	moviw [1]fsr1
  8514     0FD0  00F6               	movwf	??_fputc+1
  8515     0FD1  0874               	movf	fputc@fp,w
  8516     0FD2  3E02               	addlw	2
  8517     0FD3  0086               	movwf	6
  8518     0FD4  0187               	clrf	7
  8519     0FD5  3F40               	moviw [0]fsr1
  8520     0FD6  00F7               	movwf	??_fputc+2
  8521     0FD7  3F41               	moviw [1]fsr1
  8522     0FD8  00F8               	movwf	??_fputc+3
  8523     0FD9  0878               	movf	??_fputc+3,w
  8524     0FDA  3A80               	xorlw	128
  8525     0FDB  00F9               	movwf	??_fputc+4
  8526     0FDC  0876               	movf	??_fputc+1,w
  8527     0FDD  3A80               	xorlw	128
  8528     0FDE  0279               	subwf	??_fputc+4,w
  8529     0FDF  1D03               	skipz
  8530     0FE0  2FE3               	goto	u1875
  8531     0FE1  0875               	movf	??_fputc,w
  8532     0FE2  0277               	subwf	??_fputc+2,w
  8533     0FE3                     u1875:
  8534     0FE3  1803               	skipnc
  8535     0FE4  2FE6               	goto	u1871
  8536     0FE5  2FE7               	goto	u1870
  8537     0FE6                     u1871:
  8538     0FE6  2FFF               	goto	l1914
  8539     0FE7                     u1870:
  8540     0FE7                     l3417:
  8541     0FE7  0874               	movf	fputc@fp,w
  8542     0FE8  0086               	movwf	6
  8543     0FE9  0187               	clrf	7
  8544     0FEA  0874               	movf	fputc@fp,w
  8545     0FEB  3E02               	addlw	2
  8546     0FEC  0084               	movwf	4
  8547     0FED  0185               	clrf	5
  8548     0FEE  0800               	movf	0,w
  8549     0FEF  0701               	addwf	1,w
  8550     0FF0  00F5               	movwf	??_fputc
  8551     0FF1  0875               	movf	??_fputc,w
  8552     0FF2  0086               	movwf	6
  8553     0FF3  0187               	clrf	7
  8554     0FF4  0872               	movf	fputc@c,w
  8555     0FF5  0081               	movwf	1
  8556     0FF6                     l3419:
  8557     0FF6  0874               	movf	fputc@fp,w
  8558     0FF7  3E02               	addlw	2
  8559     0FF8  0086               	movwf	6
  8560     0FF9  0187               	clrf	7
  8561     0FFA  3001               	movlw	1
  8562     0FFB  0781               	addwf	1,f
  8563     0FFC  3141               	addfsr 1,1
  8564     0FFD  1803               	skipnc
  8565     0FFE  0A81               	incf	1,f
  8566     0FFF                     l1914:
  8567     0FFF  0008               	return
  8568     1000                     __end_of_fputc:
  8569                           
  8570                           	psect	text10
  8571     0003                     __ptext10:	
  8572 ;; *************** function _putch *****************
  8573 ;; Defined at:
  8574 ;;		line 7 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/putch.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;  c               1    wreg     unsigned char 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  c               1    0[COMMON] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  1    wreg      void 
  8581 ;; Registers used:
  8582 ;;		wreg
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;Total ram usage:        0 bytes
  8593 ;; Hardware stack levels used: 1
  8594 ;; Hardware stack levels required when called: 3
  8595 ;; This function calls:
  8596 ;;		Nothing
  8597 ;; This function is called by:
  8598 ;;		_fputc
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602     0003                     _putch:	
  8603                           ;psect for function _putch
  8604                           
  8605     0003                     l1925:	
  8606                           ;incstack = 0
  8607                           ; Regs used in _putch: [wreg]
  8608                           
  8609     0003  0008               	return
  8610     0004                     __end_of_putch:
  8611                           
  8612                           	psect	text11
  8613     0D75                     __ptext11:	
  8614 ;; *************** function _abs *****************
  8615 ;; Defined at:
  8616 ;;		line 1 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/abs.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  a               2    0[BANK0 ] int 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  2    0[BANK0 ] int 
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8630 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;Total ram usage:        4 bytes
  8635 ;; Hardware stack levels used: 1
  8636 ;; Hardware stack levels required when called: 3
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_dtoa
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644     0D75                     _abs:	
  8645                           ;psect for function _abs
  8646                           
  8647     0D75                     l4857:	
  8648                           ;incstack = 0
  8649                           ; Regs used in _abs: [wreg+status,2+status,0]
  8650                           
  8651     0D75  0020               	movlb	0	; select bank0
  8652     0D76  1BA1               	btfsc	abs@a+1,7
  8653     0D77  2D79               	goto	u3821
  8654     0D78  2D7A               	goto	u3820
  8655     0D79                     u3821:
  8656     0D79  2D7B               	goto	l4861
  8657     0D7A                     u3820:
  8658     0D7A                     l4859:
  8659     0D7A  2D86               	goto	l1902
  8660     0D7B                     l4861:
  8661     0D7B  0920               	comf	abs@a,w
  8662     0D7C  00A2               	movwf	??_abs
  8663     0D7D  0921               	comf	abs@a+1,w
  8664     0D7E  00A3               	movwf	??_abs+1
  8665     0D7F  0AA2               	incf	??_abs,f
  8666     0D80  1903               	skipnz
  8667     0D81  0AA3               	incf	??_abs+1,f
  8668     0D82  0822               	movf	??_abs,w
  8669     0D83  00A0               	movwf	?_abs
  8670     0D84  0823               	movf	??_abs+1,w
  8671     0D85  00A1               	movwf	?_abs+1
  8672     0D86                     l1902:
  8673     0D86  0008               	return
  8674     0D87                     __end_of_abs:
  8675                           
  8676                           	psect	text12
  8677     078E                     __ptext12:	
  8678 ;; *************** function ___awmod *****************
  8679 ;; Defined at:
  8680 ;;		line 5 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/awmod.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  divisor         2    2[COMMON] int 
  8683 ;;  dividend        2    4[COMMON] int 
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;  sign            1    8[COMMON] unsigned char 
  8686 ;;  counter         1    7[COMMON] unsigned char 
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  2    2[COMMON] int 
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, status,0
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;Total ram usage:        7 bytes
  8701 ;; Hardware stack levels used: 1
  8702 ;; Hardware stack levels required when called: 3
  8703 ;; This function calls:
  8704 ;;		Nothing
  8705 ;; This function is called by:
  8706 ;;		_dtoa
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710     078E                     ___awmod:	
  8711                           ;psect for function ___awmod
  8712                           
  8713     078E                     l3489:	
  8714                           ;incstack = 0
  8715                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8716                           
  8717     078E  01F8               	clrf	___awmod@sign
  8718     078F                     l3491:
  8719     078F  1FF5               	btfss	___awmod@dividend+1,7
  8720     0790  2F92               	goto	u2031
  8721     0791  2F93               	goto	u2030
  8722     0792                     u2031:
  8723     0792  2F9A               	goto	l3497
  8724     0793                     u2030:
  8725     0793                     l3493:
  8726     0793  09F4               	comf	___awmod@dividend,f
  8727     0794  09F5               	comf	___awmod@dividend+1,f
  8728     0795  0AF4               	incf	___awmod@dividend,f
  8729     0796  1903               	skipnz
  8730     0797  0AF5               	incf	___awmod@dividend+1,f
  8731     0798                     l3495:
  8732     0798  01F8               	clrf	___awmod@sign
  8733     0799  0AF8               	incf	___awmod@sign,f
  8734     079A                     l3497:
  8735     079A  1FF3               	btfss	___awmod@divisor+1,7
  8736     079B  2F9D               	goto	u2041
  8737     079C  2F9E               	goto	u2040
  8738     079D                     u2041:
  8739     079D  2FA3               	goto	l3501
  8740     079E                     u2040:
  8741     079E                     l3499:
  8742     079E  09F2               	comf	___awmod@divisor,f
  8743     079F  09F3               	comf	___awmod@divisor+1,f
  8744     07A0  0AF2               	incf	___awmod@divisor,f
  8745     07A1  1903               	skipnz
  8746     07A2  0AF3               	incf	___awmod@divisor+1,f
  8747     07A3                     l3501:
  8748     07A3  0872               	movf	___awmod@divisor,w
  8749     07A4  0473               	iorwf	___awmod@divisor+1,w
  8750     07A5  1903               	btfsc	3,2
  8751     07A6  2FA8               	goto	u2051
  8752     07A7  2FA9               	goto	u2050
  8753     07A8                     u2051:
  8754     07A8  2FD2               	goto	l3519
  8755     07A9                     u2050:
  8756     07A9                     l3503:
  8757     07A9  01F7               	clrf	___awmod@counter
  8758     07AA  0AF7               	incf	___awmod@counter,f
  8759     07AB  2FB5               	goto	l3509
  8760     07AC                     l3505:
  8761     07AC  3001               	movlw	1
  8762     07AD                     u2065:
  8763     07AD  35F2               	lslf	___awmod@divisor,f
  8764     07AE  0DF3               	rlf	___awmod@divisor+1,f
  8765     07AF  0B89               	decfsz	9,f
  8766     07B0  2FAD               	goto	u2065
  8767     07B1                     l3507:
  8768     07B1  3001               	movlw	1
  8769     07B2  00F6               	movwf	??___awmod
  8770     07B3  0876               	movf	??___awmod,w
  8771     07B4  07F7               	addwf	___awmod@counter,f
  8772     07B5                     l3509:
  8773     07B5  1FF3               	btfss	___awmod@divisor+1,7
  8774     07B6  2FB8               	goto	u2071
  8775     07B7  2FB9               	goto	u2070
  8776     07B8                     u2071:
  8777     07B8  2FAC               	goto	l3505
  8778     07B9                     u2070:
  8779     07B9                     l3511:
  8780     07B9  0873               	movf	___awmod@divisor+1,w
  8781     07BA  0275               	subwf	___awmod@dividend+1,w
  8782     07BB  1D03               	skipz
  8783     07BC  2FBF               	goto	u2085
  8784     07BD  0872               	movf	___awmod@divisor,w
  8785     07BE  0274               	subwf	___awmod@dividend,w
  8786     07BF                     u2085:
  8787     07BF  1C03               	skipc
  8788     07C0  2FC2               	goto	u2081
  8789     07C1  2FC3               	goto	u2080
  8790     07C2                     u2081:
  8791     07C2  2FC7               	goto	l3515
  8792     07C3                     u2080:
  8793     07C3                     l3513:
  8794     07C3  0872               	movf	___awmod@divisor,w
  8795     07C4  02F4               	subwf	___awmod@dividend,f
  8796     07C5  0873               	movf	___awmod@divisor+1,w
  8797     07C6  3BF5               	subwfb	___awmod@dividend+1,f
  8798     07C7                     l3515:
  8799     07C7  3001               	movlw	1
  8800     07C8                     u2095:
  8801     07C8  36F3               	lsrf	___awmod@divisor+1,f
  8802     07C9  0CF2               	rrf	___awmod@divisor,f
  8803     07CA  0B89               	decfsz	9,f
  8804     07CB  2FC8               	goto	u2095
  8805     07CC                     l3517:
  8806     07CC  3001               	movlw	1
  8807     07CD  02F7               	subwf	___awmod@counter,f
  8808     07CE  1D03               	btfss	3,2
  8809     07CF  2FD1               	goto	u2101
  8810     07D0  2FD2               	goto	u2100
  8811     07D1                     u2101:
  8812     07D1  2FB9               	goto	l3511
  8813     07D2                     u2100:
  8814     07D2                     l3519:
  8815     07D2  0878               	movf	___awmod@sign,w
  8816     07D3  1903               	btfsc	3,2
  8817     07D4  2FD6               	goto	u2111
  8818     07D5  2FD7               	goto	u2110
  8819     07D6                     u2111:
  8820     07D6  2FDC               	goto	l3523
  8821     07D7                     u2110:
  8822     07D7                     l3521:
  8823     07D7  09F4               	comf	___awmod@dividend,f
  8824     07D8  09F5               	comf	___awmod@dividend+1,f
  8825     07D9  0AF4               	incf	___awmod@dividend,f
  8826     07DA  1903               	skipnz
  8827     07DB  0AF5               	incf	___awmod@dividend+1,f
  8828     07DC                     l3523:
  8829     07DC  0875               	movf	___awmod@dividend+1,w
  8830     07DD  00F3               	movwf	?___awmod+1
  8831     07DE  0874               	movf	___awmod@dividend,w
  8832     07DF  00F2               	movwf	?___awmod
  8833     07E0                     l1528:
  8834     07E0  0008               	return
  8835     07E1                     __end_of___awmod:
  8836                           
  8837                           	psect	text13
  8838     072E                     __ptext13:	
  8839 ;; *************** function ___awdiv *****************
  8840 ;; Defined at:
  8841 ;;		line 5 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/awdiv.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  divisor         2    2[COMMON] int 
  8844 ;;  dividend        2    4[COMMON] int 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  quotient        2    2[BANK0 ] int 
  8847 ;;  sign            1    1[BANK0 ] unsigned char 
  8848 ;;  counter         1    0[BANK0 ] unsigned char 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  2    2[COMMON] int 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;Total ram usage:        9 bytes
  8863 ;; Hardware stack levels used: 1
  8864 ;; Hardware stack levels required when called: 3
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		_dtoa
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872     072E                     ___awdiv:	
  8873                           ;psect for function ___awdiv
  8874                           
  8875     072E                     l4797:	
  8876                           ;incstack = 0
  8877                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8878                           
  8879     072E  0020               	movlb	0	; select bank0
  8880     072F  01A1               	clrf	___awdiv@sign
  8881     0730                     l4799:
  8882     0730  1FF3               	btfss	___awdiv@divisor+1,7
  8883     0731  2F33               	goto	u3681
  8884     0732  2F34               	goto	u3680
  8885     0733                     u3681:
  8886     0733  2F3B               	goto	l4805
  8887     0734                     u3680:
  8888     0734                     l4801:
  8889     0734  09F2               	comf	___awdiv@divisor,f
  8890     0735  09F3               	comf	___awdiv@divisor+1,f
  8891     0736  0AF2               	incf	___awdiv@divisor,f
  8892     0737  1903               	skipnz
  8893     0738  0AF3               	incf	___awdiv@divisor+1,f
  8894     0739                     l4803:
  8895     0739  01A1               	clrf	___awdiv@sign
  8896     073A  0AA1               	incf	___awdiv@sign,f
  8897     073B                     l4805:
  8898     073B  1FF5               	btfss	___awdiv@dividend+1,7
  8899     073C  2F3E               	goto	u3691
  8900     073D  2F3F               	goto	u3690
  8901     073E                     u3691:
  8902     073E  2F48               	goto	l4811
  8903     073F                     u3690:
  8904     073F                     l4807:
  8905     073F  09F4               	comf	___awdiv@dividend,f
  8906     0740  09F5               	comf	___awdiv@dividend+1,f
  8907     0741  0AF4               	incf	___awdiv@dividend,f
  8908     0742  1903               	skipnz
  8909     0743  0AF5               	incf	___awdiv@dividend+1,f
  8910     0744                     l4809:
  8911     0744  3001               	movlw	1
  8912     0745  00F6               	movwf	??___awdiv
  8913     0746  0876               	movf	??___awdiv,w
  8914     0747  06A1               	xorwf	___awdiv@sign,f
  8915     0748                     l4811:
  8916     0748  01A2               	clrf	___awdiv@quotient
  8917     0749  01A3               	clrf	___awdiv@quotient+1
  8918     074A                     l4813:
  8919     074A  0872               	movf	___awdiv@divisor,w
  8920     074B  0473               	iorwf	___awdiv@divisor+1,w
  8921     074C  1903               	btfsc	3,2
  8922     074D  2F4F               	goto	u3701
  8923     074E  2F50               	goto	u3700
  8924     074F                     u3701:
  8925     074F  2F7F               	goto	l4833
  8926     0750                     u3700:
  8927     0750                     l4815:
  8928     0750  01A0               	clrf	___awdiv@counter
  8929     0751  0AA0               	incf	___awdiv@counter,f
  8930     0752  2F5C               	goto	l4821
  8931     0753                     l4817:
  8932     0753  3001               	movlw	1
  8933     0754                     u3715:
  8934     0754  35F2               	lslf	___awdiv@divisor,f
  8935     0755  0DF3               	rlf	___awdiv@divisor+1,f
  8936     0756  0B89               	decfsz	9,f
  8937     0757  2F54               	goto	u3715
  8938     0758                     l4819:
  8939     0758  3001               	movlw	1
  8940     0759  00F6               	movwf	??___awdiv
  8941     075A  0876               	movf	??___awdiv,w
  8942     075B  07A0               	addwf	___awdiv@counter,f
  8943     075C                     l4821:
  8944     075C  1FF3               	btfss	___awdiv@divisor+1,7
  8945     075D  2F5F               	goto	u3721
  8946     075E  2F60               	goto	u3720
  8947     075F                     u3721:
  8948     075F  2F53               	goto	l4817
  8949     0760                     u3720:
  8950     0760                     l4823:
  8951     0760  3001               	movlw	1
  8952     0761                     u3735:
  8953     0761  35A2               	lslf	___awdiv@quotient,f
  8954     0762  0DA3               	rlf	___awdiv@quotient+1,f
  8955     0763  0B89               	decfsz	9,f
  8956     0764  2F61               	goto	u3735
  8957     0765  0873               	movf	___awdiv@divisor+1,w
  8958     0766  0275               	subwf	___awdiv@dividend+1,w
  8959     0767  1D03               	skipz
  8960     0768  2F6B               	goto	u3745
  8961     0769  0872               	movf	___awdiv@divisor,w
  8962     076A  0274               	subwf	___awdiv@dividend,w
  8963     076B                     u3745:
  8964     076B  1C03               	skipc
  8965     076C  2F6E               	goto	u3741
  8966     076D  2F6F               	goto	u3740
  8967     076E                     u3741:
  8968     076E  2F74               	goto	l4829
  8969     076F                     u3740:
  8970     076F                     l4825:
  8971     076F  0872               	movf	___awdiv@divisor,w
  8972     0770  02F4               	subwf	___awdiv@dividend,f
  8973     0771  0873               	movf	___awdiv@divisor+1,w
  8974     0772  3BF5               	subwfb	___awdiv@dividend+1,f
  8975     0773                     l4827:
  8976     0773  1422               	bsf	___awdiv@quotient,0
  8977     0774                     l4829:
  8978     0774  3001               	movlw	1
  8979     0775                     u3755:
  8980     0775  36F3               	lsrf	___awdiv@divisor+1,f
  8981     0776  0CF2               	rrf	___awdiv@divisor,f
  8982     0777  0B89               	decfsz	9,f
  8983     0778  2F75               	goto	u3755
  8984     0779                     l4831:
  8985     0779  3001               	movlw	1
  8986     077A  02A0               	subwf	___awdiv@counter,f
  8987     077B  1D03               	btfss	3,2
  8988     077C  2F7E               	goto	u3761
  8989     077D  2F7F               	goto	u3760
  8990     077E                     u3761:
  8991     077E  2F60               	goto	l4823
  8992     077F                     u3760:
  8993     077F                     l4833:
  8994     077F  0821               	movf	___awdiv@sign,w
  8995     0780  1903               	btfsc	3,2
  8996     0781  2F83               	goto	u3771
  8997     0782  2F84               	goto	u3770
  8998     0783                     u3771:
  8999     0783  2F89               	goto	l4837
  9000     0784                     u3770:
  9001     0784                     l4835:
  9002     0784  09A2               	comf	___awdiv@quotient,f
  9003     0785  09A3               	comf	___awdiv@quotient+1,f
  9004     0786  0AA2               	incf	___awdiv@quotient,f
  9005     0787  1903               	skipnz
  9006     0788  0AA3               	incf	___awdiv@quotient+1,f
  9007     0789                     l4837:
  9008     0789  0823               	movf	___awdiv@quotient+1,w
  9009     078A  00F3               	movwf	?___awdiv+1
  9010     078B  0822               	movf	___awdiv@quotient,w
  9011     078C  00F2               	movwf	?___awdiv
  9012     078D                     l1515:
  9013     078D  0008               	return
  9014     078E                     __end_of___awdiv:
  9015                           
  9016                           	psect	text14
  9017     0323                     __ptext14:	
  9018 ;; *************** function _readTC74 *****************
  9019 ;; Defined at:
  9020 ;;		line 66 in file "main.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;		None
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  value           1    5[COMMON] unsigned char 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  1    wreg      unsigned char 
  9027 ;; Registers used:
  9028 ;;		wreg, status,2, status,0, pclath, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;Total ram usage:        2 bytes
  9039 ;; Hardware stack levels used: 1
  9040 ;; Hardware stack levels required when called: 4
  9041 ;; This function calls:
  9042 ;;		_ReadI2C
  9043 ;;		_WriteI2C
  9044 ;; This function is called by:
  9045 ;;		_main
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049     0323                     _readTC74:	
  9050                           ;psect for function _readTC74
  9051                           
  9052     0323                     l1094:	
  9053                           ;incstack = 0
  9054                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
  9055                           ;main.c: 68:  unsigned char value;;main.c: 69: do{
  9056                           
  9057     0323                     l4123:	
  9058                           ;main.c: 70:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9059                           
  9060     0323  0023               	movlb	3	; select bank3
  9061     0324  0C0F               	rrf	15,w	;volatile
  9062     0325  0C89               	rrf	9,f
  9063     0326  3901               	andlw	1
  9064     0327  00F4               	movwf	??_readTC74
  9065     0328  0811               	movf	17,w	;volatile
  9066     0329  391F               	andlw	31
  9067     032A  0474               	iorwf	??_readTC74,w
  9068     032B  1D03               	btfss	3,2
  9069     032C  2B2E               	goto	u3021
  9070     032D  2B2F               	goto	u3020
  9071     032E                     u3021:
  9072     032E  2B23               	goto	l4123
  9073     032F                     u3020:
  9074     032F                     l1098:	
  9075                           ;main.c: 71:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
  9076                           
  9077     032F  1411               	bsf	17,0	;volatile
  9078     0330                     l1099:
  9079     0330  1811               	btfsc	17,0	;volatile
  9080     0331  2B33               	goto	u3031
  9081     0332  2B34               	goto	u3030
  9082     0333                     u3031:
  9083     0333  2B30               	goto	l1099
  9084     0334                     u3030:
  9085     0334                     l4125:
  9086     0334  0C0F               	rrf	15,w	;volatile
  9087     0335  0C89               	rrf	9,f
  9088     0336  3901               	andlw	1
  9089     0337  00F4               	movwf	??_readTC74
  9090     0338  0811               	movf	17,w	;volatile
  9091     0339  391F               	andlw	31
  9092     033A  0474               	iorwf	??_readTC74,w
  9093     033B  1D03               	btfss	3,2
  9094     033C  2B3E               	goto	u3041
  9095     033D  2B3F               	goto	u3040
  9096     033E                     u3041:
  9097     033E  2B34               	goto	l4125
  9098     033F                     u3040:
  9099     033F                     l4127:
  9100                           
  9101                           ;main.c: 73:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9102     033F  309A               	movlw	154
  9103     0340  318F  2765  3183   	fcall	_WriteI2C
  9104     0343                     l4129:
  9105     0343  0023               	movlb	3	; select bank3
  9106     0344  0C0F               	rrf	15,w	;volatile
  9107     0345  0C89               	rrf	9,f
  9108     0346  3901               	andlw	1
  9109     0347  00F4               	movwf	??_readTC74
  9110     0348  0811               	movf	17,w	;volatile
  9111     0349  391F               	andlw	31
  9112     034A  0474               	iorwf	??_readTC74,w
  9113     034B  1D03               	btfss	3,2
  9114     034C  2B4E               	goto	u3051
  9115     034D  2B4F               	goto	u3050
  9116     034E                     u3051:
  9117     034E  2B43               	goto	l4129
  9118     034F                     u3050:
  9119     034F                     l4131:
  9120                           
  9121                           ;main.c: 74:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9122     034F  3001               	movlw	1
  9123     0350  318F  2765  3183   	fcall	_WriteI2C
  9124     0353                     l4133:
  9125     0353  0023               	movlb	3	; select bank3
  9126     0354  0C0F               	rrf	15,w	;volatile
  9127     0355  0C89               	rrf	9,f
  9128     0356  3901               	andlw	1
  9129     0357  00F4               	movwf	??_readTC74
  9130     0358  0811               	movf	17,w	;volatile
  9131     0359  391F               	andlw	31
  9132     035A  0474               	iorwf	??_readTC74,w
  9133     035B  1D03               	btfss	3,2
  9134     035C  2B5E               	goto	u3061
  9135     035D  2B5F               	goto	u3060
  9136     035E                     u3061:
  9137     035E  2B53               	goto	l4133
  9138     035F                     u3060:
  9139     035F                     l1112:	
  9140                           ;main.c: 75:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9141                           
  9142     035F  1491               	bsf	17,1	;volatile
  9143     0360                     l1113:
  9144     0360  1891               	btfsc	17,1	;volatile
  9145     0361  2B63               	goto	u3071
  9146     0362  2B64               	goto	u3070
  9147     0363                     u3071:
  9148     0363  2B60               	goto	l1113
  9149     0364                     u3070:
  9150     0364                     l4135:
  9151     0364  0C0F               	rrf	15,w	;volatile
  9152     0365  0C89               	rrf	9,f
  9153     0366  3901               	andlw	1
  9154     0367  00F4               	movwf	??_readTC74
  9155     0368  0811               	movf	17,w	;volatile
  9156     0369  391F               	andlw	31
  9157     036A  0474               	iorwf	??_readTC74,w
  9158     036B  1D03               	btfss	3,2
  9159     036C  2B6E               	goto	u3081
  9160     036D  2B6F               	goto	u3080
  9161     036E                     u3081:
  9162     036E  2B64               	goto	l4135
  9163     036F                     u3080:
  9164     036F                     l4137:
  9165                           
  9166                           ;main.c: 76:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9167     036F  309B               	movlw	155
  9168     0370  318F  2765  3183   	fcall	_WriteI2C
  9169     0373                     l4139:
  9170     0373  0023               	movlb	3	; select bank3
  9171     0374  0C0F               	rrf	15,w	;volatile
  9172     0375  0C89               	rrf	9,f
  9173     0376  3901               	andlw	1
  9174     0377  00F4               	movwf	??_readTC74
  9175     0378  0811               	movf	17,w	;volatile
  9176     0379  391F               	andlw	31
  9177     037A  0474               	iorwf	??_readTC74,w
  9178     037B  1D03               	btfss	3,2
  9179     037C  2B7E               	goto	u3091
  9180     037D  2B7F               	goto	u3090
  9181     037E                     u3091:
  9182     037E  2B73               	goto	l4139
  9183     037F                     u3090:
  9184     037F                     l4141:
  9185                           
  9186                           ;main.c: 77:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9187     037F  318E  2608  3183   	fcall	_ReadI2C
  9188     0382  00F5               	movwf	readTC74@value
  9189     0383                     l4143:
  9190     0383  0023               	movlb	3	; select bank3
  9191     0384  0C0F               	rrf	15,w	;volatile
  9192     0385  0C89               	rrf	9,f
  9193     0386  3901               	andlw	1
  9194     0387  00F4               	movwf	??_readTC74
  9195     0388  0811               	movf	17,w	;volatile
  9196     0389  391F               	andlw	31
  9197     038A  0474               	iorwf	??_readTC74,w
  9198     038B  1D03               	btfss	3,2
  9199     038C  2B8E               	goto	u3101
  9200     038D  2B8F               	goto	u3100
  9201     038E                     u3101:
  9202     038E  2B83               	goto	l4143
  9203     038F                     u3100:
  9204     038F                     l1126:	
  9205                           ;main.c: 78:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9206                           
  9207     038F  1691               	bsf	17,5	;volatile
  9208     0390  1611               	bsf	17,4	;volatile
  9209     0391                     l1127:
  9210     0391  1A11               	btfsc	17,4	;volatile
  9211     0392  2B94               	goto	u3111
  9212     0393  2B95               	goto	u3110
  9213     0394                     u3111:
  9214     0394  2B91               	goto	l1127
  9215     0395                     u3110:
  9216     0395                     l4145:
  9217     0395  0C0F               	rrf	15,w	;volatile
  9218     0396  0C89               	rrf	9,f
  9219     0397  3901               	andlw	1
  9220     0398  00F4               	movwf	??_readTC74
  9221     0399  0811               	movf	17,w	;volatile
  9222     039A  391F               	andlw	31
  9223     039B  0474               	iorwf	??_readTC74,w
  9224     039C  1D03               	btfss	3,2
  9225     039D  2B9F               	goto	u3121
  9226     039E  2BA0               	goto	u3120
  9227     039F                     u3121:
  9228     039F  2B95               	goto	l4145
  9229     03A0                     u3120:
  9230     03A0                     l1134:	
  9231                           ;main.c: 79:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
  9232                           
  9233     03A0  1511               	bsf	17,2	;volatile
  9234     03A1                     l1135:
  9235     03A1  1911               	btfsc	17,2	;volatile
  9236     03A2  2BA4               	goto	u3131
  9237     03A3  2BA5               	goto	u3130
  9238     03A4                     u3131:
  9239     03A4  2BA1               	goto	l1135
  9240     03A5                     u3130:
  9241     03A5                     l1138:
  9242                           
  9243                           ;main.c: 80: } while (!(value & 0x40));
  9244     03A5  1F75               	btfss	readTC74@value,6
  9245     03A6  2BA8               	goto	u3141
  9246     03A7  2BA9               	goto	u3140
  9247     03A8                     u3141:
  9248     03A8  2B23               	goto	l1094
  9249     03A9                     u3140:
  9250     03A9                     l4147:
  9251     03A9  0C0F               	rrf	15,w	;volatile
  9252     03AA  0C89               	rrf	9,f
  9253     03AB  3901               	andlw	1
  9254     03AC  00F4               	movwf	??_readTC74
  9255     03AD  0811               	movf	17,w	;volatile
  9256     03AE  391F               	andlw	31
  9257     03AF  0474               	iorwf	??_readTC74,w
  9258     03B0  1D03               	btfss	3,2
  9259     03B1  2BB3               	goto	u3151
  9260     03B2  2BB4               	goto	u3150
  9261     03B3                     u3151:
  9262     03B3  2BA9               	goto	l4147
  9263     03B4                     u3150:
  9264     03B4                     l1143:	
  9265                           ;main.c: 83:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
  9266                           
  9267     03B4  1411               	bsf	17,0	;volatile
  9268     03B5                     l1144:
  9269     03B5  1811               	btfsc	17,0	;volatile
  9270     03B6  2BB8               	goto	u3161
  9271     03B7  2BB9               	goto	u3160
  9272     03B8                     u3161:
  9273     03B8  2BB5               	goto	l1144
  9274     03B9                     u3160:
  9275     03B9                     l4149:
  9276     03B9  0C0F               	rrf	15,w	;volatile
  9277     03BA  0C89               	rrf	9,f
  9278     03BB  3901               	andlw	1
  9279     03BC  00F4               	movwf	??_readTC74
  9280     03BD  0811               	movf	17,w	;volatile
  9281     03BE  391F               	andlw	31
  9282     03BF  0474               	iorwf	??_readTC74,w
  9283     03C0  1D03               	btfss	3,2
  9284     03C1  2BC3               	goto	u3171
  9285     03C2  2BC4               	goto	u3170
  9286     03C3                     u3171:
  9287     03C3  2BB9               	goto	l4149
  9288     03C4                     u3170:
  9289     03C4                     l4151:
  9290                           
  9291                           ;main.c: 84:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9292     03C4  309A               	movlw	154
  9293     03C5  318F  2765  3183   	fcall	_WriteI2C
  9294     03C8                     l4153:
  9295     03C8  0023               	movlb	3	; select bank3
  9296     03C9  0C0F               	rrf	15,w	;volatile
  9297     03CA  0C89               	rrf	9,f
  9298     03CB  3901               	andlw	1
  9299     03CC  00F4               	movwf	??_readTC74
  9300     03CD  0811               	movf	17,w	;volatile
  9301     03CE  391F               	andlw	31
  9302     03CF  0474               	iorwf	??_readTC74,w
  9303     03D0  1D03               	btfss	3,2
  9304     03D1  2BD3               	goto	u3181
  9305     03D2  2BD4               	goto	u3180
  9306     03D3                     u3181:
  9307     03D3  2BC8               	goto	l4153
  9308     03D4                     u3180:
  9309     03D4                     l4155:
  9310                           
  9311                           ;main.c: 85:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9312     03D4  3000               	movlw	0
  9313     03D5  318F  2765  3183   	fcall	_WriteI2C
  9314     03D8                     l4157:
  9315     03D8  0023               	movlb	3	; select bank3
  9316     03D9  0C0F               	rrf	15,w	;volatile
  9317     03DA  0C89               	rrf	9,f
  9318     03DB  3901               	andlw	1
  9319     03DC  00F4               	movwf	??_readTC74
  9320     03DD  0811               	movf	17,w	;volatile
  9321     03DE  391F               	andlw	31
  9322     03DF  0474               	iorwf	??_readTC74,w
  9323     03E0  1D03               	btfss	3,2
  9324     03E1  2BE3               	goto	u3191
  9325     03E2  2BE4               	goto	u3190
  9326     03E3                     u3191:
  9327     03E3  2BD8               	goto	l4157
  9328     03E4                     u3190:
  9329     03E4                     l1157:	
  9330                           ;main.c: 86:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9331                           
  9332     03E4  1491               	bsf	17,1	;volatile
  9333     03E5                     l1158:
  9334     03E5  1891               	btfsc	17,1	;volatile
  9335     03E6  2BE8               	goto	u3201
  9336     03E7  2BE9               	goto	u3200
  9337     03E8                     u3201:
  9338     03E8  2BE5               	goto	l1158
  9339     03E9                     u3200:
  9340     03E9                     l4159:
  9341     03E9  0C0F               	rrf	15,w	;volatile
  9342     03EA  0C89               	rrf	9,f
  9343     03EB  3901               	andlw	1
  9344     03EC  00F4               	movwf	??_readTC74
  9345     03ED  0811               	movf	17,w	;volatile
  9346     03EE  391F               	andlw	31
  9347     03EF  0474               	iorwf	??_readTC74,w
  9348     03F0  1D03               	btfss	3,2
  9349     03F1  2BF3               	goto	u3211
  9350     03F2  2BF4               	goto	u3210
  9351     03F3                     u3211:
  9352     03F3  2BE9               	goto	l4159
  9353     03F4                     u3210:
  9354     03F4                     l4161:
  9355                           
  9356                           ;main.c: 87:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9357     03F4  309B               	movlw	155
  9358     03F5  318F  2765  3183   	fcall	_WriteI2C
  9359     03F8                     l4163:
  9360     03F8  0023               	movlb	3	; select bank3
  9361     03F9  0C0F               	rrf	15,w	;volatile
  9362     03FA  0C89               	rrf	9,f
  9363     03FB  3901               	andlw	1
  9364     03FC  00F4               	movwf	??_readTC74
  9365     03FD  0811               	movf	17,w	;volatile
  9366     03FE  391F               	andlw	31
  9367     03FF  0474               	iorwf	??_readTC74,w
  9368     0400  1D03               	btfss	3,2
  9369     0401  2C03               	goto	u3221
  9370     0402  2C04               	goto	u3220
  9371     0403                     u3221:
  9372     0403  2BF8               	goto	l4163
  9373     0404                     u3220:
  9374     0404                     l4165:
  9375                           
  9376                           ;main.c: 88:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9377     0404  318E  2608  3183   	fcall	_ReadI2C
  9378     0407  00F5               	movwf	readTC74@value
  9379     0408                     l4167:
  9380     0408  0023               	movlb	3	; select bank3
  9381     0409  0C0F               	rrf	15,w	;volatile
  9382     040A  0C89               	rrf	9,f
  9383     040B  3901               	andlw	1
  9384     040C  00F4               	movwf	??_readTC74
  9385     040D  0811               	movf	17,w	;volatile
  9386     040E  391F               	andlw	31
  9387     040F  0474               	iorwf	??_readTC74,w
  9388     0410  1D03               	btfss	3,2
  9389     0411  2C13               	goto	u3231
  9390     0412  2C14               	goto	u3230
  9391     0413                     u3231:
  9392     0413  2C08               	goto	l4167
  9393     0414                     u3230:
  9394     0414                     l1171:	
  9395                           ;main.c: 89:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9396                           
  9397     0414  1691               	bsf	17,5	;volatile
  9398     0415  1611               	bsf	17,4	;volatile
  9399     0416                     l1172:
  9400     0416  1A11               	btfsc	17,4	;volatile
  9401     0417  2C19               	goto	u3241
  9402     0418  2C1A               	goto	u3240
  9403     0419                     u3241:
  9404     0419  2C16               	goto	l1172
  9405     041A                     u3240:
  9406     041A                     l4169:
  9407     041A  0C0F               	rrf	15,w	;volatile
  9408     041B  0C89               	rrf	9,f
  9409     041C  3901               	andlw	1
  9410     041D  00F4               	movwf	??_readTC74
  9411     041E  0811               	movf	17,w	;volatile
  9412     041F  391F               	andlw	31
  9413     0420  0474               	iorwf	??_readTC74,w
  9414     0421  1D03               	btfss	3,2
  9415     0422  2C24               	goto	u3251
  9416     0423  2C25               	goto	u3250
  9417     0424                     u3251:
  9418     0424  2C1A               	goto	l4169
  9419     0425                     u3250:
  9420     0425                     l1179:	
  9421                           ;main.c: 90:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
  9422                           
  9423     0425  1511               	bsf	17,2	;volatile
  9424     0426                     l1180:
  9425     0426  1911               	btfsc	17,2	;volatile
  9426     0427  2C29               	goto	u3261
  9427     0428  2C2A               	goto	u3260
  9428     0429                     u3261:
  9429     0429  2C26               	goto	l1180
  9430     042A                     u3260:
  9431     042A                     l4171:
  9432                           
  9433                           ;main.c: 92:  return value;
  9434     042A  0875               	movf	readTC74@value,w
  9435     042B                     l1184:
  9436     042B  0008               	return
  9437     042C                     __end_of_readTC74:
  9438                           
  9439                           	psect	text15
  9440     0D9A                     __ptext15:	
  9441 ;; *************** function _SYSTEM_Initialize *****************
  9442 ;; Defined at:
  9443 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;		None
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;		None
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1    wreg      void 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0, pclath, cstack
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;Total ram usage:        0 bytes
  9462 ;; Hardware stack levels used: 1
  9463 ;; Hardware stack levels required when called: 5
  9464 ;; This function calls:
  9465 ;;		_ADCC_Initialize
  9466 ;;		_I2C1_Initialize
  9467 ;;		_OSCILLATOR_Initialize
  9468 ;;		_PIN_MANAGER_Initialize
  9469 ;;		_PMD_Initialize
  9470 ;;		_TMR1_Initialize
  9471 ;; This function is called by:
  9472 ;;		_main
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476     0D9A                     _SYSTEM_Initialize:	
  9477                           ;psect for function _SYSTEM_Initialize
  9478                           
  9479     0D9A                     l4057:	
  9480                           ;incstack = 0
  9481                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9482                           
  9483                           
  9484                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  9485     0D9A  318D  252A  318D   	fcall	_PMD_Initialize
  9486     0D9D                     l4059:
  9487                           
  9488                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  9489     0D9D  318D  253B  318D   	fcall	_I2C1_Initialize
  9490     0DA0                     l4061:
  9491                           
  9492                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9493     0DA0  318F  271F  318D   	fcall	_PIN_MANAGER_Initialize
  9494     0DA3                     l4063:
  9495                           
  9496                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9497     0DA3  318D  2532  318D   	fcall	_OSCILLATOR_Initialize
  9498     0DA6                     l4065:
  9499                           
  9500                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  9501     0DA6  318D  25D8  318D   	fcall	_ADCC_Initialize
  9502     0DA9                     l4067:
  9503                           
  9504                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  9505     0DA9  318E  263E  318D   	fcall	_TMR1_Initialize
  9506     0DAC                     l392:
  9507     0DAC  0008               	return
  9508     0DAD                     __end_of_SYSTEM_Initialize:
  9509                           
  9510                           	psect	text16
  9511     0E3E                     __ptext16:	
  9512 ;; *************** function _TMR1_Initialize *****************
  9513 ;; Defined at:
  9514 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;		None
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;		None
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  1    wreg      void 
  9521 ;; Registers used:
  9522 ;;		wreg, status,2, status,0, pclath, cstack
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;Total ram usage:        0 bytes
  9533 ;; Hardware stack levels used: 1
  9534 ;; Hardware stack levels required when called: 4
  9535 ;; This function calls:
  9536 ;;		_TMR1_SetInterruptHandler
  9537 ;; This function is called by:
  9538 ;;		_SYSTEM_Initialize
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542     0E3E                     _TMR1_Initialize:	
  9543                           ;psect for function _TMR1_Initialize
  9544                           
  9545     0E3E                     l3903:	
  9546                           ;incstack = 0
  9547                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9548                           
  9549                           
  9550                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  9551     0E3E  0024               	movlb	4	; select bank4
  9552     0E3F  018F               	clrf	15	;volatile
  9553                           
  9554                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  9555     0E40  0190               	clrf	16	;volatile
  9556     0E41                     l3905:
  9557                           
  9558                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  9559     0E41  3004               	movlw	4
  9560     0E42  0091               	movwf	17	;volatile
  9561     0E43                     l3907:
  9562                           
  9563                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
  9564     0E43  3086               	movlw	134
  9565     0E44  008D               	movwf	13	;volatile
  9566     0E45                     l3909:
  9567                           
  9568                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
  9569     0E45  30E8               	movlw	232
  9570     0E46  008C               	movwf	12	;volatile
  9571     0E47                     l3911:
  9572                           
  9573                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  9574     0E47  002E               	movlb	14	; select bank14
  9575     0E48  1010               	bcf	16,0	;volatile
  9576     0E49                     l3913:
  9577                           
  9578                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9579     0E49  0024               	movlb	4	; select bank4
  9580     0E4A  080D               	movf	13,w	;volatile
  9581     0E4B  00FB               	movwf	_timer1ReloadVal+1	;volatile
  9582     0E4C  080C               	movf	12,w	;volatile
  9583     0E4D  00FA               	movwf	_timer1ReloadVal	;volatile
  9584     0E4E                     l3915:
  9585                           
  9586                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  9587     0E4E  002E               	movlb	14	; select bank14
  9588     0E4F  141A               	bsf	26,0	;volatile
  9589     0E50                     l3917:
  9590                           
  9591                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  9592     0E50  3002               	movlw	low _TMR1_DefaultInterruptHandler
  9593     0E51  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  9594     0E52  3000               	movlw	high _TMR1_DefaultInterruptHandler
  9595     0E53  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  9596     0E54  318D  250F  318E   	fcall	_TMR1_SetInterruptHandler
  9597     0E57                     l3919:
  9598                           
  9599                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
  9600     0E57  3001               	movlw	1
  9601     0E58  0024               	movlb	4	; select bank4
  9602     0E59  008E               	movwf	14	;volatile
  9603     0E5A                     l1004:
  9604     0E5A  0008               	return
  9605     0E5B                     __end_of_TMR1_Initialize:
  9606                           
  9607                           	psect	text17
  9608     0D0F                     __ptext17:	
  9609 ;; *************** function _TMR1_SetInterruptHandler *****************
  9610 ;; Defined at:
  9611 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  9614 ;;		 -> Timer1(1), TMR1_DefaultInterruptHandler(1), 
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;		None
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  1    wreg      void 
  9619 ;; Registers used:
  9620 ;;		wreg
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;Total ram usage:        2 bytes
  9631 ;; Hardware stack levels used: 1
  9632 ;; Hardware stack levels required when called: 3
  9633 ;; This function calls:
  9634 ;;		Nothing
  9635 ;; This function is called by:
  9636 ;;		_TMR1_Initialize
  9637 ;;		_main
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641     0D0F                     _TMR1_SetInterruptHandler:	
  9642                           ;psect for function _TMR1_SetInterruptHandler
  9643                           
  9644     0D0F                     l3697:	
  9645                           ;incstack = 0
  9646                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9647                           
  9648                           
  9649                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  9650     0D0F  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  9651     0D10  0020               	movlb	0	; select bank0
  9652     0D11  00ED               	movwf	_TMR1_InterruptHandler+1
  9653     0D12  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  9654     0D13  00EC               	movwf	_TMR1_InterruptHandler
  9655     0D14                     l1034:
  9656     0D14  0008               	return
  9657     0D15                     __end_of_TMR1_SetInterruptHandler:
  9658                           
  9659                           	psect	text18
  9660     0D2A                     __ptext18:	
  9661 ;; *************** function _PMD_Initialize *****************
  9662 ;; Defined at:
  9663 ;;		line 74 in file "mcc_generated_files/mcc.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;		None
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      void 
  9670 ;; Registers used:
  9671 ;;		status,2
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9681 ;;Total ram usage:        0 bytes
  9682 ;; Hardware stack levels used: 1
  9683 ;; Hardware stack levels required when called: 3
  9684 ;; This function calls:
  9685 ;;		Nothing
  9686 ;; This function is called by:
  9687 ;;		_SYSTEM_Initialize
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691     0D2A                     _PMD_Initialize:	
  9692                           ;psect for function _PMD_Initialize
  9693                           
  9694     0D2A                     l3845:	
  9695                           ;incstack = 0
  9696                           ; Regs used in _PMD_Initialize: [status,2]
  9697                           
  9698                           
  9699                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  9700     0D2A  002F               	movlb	15	; select bank15
  9701     0D2B  0196               	clrf	22	;volatile
  9702                           
  9703                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  9704     0D2C  0197               	clrf	23	;volatile
  9705                           
  9706                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  9707     0D2D  0198               	clrf	24	;volatile
  9708                           
  9709                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  9710     0D2E  0199               	clrf	25	;volatile
  9711                           
  9712                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  9713     0D2F  019A               	clrf	26	;volatile
  9714                           
  9715                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  9716     0D30  019B               	clrf	27	;volatile
  9717     0D31                     l398:
  9718     0D31  0008               	return
  9719     0D32                     __end_of_PMD_Initialize:
  9720                           
  9721                           	psect	text19
  9722     0F1F                     __ptext19:	
  9723 ;; *************** function _PIN_MANAGER_Initialize *****************
  9724 ;; Defined at:
  9725 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;		None
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;		None
  9730 ;; Return value:  Size  Location     Type
  9731 ;;                  1    wreg      void 
  9732 ;; Registers used:
  9733 ;;		wreg, status,2
  9734 ;; Tracked objects:
  9735 ;;		On entry : 0/0
  9736 ;;		On exit  : 0/0
  9737 ;;		Unchanged: 0/0
  9738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;Total ram usage:        0 bytes
  9744 ;; Hardware stack levels used: 1
  9745 ;; Hardware stack levels required when called: 3
  9746 ;; This function calls:
  9747 ;;		Nothing
  9748 ;; This function is called by:
  9749 ;;		_SYSTEM_Initialize
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           
  9753     0F1F                     _PIN_MANAGER_Initialize:	
  9754                           ;psect for function _PIN_MANAGER_Initialize
  9755                           
  9756     0F1F                     l3855:	
  9757                           ;incstack = 0
  9758                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9759                           
  9760                           
  9761                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9762     0F1F  0020               	movlb	0	; select bank0
  9763     0F20  019A               	clrf	26	;volatile
  9764                           
  9765                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9766     0F21  0199               	clrf	25	;volatile
  9767                           
  9768                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  9769     0F22  0196               	clrf	22	;volatile
  9770                           
  9771                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9772     0F23  0197               	clrf	23	;volatile
  9773                           
  9774                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9775     0F24  0198               	clrf	24	;volatile
  9776     0F25                     l3857:
  9777                           
  9778                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9779     0F25  3007               	movlw	7
  9780     0F26  0095               	movwf	21	;volatile
  9781     0F27                     l3859:
  9782                           
  9783                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  9784     0F27  30FF               	movlw	255
  9785     0F28  0091               	movwf	17	;volatile
  9786     0F29                     l3861:
  9787                           
  9788                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  9789     0F29  30FF               	movlw	255
  9790     0F2A  0092               	movwf	18	;volatile
  9791     0F2B                     l3863:
  9792                           
  9793                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9794     0F2B  30FF               	movlw	255
  9795     0F2C  0093               	movwf	19	;volatile
  9796     0F2D                     l3865:
  9797                           
  9798                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9799     0F2D  30FF               	movlw	255
  9800     0F2E  0094               	movwf	20	;volatile
  9801     0F2F                     l3867:
  9802                           
  9803                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  9804     0F2F  30FF               	movlw	255
  9805     0F30  003E               	movlb	30	; select bank30
  9806     0F31  00D9               	movwf	89	;volatile
  9807     0F32                     l3869:
  9808                           
  9809                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE7;
  9810     0F32  30E7               	movlw	231
  9811     0F33  00CE               	movwf	78	;volatile
  9812     0F34                     l3871:
  9813                           
  9814                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  9815     0F34  30FF               	movlw	255
  9816     0F35  00C3               	movwf	67	;volatile
  9817     0F36                     l3873:
  9818                           
  9819                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9820     0F36  3007               	movlw	7
  9821     0F37  00E4               	movwf	100	;volatile
  9822     0F38                     l3875:
  9823                           
  9824                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  9825     0F38  30FF               	movlw	255
  9826     0F39  00B8               	movwf	56	;volatile
  9827                           
  9828                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9829     0F3A  01DA               	clrf	90	;volatile
  9830                           
  9831                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9832     0F3B  01E5               	clrf	101	;volatile
  9833                           
  9834                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9835     0F3C  01C4               	clrf	68	;volatile
  9836                           
  9837                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9838     0F3D  01B9               	clrf	57	;volatile
  9839     0F3E                     l3877:
  9840                           
  9841                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x18;
  9842     0F3E  3018               	movlw	24
  9843     0F3F  00CF               	movwf	79	;volatile
  9844     0F40                     l3879:
  9845                           
  9846                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  9847     0F40  01E6               	clrf	102	;volatile
  9848     0F41                     l3881:
  9849                           
  9850                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  9851     0F41  01BA               	clrf	58	;volatile
  9852     0F42                     l3883:
  9853                           
  9854                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  9855     0F42  01C5               	clrf	69	;volatile
  9856     0F43                     l3885:
  9857                           
  9858                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  9859     0F43  01D0               	clrf	80	;volatile
  9860     0F44                     l3887:
  9861                           
  9862                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  9863     0F44  01DB               	clrf	91	;volatile
  9864                           
  9865                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  9866     0F45  30FF               	movlw	255
  9867     0F46  00BB               	movwf	59	;volatile
  9868                           
  9869                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  9870     0F47  30FF               	movlw	255
  9871     0F48  00C6               	movwf	70	;volatile
  9872                           
  9873                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  9874     0F49  30FF               	movlw	255
  9875     0F4A  00D1               	movwf	81	;volatile
  9876                           
  9877                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  9878     0F4B  30FF               	movlw	255
  9879     0F4C  00DC               	movwf	92	;volatile
  9880                           
  9881                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  9882     0F4D  3007               	movlw	7
  9883     0F4E  00E7               	movwf	103	;volatile
  9884                           
  9885                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  9886     0F4F  30FF               	movlw	255
  9887     0F50  00BC               	movwf	60	;volatile
  9888                           
  9889                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  9890     0F51  30FF               	movlw	255
  9891     0F52  00C7               	movwf	71	;volatile
  9892                           
  9893                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  9894     0F53  30FF               	movlw	255
  9895     0F54  00D2               	movwf	82	;volatile
  9896                           
  9897                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  9898     0F55  30FF               	movlw	255
  9899     0F56  00DD               	movwf	93	;volatile
  9900                           
  9901                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  9902     0F57  3007               	movlw	7
  9903     0F58  00E8               	movwf	104	;volatile
  9904                           
  9905                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  9906     0F59  3013               	movlw	19
  9907     0F5A  003D               	movlb	29	; select bank29
  9908     0F5B  00C5               	movwf	69	;volatile
  9909                           
  9910                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
  9911     0F5C  3014               	movlw	20
  9912     0F5D  003E               	movlb	30	; select bank30
  9913     0F5E  00A3               	movwf	35	;volatile
  9914                           
  9915                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
  9916     0F5F  3015               	movlw	21
  9917     0F60  00A4               	movwf	36	;volatile
  9918                           
  9919                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
  9920     0F61  3014               	movlw	20
  9921     0F62  003D               	movlb	29	; select bank29
  9922     0F63  00C6               	movwf	70	;volatile
  9923     0F64                     l479:
  9924     0F64  0008               	return
  9925     0F65                     __end_of_PIN_MANAGER_Initialize:
  9926                           
  9927                           	psect	text20
  9928     0D32                     __ptext20:	
  9929 ;; *************** function _OSCILLATOR_Initialize *****************
  9930 ;; Defined at:
  9931 ;;		line 60 in file "mcc_generated_files/mcc.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;		None
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;		None
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;Total ram usage:        0 bytes
  9950 ;; Hardware stack levels used: 1
  9951 ;; Hardware stack levels required when called: 3
  9952 ;; This function calls:
  9953 ;;		Nothing
  9954 ;; This function is called by:
  9955 ;;		_SYSTEM_Initialize
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959     0D32                     _OSCILLATOR_Initialize:	
  9960                           ;psect for function _OSCILLATOR_Initialize
  9961                           
  9962     0D32                     l3889:	
  9963                           ;incstack = 0
  9964                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9965                           
  9966                           
  9967                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  9968     0D32  3062               	movlw	98
  9969     0D33  0031               	movlb	17	; select bank17
  9970     0D34  008D               	movwf	13	;volatile
  9971     0D35                     l3891:
  9972                           
  9973                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  9974     0D35  018F               	clrf	15	;volatile
  9975     0D36                     l3893:
  9976                           
  9977                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  9978     0D36  0191               	clrf	17	;volatile
  9979                           
  9980                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  9981     0D37  3002               	movlw	2
  9982     0D38  0093               	movwf	19	;volatile
  9983     0D39                     l3895:
  9984                           
  9985                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9986     0D39  0192               	clrf	18	;volatile
  9987     0D3A                     l395:
  9988     0D3A  0008               	return
  9989     0D3B                     __end_of_OSCILLATOR_Initialize:
  9990                           
  9991                           	psect	text21
  9992     0D3B                     __ptext21:	
  9993 ;; *************** function _I2C1_Initialize *****************
  9994 ;; Defined at:
  9995 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;		None
  9998 ;; Auto vars:     Size  Location     Type
  9999 ;;		None
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  1    wreg      void 
 10002 ;; Registers used:
 10003 ;;		wreg, status,2
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;Total ram usage:        0 bytes
 10014 ;; Hardware stack levels used: 1
 10015 ;; Hardware stack levels required when called: 3
 10016 ;; This function calls:
 10017 ;;		Nothing
 10018 ;; This function is called by:
 10019 ;;		_SYSTEM_Initialize
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023     0D3B                     _I2C1_Initialize:	
 10024                           ;psect for function _I2C1_Initialize
 10025                           
 10026     0D3B                     l3847:	
 10027                           ;incstack = 0
 10028                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 10029                           
 10030                           
 10031                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 10032     0D3B  3080               	movlw	128
 10033     0D3C  0023               	movlb	3	; select bank3
 10034     0D3D  008F               	movwf	15	;volatile
 10035                           
 10036                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 10037     0D3E  3008               	movlw	8
 10038     0D3F  0090               	movwf	16	;volatile
 10039     0D40                     l3849:
 10040                           
 10041                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 10042     0D40  0191               	clrf	17	;volatile
 10043     0D41                     l3851:
 10044                           
 10045                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 10046     0D41  3003               	movlw	3
 10047     0D42  008D               	movwf	13	;volatile
 10048     0D43                     l3853:
 10049                           
 10050                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 10051     0D43  1290               	bcf	16,5	;volatile
 10052     0D44                     l587:
 10053     0D44  0008               	return
 10054     0D45                     __end_of_I2C1_Initialize:
 10055                           
 10056                           	psect	text22
 10057     0DD8                     __ptext22:	
 10058 ;; *************** function _ADCC_Initialize *****************
 10059 ;; Defined at:
 10060 ;;		line 63 in file "mcc_generated_files/adcc.c"
 10061 ;; Parameters:    Size  Location     Type
 10062 ;;		None
 10063 ;; Auto vars:     Size  Location     Type
 10064 ;;		None
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  1    wreg      void 
 10067 ;; Registers used:
 10068 ;;		wreg, status,2
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;Total ram usage:        0 bytes
 10079 ;; Hardware stack levels used: 1
 10080 ;; Hardware stack levels required when called: 3
 10081 ;; This function calls:
 10082 ;;		Nothing
 10083 ;; This function is called by:
 10084 ;;		_SYSTEM_Initialize
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088     0DD8                     _ADCC_Initialize:	
 10089                           ;psect for function _ADCC_Initialize
 10090                           
 10091     0DD8                     l3897:	
 10092                           ;incstack = 0
 10093                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10094                           
 10095                           
 10096                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 10097     0DD8  0022               	movlb	2	; select bank2
 10098     0DD9  018E               	clrf	14	;volatile
 10099                           
 10100                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 10101     0DDA  018F               	clrf	15	;volatile
 10102                           
 10103                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 10104     0DDB  0190               	clrf	16	;volatile
 10105                           
 10106                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 10107     0DDC  0191               	clrf	17	;volatile
 10108                           
 10109                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 10110     0DDD  0192               	clrf	18	;volatile
 10111                           
 10112                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 10113     0DDE  0193               	clrf	19	;volatile
 10114                           
 10115                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 10116     0DDF  018D               	clrf	13	;volatile
 10117                           
 10118                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 10119     0DE0  0021               	movlb	1	; select bank1
 10120     0DE1  019E               	clrf	30	;volatile
 10121                           
 10122                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 10123     0DE2  019B               	clrf	27	;volatile
 10124                           
 10125                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 10126     0DE3  019C               	clrf	28	;volatile
 10127                           
 10128                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 10129     0DE4  0194               	clrf	20	;volatile
 10130                           
 10131                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 10132     0DE5  0195               	clrf	21	;volatile
 10133                           
 10134                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 10135     0DE6  0196               	clrf	22	;volatile
 10136                           
 10137                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 10138     0DE7  0197               	clrf	23	;volatile
 10139                           
 10140                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 10141     0DE8  019A               	clrf	26	;volatile
 10142                           
 10143                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 10144     0DE9  0199               	clrf	25	;volatile
 10145                           
 10146                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
 10147     0DEA  0198               	clrf	24	;volatile
 10148     0DEB                     l3899:
 10149                           
 10150                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 10151     0DEB  3084               	movlw	132
 10152     0DEC  0093               	movwf	19	;volatile
 10153     0DED                     l3901:
 10154                           
 10155                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 10156     0DED  019D               	clrf	29	;volatile
 10157     0DEE                     l892:
 10158     0DEE  0008               	return
 10159     0DEF                     __end_of_ADCC_Initialize:
 10160                           
 10161                           	psect	text23
 10162     0D45                     __ptext23:	
 10163 ;; *************** function _OpenI2C *****************
 10164 ;; Defined at:
 10165 ;;		line 26 in file "I2C/i2c.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;		None
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;		None
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      void 
 10172 ;; Registers used:
 10173 ;;		wreg, status,2
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10183 ;;Total ram usage:        0 bytes
 10184 ;; Hardware stack levels used: 1
 10185 ;; Hardware stack levels required when called: 3
 10186 ;; This function calls:
 10187 ;;		Nothing
 10188 ;; This function is called by:
 10189 ;;		_main
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193     0D45                     _OpenI2C:	
 10194                           ;psect for function _OpenI2C
 10195                           
 10196     0D45                     l3947:	
 10197                           ;incstack = 0
 10198                           ; Regs used in _OpenI2C: [wreg+status,2]
 10199                           
 10200                           
 10201                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
 10202     0D45  3080               	movlw	128
 10203     0D46  0023               	movlb	3	; select bank3
 10204     0D47  008F               	movwf	15	;volatile
 10205                           
 10206                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
 10207     0D48  3008               	movlw	8
 10208     0D49  0090               	movwf	16	;volatile
 10209     0D4A                     l3949:
 10210                           
 10211                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
 10212     0D4A  0191               	clrf	17	;volatile
 10213     0D4B                     l3951:
 10214                           
 10215                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
 10216     0D4B  3003               	movlw	3
 10217     0D4C  008D               	movwf	13	;volatile
 10218     0D4D                     l3953:
 10219                           
 10220                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
 10221     0D4D  1690               	bsf	16,5	;volatile
 10222     0D4E                     l3955:
 10223                           
 10224                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
 10225     0D4E  0020               	movlb	0	; select bank0
 10226     0D4F  1593               	bsf	19,3	;volatile
 10227     0D50                     l3957:
 10228                           
 10229                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
 10230     0D50  1613               	bsf	19,4	;volatile
 10231     0D51                     l23:
 10232     0D51  0008               	return
 10233     0D52                     __end_of_OpenI2C:
 10234                           
 10235                           	psect	text24
 10236     0DEF                     __ptext24:	
 10237 ;; *************** function _LCDstr *****************
 10238 ;; Defined at:
 10239 ;;		line 112 in file "LCD/lcd.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  p               2    0[BANK0 ] PTR unsigned char 
 10242 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
 10243 ;;		 -> STR_5(2), STR_4(2), main@measure_buffer(6), main@time_buffer(8), 
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;  c               1    4[BANK0 ] unsigned char 
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  1    wreg      void 
 10248 ;; Registers used:
 10249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;Total ram usage:        5 bytes
 10260 ;; Hardware stack levels used: 1
 10261 ;; Hardware stack levels required when called: 6
 10262 ;; This function calls:
 10263 ;;		_LCDchar
 10264 ;; This function is called by:
 10265 ;;		_main
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269     0DEF                     _LCDstr:	
 10270                           ;psect for function _LCDstr
 10271                           
 10272     0DEF                     l4975:	
 10273                           ;incstack = 0
 10274                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10275                           
 10276                           
 10277                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
 10278     0DEF  2DF4               	goto	l4979
 10279     0DF0                     l4977:
 10280     0DF0  0824               	movf	LCDstr@c,w
 10281     0DF1  318D  2522  318D   	fcall	_LCDchar
 10282     0DF4                     l4979:
 10283     0DF4  0020               	movlb	0	; select bank0
 10284     0DF5  0821               	movf	LCDstr@p+1,w
 10285     0DF6  00A3               	movwf	??_LCDstr+1
 10286     0DF7  0820               	movf	LCDstr@p,w
 10287     0DF8  00A2               	movwf	??_LCDstr
 10288     0DF9  0AA0               	incf	LCDstr@p,f
 10289     0DFA  1903               	skipnz
 10290     0DFB  0AA1               	incf	LCDstr@p+1,f
 10291     0DFC  0822               	movf	??_LCDstr,w
 10292     0DFD  0084               	movwf	4
 10293     0DFE  0823               	movf	??_LCDstr+1,w
 10294     0DFF  0085               	movwf	5
 10295     0E00  0800               	movf	0,w	;code access
 10296     0E01  00A4               	movwf	LCDstr@c
 10297     0E02  0824               	movf	LCDstr@c,w
 10298     0E03  1D03               	btfss	3,2
 10299     0E04  2E06               	goto	u3991
 10300     0E05  2E07               	goto	u3990
 10301     0E06                     u3991:
 10302     0E06  2DF0               	goto	l4977
 10303     0E07                     u3990:
 10304     0E07                     l244:
 10305     0E07  0008               	return
 10306     0E08                     __end_of_LCDstr:
 10307                           
 10308                           	psect	text25
 10309     0D22                     __ptext25:	
 10310 ;; *************** function _LCDchar *****************
 10311 ;; Defined at:
 10312 ;;		line 107 in file "LCD/lcd.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  c               1    wreg     unsigned char 
 10315 ;; Auto vars:     Size  Location     Type
 10316 ;;  c               1    9[COMMON] unsigned char 
 10317 ;; Return value:  Size  Location     Type
 10318 ;;                  1    wreg      void 
 10319 ;; Registers used:
 10320 ;;		wreg, status,2, status,0, pclath, cstack
 10321 ;; Tracked objects:
 10322 ;;		On entry : 0/0
 10323 ;;		On exit  : 0/0
 10324 ;;		Unchanged: 0/0
 10325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10330 ;;Total ram usage:        1 bytes
 10331 ;; Hardware stack levels used: 1
 10332 ;; Hardware stack levels required when called: 5
 10333 ;; This function calls:
 10334 ;;		_LCDsend2x4
 10335 ;; This function is called by:
 10336 ;;		_LCDstr
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340     0D22                     _LCDchar:	
 10341                           ;psect for function _LCDchar
 10342                           
 10343                           
 10344                           ;incstack = 0
 10345                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 10346                           ;LCDchar@c stored from wreg
 10347     0D22  00F9               	movwf	LCDchar@c
 10348     0D23                     l3835:
 10349                           
 10350                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
 10351     0D23  01F4               	clrf	LCDsend2x4@mode
 10352     0D24  0AF4               	incf	LCDsend2x4@mode,f
 10353     0D25  0879               	movf	LCDchar@c,w
 10354     0D26  3184  24F3  318D   	fcall	_LCDsend2x4
 10355     0D29                     l238:
 10356     0D29  0008               	return
 10357     0D2A                     __end_of_LCDchar:
 10358                           
 10359                           	psect	text26
 10360     0DAD                     __ptext26:	
 10361 ;; *************** function _LCDpos *****************
 10362 ;; Defined at:
 10363 ;;		line 125 in file "LCD/lcd.c"
 10364 ;; Parameters:    Size  Location     Type
 10365 ;;  l               1    wreg     unsigned char 
 10366 ;;  c               1    0[BANK0 ] unsigned char 
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;  l               1    1[BANK0 ] unsigned char 
 10369 ;;  p               1    2[BANK0 ] unsigned char 
 10370 ;; Return value:  Size  Location     Type
 10371 ;;                  1    wreg      void 
 10372 ;; Registers used:
 10373 ;;		wreg, status,2, status,0, pclath, cstack
 10374 ;; Tracked objects:
 10375 ;;		On entry : 0/0
 10376 ;;		On exit  : 0/0
 10377 ;;		Unchanged: 0/0
 10378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10379 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10382 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10383 ;;Total ram usage:        3 bytes
 10384 ;; Hardware stack levels used: 1
 10385 ;; Hardware stack levels required when called: 6
 10386 ;; This function calls:
 10387 ;;		_LCDcmd
 10388 ;; This function is called by:
 10389 ;;		_main
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393     0DAD                     _LCDpos:	
 10394                           ;psect for function _LCDpos
 10395                           
 10396                           
 10397                           ;incstack = 0
 10398                           ; Regs used in _LCDpos: [wreg+status,2+status,0+pclath+cstack]
 10399                           ;LCDpos@l stored from wreg
 10400     0DAD  0020               	movlb	0	; select bank0
 10401     0DAE  00A1               	movwf	LCDpos@l
 10402     0DAF                     l4991:
 10403                           
 10404                           ;LCD/lcd.c: 125: void LCDpos(unsigned char l, unsigned char c);LCD/lcd.c: 126: {;LCD/lcd
      +                          .c: 127:   unsigned char p;;LCD/lcd.c: 131:   if (l>=1) p = 0xc0; else p=0x80;
 10405     0DAF  0821               	movf	LCDpos@l,w
 10406     0DB0  1903               	btfsc	3,2
 10407     0DB1  2DB3               	goto	u4011
 10408     0DB2  2DB4               	goto	u4010
 10409     0DB3                     u4011:
 10410     0DB3  2DB7               	goto	l4995
 10411     0DB4                     u4010:
 10412     0DB4                     l4993:
 10413     0DB4  30C0               	movlw	192
 10414     0DB5  00A2               	movwf	LCDpos@p
 10415     0DB6  2DB9               	goto	l4997
 10416     0DB7                     l4995:
 10417     0DB7  3080               	movlw	128
 10418     0DB8  00A2               	movwf	LCDpos@p
 10419     0DB9                     l4997:
 10420                           
 10421                           ;LCD/lcd.c: 132:   p = p | (c&0x0f);
 10422     0DB9  0820               	movf	LCDpos@c,w
 10423     0DBA  390F               	andlw	15
 10424     0DBB  0422               	iorwf	LCDpos@p,w
 10425     0DBC  00A2               	movwf	LCDpos@p
 10426     0DBD                     l4999:
 10427                           
 10428                           ;LCD/lcd.c: 133:   LCDcmd(p);
 10429     0DBD  0822               	movf	LCDpos@p,w
 10430     0DBE  318D  251B  318D   	fcall	_LCDcmd
 10431     0DC1                     l253:
 10432     0DC1  0008               	return
 10433     0DC2                     __end_of_LCDpos:
 10434                           
 10435                           	psect	text27
 10436     0D1B                     __ptext27:	
 10437 ;; *************** function _LCDcmd *****************
 10438 ;; Defined at:
 10439 ;;		line 102 in file "LCD/lcd.c"
 10440 ;; Parameters:    Size  Location     Type
 10441 ;;  c               1    wreg     unsigned char 
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;  c               1    9[COMMON] unsigned char 
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  1    wreg      void 
 10446 ;; Registers used:
 10447 ;;		wreg, status,2, status,0, pclath, cstack
 10448 ;; Tracked objects:
 10449 ;;		On entry : 0/0
 10450 ;;		On exit  : 0/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10457 ;;Total ram usage:        1 bytes
 10458 ;; Hardware stack levels used: 1
 10459 ;; Hardware stack levels required when called: 5
 10460 ;; This function calls:
 10461 ;;		_LCDsend2x4
 10462 ;; This function is called by:
 10463 ;;		_LCDpos
 10464 ;;		_main
 10465 ;; This function uses a non-reentrant model
 10466 ;;
 10467                           
 10468     0D1B                     _LCDcmd:	
 10469                           ;psect for function _LCDcmd
 10470                           
 10471                           
 10472                           ;incstack = 0
 10473                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 10474                           ;LCDcmd@c stored from wreg
 10475     0D1B  00F9               	movwf	LCDcmd@c
 10476     0D1C                     l3833:
 10477                           
 10478                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
 10479     0D1C  01F4               	clrf	LCDsend2x4@mode
 10480     0D1D  0879               	movf	LCDcmd@c,w
 10481     0D1E  3184  24F3  318D   	fcall	_LCDsend2x4
 10482     0D21                     l235:
 10483     0D21  0008               	return
 10484     0D22                     __end_of_LCDcmd:
 10485                           
 10486                           	psect	text28
 10487     0652                     __ptext28:	
 10488 ;; *************** function _LCDinit *****************
 10489 ;; Defined at:
 10490 ;;		line 79 in file "LCD/lcd.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;		None
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;		None
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      void 
 10497 ;; Registers used:
 10498 ;;		wreg, status,2, status,0, pclath, cstack
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;Total ram usage:        1 bytes
 10509 ;; Hardware stack levels used: 1
 10510 ;; Hardware stack levels required when called: 5
 10511 ;; This function calls:
 10512 ;;		_LCDsend
 10513 ;;		_LCDsend2x4
 10514 ;; This function is called by:
 10515 ;;		_main
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519     0652                     _LCDinit:	
 10520                           ;psect for function _LCDinit
 10521                           
 10522     0652                     l3959:	
 10523                           ;incstack = 0
 10524                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 10525                           
 10526                           
 10527                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
 10528     0652  3041               	movlw	65
 10529     0653  00F9               	movwf	??_LCDinit
 10530     0654  30EE               	movlw	238
 10531     0655                     u4147:
 10532     0655  0B89               	decfsz	9,f
 10533     0656  2E55               	goto	u4147
 10534     0657  0BF9               	decfsz	??_LCDinit,f
 10535     0658  2E55               	goto	u4147
 10536     0659  3200               	nop2
 10537     065A                     l3961:
 10538                           
 10539                           ;LCD/lcd.c: 82:   LCDsend(0x30);
 10540     065A  3030               	movlw	48
 10541     065B  318E  26DC  3186   	fcall	_LCDsend
 10542     065E                     l3963:
 10543                           
 10544                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 10545     065E  3034               	movlw	52
 10546     065F  318E  26DC  3186   	fcall	_LCDsend
 10547     0662  30A6               	movlw	166
 10548     0663                     u4157:
 10549     0663  0B89               	decfsz	9,f
 10550     0664  2E63               	goto	u4157
 10551     0665  3200               	nop2
 10552     0666                     l3965:
 10553     0666  3030               	movlw	48
 10554     0667  318E  26DC  3186   	fcall	_LCDsend
 10555     066A                     l3967:
 10556                           
 10557                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
 10558     066A  3007               	movlw	7
 10559     066B  00F9               	movwf	??_LCDinit
 10560     066C  307D               	movlw	125
 10561     066D                     u4167:
 10562     066D  0B89               	decfsz	9,f
 10563     066E  2E6D               	goto	u4167
 10564     066F  0BF9               	decfsz	??_LCDinit,f
 10565     0670  2E6D               	goto	u4167
 10566     0671  0000               	nop
 10567                           
 10568                           ;LCD/lcd.c: 85:   LCDsend(0x30);
 10569     0672  3030               	movlw	48
 10570     0673  318E  26DC  3186   	fcall	_LCDsend
 10571                           
 10572                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 10573     0676  3034               	movlw	52
 10574     0677  318E  26DC  3186   	fcall	_LCDsend
 10575     067A                     l3969:
 10576     067A  30A6               	movlw	166
 10577     067B                     u4177:
 10578     067B  0B89               	decfsz	9,f
 10579     067C  2E7B               	goto	u4177
 10580     067D  3200               	nop2
 10581     067E                     l3971:
 10582     067E  3030               	movlw	48
 10583     067F  318E  26DC  3186   	fcall	_LCDsend
 10584                           
 10585                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 10586     0682  3021               	movlw	33
 10587     0683                     u4187:
 10588     0683  0B89               	decfsz	9,f
 10589     0684  2E83               	goto	u4187
 10590     0685  0000               	nop
 10591     0686                     l3973:
 10592                           
 10593                           ;LCD/lcd.c: 88:   LCDsend(0x30);
 10594     0686  3030               	movlw	48
 10595     0687  318E  26DC  3186   	fcall	_LCDsend
 10596     068A                     l3975:
 10597                           
 10598                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 10599     068A  3034               	movlw	52
 10600     068B  318E  26DC  3186   	fcall	_LCDsend
 10601     068E  30A6               	movlw	166
 10602     068F                     u4197:
 10603     068F  0B89               	decfsz	9,f
 10604     0690  2E8F               	goto	u4197
 10605     0691  3200               	nop2
 10606     0692                     l3977:
 10607     0692  3030               	movlw	48
 10608     0693  318E  26DC  3186   	fcall	_LCDsend
 10609     0696                     l3979:
 10610                           
 10611                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 10612     0696  3021               	movlw	33
 10613     0697                     u4207:
 10614     0697  0B89               	decfsz	9,f
 10615     0698  2E97               	goto	u4207
 10616     0699  0000               	nop
 10617                           
 10618                           ;LCD/lcd.c: 91:   LCDsend(0x20);
 10619     069A  3020               	movlw	32
 10620     069B  318E  26DC  3186   	fcall	_LCDsend
 10621                           
 10622                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
 10623     069E  3024               	movlw	36
 10624     069F  318E  26DC  3186   	fcall	_LCDsend
 10625     06A2                     l3981:
 10626     06A2  30A6               	movlw	166
 10627     06A3                     u4217:
 10628     06A3  0B89               	decfsz	9,f
 10629     06A4  2EA3               	goto	u4217
 10630     06A5  3200               	nop2
 10631     06A6                     l3983:
 10632     06A6  3020               	movlw	32
 10633     06A7  318E  26DC  3186   	fcall	_LCDsend
 10634                           
 10635                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
 10636     06AA  3007               	movlw	7
 10637     06AB  00F9               	movwf	??_LCDinit
 10638     06AC  307D               	movlw	125
 10639     06AD                     u4227:
 10640     06AD  0B89               	decfsz	9,f
 10641     06AE  2EAD               	goto	u4227
 10642     06AF  0BF9               	decfsz	??_LCDinit,f
 10643     06B0  2EAD               	goto	u4227
 10644     06B1  0000               	nop
 10645     06B2                     l3985:
 10646                           
 10647                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
 10648     06B2  01F4               	clrf	LCDsend2x4@mode
 10649     06B3  3028               	movlw	40
 10650     06B4  3184  24F3  3186   	fcall	_LCDsend2x4
 10651     06B7                     l3987:
 10652                           
 10653                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
 10654     06B7  01F4               	clrf	LCDsend2x4@mode
 10655     06B8  3006               	movlw	6
 10656     06B9  3184  24F3  3186   	fcall	_LCDsend2x4
 10657     06BC                     l3989:
 10658                           
 10659                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
 10660     06BC  01F4               	clrf	LCDsend2x4@mode
 10661     06BD  300F               	movlw	15
 10662     06BE  3184  24F3  3186   	fcall	_LCDsend2x4
 10663     06C1                     l3991:
 10664                           
 10665                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
 10666     06C1  01F4               	clrf	LCDsend2x4@mode
 10667     06C2  3001               	movlw	1
 10668     06C3  3184  24F3  3186   	fcall	_LCDsend2x4
 10669                           
 10670                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
 10671     06C6  3003               	movlw	3
 10672     06C7  00F9               	movwf	??_LCDinit
 10673     06C8  3098               	movlw	152
 10674     06C9                     u4237:
 10675     06C9  0B89               	decfsz	9,f
 10676     06CA  2EC9               	goto	u4237
 10677     06CB  0BF9               	decfsz	??_LCDinit,f
 10678     06CC  2EC9               	goto	u4237
 10679     06CD                     l232:
 10680     06CD  0008               	return
 10681     06CE                     __end_of_LCDinit:
 10682                           
 10683                           	psect	text29
 10684     04F3                     __ptext29:	
 10685 ;; *************** function _LCDsend2x4 *****************
 10686 ;; Defined at:
 10687 ;;		line 56 in file "LCD/lcd.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  c               1    wreg     unsigned char 
 10690 ;;  mode            1    4[COMMON] unsigned char 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  c               1    6[COMMON] unsigned char 
 10693 ;;  lc              1    8[COMMON] unsigned char 
 10694 ;;  hc              1    7[COMMON] unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      void 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0, pclath, cstack
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10704 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;Total ram usage:        5 bytes
 10709 ;; Hardware stack levels used: 1
 10710 ;; Hardware stack levels required when called: 4
 10711 ;; This function calls:
 10712 ;;		_WriteI2C
 10713 ;; This function is called by:
 10714 ;;		_LCDinit
 10715 ;;		_LCDcmd
 10716 ;;		_LCDchar
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720     04F3                     _LCDsend2x4:	
 10721                           ;psect for function _LCDsend2x4
 10722                           
 10723                           
 10724                           ;incstack = 0
 10725                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10726                           ;LCDsend2x4@c stored from wreg
 10727     04F3  00F6               	movwf	LCDsend2x4@c
 10728     04F4                     l3653:
 10729                           
 10730                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 10731     04F4  0876               	movf	LCDsend2x4@c,w
 10732     04F5  39F0               	andlw	240
 10733     04F6  00F7               	movwf	LCDsend2x4@hc
 10734     04F7                     l3655:
 10735                           
 10736                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 10737     04F7  0876               	movf	LCDsend2x4@c,w
 10738     04F8  00F5               	movwf	??_LCDsend2x4
 10739     04F9  3003               	movlw	3
 10740     04FA                     u2415:
 10741     04FA  35F5               	lslf	??_LCDsend2x4,f
 10742     04FB  3EFF               	addlw	-1
 10743     04FC  1D03               	skipz
 10744     04FD  2CFA               	goto	u2415
 10745     04FE  3575               	lslf	??_LCDsend2x4,w
 10746     04FF  39F0               	andlw	240
 10747     0500  00F8               	movwf	LCDsend2x4@lc
 10748     0501                     l3657:	
 10749                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10750                           
 10751     0501  0023               	movlb	3	; select bank3
 10752     0502  0C0F               	rrf	15,w	;volatile
 10753     0503  0C89               	rrf	9,f
 10754     0504  3901               	andlw	1
 10755     0505  00F5               	movwf	??_LCDsend2x4
 10756     0506  0811               	movf	17,w	;volatile
 10757     0507  391F               	andlw	31
 10758     0508  0475               	iorwf	??_LCDsend2x4,w
 10759     0509  1D03               	btfss	3,2
 10760     050A  2D0C               	goto	u2421
 10761     050B  2D0D               	goto	u2420
 10762     050C                     u2421:
 10763     050C  2D01               	goto	l3657
 10764     050D                     u2420:
 10765     050D                     l195:	
 10766                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10767                           
 10768     050D  1411               	bsf	17,0	;volatile
 10769     050E                     l196:
 10770     050E  1811               	btfsc	17,0	;volatile
 10771     050F  2D11               	goto	u2431
 10772     0510  2D12               	goto	u2430
 10773     0511                     u2431:
 10774     0511  2D0E               	goto	l196
 10775     0512                     u2430:
 10776     0512                     l3659:
 10777     0512  0C0F               	rrf	15,w	;volatile
 10778     0513  0C89               	rrf	9,f
 10779     0514  3901               	andlw	1
 10780     0515  00F5               	movwf	??_LCDsend2x4
 10781     0516  0811               	movf	17,w	;volatile
 10782     0517  391F               	andlw	31
 10783     0518  0475               	iorwf	??_LCDsend2x4,w
 10784     0519  1D03               	btfss	3,2
 10785     051A  2D1C               	goto	u2441
 10786     051B  2D1D               	goto	u2440
 10787     051C                     u2441:
 10788     051C  2D12               	goto	l3659
 10789     051D                     u2440:
 10790     051D                     l3661:
 10791                           
 10792                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10793     051D  304E               	movlw	78
 10794     051E  318F  2765  3184   	fcall	_WriteI2C
 10795     0521                     l3663:
 10796     0521  0023               	movlb	3	; select bank3
 10797     0522  0C0F               	rrf	15,w	;volatile
 10798     0523  0C89               	rrf	9,f
 10799     0524  3901               	andlw	1
 10800     0525  00F5               	movwf	??_LCDsend2x4
 10801     0526  0811               	movf	17,w	;volatile
 10802     0527  391F               	andlw	31
 10803     0528  0475               	iorwf	??_LCDsend2x4,w
 10804     0529  1D03               	btfss	3,2
 10805     052A  2D2C               	goto	u2451
 10806     052B  2D2D               	goto	u2450
 10807     052C                     u2451:
 10808     052C  2D21               	goto	l3663
 10809     052D                     u2450:
 10810     052D                     l3665:
 10811                           
 10812                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10813     052D  0877               	movf	LCDsend2x4@hc,w
 10814     052E  0474               	iorwf	LCDsend2x4@mode,w
 10815     052F  3808               	iorlw	8
 10816     0530  318F  2765  3184   	fcall	_WriteI2C
 10817     0533                     l3667:
 10818     0533  0023               	movlb	3	; select bank3
 10819     0534  0C0F               	rrf	15,w	;volatile
 10820     0535  0C89               	rrf	9,f
 10821     0536  3901               	andlw	1
 10822     0537  00F5               	movwf	??_LCDsend2x4
 10823     0538  0811               	movf	17,w	;volatile
 10824     0539  391F               	andlw	31
 10825     053A  0475               	iorwf	??_LCDsend2x4,w
 10826     053B  1D03               	btfss	3,2
 10827     053C  2D3E               	goto	u2461
 10828     053D  2D3F               	goto	u2460
 10829     053E                     u2461:
 10830     053E  2D33               	goto	l3667
 10831     053F                     u2460:
 10832     053F                     l3669:
 10833                           
 10834                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 10835     053F  0877               	movf	LCDsend2x4@hc,w
 10836     0540  0474               	iorwf	LCDsend2x4@mode,w
 10837     0541  380C               	iorlw	12
 10838     0542  318F  2765  3184   	fcall	_WriteI2C
 10839     0545                     l3671:
 10840     0545  0023               	movlb	3	; select bank3
 10841     0546  0C0F               	rrf	15,w	;volatile
 10842     0547  0C89               	rrf	9,f
 10843     0548  3901               	andlw	1
 10844     0549  00F5               	movwf	??_LCDsend2x4
 10845     054A  0811               	movf	17,w	;volatile
 10846     054B  391F               	andlw	31
 10847     054C  0475               	iorwf	??_LCDsend2x4,w
 10848     054D  1D03               	btfss	3,2
 10849     054E  2D50               	goto	u2471
 10850     054F  2D51               	goto	u2470
 10851     0550                     u2471:
 10852     0550  2D45               	goto	l3671
 10853     0551                     u2470:
 10854     0551                     l211:
 10855                           
 10856                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10857     0551  0000               	nop
 10858     0552                     l3673:
 10859                           
 10860                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10861     0552  0877               	movf	LCDsend2x4@hc,w
 10862     0553  0474               	iorwf	LCDsend2x4@mode,w
 10863     0554  3808               	iorlw	8
 10864     0555  318F  2765  3184   	fcall	_WriteI2C
 10865     0558                     l3675:
 10866     0558  0023               	movlb	3	; select bank3
 10867     0559  0C0F               	rrf	15,w	;volatile
 10868     055A  0C89               	rrf	9,f
 10869     055B  3901               	andlw	1
 10870     055C  00F5               	movwf	??_LCDsend2x4
 10871     055D  0811               	movf	17,w	;volatile
 10872     055E  391F               	andlw	31
 10873     055F  0475               	iorwf	??_LCDsend2x4,w
 10874     0560  1D03               	btfss	3,2
 10875     0561  2D63               	goto	u2481
 10876     0562  2D64               	goto	u2480
 10877     0563                     u2481:
 10878     0563  2D58               	goto	l3675
 10879     0564                     u2480:
 10880     0564                     l3677:
 10881                           
 10882                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10883     0564  0878               	movf	LCDsend2x4@lc,w
 10884     0565  0474               	iorwf	LCDsend2x4@mode,w
 10885     0566  3808               	iorlw	8
 10886     0567  318F  2765  3184   	fcall	_WriteI2C
 10887     056A                     l3679:
 10888     056A  0023               	movlb	3	; select bank3
 10889     056B  0C0F               	rrf	15,w	;volatile
 10890     056C  0C89               	rrf	9,f
 10891     056D  3901               	andlw	1
 10892     056E  00F5               	movwf	??_LCDsend2x4
 10893     056F  0811               	movf	17,w	;volatile
 10894     0570  391F               	andlw	31
 10895     0571  0475               	iorwf	??_LCDsend2x4,w
 10896     0572  1D03               	btfss	3,2
 10897     0573  2D75               	goto	u2491
 10898     0574  2D76               	goto	u2490
 10899     0575                     u2491:
 10900     0575  2D6A               	goto	l3679
 10901     0576                     u2490:
 10902     0576                     l3681:
 10903                           
 10904                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 10905     0576  0878               	movf	LCDsend2x4@lc,w
 10906     0577  0474               	iorwf	LCDsend2x4@mode,w
 10907     0578  380C               	iorlw	12
 10908     0579  318F  2765  3184   	fcall	_WriteI2C
 10909     057C                     l3683:
 10910     057C  0023               	movlb	3	; select bank3
 10911     057D  0C0F               	rrf	15,w	;volatile
 10912     057E  0C89               	rrf	9,f
 10913     057F  3901               	andlw	1
 10914     0580  00F5               	movwf	??_LCDsend2x4
 10915     0581  0811               	movf	17,w	;volatile
 10916     0582  391F               	andlw	31
 10917     0583  0475               	iorwf	??_LCDsend2x4,w
 10918     0584  1D03               	btfss	3,2
 10919     0585  2D87               	goto	u2501
 10920     0586  2D88               	goto	u2500
 10921     0587                     u2501:
 10922     0587  2D7C               	goto	l3683
 10923     0588                     u2500:
 10924     0588                     l220:
 10925                           
 10926                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10927     0588  0000               	nop
 10928     0589                     l3685:
 10929                           
 10930                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10931     0589  0878               	movf	LCDsend2x4@lc,w
 10932     058A  0474               	iorwf	LCDsend2x4@mode,w
 10933     058B  3808               	iorlw	8
 10934     058C  318F  2765  3184   	fcall	_WriteI2C
 10935     058F                     l3687:
 10936     058F  0023               	movlb	3	; select bank3
 10937     0590  0C0F               	rrf	15,w	;volatile
 10938     0591  0C89               	rrf	9,f
 10939     0592  3901               	andlw	1
 10940     0593  00F5               	movwf	??_LCDsend2x4
 10941     0594  0811               	movf	17,w	;volatile
 10942     0595  391F               	andlw	31
 10943     0596  0475               	iorwf	??_LCDsend2x4,w
 10944     0597  1D03               	btfss	3,2
 10945     0598  2D9A               	goto	u2511
 10946     0599  2D9B               	goto	u2510
 10947     059A                     u2511:
 10948     059A  2D8F               	goto	l3687
 10949     059B                     u2510:
 10950     059B                     l224:	
 10951                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10952                           
 10953     059B  1511               	bsf	17,2	;volatile
 10954     059C                     l225:
 10955     059C  1911               	btfsc	17,2	;volatile
 10956     059D  2D9F               	goto	u2521
 10957     059E  2DA0               	goto	u2520
 10958     059F                     u2521:
 10959     059F  2D9C               	goto	l225
 10960     05A0                     u2520:
 10961     05A0                     l3689:
 10962                           
 10963                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 10964     05A0  3010               	movlw	16
 10965     05A1                     u4247:
 10966     05A1  0B89               	decfsz	9,f
 10967     05A2  2DA1               	goto	u4247
 10968     05A3  3200               	nop2
 10969     05A4                     l229:
 10970     05A4  0008               	return
 10971     05A5                     __end_of_LCDsend2x4:
 10972                           
 10973                           	psect	text30
 10974     0EDC                     __ptext30:	
 10975 ;; *************** function _LCDsend *****************
 10976 ;; Defined at:
 10977 ;;		line 17 in file "LCD/lcd.c"
 10978 ;; Parameters:    Size  Location     Type
 10979 ;;  c               1    wreg     unsigned char 
 10980 ;; Auto vars:     Size  Location     Type
 10981 ;;  c               1    5[COMMON] unsigned char 
 10982 ;; Return value:  Size  Location     Type
 10983 ;;                  1    wreg      void 
 10984 ;; Registers used:
 10985 ;;		wreg, status,2, status,0, pclath, cstack
 10986 ;; Tracked objects:
 10987 ;;		On entry : 0/0
 10988 ;;		On exit  : 0/0
 10989 ;;		Unchanged: 0/0
 10990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10995 ;;Total ram usage:        2 bytes
 10996 ;; Hardware stack levels used: 1
 10997 ;; Hardware stack levels required when called: 4
 10998 ;; This function calls:
 10999 ;;		_WriteI2C
 11000 ;; This function is called by:
 11001 ;;		_LCDinit
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005     0EDC                     _LCDsend:	
 11006                           ;psect for function _LCDsend
 11007                           
 11008                           
 11009                           ;incstack = 0
 11010                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 11011                           ;LCDsend@c stored from wreg
 11012     0EDC  00F5               	movwf	LCDsend@c
 11013     0EDD                     l3753:
 11014     0EDD                     l3755:	
 11015                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11016                           
 11017     0EDD  0023               	movlb	3	; select bank3
 11018     0EDE  0C0F               	rrf	15,w	;volatile
 11019     0EDF  0C89               	rrf	9,f
 11020     0EE0  3901               	andlw	1
 11021     0EE1  00F4               	movwf	??_LCDsend
 11022     0EE2  0811               	movf	17,w	;volatile
 11023     0EE3  391F               	andlw	31
 11024     0EE4  0474               	iorwf	??_LCDsend,w
 11025     0EE5  1D03               	btfss	3,2
 11026     0EE6  2EE8               	goto	u2591
 11027     0EE7  2EE9               	goto	u2590
 11028     0EE8                     u2591:
 11029     0EE8  2EDD               	goto	l3755
 11030     0EE9                     u2590:
 11031     0EE9                     l73:	
 11032                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11033                           
 11034     0EE9  1411               	bsf	17,0	;volatile
 11035     0EEA                     l74:
 11036     0EEA  1811               	btfsc	17,0	;volatile
 11037     0EEB  2EED               	goto	u2601
 11038     0EEC  2EEE               	goto	u2600
 11039     0EED                     u2601:
 11040     0EED  2EEA               	goto	l74
 11041     0EEE                     u2600:
 11042     0EEE                     l3757:
 11043     0EEE  0C0F               	rrf	15,w	;volatile
 11044     0EEF  0C89               	rrf	9,f
 11045     0EF0  3901               	andlw	1
 11046     0EF1  00F4               	movwf	??_LCDsend
 11047     0EF2  0811               	movf	17,w	;volatile
 11048     0EF3  391F               	andlw	31
 11049     0EF4  0474               	iorwf	??_LCDsend,w
 11050     0EF5  1D03               	btfss	3,2
 11051     0EF6  2EF8               	goto	u2611
 11052     0EF7  2EF9               	goto	u2610
 11053     0EF8                     u2611:
 11054     0EF8  2EEE               	goto	l3757
 11055     0EF9                     u2610:
 11056     0EF9                     l3759:
 11057                           
 11058                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11059     0EF9  304E               	movlw	78
 11060     0EFA  318F  2765  318E   	fcall	_WriteI2C
 11061     0EFD                     l3761:
 11062     0EFD  0023               	movlb	3	; select bank3
 11063     0EFE  0C0F               	rrf	15,w	;volatile
 11064     0EFF  0C89               	rrf	9,f
 11065     0F00  3901               	andlw	1
 11066     0F01  00F4               	movwf	??_LCDsend
 11067     0F02  0811               	movf	17,w	;volatile
 11068     0F03  391F               	andlw	31
 11069     0F04  0474               	iorwf	??_LCDsend,w
 11070     0F05  1D03               	btfss	3,2
 11071     0F06  2F08               	goto	u2621
 11072     0F07  2F09               	goto	u2620
 11073     0F08                     u2621:
 11074     0F08  2EFD               	goto	l3761
 11075     0F09                     u2620:
 11076     0F09                     l3763:
 11077                           
 11078                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11079     0F09  0875               	movf	LCDsend@c,w
 11080     0F0A  318F  2765  318E   	fcall	_WriteI2C
 11081     0F0D                     l3765:
 11082     0F0D  0023               	movlb	3	; select bank3
 11083     0F0E  0C0F               	rrf	15,w	;volatile
 11084     0F0F  0C89               	rrf	9,f
 11085     0F10  3901               	andlw	1
 11086     0F11  00F4               	movwf	??_LCDsend
 11087     0F12  0811               	movf	17,w	;volatile
 11088     0F13  391F               	andlw	31
 11089     0F14  0474               	iorwf	??_LCDsend,w
 11090     0F15  1D03               	btfss	3,2
 11091     0F16  2F18               	goto	u2631
 11092     0F17  2F19               	goto	u2630
 11093     0F18                     u2631:
 11094     0F18  2F0D               	goto	l3765
 11095     0F19                     u2630:
 11096     0F19                     l87:	
 11097                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 11098                           
 11099     0F19  1511               	bsf	17,2	;volatile
 11100     0F1A                     l88:
 11101     0F1A  1911               	btfsc	17,2	;volatile
 11102     0F1B  2F1D               	goto	u2641
 11103     0F1C  2F1E               	goto	u2640
 11104     0F1D                     u2641:
 11105     0F1D  2F1A               	goto	l88
 11106     0F1E                     u2640:
 11107     0F1E                     l92:
 11108     0F1E  0008               	return
 11109     0F1F                     __end_of_LCDsend:
 11110                           
 11111                           	psect	text31
 11112     0D87                     __ptext31:	
 11113 ;; *************** function _LCDbusy *****************
 11114 ;; Defined at:
 11115 ;;		line 119 in file "LCD/lcd.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;		None
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  2    0[BANK0 ] int 
 11122 ;; Registers used:
 11123 ;;		wreg, status,2, status,0, pclath, cstack
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;Total ram usage:        2 bytes
 11134 ;; Hardware stack levels used: 1
 11135 ;; Hardware stack levels required when called: 5
 11136 ;; This function calls:
 11137 ;;		_LCDrecv
 11138 ;; This function is called by:
 11139 ;;		_main
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143     0D87                     _LCDbusy:	
 11144                           ;psect for function _LCDbusy
 11145                           
 11146     0D87                     l4981:	
 11147                           ;incstack = 0
 11148                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 11149                           
 11150                           
 11151                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 11152     0D87  3000               	movlw	0
 11153     0D88  3181  21DF  318D   	fcall	_LCDrecv
 11154     0D8B  3980               	andlw	128
 11155     0D8C  1903               	btfsc	3,2
 11156     0D8D  2D8F               	goto	u4001
 11157     0D8E  2D90               	goto	u4000
 11158     0D8F                     u4001:
 11159     0D8F  2D96               	goto	l4987
 11160     0D90                     u4000:
 11161     0D90                     l4983:
 11162     0D90  3001               	movlw	1
 11163     0D91  0020               	movlb	0	; select bank0
 11164     0D92  00A0               	movwf	?_LCDbusy
 11165     0D93  3000               	movlw	0
 11166     0D94  00A1               	movwf	?_LCDbusy+1
 11167     0D95  2D99               	goto	l248
 11168     0D96                     l4987:
 11169                           
 11170                           ;LCD/lcd.c: 122:   return 0;
 11171     0D96  0020               	movlb	0	; select bank0
 11172     0D97  01A0               	clrf	?_LCDbusy
 11173     0D98  01A1               	clrf	?_LCDbusy+1
 11174     0D99                     l248:
 11175     0D99  0008               	return
 11176     0D9A                     __end_of_LCDbusy:
 11177                           
 11178                           	psect	text32
 11179     01DF                     __ptext32:	
 11180 ;; *************** function _LCDrecv *****************
 11181 ;; Defined at:
 11182 ;;		line 25 in file "LCD/lcd.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  mode            1    wreg     unsigned char 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;  mode            1    8[COMMON] unsigned char 
 11187 ;;  lc              1    7[COMMON] unsigned char 
 11188 ;;  hc              1    6[COMMON] unsigned char 
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  1    wreg      unsigned char 
 11191 ;; Registers used:
 11192 ;;		wreg, status,2, status,0, pclath, cstack
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11199 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;Total ram usage:        5 bytes
 11203 ;; Hardware stack levels used: 1
 11204 ;; Hardware stack levels required when called: 4
 11205 ;; This function calls:
 11206 ;;		_ReadI2C
 11207 ;;		_WriteI2C
 11208 ;; This function is called by:
 11209 ;;		_LCDbusy
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213     01DF                     _LCDrecv:	
 11214                           ;psect for function _LCDrecv
 11215                           
 11216                           
 11217                           ;incstack = 0
 11218                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 11219                           ;LCDrecv@mode stored from wreg
 11220     01DF  00F8               	movwf	LCDrecv@mode
 11221     01E0                     l3767:
 11222     01E0                     l3769:	
 11223                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 11224                           
 11225     01E0  0023               	movlb	3	; select bank3
 11226     01E1  0C0F               	rrf	15,w	;volatile
 11227     01E2  0C89               	rrf	9,f
 11228     01E3  3901               	andlw	1
 11229     01E4  00F4               	movwf	??_LCDrecv
 11230     01E5  0811               	movf	17,w	;volatile
 11231     01E6  391F               	andlw	31
 11232     01E7  0474               	iorwf	??_LCDrecv,w
 11233     01E8  1D03               	btfss	3,2
 11234     01E9  29EB               	goto	u2651
 11235     01EA  29EC               	goto	u2650
 11236     01EB                     u2651:
 11237     01EB  29E0               	goto	l3769
 11238     01EC                     u2650:
 11239     01EC                     l98:	
 11240                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11241                           
 11242     01EC  1411               	bsf	17,0	;volatile
 11243     01ED                     l99:
 11244     01ED  1811               	btfsc	17,0	;volatile
 11245     01EE  29F0               	goto	u2661
 11246     01EF  29F1               	goto	u2660
 11247     01F0                     u2661:
 11248     01F0  29ED               	goto	l99
 11249     01F1                     u2660:
 11250     01F1                     l3771:
 11251     01F1  0C0F               	rrf	15,w	;volatile
 11252     01F2  0C89               	rrf	9,f
 11253     01F3  3901               	andlw	1
 11254     01F4  00F4               	movwf	??_LCDrecv
 11255     01F5  0811               	movf	17,w	;volatile
 11256     01F6  391F               	andlw	31
 11257     01F7  0474               	iorwf	??_LCDrecv,w
 11258     01F8  1D03               	btfss	3,2
 11259     01F9  29FB               	goto	u2671
 11260     01FA  29FC               	goto	u2670
 11261     01FB                     u2671:
 11262     01FB  29F1               	goto	l3771
 11263     01FC                     u2670:
 11264     01FC                     l3773:
 11265                           
 11266                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11267     01FC  304E               	movlw	78
 11268     01FD  318F  2765  3181   	fcall	_WriteI2C
 11269     0200                     l3775:
 11270     0200  0023               	movlb	3	; select bank3
 11271     0201  0C0F               	rrf	15,w	;volatile
 11272     0202  0C89               	rrf	9,f
 11273     0203  3901               	andlw	1
 11274     0204  00F4               	movwf	??_LCDrecv
 11275     0205  0811               	movf	17,w	;volatile
 11276     0206  391F               	andlw	31
 11277     0207  0474               	iorwf	??_LCDrecv,w
 11278     0208  1D03               	btfss	3,2
 11279     0209  2A0B               	goto	u2681
 11280     020A  2A0C               	goto	u2680
 11281     020B                     u2681:
 11282     020B  2A00               	goto	l3775
 11283     020C                     u2680:
 11284     020C                     l3777:
 11285                           
 11286                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 11287     020C  0878               	movf	LCDrecv@mode,w
 11288     020D  38FA               	iorlw	250
 11289     020E  318F  2765  3181   	fcall	_WriteI2C
 11290     0211                     l3779:
 11291     0211  0023               	movlb	3	; select bank3
 11292     0212  0C0F               	rrf	15,w	;volatile
 11293     0213  0C89               	rrf	9,f
 11294     0214  3901               	andlw	1
 11295     0215  00F4               	movwf	??_LCDrecv
 11296     0216  0811               	movf	17,w	;volatile
 11297     0217  391F               	andlw	31
 11298     0218  0474               	iorwf	??_LCDrecv,w
 11299     0219  1D03               	btfss	3,2
 11300     021A  2A1C               	goto	u2691
 11301     021B  2A1D               	goto	u2690
 11302     021C                     u2691:
 11303     021C  2A11               	goto	l3779
 11304     021D                     u2690:
 11305     021D                     l3781:
 11306                           
 11307                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 11308     021D  0878               	movf	LCDrecv@mode,w
 11309     021E  38FE               	iorlw	254
 11310     021F  318F  2765  3181   	fcall	_WriteI2C
 11311     0222                     l3783:
 11312     0222  0023               	movlb	3	; select bank3
 11313     0223  0C0F               	rrf	15,w	;volatile
 11314     0224  0C89               	rrf	9,f
 11315     0225  3901               	andlw	1
 11316     0226  00F4               	movwf	??_LCDrecv
 11317     0227  0811               	movf	17,w	;volatile
 11318     0228  391F               	andlw	31
 11319     0229  0474               	iorwf	??_LCDrecv,w
 11320     022A  1D03               	btfss	3,2
 11321     022B  2A2D               	goto	u2701
 11322     022C  2A2E               	goto	u2700
 11323     022D                     u2701:
 11324     022D  2A22               	goto	l3783
 11325     022E                     u2700:
 11326     022E                     l114:
 11327                           
 11328                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 11329     022E  0000               	nop
 11330     022F                     l115:	
 11331                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11332                           
 11333     022F  0023               	movlb	3	; select bank3
 11334     0230  1491               	bsf	17,1	;volatile
 11335     0231                     l116:
 11336     0231  1891               	btfsc	17,1	;volatile
 11337     0232  2A34               	goto	u2711
 11338     0233  2A35               	goto	u2710
 11339     0234                     u2711:
 11340     0234  2A31               	goto	l116
 11341     0235                     u2710:
 11342     0235                     l3785:
 11343     0235  0C0F               	rrf	15,w	;volatile
 11344     0236  0C89               	rrf	9,f
 11345     0237  3901               	andlw	1
 11346     0238  00F4               	movwf	??_LCDrecv
 11347     0239  0811               	movf	17,w	;volatile
 11348     023A  391F               	andlw	31
 11349     023B  0474               	iorwf	??_LCDrecv,w
 11350     023C  1D03               	btfss	3,2
 11351     023D  2A3F               	goto	u2721
 11352     023E  2A40               	goto	u2720
 11353     023F                     u2721:
 11354     023F  2A35               	goto	l3785
 11355     0240                     u2720:
 11356     0240                     l3787:
 11357                           
 11358                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11359     0240  304F               	movlw	79
 11360     0241  318F  2765  3181   	fcall	_WriteI2C
 11361     0244                     l3789:
 11362     0244  0023               	movlb	3	; select bank3
 11363     0245  0C0F               	rrf	15,w	;volatile
 11364     0246  0C89               	rrf	9,f
 11365     0247  3901               	andlw	1
 11366     0248  00F4               	movwf	??_LCDrecv
 11367     0249  0811               	movf	17,w	;volatile
 11368     024A  391F               	andlw	31
 11369     024B  0474               	iorwf	??_LCDrecv,w
 11370     024C  1D03               	btfss	3,2
 11371     024D  2A4F               	goto	u2731
 11372     024E  2A50               	goto	u2730
 11373     024F                     u2731:
 11374     024F  2A44               	goto	l3789
 11375     0250                     u2730:
 11376     0250                     l3791:
 11377                           
 11378                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11379     0250  318E  2608  3181   	fcall	_ReadI2C
 11380     0253  00F6               	movwf	LCDrecv@hc
 11381     0254                     l3793:
 11382     0254  0023               	movlb	3	; select bank3
 11383     0255  0C0F               	rrf	15,w	;volatile
 11384     0256  0C89               	rrf	9,f
 11385     0257  3901               	andlw	1
 11386     0258  00F4               	movwf	??_LCDrecv
 11387     0259  0811               	movf	17,w	;volatile
 11388     025A  391F               	andlw	31
 11389     025B  0474               	iorwf	??_LCDrecv,w
 11390     025C  1D03               	btfss	3,2
 11391     025D  2A5F               	goto	u2741
 11392     025E  2A60               	goto	u2740
 11393     025F                     u2741:
 11394     025F  2A54               	goto	l3793
 11395     0260                     u2740:
 11396     0260                     l129:	
 11397                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 11398                           
 11399     0260  1691               	bsf	17,5	;volatile
 11400     0261  1611               	bsf	17,4	;volatile
 11401     0262                     l130:
 11402     0262  1A11               	btfsc	17,4	;volatile
 11403     0263  2A65               	goto	u2751
 11404     0264  2A66               	goto	u2750
 11405     0265                     u2751:
 11406     0265  2A62               	goto	l130
 11407     0266                     u2750:
 11408     0266                     l134:	
 11409                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11410                           
 11411     0266  1491               	bsf	17,1	;volatile
 11412     0267                     l135:
 11413     0267  1891               	btfsc	17,1	;volatile
 11414     0268  2A6A               	goto	u2761
 11415     0269  2A6B               	goto	u2760
 11416     026A                     u2761:
 11417     026A  2A67               	goto	l135
 11418     026B                     u2760:
 11419     026B                     l3795:
 11420     026B  0C0F               	rrf	15,w	;volatile
 11421     026C  0C89               	rrf	9,f
 11422     026D  3901               	andlw	1
 11423     026E  00F4               	movwf	??_LCDrecv
 11424     026F  0811               	movf	17,w	;volatile
 11425     0270  391F               	andlw	31
 11426     0271  0474               	iorwf	??_LCDrecv,w
 11427     0272  1D03               	btfss	3,2
 11428     0273  2A75               	goto	u2771
 11429     0274  2A76               	goto	u2770
 11430     0275                     u2771:
 11431     0275  2A6B               	goto	l3795
 11432     0276                     u2770:
 11433     0276                     l3797:
 11434                           
 11435                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11436     0276  304E               	movlw	78
 11437     0277  318F  2765  3181   	fcall	_WriteI2C
 11438     027A                     l3799:
 11439     027A  0023               	movlb	3	; select bank3
 11440     027B  0C0F               	rrf	15,w	;volatile
 11441     027C  0C89               	rrf	9,f
 11442     027D  3901               	andlw	1
 11443     027E  00F4               	movwf	??_LCDrecv
 11444     027F  0811               	movf	17,w	;volatile
 11445     0280  391F               	andlw	31
 11446     0281  0474               	iorwf	??_LCDrecv,w
 11447     0282  1D03               	btfss	3,2
 11448     0283  2A85               	goto	u2781
 11449     0284  2A86               	goto	u2780
 11450     0285                     u2781:
 11451     0285  2A7A               	goto	l3799
 11452     0286                     u2780:
 11453     0286                     l3801:
 11454                           
 11455                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 11456     0286  0878               	movf	LCDrecv@mode,w
 11457     0287  38FA               	iorlw	250
 11458     0288  318F  2765  3181   	fcall	_WriteI2C
 11459     028B                     l3803:
 11460     028B  0023               	movlb	3	; select bank3
 11461     028C  0C0F               	rrf	15,w	;volatile
 11462     028D  0C89               	rrf	9,f
 11463     028E  3901               	andlw	1
 11464     028F  00F4               	movwf	??_LCDrecv
 11465     0290  0811               	movf	17,w	;volatile
 11466     0291  391F               	andlw	31
 11467     0292  0474               	iorwf	??_LCDrecv,w
 11468     0293  1D03               	btfss	3,2
 11469     0294  2A96               	goto	u2791
 11470     0295  2A97               	goto	u2790
 11471     0296                     u2791:
 11472     0296  2A8B               	goto	l3803
 11473     0297                     u2790:
 11474     0297                     l3805:
 11475                           
 11476                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 11477     0297  0878               	movf	LCDrecv@mode,w
 11478     0298  38FE               	iorlw	254
 11479     0299  318F  2765  3181   	fcall	_WriteI2C
 11480     029C                     l3807:
 11481     029C  0023               	movlb	3	; select bank3
 11482     029D  0C0F               	rrf	15,w	;volatile
 11483     029E  0C89               	rrf	9,f
 11484     029F  3901               	andlw	1
 11485     02A0  00F4               	movwf	??_LCDrecv
 11486     02A1  0811               	movf	17,w	;volatile
 11487     02A2  391F               	andlw	31
 11488     02A3  0474               	iorwf	??_LCDrecv,w
 11489     02A4  1D03               	btfss	3,2
 11490     02A5  2AA7               	goto	u2801
 11491     02A6  2AA8               	goto	u2800
 11492     02A7                     u2801:
 11493     02A7  2A9C               	goto	l3807
 11494     02A8                     u2800:
 11495     02A8                     l150:
 11496                           
 11497                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 11498     02A8  0000               	nop
 11499     02A9                     l151:	
 11500                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11501                           
 11502     02A9  0023               	movlb	3	; select bank3
 11503     02AA  1491               	bsf	17,1	;volatile
 11504     02AB                     l152:
 11505     02AB  1891               	btfsc	17,1	;volatile
 11506     02AC  2AAE               	goto	u2811
 11507     02AD  2AAF               	goto	u2810
 11508     02AE                     u2811:
 11509     02AE  2AAB               	goto	l152
 11510     02AF                     u2810:
 11511     02AF                     l3809:
 11512     02AF  0C0F               	rrf	15,w	;volatile
 11513     02B0  0C89               	rrf	9,f
 11514     02B1  3901               	andlw	1
 11515     02B2  00F4               	movwf	??_LCDrecv
 11516     02B3  0811               	movf	17,w	;volatile
 11517     02B4  391F               	andlw	31
 11518     02B5  0474               	iorwf	??_LCDrecv,w
 11519     02B6  1D03               	btfss	3,2
 11520     02B7  2AB9               	goto	u2821
 11521     02B8  2ABA               	goto	u2820
 11522     02B9                     u2821:
 11523     02B9  2AAF               	goto	l3809
 11524     02BA                     u2820:
 11525     02BA                     l3811:
 11526                           
 11527                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11528     02BA  304F               	movlw	79
 11529     02BB  318F  2765  3181   	fcall	_WriteI2C
 11530     02BE                     l3813:
 11531     02BE  0023               	movlb	3	; select bank3
 11532     02BF  0C0F               	rrf	15,w	;volatile
 11533     02C0  0C89               	rrf	9,f
 11534     02C1  3901               	andlw	1
 11535     02C2  00F4               	movwf	??_LCDrecv
 11536     02C3  0811               	movf	17,w	;volatile
 11537     02C4  391F               	andlw	31
 11538     02C5  0474               	iorwf	??_LCDrecv,w
 11539     02C6  1D03               	btfss	3,2
 11540     02C7  2AC9               	goto	u2831
 11541     02C8  2ACA               	goto	u2830
 11542     02C9                     u2831:
 11543     02C9  2ABE               	goto	l3813
 11544     02CA                     u2830:
 11545     02CA                     l3815:
 11546                           
 11547                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11548     02CA  318E  2608  3181   	fcall	_ReadI2C
 11549     02CD  00F7               	movwf	LCDrecv@lc
 11550     02CE                     l3817:
 11551     02CE  0023               	movlb	3	; select bank3
 11552     02CF  0C0F               	rrf	15,w	;volatile
 11553     02D0  0C89               	rrf	9,f
 11554     02D1  3901               	andlw	1
 11555     02D2  00F4               	movwf	??_LCDrecv
 11556     02D3  0811               	movf	17,w	;volatile
 11557     02D4  391F               	andlw	31
 11558     02D5  0474               	iorwf	??_LCDrecv,w
 11559     02D6  1D03               	btfss	3,2
 11560     02D7  2AD9               	goto	u2841
 11561     02D8  2ADA               	goto	u2840
 11562     02D9                     u2841:
 11563     02D9  2ACE               	goto	l3817
 11564     02DA                     u2840:
 11565     02DA                     l165:	
 11566                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 11567                           
 11568     02DA  1691               	bsf	17,5	;volatile
 11569     02DB  1611               	bsf	17,4	;volatile
 11570     02DC                     l166:
 11571     02DC  1A11               	btfsc	17,4	;volatile
 11572     02DD  2ADF               	goto	u2851
 11573     02DE  2AE0               	goto	u2850
 11574     02DF                     u2851:
 11575     02DF  2ADC               	goto	l166
 11576     02E0                     u2850:
 11577     02E0                     l170:	
 11578                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11579                           
 11580     02E0  1491               	bsf	17,1	;volatile
 11581     02E1                     l171:
 11582     02E1  1891               	btfsc	17,1	;volatile
 11583     02E2  2AE4               	goto	u2861
 11584     02E3  2AE5               	goto	u2860
 11585     02E4                     u2861:
 11586     02E4  2AE1               	goto	l171
 11587     02E5                     u2860:
 11588     02E5                     l3819:
 11589     02E5  0C0F               	rrf	15,w	;volatile
 11590     02E6  0C89               	rrf	9,f
 11591     02E7  3901               	andlw	1
 11592     02E8  00F4               	movwf	??_LCDrecv
 11593     02E9  0811               	movf	17,w	;volatile
 11594     02EA  391F               	andlw	31
 11595     02EB  0474               	iorwf	??_LCDrecv,w
 11596     02EC  1D03               	btfss	3,2
 11597     02ED  2AEF               	goto	u2871
 11598     02EE  2AF0               	goto	u2870
 11599     02EF                     u2871:
 11600     02EF  2AE5               	goto	l3819
 11601     02F0                     u2870:
 11602     02F0                     l3821:
 11603                           
 11604                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11605     02F0  304E               	movlw	78
 11606     02F1  318F  2765  3181   	fcall	_WriteI2C
 11607     02F4                     l3823:
 11608     02F4  0023               	movlb	3	; select bank3
 11609     02F5  0C0F               	rrf	15,w	;volatile
 11610     02F6  0C89               	rrf	9,f
 11611     02F7  3901               	andlw	1
 11612     02F8  00F4               	movwf	??_LCDrecv
 11613     02F9  0811               	movf	17,w	;volatile
 11614     02FA  391F               	andlw	31
 11615     02FB  0474               	iorwf	??_LCDrecv,w
 11616     02FC  1D03               	btfss	3,2
 11617     02FD  2AFF               	goto	u2881
 11618     02FE  2B00               	goto	u2880
 11619     02FF                     u2881:
 11620     02FF  2AF4               	goto	l3823
 11621     0300                     u2880:
 11622     0300                     l3825:
 11623                           
 11624                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 11625     0300  0878               	movf	LCDrecv@mode,w
 11626     0301  38FA               	iorlw	250
 11627     0302  318F  2765  3181   	fcall	_WriteI2C
 11628     0305                     l3827:
 11629     0305  0023               	movlb	3	; select bank3
 11630     0306  0C0F               	rrf	15,w	;volatile
 11631     0307  0C89               	rrf	9,f
 11632     0308  3901               	andlw	1
 11633     0309  00F4               	movwf	??_LCDrecv
 11634     030A  0811               	movf	17,w	;volatile
 11635     030B  391F               	andlw	31
 11636     030C  0474               	iorwf	??_LCDrecv,w
 11637     030D  1D03               	btfss	3,2
 11638     030E  2B10               	goto	u2891
 11639     030F  2B11               	goto	u2890
 11640     0310                     u2891:
 11641     0310  2B05               	goto	l3827
 11642     0311                     u2890:
 11643     0311                     l184:	
 11644                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 11645                           
 11646     0311  1511               	bsf	17,2	;volatile
 11647     0312                     l185:
 11648     0312  1911               	btfsc	17,2	;volatile
 11649     0313  2B15               	goto	u2901
 11650     0314  2B16               	goto	u2900
 11651     0315                     u2901:
 11652     0315  2B12               	goto	l185
 11653     0316                     u2900:
 11654     0316                     l3829:
 11655                           
 11656                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 11657     0316  0877               	movf	LCDrecv@lc,w
 11658     0317  00F4               	movwf	??_LCDrecv
 11659     0318  3004               	movlw	4
 11660     0319                     u2915:
 11661     0319  36F4               	lsrf	??_LCDrecv,f
 11662     031A  0B89               	decfsz	9,f
 11663     031B  2B19               	goto	u2915
 11664     031C  300F               	movlw	15
 11665     031D  0574               	andwf	??_LCDrecv,w
 11666     031E  00F5               	movwf	??_LCDrecv+1
 11667     031F  0876               	movf	LCDrecv@hc,w
 11668     0320  39F0               	andlw	240
 11669     0321  0475               	iorwf	??_LCDrecv+1,w
 11670     0322                     l189:
 11671     0322  0008               	return
 11672     0323                     __end_of_LCDrecv:
 11673                           
 11674                           	psect	text33
 11675     0F65                     __ptext33:	
 11676 ;; *************** function _WriteI2C *****************
 11677 ;; Defined at:
 11678 ;;		line 59 in file "I2C/i2c.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;  data_out        1    wreg     unsigned char 
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;  data_out        1    3[COMMON] unsigned char 
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  1    wreg      char 
 11685 ;; Registers used:
 11686 ;;		wreg, status,2, status,0
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;Total ram usage:        2 bytes
 11697 ;; Hardware stack levels used: 1
 11698 ;; Hardware stack levels required when called: 3
 11699 ;; This function calls:
 11700 ;;		Nothing
 11701 ;; This function is called by:
 11702 ;;		_LCDsend
 11703 ;;		_LCDrecv
 11704 ;;		_LCDsend2x4
 11705 ;;		_readTC74
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709     0F65                     _WriteI2C:	
 11710                           ;psect for function _WriteI2C
 11711                           
 11712                           
 11713                           ;incstack = 0
 11714                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11715                           ;WriteI2C@data_out stored from wreg
 11716     0F65  00F3               	movwf	WriteI2C@data_out
 11717     0F66                     l3551:
 11718                           
 11719                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 11720     0F66  0873               	movf	WriteI2C@data_out,w
 11721     0F67  0023               	movlb	3	; select bank3
 11722     0F68  008C               	movwf	12	;volatile
 11723     0F69                     l3553:
 11724                           
 11725                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 11726     0F69  1F90               	btfss	16,7	;volatile
 11727     0F6A  2F6C               	goto	u2171
 11728     0F6B  2F6D               	goto	u2170
 11729     0F6C                     u2171:
 11730     0F6C  2F6E               	goto	l3559
 11731     0F6D                     u2170:
 11732     0F6D  2FAF               	goto	l36
 11733     0F6E                     l3559:
 11734                           
 11735                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11736     0F6E  300F               	movlw	15
 11737     0F6F  0510               	andwf	16,w	;volatile
 11738     0F70  00F2               	movwf	??_WriteI2C
 11739     0F71  3008               	movlw	8
 11740     0F72  0672               	xorwf	??_WriteI2C,w
 11741     0F73  1903               	btfsc	3,2
 11742     0F74  2F76               	goto	u2181
 11743     0F75  2F77               	goto	u2180
 11744     0F76                     u2181:
 11745     0F76  2F8D               	goto	l3571
 11746     0F77                     u2180:
 11747     0F77                     l3561:
 11748     0F77  300F               	movlw	15
 11749     0F78  0510               	andwf	16,w	;volatile
 11750     0F79  00F2               	movwf	??_WriteI2C
 11751     0F7A  300B               	movlw	11
 11752     0F7B  0672               	xorwf	??_WriteI2C,w
 11753     0F7C  1903               	btfsc	3,2
 11754     0F7D  2F7F               	goto	u2191
 11755     0F7E  2F80               	goto	u2190
 11756     0F7F                     u2191:
 11757     0F7F  2F8D               	goto	l3571
 11758     0F80                     u2190:
 11759     0F80                     l3563:
 11760                           
 11761                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 11762     0F80  1610               	bsf	16,4	;volatile
 11763     0F81                     l39:	
 11764                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 11765                           
 11766     0F81  002E               	movlb	14	; select bank14
 11767     0F82  1C0F               	btfss	15,0	;volatile
 11768     0F83  2F85               	goto	u2201
 11769     0F84  2F86               	goto	u2200
 11770     0F85                     u2201:
 11771     0F85  2F81               	goto	l39
 11772     0F86                     u2200:
 11773     0F86                     l41:
 11774                           
 11775                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11776     0F86  0023               	movlb	3	; select bank3
 11777     0F87  190F               	btfsc	15,2	;volatile
 11778     0F88  2F8A               	goto	u2211
 11779     0F89  2F8B               	goto	u2210
 11780     0F8A                     u2211:
 11781     0F8A  2FAF               	goto	l36
 11782     0F8B                     u2210:
 11783     0F8B                     l3565:
 11784     0F8B  080F               	movf	15,w	;volatile
 11785     0F8C  2FAF               	goto	l36
 11786     0F8D                     l3571:
 11787     0F8D  300F               	movlw	15
 11788     0F8E  0510               	andwf	16,w	;volatile
 11789     0F8F  00F2               	movwf	??_WriteI2C
 11790     0F90  3008               	movlw	8
 11791     0F91  0672               	xorwf	??_WriteI2C,w
 11792     0F92  1903               	btfsc	3,2
 11793     0F93  2F95               	goto	u2221
 11794     0F94  2F96               	goto	u2220
 11795     0F95                     u2221:
 11796     0F95  2F9F               	goto	l48
 11797     0F96                     u2220:
 11798     0F96                     l3573:
 11799     0F96  300F               	movlw	15
 11800     0F97  0510               	andwf	16,w	;volatile
 11801     0F98  00F2               	movwf	??_WriteI2C
 11802     0F99  300B               	movlw	11
 11803     0F9A  0672               	xorwf	??_WriteI2C,w
 11804     0F9B  1D03               	btfss	3,2
 11805     0F9C  2F9E               	goto	u2231
 11806     0F9D  2F9F               	goto	u2230
 11807     0F9E                     u2231:
 11808     0F9E  2FAF               	goto	l36
 11809     0F9F                     u2230:
 11810     0F9F                     l48:
 11811     0F9F  180F               	btfsc	15,0	;volatile
 11812     0FA0  2FA2               	goto	u2241
 11813     0FA1  2FA3               	goto	u2240
 11814     0FA2                     u2241:
 11815     0FA2  2F9F               	goto	l48
 11816     0FA3                     u2240:
 11817     0FA3                     l3575:
 11818     0FA3  0C0F               	rrf	15,w	;volatile
 11819     0FA4  0C89               	rrf	9,f
 11820     0FA5  3901               	andlw	1
 11821     0FA6  00F2               	movwf	??_WriteI2C
 11822     0FA7  0811               	movf	17,w	;volatile
 11823     0FA8  391F               	andlw	31
 11824     0FA9  0472               	iorwf	??_WriteI2C,w
 11825     0FAA  1D03               	btfss	3,2
 11826     0FAB  2FAD               	goto	u2251
 11827     0FAC  2FAE               	goto	u2250
 11828     0FAD                     u2251:
 11829     0FAD  2FA3               	goto	l3575
 11830     0FAE                     u2250:
 11831     0FAE                     l53:
 11832                           
 11833                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 11834     0FAE  0811               	movf	17,w	;volatile
 11835     0FAF                     l36:
 11836     0FAF  0008               	return
 11837     0FB0                     __end_of_WriteI2C:
 11838                           
 11839                           	psect	text34
 11840     0E08                     __ptext34:	
 11841 ;; *************** function _ReadI2C *****************
 11842 ;; Defined at:
 11843 ;;		line 44 in file "I2C/i2c.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;		None
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;		None
 11848 ;; Return value:  Size  Location     Type
 11849 ;;                  1    wreg      unsigned char 
 11850 ;; Registers used:
 11851 ;;		wreg, status,2, status,0
 11852 ;; Tracked objects:
 11853 ;;		On entry : 0/0
 11854 ;;		On exit  : 0/0
 11855 ;;		Unchanged: 0/0
 11856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11861 ;;Total ram usage:        1 bytes
 11862 ;; Hardware stack levels used: 1
 11863 ;; Hardware stack levels required when called: 3
 11864 ;; This function calls:
 11865 ;;		Nothing
 11866 ;; This function is called by:
 11867 ;;		_LCDrecv
 11868 ;;		_readTC74
 11869 ;; This function uses a non-reentrant model
 11870 ;;
 11871                           
 11872     0E08                     _ReadI2C:	
 11873                           ;psect for function _ReadI2C
 11874                           
 11875     0E08                     l3645:	
 11876                           ;incstack = 0
 11877                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11878                           
 11879                           
 11880                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11881     0E08  300F               	movlw	15
 11882     0E09  0023               	movlb	3	; select bank3
 11883     0E0A  0510               	andwf	16,w	;volatile
 11884     0E0B  00F2               	movwf	??_ReadI2C
 11885     0E0C  3008               	movlw	8
 11886     0E0D  0672               	xorwf	??_ReadI2C,w
 11887     0E0E  1903               	btfsc	3,2
 11888     0E0F  2E11               	goto	u2381
 11889     0E10  2E12               	goto	u2380
 11890     0E11                     u2381:
 11891     0E11  2E1B               	goto	l28
 11892     0E12                     u2380:
 11893     0E12                     l3647:
 11894     0E12  300F               	movlw	15
 11895     0E13  0510               	andwf	16,w	;volatile
 11896     0E14  00F2               	movwf	??_ReadI2C
 11897     0E15  300B               	movlw	11
 11898     0E16  0672               	xorwf	??_ReadI2C,w
 11899     0E17  1D03               	btfss	3,2
 11900     0E18  2E1A               	goto	u2391
 11901     0E19  2E1B               	goto	u2390
 11902     0E1A                     u2391:
 11903     0E1A  2E1C               	goto	l29
 11904     0E1B                     u2390:
 11905     0E1B                     l28:
 11906                           
 11907                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 11908     0E1B  1591               	bsf	17,3	;volatile
 11909     0E1C                     l29:
 11910     0E1C  1C0F               	btfss	15,0	;volatile
 11911     0E1D  2E1F               	goto	u2401
 11912     0E1E  2E20               	goto	u2400
 11913     0E1F                     u2401:
 11914     0E1F  2E1C               	goto	l29
 11915     0E20                     u2400:
 11916     0E20                     l3649:
 11917                           
 11918                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 11919     0E20  080C               	movf	12,w	;volatile
 11920     0E21                     l32:
 11921     0E21  0008               	return
 11922     0E22                     __end_of_ReadI2C:
 11923                           
 11924                           	psect	text35
 11925     0D63                     __ptext35:	
 11926 ;; *************** function _ADCC_GetSingleConversion *****************
 11927 ;; Defined at:
 11928 ;;		line 132 in file "mcc_generated_files/adcc.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;  channel         1    wreg     enum E12225
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;  channel         1    4[COMMON] enum E12225
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  2    2[COMMON] unsigned short 
 11935 ;; Registers used:
 11936 ;;		wreg
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;Total ram usage:        3 bytes
 11947 ;; Hardware stack levels used: 1
 11948 ;; Hardware stack levels required when called: 3
 11949 ;; This function calls:
 11950 ;;		Nothing
 11951 ;; This function is called by:
 11952 ;;		_main
 11953 ;; This function uses a non-reentrant model
 11954 ;;
 11955                           
 11956     0D63                     _ADCC_GetSingleConversion:	
 11957                           ;psect for function _ADCC_GetSingleConversion
 11958                           
 11959                           
 11960                           ;incstack = 0
 11961                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11962                           ;ADCC_GetSingleConversion@channel stored from wreg
 11963     0D63  00F4               	movwf	ADCC_GetSingleConversion@channel
 11964     0D64                     l4101:
 11965                           
 11966                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 11967     0D64  0874               	movf	ADCC_GetSingleConversion@channel,w
 11968     0D65  0021               	movlb	1	; select bank1
 11969     0D66  009E               	movwf	30	;volatile
 11970     0D67                     l4103:
 11971                           
 11972                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 11973     0D67  1793               	bsf	19,7	;volatile
 11974     0D68                     l4105:
 11975                           
 11976                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 11977     0D68  1313               	bcf	19,6	;volatile
 11978     0D69                     l4107:
 11979                           
 11980                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 11981     0D69  1413               	bsf	19,0	;volatile
 11982     0D6A                     l4109:
 11983                           
 11984                           ;mcc_generated_files/adcc.c: 147:     __nop();
 11985     0D6A  0000               	nop
 11986     0D6B                     l904:	
 11987                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 11988                           
 11989                           
 11990                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 11991     0D6B  0021               	movlb	1	; select bank1
 11992     0D6C  1813               	btfsc	19,0	;volatile
 11993     0D6D  2D6F               	goto	u3001
 11994     0D6E  2D70               	goto	u3000
 11995     0D6F                     u3001:
 11996     0D6F  2D6B               	goto	l904
 11997     0D70                     u3000:
 11998     0D70                     l4111:
 11999                           
 12000                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12001     0D70  080D               	movf	13,w	;volatile
 12002     0D71  00F3               	movwf	?_ADCC_GetSingleConversion+1
 12003     0D72  080C               	movf	12,w	;volatile
 12004     0D73  00F2               	movwf	?_ADCC_GetSingleConversion
 12005     0D74                     l907:
 12006     0D74  0008               	return
 12007     0D75                     __end_of_ADCC_GetSingleConversion:
 12008                           
 12009                           	psect	intentry
 12010     0004                     __pintentry:	
 12011 ;; *************** function _INTERRUPT_InterruptManager *****************
 12012 ;; Defined at:
 12013 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;		None
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;		None
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  1    wreg      void 
 12020 ;; Registers used:
 12021 ;;		wreg, status,2, status,0, pclath, cstack
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;Total ram usage:        0 bytes
 12032 ;; Hardware stack levels used: 1
 12033 ;; Hardware stack levels required when called: 2
 12034 ;; This function calls:
 12035 ;;		_TMR1_ISR
 12036 ;; This function is called by:
 12037 ;;		Interrupt level 1
 12038 ;; This function uses a non-reentrant model
 12039 ;;
 12040                           
 12041     0004                     _INTERRUPT_InterruptManager:
 12042                           
 12043                           ;incstack = 0
 12044     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12045                           
 12046                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 12047     0005  3180               	pagesel	$
 12048     0006                     i1l4643:
 12049                           
 12050                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 12051     0006  1F0B               	btfss	11,6	;volatile
 12052     0007  2809               	goto	u352_21
 12053     0008  280A               	goto	u352_20
 12054     0009                     u352_21:
 12055     0009  2816               	goto	i1l1054
 12056     000A                     u352_20:
 12057     000A                     i1l4645:
 12058                           
 12059                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 12060     000A  002E               	movlb	14	; select bank14
 12061     000B  1C1A               	btfss	26,0	;volatile
 12062     000C  280E               	goto	u353_21
 12063     000D  280F               	goto	u353_20
 12064     000E                     u353_21:
 12065     000E  2816               	goto	i1l1054
 12066     000F                     u353_20:
 12067     000F                     i1l4647:
 12068     000F  1C10               	btfss	16,0	;volatile
 12069     0010  2812               	goto	u354_21
 12070     0011  2813               	goto	u354_20
 12071     0012                     u354_21:
 12072     0012  2816               	goto	i1l1054
 12073     0013                     u354_20:
 12074     0013                     i1l4649:
 12075                           
 12076                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 12077     0013  318D  25C2  3180   	fcall	_TMR1_ISR
 12078     0016                     i1l1054:	
 12079                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 12080                           
 12081     0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12082     0017  0009               	retfie
 12083     0018                     __end_of_INTERRUPT_InterruptManager:
 12084                           
 12085                           	psect	text37
 12086     0DC2                     __ptext37:	
 12087 ;; *************** function _TMR1_ISR *****************
 12088 ;; Defined at:
 12089 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 12090 ;; Parameters:    Size  Location     Type
 12091 ;;		None
 12092 ;; Auto vars:     Size  Location     Type
 12093 ;;		None
 12094 ;; Return value:  Size  Location     Type
 12095 ;;                  1    wreg      void 
 12096 ;; Registers used:
 12097 ;;		wreg, status,2, status,0, pclath, cstack
 12098 ;; Tracked objects:
 12099 ;;		On entry : 0/0
 12100 ;;		On exit  : 0/0
 12101 ;;		Unchanged: 0/0
 12102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;Total ram usage:        0 bytes
 12108 ;; Hardware stack levels used: 1
 12109 ;; Hardware stack levels required when called: 1
 12110 ;; This function calls:
 12111 ;;		NULL
 12112 ;;		_TMR1_DefaultInterruptHandler
 12113 ;;		_TMR1_WriteTimer
 12114 ;;		_Timer1
 12115 ;; This function is called by:
 12116 ;;		_INTERRUPT_InterruptManager
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120     0DC2                     _TMR1_ISR:	
 12121                           ;psect for function _TMR1_ISR
 12122                           
 12123     0DC2                     i1l4115:	
 12124                           ;incstack = 0
 12125                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 12126                           
 12127                           
 12128                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 12129     0DC2  002E               	movlb	14	; select bank14
 12130     0DC3  1010               	bcf	16,0	;volatile
 12131     0DC4                     i1l4117:
 12132                           
 12133                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 12134     0DC4  087B               	movf	_timer1ReloadVal+1,w	;volatile
 12135     0DC5  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 12136     0DC6  087A               	movf	_timer1ReloadVal,w	;volatile
 12137     0DC7  00F0               	movwf	TMR1_WriteTimer@timerVal
 12138     0DC8  318D  2552  318D   	fcall	_TMR1_WriteTimer
 12139     0DCB                     i1l4119:
 12140                           
 12141                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 12142     0DCB  0020               	movlb	0	; select bank0
 12143     0DCC  086C               	movf	_TMR1_InterruptHandler,w
 12144     0DCD  046D               	iorwf	_TMR1_InterruptHandler+1,w
 12145     0DCE  1903               	btfsc	3,2
 12146     0DCF  2DD1               	goto	u301_21
 12147     0DD0  2DD2               	goto	u301_20
 12148     0DD1                     u301_21:
 12149     0DD1  2DD7               	goto	i1l1031
 12150     0DD2                     u301_20:
 12151     0DD2                     i1l4121:
 12152                           
 12153                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 12154     0DD2  086D               	movf	_TMR1_InterruptHandler+1,w
 12155     0DD3  008A               	movwf	10
 12156     0DD4  086C               	movf	_TMR1_InterruptHandler,w
 12157     0DD5  000A               	callw
 12158     0DD6  318D               	pagesel	$
 12159     0DD7                     i1l1031:
 12160     0DD7  0008               	return
 12161     0DD8                     __end_of_TMR1_ISR:
 12162                           
 12163                           	psect	text38
 12164     0002                     __ptext38:	
 12165 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 12166 ;; Defined at:
 12167 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;		None
 12170 ;; Auto vars:     Size  Location     Type
 12171 ;;		None
 12172 ;; Return value:  Size  Location     Type
 12173 ;;                  1    wreg      void 
 12174 ;; Registers used:
 12175 ;;		None
 12176 ;; Tracked objects:
 12177 ;;		On entry : 0/0
 12178 ;;		On exit  : 0/0
 12179 ;;		Unchanged: 0/0
 12180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12185 ;;Total ram usage:        0 bytes
 12186 ;; Hardware stack levels used: 1
 12187 ;; This function calls:
 12188 ;;		Nothing
 12189 ;; This function is called by:
 12190 ;;		_TMR1_Initialize
 12191 ;;		_TMR1_ISR
 12192 ;; This function uses a non-reentrant model
 12193 ;;
 12194                           
 12195     0002                     _TMR1_DefaultInterruptHandler:	
 12196                           ;psect for function _TMR1_DefaultInterruptHandler
 12197                           
 12198     0002                     i1l1037:	
 12199                           ;incstack = 0
 12200                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 12201                           
 12202     0002  0008               	return
 12203     0003                     __end_of_TMR1_DefaultInterruptHandler:
 12204                           
 12205                           	psect	text39
 12206     0D0B                     __ptext39:	
 12207 ;; *************** function _Timer1 *****************
 12208 ;; Defined at:
 12209 ;;		line 62 in file "main.c"
 12210 ;; Parameters:    Size  Location     Type
 12211 ;;		None
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;		None
 12214 ;; Return value:  Size  Location     Type
 12215 ;;                  1    wreg      void 
 12216 ;; Registers used:
 12217 ;;		wreg
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12227 ;;Total ram usage:        0 bytes
 12228 ;; Hardware stack levels used: 1
 12229 ;; This function calls:
 12230 ;;		Nothing
 12231 ;; This function is called by:
 12232 ;;		_main
 12233 ;;		_TMR1_ISR
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237     0D0B                     _Timer1:	
 12238                           ;psect for function _Timer1
 12239                           
 12240     0D0B                     i1l3935:	
 12241                           ;incstack = 0
 12242                           ; Regs used in _Timer1: [wreg]
 12243                           
 12244                           
 12245                           ;main.c: 63:     one_second = 1;
 12246     0D0B  3001               	movlw	1
 12247     0D0C  0021               	movlb	1	; select bank1
 12248     0D0D  00E5               	movwf	_one_second^(0+128)	;volatile
 12249     0D0E                     i1l1091:
 12250     0D0E  0008               	return
 12251     0D0F                     __end_of_Timer1:
 12252                           
 12253                           	psect	text40
 12254     0D52                     __ptext40:	
 12255 ;; *************** function _TMR1_WriteTimer *****************
 12256 ;; Defined at:
 12257 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 12258 ;; Parameters:    Size  Location     Type
 12259 ;;  timerVal        2    0[COMMON] unsigned short 
 12260 ;; Auto vars:     Size  Location     Type
 12261 ;;		None
 12262 ;; Return value:  Size  Location     Type
 12263 ;;                  1    wreg      void 
 12264 ;; Registers used:
 12265 ;;		wreg, status,2
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12275 ;;Total ram usage:        2 bytes
 12276 ;; Hardware stack levels used: 1
 12277 ;; This function calls:
 12278 ;;		Nothing
 12279 ;; This function is called by:
 12280 ;;		_TMR1_ISR
 12281 ;;		_TMR1_Reload
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285     0D52                     _TMR1_WriteTimer:	
 12286                           ;psect for function _TMR1_WriteTimer
 12287                           
 12288     0D52                     i1l3921:	
 12289                           ;incstack = 0
 12290                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 12291                           
 12292                           
 12293                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 12294     0D52  0024               	movlb	4	; select bank4
 12295     0D53  1D0E               	btfss	14,2	;volatile
 12296     0D54  2D56               	goto	u293_21
 12297     0D55  2D57               	goto	u293_20
 12298     0D56                     u293_21:
 12299     0D56  2D5E               	goto	i1l3931
 12300     0D57                     u293_20:
 12301     0D57                     i1l3923:
 12302                           
 12303                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 12304     0D57  100E               	bcf	14,0	;volatile
 12305     0D58                     i1l3925:
 12306                           
 12307                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 12308     0D58  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12309     0D59  008D               	movwf	13	;volatile
 12310     0D5A                     i1l3927:
 12311                           
 12312                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 12313     0D5A  0870               	movf	TMR1_WriteTimer@timerVal,w
 12314     0D5B  008C               	movwf	12	;volatile
 12315     0D5C                     i1l3929:
 12316                           
 12317                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 12318     0D5C  140E               	bsf	14,0	;volatile
 12319                           
 12320                           ;mcc_generated_files/tmr1.c: 140:     }
 12321     0D5D  2D62               	goto	i1l1018
 12322     0D5E                     i1l3931:
 12323                           
 12324                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 12325     0D5E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12326     0D5F  008D               	movwf	13	;volatile
 12327     0D60                     i1l3933:
 12328                           
 12329                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 12330     0D60  0870               	movf	TMR1_WriteTimer@timerVal,w
 12331     0D61  008C               	movwf	12	;volatile
 12332     0D62                     i1l1018:
 12333     0D62  0008               	return
 12334     0D63                     __end_of_TMR1_WriteTimer:
 12335     007E                     btemp	set	126	;btemp
 12336     007E                     int$flags	set	126
 12337     007E                     wtemp0	set	126
 12338                           
 12339                           	psect	idloc
 12340                           
 12341                           ;Config register IDLOC0 @ 0x8000
 12342                           ;	unspecified, using default values
 12343     8000                     	org	32768
 12344     8000  3FFF               	dw	16383
 12345                           
 12346                           ;Config register IDLOC1 @ 0x8001
 12347                           ;	unspecified, using default values
 12348     8001                     	org	32769
 12349     8001  3FFF               	dw	16383
 12350                           
 12351                           ;Config register IDLOC2 @ 0x8002
 12352                           ;	unspecified, using default values
 12353     8002                     	org	32770
 12354     8002  3FFF               	dw	16383
 12355                           
 12356                           ;Config register IDLOC3 @ 0x8003
 12357                           ;	unspecified, using default values
 12358     8003                     	org	32771
 12359     8003  3FFF               	dw	16383
 12360                           
 12361                           	psect	config
 12362                           
 12363                           ;Config register CONFIG1 @ 0x8007
 12364                           ;	External Oscillator mode selection bits
 12365                           ;	FEXTOSC = OFF, Oscillator not enabled
 12366                           ;	Power-up default value for COSC bits
 12367                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 12368                           ;	Clock Out Enable bit
 12369                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 12370                           ;	Clock Switch Enable bit
 12371                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12372                           ;	Fail-Safe Clock Monitor Enable bit
 12373                           ;	FCMEN = ON, FSCM timer enabled
 12374     8007                     	org	32775
 12375     8007  3FEC               	dw	16364
 12376                           
 12377                           ;Config register CONFIG2 @ 0x8008
 12378                           ;	Master Clear Enable bit
 12379                           ;	MCLRE = ON, MCLR pin is Master Clear function
 12380                           ;	Power-up Timer Enable bit
 12381                           ;	PWRTE = OFF, PWRT disabled
 12382                           ;	Low-Power BOR enable bit
 12383                           ;	LPBOREN = OFF, ULPBOR disabled
 12384                           ;	Brown-out reset enable bits
 12385                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 12386                           ;	Brown-out Reset Voltage Selection
 12387                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 12388                           ;	Zero-cross detect disable
 12389                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 12390                           ;	Peripheral Pin Select one-way control
 12391                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 12392                           ;	Stack Overflow/Underflow Reset Enable bit
 12393                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 12394                           ;	Background Debugger
 12395                           ;	DEBUG = OFF, Background Debugger disabled
 12396     8008                     	org	32776
 12397     8008  3FFF               	dw	16383
 12398                           
 12399                           ;Config register CONFIG3 @ 0x8009
 12400                           ;	WDT Period Select bits
 12401                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12402                           ;	WDT operating mode
 12403                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 12404                           ;	WDT Window Select bits
 12405                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12406                           ;	WDT input clock selector
 12407                           ;	WDTCCS = SC, Software Control
 12408     8009                     	org	32777
 12409     8009  3F9F               	dw	16287
 12410                           
 12411                           ;Config register CONFIG4 @ 0x800A
 12412                           ;	UserNVM self-write protection bits
 12413                           ;	WRT = OFF, Write protection off
 12414                           ;	Scanner Enable bit
 12415                           ;	SCANE = available, Scanner module is available for use
 12416                           ;	Low Voltage Programming Enable bit
 12417                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 12418     800A                     	org	32778
 12419     800A  3FFF               	dw	16383
 12420                           
 12421                           ;Config register CONFIG5 @ 0x800B
 12422                           ;	UserNVM Program memory code protection bit
 12423                           ;	CP = OFF, Program Memory code protection disabled
 12424                           ;	DataNVM code protection bit
 12425                           ;	CPD = OFF, Data EEPROM code protection disabled
 12426     800B                     	org	32779
 12427     800B  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    32
    Data        0
    BSS         69
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     71      78
    BANK1            80     40      70
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    I2C1_DO_TX$3079$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_fsmStateTable	const PTR FTN()enum E12617[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> main@measure_buffer(BANK1[6]), main@time_buffer(BANK1[8]), STR_4(CODE[2]), STR_5(CODE[2]), 
		 -> STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2572$buffer	PTR unsigned char  size(2) Largest target is 0

    S2572$source	PTR const unsigned char  size(2) Largest target is 0

    S679$data	PTR unsigned char  size(2) Largest target is 0

    S910$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S910$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S910$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S910$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 8
		 -> main@measure_buffer(BANK1[6]), main@time_buffer(BANK1[8]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1(), TMR1_DefaultInterruptHandler(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_LCDcmd
    _main->_LCDinit
    _vfpfcnvrt->_fputc
    _vfpfcnvrt->_read_prec_or_width
    _read_prec_or_width->___wmul
    _pad->_fputc
    _fputs->_fputc
    _abs->___awmod
    _readTC74->_WriteI2C
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDpos->_LCDcmd
    _LCDcmd->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   14598
                                             69 BANK0      2     2      0
                                              0 BANK1     40    40      0
           _ADCC_GetSingleConversion
                            _LCDbusy
                             _LCDcmd
                            _LCDinit
                             _LCDpos
                             _LCDstr
                            _OpenI2C
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                           _readTC74
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8    8264
                                             47 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    7574
                                             40 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           15    13      2    7140
                                             26 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2    1433
                                              8 COMMON     2     0      2
                                              0 BANK0      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1144
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12    10      2    4208
                                             14 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    2229
                                              7 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1    1074
                                              0 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              0 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _readTC74                                             2     2      0      68
                                              4 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               5     3      2    1685
                                              0 BANK0      5     3      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              9 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDpos                                               3     2      1    1393
                                              0 BANK0      3     2      1
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              9 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              9 COMMON     1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           5     4      1     788
                                              4 COMMON     5     4      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              4 COMMON     2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDbusy                                              2     0      2     178
                                              0 BANK0      2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (2) _LCDrecv                                              5     5      0     178
                                              4 COMMON     5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             3     1      2      22
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     240
                                NULL *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                             _Timer1 *
 ---------------------------------------------------------------------------------
 (11) _Timer1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCDbusy
     _LCDrecv
       _ReadI2C
       _WriteI2C
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
   _LCDpos
     _LCDcmd
   _LCDstr
     _LCDchar
       _LCDsend2x4
   _OpenI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _readTC74
     _ReadI2C
     _WriteI2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _Timer1 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     28      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 29 20:02:22 2023

                                      l23 0D51                                        l32 0E21  
                                      l41 0F86                                        l28 0E1B  
                                      l36 0FAF                                        l29 0E1C  
                                      l53 0FAE                                        l39 0F81  
                                      l48 0F9F                                        l73 0EE9  
                                      l74 0EEA                                        l92 0F1E  
                                      l87 0F19                                        l88 0F1A  
                                      l98 01EC                                        l99 01ED  
                            ___awdiv@sign 0021                       ___wmul@multiplicand 0074  
                                     l130 0262                                       l114 022E  
                                     l115 022F                                       l211 0551  
                                     l116 0231                                       l220 0588  
                                     l150 02A8                                       l134 0266  
                                     l151 02A9                                       l135 0267  
                                     l152 02AB                                       l224 059B  
                                     l232 06CD                                       l129 0260  
                                     l225 059C                                       l170 02E0  
                                     l171 02E1                                       l235 0D21  
                                     l244 0E07                                       l165 02DA  
                                     l229 05A4                                       l253 0DC1  
                                     l166 02DC                                       l238 0D29  
                                     l184 0311                                       l248 0D99  
                                     l185 0312                                       l195 050D  
                                     l196 050E                                       l189 0322  
                                     l392 0DAC                                       l395 0D3A  
                                     l398 0D31                                       l479 0F64  
                                     l904 0D6B                                       l907 0D74  
                                     l587 0D44                                       l892 0DEE  
                         _timer1ReloadVal 007A                                       _abs 0D75  
                                     _pad 0E9D                              ___awmod@sign 0078  
                                     wreg 0009                      _I2C1_DO_RX_NACK_STOP 0000  
                             ?_LCDsend2x4 0074                           __end_of_LCDchar 0D2A  
                                    l1004 0E5A                                      l1112 035F  
                                    l1113 0360                                      l1034 0D14  
                                    ?_abs 0020                                      l1134 03A0  
                                    l1126 038F                                      l1143 03B4  
                                    l1135 03A1                                      l1127 0391  
                                    l1144 03B5                                      l1138 03A5  
                                    l1171 0414                                      l1180 0426  
                                    l1172 0416                                      l1157 03E4  
                                    l1158 03E5                                      l1094 0323  
                                    l1184 042B                                      l1098 032F  
                                    l1362 07EB                                      l1179 0425  
                                    l1099 0330                                      l1515 078D  
                                    l1364 07FF                                      l4101 0D64  
                                    l4111 0D70                                      l4103 0D67  
                                    l1528 07E0                                      l4105 0D68  
                                    l5001 0E5D                                      l4107 0D69  
                                    l4131 034F                                      l4123 0323  
                                    l3411 0FBA                                      l5003 0E61  
                                    l4109 0D6A                                      l4061 0DA0  
                                    l4141 037F                                      l4133 0353  
                                    l4125 0334                                      l3501 07A3  
                                    l3413 0FBF                                      l5005 0E63  
                                    l5101 015D                                      l5021 0043  
                                    l5013 0036                                      l1902 0D86  
                                    l4063 0DA3                                      l4151 03C4  
                                    l4143 0383                                      l4135 0364  
                                    l4127 033F                                      l3511 07B9  
                                    l3503 07A9                                      l3415 0FC9  
                                    l3407 0FB0                                      l3431 07E1  
                                    l5007 0E65                                      l5111 0195  
                                    l5103 016D                                      l5031 0057  
                                    l5023 0047                                      l5015 0039  
                                    l4065 0DA6                                      l4057 0D9A  
                                    l4161 03F4                                      l4153 03C8  
                                    l4145 0395                                      l4137 036F  
                                    l4129 0343                                      l3521 07D7  
                                    l3513 07C3                                      l3505 07AC  
                                    l3417 0FE7                                      l3409 0FB5  
                                    l3441 07FB                                      l3433 07E3  
                                    l1825 0E77                                      l5009 0E6F  
                                    l5121 01BF                                      l5113 019E  
                                    l5105 0176                                      l5041 0063  
                                    l5033 005B                                      l5025 004B  
                                    l5017 003B                                      l1914 0FFF  
                                    l1922 0E9C                                      l1850 0EDB  
                                    l4067 0DA9                                      l4059 0D9D  
                                    l4171 042A                                      l4163 03F8  
                                    l4155 03D4                                      l4147 03A9  
                                    l4139 0373                                      l3523 07DC  
                                    l3515 07C7                                      l3507 07B1  
                                    l3419 0FF6                                      l3435 07E7  
                                    l5123 01CE                                      l5107 017E  
                                    l5115 01A6                                      l5051 0077  
                                    l5043 0064                                      l5035 005F  
                                    l5027 004F                                      l5019 003F  
                                    l4165 0404                                      l4157 03D8  
                                    l4149 03B9                                      l3517 07CC  
                                    l3509 07B5                                      l1925 0003  
                                    l1845 0EB0                                      l1853 05CD  
                                    l3437 07F0                                      l5125 01D4  
                                    l5117 01B6                                      l5109 0185  
                                    l5061 00B3                                      l5053 007B  
                                    l5045 006B                                      l5037 005F  
                                    l5029 0053                                      l3551 0F66  
                                    l4167 0408                                      l4159 03E9  
                                    l3519 07D2                                      l3439 07F5  
                                    l3631 06E3                                      l5151 0474  
                                    l5127 01D7                                      l5119 01BC  
                                    l5071 00DF                                      l5063 00B8  
                                    l5055 009C                                      l5047 006E  
                                    l5039 0062                                      l1848 0ED0  
                                    l3561 0F77                                      l3553 0F69  
                                    l3801 0286                                      l4169 041A  
                                    l1857 05CB                                      l3641 0729  
                                    l3633 06EB                                      l1881 0454  
                                    l5129 01DB                                      l5081 0110  
                                    l5073 00E6                                      l5065 00BF  
                                    l5057 00A4                                      l5049 0071  
                                    l1866 0651                                      l1874 072D  
                                    l3563 0F80                                      l3571 0F8D  
                                    l3811 02BA                                      l3803 028B  
                                    l3491 078F                                      l3635 06F8  
                                    l3627 06D0                                      l1883 045E  
                                    l5091 012F                                      l5075 00ED  
                                    l5067 00C3                                      l5083 0113  
                                    l5059 00A9                                      l3645 0E08  
                                    l3573 0F96                                      l3565 0F8B  
                                    l3821 02F0                                      l3813 02BE  
                                    l3805 0297                                      l3661 051D  
                                    l3653 04F4                                      l3901 0DED  
                                    l3493 0793                                      l3637 070D  
                                    l3629 06D2                                      l5093 013A  
                                    l5085 0119                                      l5077 00FF  
                                    l5069 00D5                           __end_of_LCDbusy 0D9A  
                                    ?_pad 0027                                      l3647 0E12  
                                    l3575 0FA3                                      l3559 0F6E  
                                    l3823 02F4                                      l3815 02CA  
                                    l3807 029C                                      l3671 0545  
                                    l3663 0521                                      l3655 04F7  
                                    l3911 0E47                                      l3903 0E3E  
                                    l3495 0798                                      l3639 0715  
                                    l1895 0E3D                                      l5095 0144  
                                    l5087 0120                                      l5079 0109  
                                    l3649 0E20                                      l3825 0300  
                                    l3817 02CE                                      l3809 02AF  
                                    l3761 0EFD                                      l3753 0EDD  
                                    l3681 0576                                      l3673 0552  
                                    l3665 052D                                      l3657 0501  
                         __end_of_LCDinit 06CE                                      l3833 0D1C  
                                    l3913 0E49                                      l3905 0E41  
                                    l4801 0734                                      l3497 079A  
                                    l3489 078E                                      l1889 04F2  
                                    l5097 014E                                      l5089 0128  
                                    l3827 0305                                      l3819 02E5  
                                    l3771 01F1                                      l3763 0F09  
                                    l3755 0EDD                                      l3683 057C  
                                    l3675 0558                                      l3667 0533  
                                    l3659 0512                                      l3835 0D23  
                                    l3851 0D41                                      l3915 0E4E  
                                    l3907 0E43                                      l4811 0748  
                                    l4803 0739                                      l3499 079E  
                                    l5099 0156                                      l3829 0316  
                                    l3781 021D                                      l3773 01FC  
                                    l3765 0F0D                                      l3757 0EEE  
                                    l3685 0589                                      l3677 0564  
                                    l3669 053F                                      l3853 0D43  
                                    l3861 0F29                                      l3845 0D2A  
                                    l3917 0E50                                      l3909 0E45  
                                    l4821 075C                                      l4813 074A  
                                    l4805 073B                                      l4901 0635  
                                    l3791 0250                                      l3783 0222  
                                    l3775 0200                                      l3767 01E0  
                                    l3759 0EF9                                      l3687 058F  
                                    l3679 056A                                      l3951 0D4B  
                                    l3847 0D3B                                      l3871 0F34  
                                    l3863 0F2B                                      l3855 0F1F  
                                    l3919 0E57                                      l4831 0779  
                                    l4823 0760                                      l4815 0750  
                                    l4807 073F                                      l4903 063B  
                                    l4911 042E                                      l3793 0254  
                                    l3785 0235                                      l3777 020C  
                                    l3769 01E0                                      l3689 05A0  
                                    l3961 065A                                      l3953 0D4D  
                                    l3849 0D40                                      l3881 0F41  
                                    l3873 0F36                                      l3865 0F2D  
                                    l3857 0F25                                      l3697 0D0F  
                                    l4825 076F                                      l4817 0753  
                                    l4833 077F                                      l4809 0744  
                                    l4841 0E9F                                      l4905 063F  
                                    l4921 0455                                      l4913 043F  
                                    l3795 026B                                      l3787 0240  
                                    l3779 0211                                      l3971 067E  
                                    l3963 065E                                      l3955 0D4E  
                                    l3947 0D45                                      l3891 0D35  
                                    l3883 0F42                                      l3875 0F38  
                                    l3867 0F2F                                      l3859 0F27  
                                    l4835 0784                                      l4827 0773  
                                    l4819 0758                                      l4851 0EBD  
                                    l4843 0EA3                                      l4907 0646  
                                    l4931 0489                                      l4915 0447  
                                    l3797 0276                                      l3789 0244  
                                    l3981 06A2                                      l3973 0686  
                                    l3965 0666                                      l3957 0D50  
                                    l3949 0D4A                                      l3893 0D36  
                                    l3885 0F43                                      l3877 0F3E  
                                    l3869 0F32                                      l4837 0789  
                                    l4829 0774                                      l4861 0D7B  
                                    l4853 0EC2                                      l4845 0EA9  
                                    l4941 04A4                                      l4933 048D  
                                    l4925 0461                                      l4917 044E  
                                    l3799 027A                                      l3991 06C1  
                                    l3983 06A6                                      l3975 068A  
                                    l3967 066A                                      l3959 0652  
                                    l3895 0D39                                      l3887 0F44  
                                    l3879 0F40                                      l4791 0E7D  
                                    l4855 0ED5                                      l4847 0EAE  
                                    l4871 05B9                                      l4951 04D0  
                                    l4943 04AE                                      l4935 048E  
                                    l4927 0479                                      l4919 0452  
                                    l3985 06B2                                      l3977 0692  
                                    l3969 067A                                      l3897 0DD8  
                                    l3889 0D32                                      l4857 0D75  
                                    l4793 0E89                                      l4849 0EB3  
                                    l4881 05D4                                      l4873 05BD  
                                    l4865 05A7                                      l4945 04BA  
                                    l4937 0493                                      l4929 047E  
                                    l3987 06B7                                      l3979 0696  
                                    l3899 0DEB                                      l4859 0D7A  
                                    l4795 0E8E                                      l4883 05D8  
                                    l4891 0609                                      l4875 05C2  
                                    l4867 05A9                                      l4947 04C7  
                                    l4939 049A                                      l4955 04DA  
                                    l4971 0E3B                                      l4981 0D87  
                                    l3989 06BC                                      l4797 072E  
                                    l4789 0E7A                                      l4893 0617  
                                    l4885 05F4                                      l4877 05C7  
                                    l4869 05B4                                      l4965 0E24  
                                    l4983 0D90                                      l4991 0DAF  
                                    l4975 0DEF                                      l4799 0730  
                                    l4895 061E                                      l4887 05F5  
                                    l4879 05D1                                      l4967 0E29  
                                    l4993 0DB4                                      l4977 0DF0  
                                    l4897 0623                                      l4889 05F9  
                                    l4969 0E31                           __end_of_LCDrecv 0323  
                                    l4987 0D96                                      l4995 0DB7  
                                    l4979 0DF4                                      l4899 0630  
                                    l4997 0DB9                                      l4999 0DBD  
                         __end_of_LCDsend 0F1F                                      STR_1 1020  
                                    STR_2 102F                                      STR_3 1037  
                                    STR_4 103B                                      STR_5 103D  
                                    STR_6 1041                                      STR_7 1035  
                                    STR_8 103F                                      STR_9 1035  
                                    u2100 07D2                                      u2101 07D1  
                                    u2110 07D7                                      u2030 0793  
                                    u2111 07D6                                      u2031 0792  
                                    u3000 0D70                                      u2200 0F86  
                                    u2040 079E                                      u3001 0D6F  
                                    u2201 0F85                                      u2041 079D  
                                    u2210 0F8B                                      u2050 07A9  
                                    u2211 0F8A                                      u2051 07A8  
                                    u2220 0F96                                      u3100 038F  
                                    u3020 032F                                      u2221 0F95  
                                    u3101 038E                                      u3021 032E  
                                    _LATA 0016                                      u2230 0F9F  
                                    u3110 0395                                      u3030 0334  
                                    u2070 07B9                                      _LATB 0017  
                                    u2231 0F9E                                      u3111 0394  
                                    u3031 0333                                      u2071 07B8  
                                    _LATC 0018                                      u2400 0E20  
                                    u2240 0FA3                                      u4000 0D90  
                                    u3200 03E9                                      u3120 03A0  
                                    u3040 033F                                      u2080 07C3  
                                    _LATD 0019                                      u2401 0E1F  
                                    u2241 0FA2                                      u4001 0D8F  
                                    u3201 03E8                                      u3121 039F  
                                    u3041 033E                                      u2081 07C2  
                                    u2065 07AD                                      _LATE 001A  
                                    u2250 0FAE                                      u2170 0F6D  
                                    u4010 0DB4                                      u3210 03F4  
                                    u3130 03A5                                      u3050 034F  
                                    u2251 0FAD                                      u2171 0F6C  
                                    u4011 0DB3                                      u3211 03F3  
                                    u3131 03A4                                      u3051 034E  
                                    u2180 0F77                                      u2500 0588  
                                    u2420 050D                                      u3220 0404  
                                    u3140 03A9                                      u3060 035F  
                                    u4100 016D                                      u4020 0077  
                                    u2181 0F76                                      u2501 0587  
                                    u2421 050C                                      u3221 0403  
                                    u3141 03A8                                      u3061 035E  
                                    u2085 07BF                                      u4101 016C  
                                    u4021 0076                                      u2190 0F80  
                                    u2510 059B                                      u2430 0512  
                                    u3230 0414                                      u3150 03B4  
                                    u3070 0364                                      u4110 0195  
                                    u4030 00B3                                      u2191 0F7F  
                                    u2511 059A                                      u2431 0511  
                                    u2415 04FA                                      u3231 0413  
                                    u3151 03B3                                      u3071 0363  
                                    u2095 07C8                                      u4111 0194  
                                    u4031 00B2                                      u2600 0EEE  
                                    u2520 05A0                                      u2440 051D  
                                    u3240 041A                                      u3160 03B9  
                                    u3080 036F                                      u2360 06E3  
                                    u4120 01B6                                      u4040 00DF  
                                    u2601 0EED                                      u2521 059F  
                                    u2441 051C                                      u3241 0419  
                                    u3161 03B8                                      u3081 036E  
                                    u2361 06E2                                      u4121 01B5  
                                    u4105 0169                                      u4041 00DE  
                                    u2610 0EF9                                      u2450 052D  
                                    u3250 0425                                      u3170 03C4  
                                    u3090 037F                                      u2370 0729  
                                    u4130 01CE                                      u4050 0109  
                                    u2611 0EF8                                      u2451 052C  
                                    u3251 0424                                      u3171 03C3  
                                    u3091 037E                                      u2371 0728  
                                    u4131 01CD                                      u4115 0191  
                                    u4051 0108                                      u4035 00AF  
                                    u2380 0E12                                      u2700 022E  
                                    u2620 0F09                                      u2460 053F  
                                    u3260 042A                                      u3180 03D4  
                                    u4060 0119                                      u2381 0E11  
                                    u2701 022D                                      u2621 0F08  
                                    u2461 053E                                      u3261 0429  
                                    u3181 03D3                                      u4125 01B2  
                                    u4061 0118                                      u2390 0E1B  
                                    u2710 0235                                      u2630 0F19  
                                    u2470 0551                                      u3190 03E4  
                                    u4070 013A                                      u2391 0E1A  
                                    u2711 0234                                      u2631 0F18  
                                    u2471 0550                                      u4207 0697  
                                    u3191 03E3                                      u4135 01CA  
                                    u4071 0139                                      u2800 02A8  
                                    u2720 0240                                      u2640 0F1E  
                                    u2480 0564                                      u1840 0FB5  
                                    u1920 07FB                                      u4080 0144  
                                    u2801 02A7                                      u2721 023F  
                                    u2641 0F1D                                      u2481 0563  
                                    u4217 06A3                                      u1841 0FB4  
                                    u1921 07FA                                      u1905 07EC  
                                    u4081 0143                                      u2810 02AF  
                                    u2730 0250                                      u2650 01EC  
                                    u2490 0576                                      u1850 0FBA  
                                    u4090 014E                                      u2811 02AE  
                                    u2731 024F                                      u2651 01EB  
                                    u2491 0575                                      u4227 06AD  
                                    u4147 0655                                      u1851 0FB9  
                                    u1915 07F1                                      u4091 014D  
                                    u4075 0136                                      u2900 0316  
                                    u2820 02BA                                      u2740 0260  
                                    u2660 01F1                                      u3700 0750  
                                    u1860 0FC9                                      u2901 0315  
                                    u2821 02B9                                      u2741 025F  
                                    u2661 01F0                                      u4237 06C9  
                                    u4157 0663                                      u3701 074F  
                                    u1861 0FC8                                      u4085 0140  
                                    u2830 02CA                                      u2750 0266  
                                    u2670 01FC                                      u2590 0EE9  
                                    u1870 0FE7                                      u2831 02C9  
                                    u2751 0265                                      u2671 01FB  
                                    u2591 0EE8                                      u4247 05A1  
                                    u4167 066D                                      u1871 0FE6  
                                    u4095 014A                                      u2840 02DA  
                                    u2760 026B                                      u2680 020C  
                                    u3720 0760                                      u3800 0ED0  
                                    u2841 02D9                                      u2761 026A  
                                    u2681 020B                                      u4177 067B  
                                    u3721 075F                                      u3801 0ECF  
                                    u2850 02E0                                      u2770 0276  
                                    u2690 021D                                      u3810 0ED5  
                                    u1890 07E7                                      u2915 0319  
                                    u2851 02DF                                      u2771 0275  
                                    u2691 021C                                      u4187 0683  
                                    u3715 0754                                      u1875 0FE3  
                                    u3811 0ED4                                      u1891 07E6  
                                    u2860 02E5                                      u2780 0286  
                                    u3740 076F                                      u3820 0D7A  
                                    u3900 0630                                      _PMD0 0796  
                                    u2861 02E4                                      u2781 0285  
                                    u4197 068F                                      u3741 076E  
                                    u3821 0D79                                      u3805 0ECC  
                                    u3901 062F                                      _PMD1 0797  
                                    u2870 02F0                                      u2790 0297  
                                    u3670 0E9C                                      u3910 0635  
                                    u3830 05AE                                      _PMD2 0798  
                                    u2871 02EF                                      u2791 0296  
                                    u3735 0761                                      u3671 0E9B  
                                    u3911 0634                                      u3831 05AC  
                                    _PMD3 0799                                      u2880 0300  
                                    u3760 077F                                      u3680 0734  
                                    u3920 063B                                      u3840 05AF  
                                    _PMD4 079A                                      u2881 02FF  
                                    u3761 077E                                      u3745 076B  
                                    u3681 0733                                      u3921 063A  
                                    u3905 062C                                      _PMD5 079B  
                                    u2890 0311                                      u3770 0784  
                                    u3690 073F                                      u3850 05B9  
                                    u3930 043F                                      u2891 0310  
                                    u3771 0783                                      u3755 0775  
                                    u3691 073E                                      u3851 05B8  
                                    u3931 043E                                      u3780 0EA3  
                                    u3860 05C2                                      u3940 047E  
                                    u3781 0EA2                                      u3861 05C1  
                                    u3941 047D                                      u3790 0EAE  
                                    u3870 0617                                      u3950 048D  
                                    u3791 0EAD                                      u3871 0616  
                                    u3951 048C                                      u3880 061E  
                                    u3960 04A4                                      u3881 061D  
                                    u3961 04A3                                      u3890 0623  
                                    u3970 04AE                                      u3891 0622  
                                    u3875 0613                                      u3971 04AD  
                                    u3980 0E3B                                      u3981 0E3A  
                                    u3990 0E07                                      u3991 0E06  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                                      abs@a 0020  
                             main@minutes 00C4                               main@seconds 00C6  
                                    _dbuf 0120                                      _main 0036  
                                    _dtoa 05A5                                      _prec 0069  
                                    pad@i 002B                                      pad@p 0028  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 0018  
              ??_TMR1_SetInterruptHandler 0074                           __end_of_ReadI2C 0E22  
                         __end_of_OpenI2C 0D52                                     ??_abs 0022  
                                   ??_pad 002A             __end_of_OSCILLATOR_Initialize 0D3B  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_main 0070  
                                   ?_dtoa 002E                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                           __end_of___awdiv 078E  
                                   _ADPRE 009C                           __end_of___awmod 07E1  
                                   _ADRPT 010D                                     _T1CLK 0211  
                         ___awdiv@divisor 0072                                     _T1CON 020E  
                         ___awdiv@counter 0020                __end_of_i2c1_fsmStateTable 1020  
                                   _OSCEN 0891                              vfpfcnvrt@fmt 003A  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                         ??_I2C1_Initialize 0072  
                        __end_of_TMR1_ISR 0DD8                                     _flags 006B  
                     read_prec_or_width@c 0023                       read_prec_or_width@n 0024  
                                   _fputc 0FB0                                     _fputs 0E78  
                                   pad@fp 002D                                     _width 0067  
                                   _putch 0003                                     dtoa@d 002E  
                                   dtoa@i 0038                                     dtoa@p 0034  
                                   dtoa@s 0037                                     dtoa@w 0035  
                 __end_of_TMR1_Initialize 0E5B                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0E78                           _TMR1_WriteTimer 0D52  
                         __initialization 001A                              __end_of_main 01DF  
                            __end_of_dtoa 0652               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 0065                                    ??_dtoa 0030  
                               ??_LCDchar 0079                                 ??_LCDbusy 0079  
                               ??_LCDinit 0079                __end_of_read_prec_or_width 072E  
                               ??_LCDrecv 0074                                 ??_LCDsend 0074  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  ?_fputc 0072                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    ?_fputs 0020  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                        ___awdiv@dividend 0074                                    _ADUTHL 0110  
                        __end_of_WriteI2C 0FB0                                    _ANSELA 0F38  
                                  ?_putch 0070                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                                    _RC3PPS 0F23  
                                  i1l1031 0DD7                                    i1l1018 0D62  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1037 0002                                    i1l1054 0016  
                                  i1l1091 0D0E                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l4121 0DD2                                    i1l4115 0DC2  
                                  i1l4117 0DC4                                    i1l4119 0DCB  
                                  i1l3921 0D52                                    i1l3923 0D57  
                                  i1l3931 0D5E                                    i1l4643 0006  
                                  i1l3933 0D60                                    i1l3925 0D58  
                                  i1l4645 000A                                    i1l3927 0D5A  
                                  i1l3935 0D0B                                    i1l4647 000F  
                                  u301_20 0DD2                                    i1l3929 0D5C  
                                  u301_21 0DD1                                    i1l4649 0013  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    _LCDcmd 0D1B  
                                  u352_20 000A                                    u352_21 0009  
                                  u353_20 000F                                    u353_21 000E  
                                  u354_20 0013                                    u354_21 0012  
                                  _LCDpos 0DAD                                    _LCDstr 0DEF  
                                  u293_20 0D57                                    u293_21 0D56  
                                  _OSCFRQ 0893                             vfpfcnvrt@done 0044  
                               ??_ReadI2C 0072                               LCDsend2x4@c 0076  
                             LCDrecv@mode 0078                                 ??_OpenI2C 0072  
                        _I2C1_DO_TX_EMPTY 0000                                    _Timer1 0D0B  
    __end_of_TMR1_DefaultInterruptHandler 0003              _TMR1_DefaultInterruptHandler 0002  
                            vfprintf@cfmt 004D                                    ___wmul 07E1  
                               ??___awdiv 0076                                 ??___awmod 0076  
                        __end_of_readTC74 042C                      read_prec_or_width@ap 0078  
                        ___awdiv@quotient 0022                           ___awmod@divisor 0072  
                         ___awmod@counter 0077                                    pad@buf 0027  
                                  dtoa@fp 0031                           _ADCC_Initialize 0DD8  
                   _I2C1_DO_SEND_ADR_READ 0000                                    fputc@c 0072  
                          _PMD_Initialize 0D2A                                    fputs@c 0023  
                                  fputs@i 0024                                    fputs@s 0026  
                                  putch@c 0070                          __end_of_vfprintf 0E3E  
               ?_ADCC_GetSingleConversion 0072  TMR1_SetInterruptHandler@InterruptHandler 0072  
                               ??_sprintf 0057                   __end_of_TMR1_WriteTimer 0D63  
                 _I2C1_DO_RX_NACK_RESTART 0000                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0D9A                   __end_of__initialization 0032  
                      ?_SYSTEM_Initialize 0070                   _rdBlkRegCompleteHandler 0000  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0074  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_fputc 1000                             __end_of_fputs 0E9D  
                           __end_of_putch 0004                    __end_of_PMD_Initialize 0D32  
                               LCDrecv@hc 0076                                 LCDrecv@lc 0077  
                            ??_LCDsend2x4 0075                                   ??_fputc 0075  
               __end_of_SYSTEM_Initialize 0DAD                                   ??_fputs 0021  
                                 ??_putch 0072                                __pbssBANK0 0067  
                              __pbssBANK1 00C8                                __pbssBANK2 0120  
                                 ?_LCDcmd 0070                                   ?_LCDpos 0020  
                                 ?_LCDstr 0020                                   LCDcmd@c 0079  
                                 LCDpos@c 0020                                   LCDpos@l 0021  
                                 LCDpos@p 0022                     _rd1RegCompleteHandler 0000  
                                 LCDstr@c 0024                                   LCDstr@p 0020  
                       _I2C1_DO_SEND_STOP 0000                     _wr1RegCompleteHandler 0000  
                                 ?_Timer1 0070                                __pmaintext 0036  
                                 ?___wmul 0072                                ??_TMR1_ISR 0072  
                 __end_of_ADCC_Initialize 0DEF                                __pintentry 0004  
                         _I2C1_Initialize 0D3B                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                        __end_of_LCDsend2x4 05A5  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
                                 _LCDchar 0D22                                   _LCDbusy 0D87  
                                 _LCDinit 0652                                   _LCDrecv 01DF  
                                 _LCDsend 0EDC                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                   _OSCTUNE 0892  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                          ?_TMR1_WriteTimer 0070  
                            LCDsend2x4@hc 0077                              LCDsend2x4@lc 0078  
                               ?_readTC74 0070                        _i2c1_fsmStateTable 1000  
                                 _ReadI2C 0E08                                   _OpenI2C 0D45  
                                 ___awdiv 072E                                   ___awmod 078E  
                               ?_vfprintf 0048                                ??_WriteI2C 0072  
                                 __ptext1 0E5B                                   __ptext2 0E22  
                                 __ptext3 042C                                   __ptext4 06CE  
                                 __ptext5 07E1                                   __ptext6 05A5  
                                 __ptext7 0E9D                                   __ptext8 0E78  
                                 __ptext9 0FB0            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0D32  
                   read_prec_or_width@fmt 0026                          ___awmod@dividend 0074  
                ??_PIN_MANAGER_Initialize 0072                 ?_TMR1_SetInterruptHandler 0072  
                                 _sprintf 0E5B                                   clrloop0 0D16  
                              _one_second 00E5                            main@luminosity 00C1  
                    end_of_initialization 0032                                ??_readTC74 0074  
                                 fputc@fp 0074                                   fputs@fp 0020  
                  _I2C1_DO_SEND_ADR_WRITE 0000                        _read_prec_or_width 06CE  
                 __end_of_I2C1_Initialize 0D45                               _I2C1_Status 00C8  
                       __end_of_vfpfcnvrt 04F3                       ?_read_prec_or_width 0078  
                        vfpfcnvrt@convarg 0040                          ?_ADCC_Initialize 0070  
                              ??_vfprintf 004B          __end_of_ADCC_GetSingleConversion 0D75  
              _I2C1_DO_SEND_RESTART_WRITE 0000                                 _TRISCbits 0013  
                    ??_read_prec_or_width 0020                             readTC74@value 0075  
                          __end_of_LCDcmd 0D22                            __end_of_LCDpos 0DC2  
                          __end_of_LCDstr 0E08                            LCDsend2x4@mode 0074  
                          __end_of_Timer1 0D0F                               vfpfcnvrt@ap 003B  
                             vfpfcnvrt@cp 0046                               vfpfcnvrt@fp 0045  
                          __end_of___wmul 0800                            _I2C1_DO_RX_ACK 0000  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 001A  
                             __end_of_abs 0D87                               __end_of_pad 0EDC  
                        WriteI2C@data_out 0073                                  ??_LCDcmd 0079  
                                ??_LCDpos 007A                                  ??_LCDstr 0022  
                        ?_I2C1_Initialize 0070                                  ??_Timer1 0070  
                             vfprintf@fmt 0048                          ??_PMD_Initialize 0072  
                                ??___wmul 0076                  _ADCC_GetSingleConversion 0D63  
                                ?_LCDchar 0070                               __pbssCOMMON 007A  
                                ?_LCDbusy 0020                                  ?_LCDinit 0070  
                    _I2C1_DO_SEND_RESTART 0000                                  ?_LCDrecv 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                                LCDchar@c 0079                                  LCDsend@c 0075  
                                ?_ReadI2C 0070                                 __pnvBANK0 006C  
                   _rd2RegCompleteHandler 0000                                  ?_OpenI2C 0070  
                  _PIN_MANAGER_Initialize 0F1F                     _wr2RegCompleteHandler 0000  
                               _dtoa$2651 0032          __end_of_TMR1_SetInterruptHandler 0D15  
         ADCC_GetSingleConversion@channel 0074                                  ?___awdiv 0072  
                                ?___awmod 0072              ??_INTERRUPT_InterruptManager 0072  
                                ?_sprintf 004F                            ___wmul@product 0076  
                              _I2C1_DO_RX 0000                                _I2C1_DO_TX 0000  
                               clear_ram0 0D15                                  _PIE3bits 0719  
                                _PIE4bits 071A                                  _PIR3bits 070F  
                                _PIR4bits 0710                 _I2C1_DO_SEND_RESTART_READ 0000  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 0DC2                                  _SSP1STAT 018F  
                               _vfpfcnvrt 042C                         ??_TMR1_Initialize 0074  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0072                                 main@count 00BC  
                               main@hours 00C2                             _I2C1_DO_RESET 0000  
                              _ADSTATbits 0097                                vfprintf@ap 004A  
                              vfprintf@fp 004C                   ??_OSCILLATOR_Initialize 0072  
                              ?_vfpfcnvrt 003A                                  _WriteI2C 0F65  
                _TMR1_SetInterruptHandler 0D0F                     _TMR1_InterruptHandler 006C  
                              sprintf@fmt 004F                                  __ptext10 0003  
                                __ptext11 0D75                                  __ptext20 0D32  
                                __ptext12 078E                                  __ptext21 0D3B  
                                __ptext13 072E                                _T1GCONbits 020F  
                                __ptext30 0EDC                                  __ptext22 0DD8  
                                __ptext14 0323                                  __ptext31 0D87  
                                __ptext23 0D45                                  __ptext15 0D9A  
                                __ptext40 0D52                                  __ptext32 01DF  
                                __ptext24 0DEF                                  __ptext16 0E3E  
                                __ptext33 0F65                                  __ptext25 0D22  
                                __ptext17 0D0F                                  __ptext34 0E08  
                                __ptext26 0DAD                                  __ptext18 0D2A  
                                __ptext35 0D63                                  __ptext27 0D1B  
                                __ptext19 0F1F                                  __ptext28 0652  
                                __ptext37 0DC2                                  __ptext29 04F3  
                                __ptext38 0002                                  __ptext39 0D0B  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
                                _readTC74 0323                  _I2C1_CallbackReturnReset 0000  
                                main@ALAF 00B0                                  main@ALAH 00B2  
                                main@ALAL 00BA                                  main@ALAM 00B4  
                                main@ALAS 00B6                                  main@ALAT 00B8  
              ??_ADCC_GetSingleConversion 0074                                  main@CLKM 00AE  
                                int$flags 007E                                  main@PMON 00BE  
                                _vfprintf 0E22        __end_of_INTERRUPT_InterruptManager 0018  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                              _I2C1_DO_IDLE 0000  
                            _I2C1_DO_RCEN 0000                           main@time_buffer 00A0  
                         main@temperature 00C0                                _INTCONbits 000B  
                              _LCDsend2x4 04F3                                  intlevel1 0000  
                               sprintf@ap 0058                        main@measure_buffer 00A8  
                 ?_PIN_MANAGER_Initialize 0070                   _I2C1_CallbackReturnStop 0000  
                    _I2C1_DO_ADDRESS_NACK 0000                               ??_vfpfcnvrt 003C  
                           __pstringtext1 1000                             __pstringtext2 1020  
                           __pstringtext3 102F                             __pstringtext4 1037  
                           __pstringtext5 103B                             __pstringtext6 103D  
                           __pstringtext7 103F                             __pstringtext8 1041  
                           __pstringtext9 0000                                  sprintf@f 005A  
                                sprintf@s 0059                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5            __end_of_PIN_MANAGER_Initialize 0F65  
                       ??_ADCC_Initialize 0072                           _TMR1_Initialize 0E3E  
