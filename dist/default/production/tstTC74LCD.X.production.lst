

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Dec  1 13:19:36 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    71                           	dabs	1,0x7E,2
    72     0000                     
    73                           ; Version 2.35
    74                           ; Generated 13/04/2021 GMT
    75                           ; 
    76                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F18875 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001C                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     008C                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     008E                     	;# 
   145     008E                     	;# 
   146     008F                     	;# 
   147     0090                     	;# 
   148     0090                     	;# 
   149     0091                     	;# 
   150     0093                     	;# 
   151     0094                     	;# 
   152     0095                     	;# 
   153     0096                     	;# 
   154     0097                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009A                     	;# 
   158     009B                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     0110                     	;# 
   168     0110                     	;# 
   169     0111                     	;# 
   170     0112                     	;# 
   171     0112                     	;# 
   172     0113                     	;# 
   173     0114                     	;# 
   174     0114                     	;# 
   175     0115                     	;# 
   176     0116                     	;# 
   177     0116                     	;# 
   178     0117                     	;# 
   179     0119                     	;# 
   180     0119                     	;# 
   181     0119                     	;# 
   182     011A                     	;# 
   183     011A                     	;# 
   184     011A                     	;# 
   185     011B                     	;# 
   186     011B                     	;# 
   187     011B                     	;# 
   188     011B                     	;# 
   189     011B                     	;# 
   190     011C                     	;# 
   191     011C                     	;# 
   192     011C                     	;# 
   193     011D                     	;# 
   194     011D                     	;# 
   195     011D                     	;# 
   196     011E                     	;# 
   197     011E                     	;# 
   198     011E                     	;# 
   199     011F                     	;# 
   200     011F                     	;# 
   201     011F                     	;# 
   202     011F                     	;# 
   203     011F                     	;# 
   204     018C                     	;# 
   205     018D                     	;# 
   206     018E                     	;# 
   207     018F                     	;# 
   208     0190                     	;# 
   209     0191                     	;# 
   210     0192                     	;# 
   211     0196                     	;# 
   212     0197                     	;# 
   213     0198                     	;# 
   214     0199                     	;# 
   215     019A                     	;# 
   216     019B                     	;# 
   217     019C                     	;# 
   218     020C                     	;# 
   219     020C                     	;# 
   220     020D                     	;# 
   221     020E                     	;# 
   222     020F                     	;# 
   223     020F                     	;# 
   224     0210                     	;# 
   225     0210                     	;# 
   226     0211                     	;# 
   227     0211                     	;# 
   228     0212                     	;# 
   229     0212                     	;# 
   230     0213                     	;# 
   231     0214                     	;# 
   232     0215                     	;# 
   233     0215                     	;# 
   234     0216                     	;# 
   235     0216                     	;# 
   236     0217                     	;# 
   237     0217                     	;# 
   238     0218                     	;# 
   239     0218                     	;# 
   240     0219                     	;# 
   241     021A                     	;# 
   242     021B                     	;# 
   243     021B                     	;# 
   244     021C                     	;# 
   245     021C                     	;# 
   246     021D                     	;# 
   247     021D                     	;# 
   248     021E                     	;# 
   249     021F                     	;# 
   250     028C                     	;# 
   251     028C                     	;# 
   252     028D                     	;# 
   253     028D                     	;# 
   254     028E                     	;# 
   255     028F                     	;# 
   256     0290                     	;# 
   257     0290                     	;# 
   258     0291                     	;# 
   259     0292                     	;# 
   260     0292                     	;# 
   261     0293                     	;# 
   262     0293                     	;# 
   263     0294                     	;# 
   264     0295                     	;# 
   265     0296                     	;# 
   266     0296                     	;# 
   267     0297                     	;# 
   268     0298                     	;# 
   269     0298                     	;# 
   270     0299                     	;# 
   271     0299                     	;# 
   272     029A                     	;# 
   273     029B                     	;# 
   274     029C                     	;# 
   275     029C                     	;# 
   276     029D                     	;# 
   277     030C                     	;# 
   278     030C                     	;# 
   279     030D                     	;# 
   280     030E                     	;# 
   281     030F                     	;# 
   282     0310                     	;# 
   283     0310                     	;# 
   284     0311                     	;# 
   285     0312                     	;# 
   286     0313                     	;# 
   287     0314                     	;# 
   288     0314                     	;# 
   289     0315                     	;# 
   290     0316                     	;# 
   291     0317                     	;# 
   292     0318                     	;# 
   293     0318                     	;# 
   294     0319                     	;# 
   295     031A                     	;# 
   296     031B                     	;# 
   297     031C                     	;# 
   298     031C                     	;# 
   299     031D                     	;# 
   300     031E                     	;# 
   301     031F                     	;# 
   302     038C                     	;# 
   303     038C                     	;# 
   304     038D                     	;# 
   305     038E                     	;# 
   306     0390                     	;# 
   307     0390                     	;# 
   308     0391                     	;# 
   309     0392                     	;# 
   310     040C                     	;# 
   311     040D                     	;# 
   312     040E                     	;# 
   313     040F                     	;# 
   314     0410                     	;# 
   315     0411                     	;# 
   316     0416                     	;# 
   317     0416                     	;# 
   318     0417                     	;# 
   319     0418                     	;# 
   320     0418                     	;# 
   321     0419                     	;# 
   322     041A                     	;# 
   323     041A                     	;# 
   324     041B                     	;# 
   325     041C                     	;# 
   326     041C                     	;# 
   327     041D                     	;# 
   328     041E                     	;# 
   329     041F                     	;# 
   330     048C                     	;# 
   331     048C                     	;# 
   332     048D                     	;# 
   333     048E                     	;# 
   334     048F                     	;# 
   335     048F                     	;# 
   336     0490                     	;# 
   337     0491                     	;# 
   338     0492                     	;# 
   339     0492                     	;# 
   340     0493                     	;# 
   341     0494                     	;# 
   342     0495                     	;# 
   343     0495                     	;# 
   344     0496                     	;# 
   345     0497                     	;# 
   346     0498                     	;# 
   347     0499                     	;# 
   348     049A                     	;# 
   349     049B                     	;# 
   350     049C                     	;# 
   351     049D                     	;# 
   352     050C                     	;# 
   353     050C                     	;# 
   354     050D                     	;# 
   355     050E                     	;# 
   356     050F                     	;# 
   357     050F                     	;# 
   358     0510                     	;# 
   359     0511                     	;# 
   360     0512                     	;# 
   361     0512                     	;# 
   362     0513                     	;# 
   363     0514                     	;# 
   364     0515                     	;# 
   365     0515                     	;# 
   366     0516                     	;# 
   367     0517                     	;# 
   368     0518                     	;# 
   369     0519                     	;# 
   370     051A                     	;# 
   371     051B                     	;# 
   372     051C                     	;# 
   373     051D                     	;# 
   374     058C                     	;# 
   375     058C                     	;# 
   376     058D                     	;# 
   377     058E                     	;# 
   378     058F                     	;# 
   379     058F                     	;# 
   380     0590                     	;# 
   381     0591                     	;# 
   382     0592                     	;# 
   383     0593                     	;# 
   384     060C                     	;# 
   385     060D                     	;# 
   386     060E                     	;# 
   387     060F                     	;# 
   388     0610                     	;# 
   389     0611                     	;# 
   390     0612                     	;# 
   391     0613                     	;# 
   392     0614                     	;# 
   393     0616                     	;# 
   394     0617                     	;# 
   395     0618                     	;# 
   396     0619                     	;# 
   397     061A                     	;# 
   398     061B                     	;# 
   399     061C                     	;# 
   400     061D                     	;# 
   401     061E                     	;# 
   402     068C                     	;# 
   403     068D                     	;# 
   404     068E                     	;# 
   405     068F                     	;# 
   406     0690                     	;# 
   407     0691                     	;# 
   408     0692                     	;# 
   409     0693                     	;# 
   410     0694                     	;# 
   411     070C                     	;# 
   412     070D                     	;# 
   413     070E                     	;# 
   414     070F                     	;# 
   415     0710                     	;# 
   416     0711                     	;# 
   417     0712                     	;# 
   418     0713                     	;# 
   419     0714                     	;# 
   420     0716                     	;# 
   421     0717                     	;# 
   422     0718                     	;# 
   423     0719                     	;# 
   424     071A                     	;# 
   425     071B                     	;# 
   426     071C                     	;# 
   427     071D                     	;# 
   428     071E                     	;# 
   429     0796                     	;# 
   430     0797                     	;# 
   431     0798                     	;# 
   432     0799                     	;# 
   433     079A                     	;# 
   434     079B                     	;# 
   435     080C                     	;# 
   436     080D                     	;# 
   437     080E                     	;# 
   438     080F                     	;# 
   439     0810                     	;# 
   440     0811                     	;# 
   441     0812                     	;# 
   442     0813                     	;# 
   443     0814                     	;# 
   444     081A                     	;# 
   445     081B                     	;# 
   446     081C                     	;# 
   447     081D                     	;# 
   448     081E                     	;# 
   449     081F                     	;# 
   450     088C                     	;# 
   451     088D                     	;# 
   452     088E                     	;# 
   453     088F                     	;# 
   454     0890                     	;# 
   455     0891                     	;# 
   456     0892                     	;# 
   457     0893                     	;# 
   458     0895                     	;# 
   459     0896                     	;# 
   460     0897                     	;# 
   461     0898                     	;# 
   462     0899                     	;# 
   463     089A                     	;# 
   464     089B                     	;# 
   465     090C                     	;# 
   466     090E                     	;# 
   467     090F                     	;# 
   468     091F                     	;# 
   469     091F                     	;# 
   470     098F                     	;# 
   471     098F                     	;# 
   472     0990                     	;# 
   473     0991                     	;# 
   474     0992                     	;# 
   475     0993                     	;# 
   476     0994                     	;# 
   477     0995                     	;# 
   478     0996                     	;# 
   479     0997                     	;# 
   480     0E0F                     	;# 
   481     0E10                     	;# 
   482     0E11                     	;# 
   483     0E12                     	;# 
   484     0E13                     	;# 
   485     0E14                     	;# 
   486     0E15                     	;# 
   487     0E16                     	;# 
   488     0E17                     	;# 
   489     0E18                     	;# 
   490     0E19                     	;# 
   491     0E1A                     	;# 
   492     0E1B                     	;# 
   493     0E1C                     	;# 
   494     0E1D                     	;# 
   495     0E1E                     	;# 
   496     0E1F                     	;# 
   497     0E20                     	;# 
   498     0E21                     	;# 
   499     0E22                     	;# 
   500     0E23                     	;# 
   501     0E24                     	;# 
   502     0E25                     	;# 
   503     0E26                     	;# 
   504     0E27                     	;# 
   505     0E28                     	;# 
   506     0E29                     	;# 
   507     0E2A                     	;# 
   508     0E2B                     	;# 
   509     0E2C                     	;# 
   510     0E2D                     	;# 
   511     0E2E                     	;# 
   512     0E2F                     	;# 
   513     0E30                     	;# 
   514     0E31                     	;# 
   515     0E32                     	;# 
   516     0E33                     	;# 
   517     0E34                     	;# 
   518     0E35                     	;# 
   519     0E36                     	;# 
   520     0E37                     	;# 
   521     0E8F                     	;# 
   522     0E90                     	;# 
   523     0E91                     	;# 
   524     0E92                     	;# 
   525     0E93                     	;# 
   526     0E94                     	;# 
   527     0E95                     	;# 
   528     0E96                     	;# 
   529     0E97                     	;# 
   530     0E9C                     	;# 
   531     0E9D                     	;# 
   532     0E9E                     	;# 
   533     0EA1                     	;# 
   534     0EA2                     	;# 
   535     0EA3                     	;# 
   536     0EA4                     	;# 
   537     0EA5                     	;# 
   538     0EA9                     	;# 
   539     0EAA                     	;# 
   540     0EAB                     	;# 
   541     0EAC                     	;# 
   542     0EB1                     	;# 
   543     0EB2                     	;# 
   544     0EB3                     	;# 
   545     0EB8                     	;# 
   546     0EB9                     	;# 
   547     0EBA                     	;# 
   548     0EBB                     	;# 
   549     0EBC                     	;# 
   550     0EBD                     	;# 
   551     0EBE                     	;# 
   552     0EC3                     	;# 
   553     0EC5                     	;# 
   554     0EC6                     	;# 
   555     0EC7                     	;# 
   556     0EC8                     	;# 
   557     0EC9                     	;# 
   558     0ECA                     	;# 
   559     0ECB                     	;# 
   560     0ECC                     	;# 
   561     0F10                     	;# 
   562     0F11                     	;# 
   563     0F12                     	;# 
   564     0F13                     	;# 
   565     0F14                     	;# 
   566     0F15                     	;# 
   567     0F16                     	;# 
   568     0F17                     	;# 
   569     0F18                     	;# 
   570     0F19                     	;# 
   571     0F1A                     	;# 
   572     0F1B                     	;# 
   573     0F1C                     	;# 
   574     0F1D                     	;# 
   575     0F1E                     	;# 
   576     0F1F                     	;# 
   577     0F20                     	;# 
   578     0F21                     	;# 
   579     0F22                     	;# 
   580     0F23                     	;# 
   581     0F24                     	;# 
   582     0F25                     	;# 
   583     0F26                     	;# 
   584     0F27                     	;# 
   585     0F28                     	;# 
   586     0F29                     	;# 
   587     0F2A                     	;# 
   588     0F2B                     	;# 
   589     0F2C                     	;# 
   590     0F2D                     	;# 
   591     0F2E                     	;# 
   592     0F2F                     	;# 
   593     0F30                     	;# 
   594     0F31                     	;# 
   595     0F32                     	;# 
   596     0F38                     	;# 
   597     0F39                     	;# 
   598     0F3A                     	;# 
   599     0F3B                     	;# 
   600     0F3C                     	;# 
   601     0F3D                     	;# 
   602     0F3E                     	;# 
   603     0F3F                     	;# 
   604     0F40                     	;# 
   605     0F41                     	;# 
   606     0F43                     	;# 
   607     0F44                     	;# 
   608     0F45                     	;# 
   609     0F46                     	;# 
   610     0F47                     	;# 
   611     0F48                     	;# 
   612     0F49                     	;# 
   613     0F4A                     	;# 
   614     0F4B                     	;# 
   615     0F4C                     	;# 
   616     0F4E                     	;# 
   617     0F4F                     	;# 
   618     0F50                     	;# 
   619     0F51                     	;# 
   620     0F52                     	;# 
   621     0F53                     	;# 
   622     0F54                     	;# 
   623     0F55                     	;# 
   624     0F56                     	;# 
   625     0F57                     	;# 
   626     0F59                     	;# 
   627     0F5A                     	;# 
   628     0F5B                     	;# 
   629     0F5C                     	;# 
   630     0F5D                     	;# 
   631     0F61                     	;# 
   632     0F62                     	;# 
   633     0F64                     	;# 
   634     0F65                     	;# 
   635     0F66                     	;# 
   636     0F67                     	;# 
   637     0F68                     	;# 
   638     0F69                     	;# 
   639     0F6A                     	;# 
   640     0F6B                     	;# 
   641     0F6C                     	;# 
   642     0F6D                     	;# 
   643     0FE4                     	;# 
   644     0FE5                     	;# 
   645     0FE6                     	;# 
   646     0FE7                     	;# 
   647     0FE8                     	;# 
   648     0FE9                     	;# 
   649     0FEA                     	;# 
   650     0FEB                     	;# 
   651     0FED                     	;# 
   652     0FEE                     	;# 
   653     0FEF                     	;# 
   654     0000                     	;# 
   655     0001                     	;# 
   656     0002                     	;# 
   657     0003                     	;# 
   658     0004                     	;# 
   659     0005                     	;# 
   660     0006                     	;# 
   661     0007                     	;# 
   662     0008                     	;# 
   663     0009                     	;# 
   664     000A                     	;# 
   665     000B                     	;# 
   666     000C                     	;# 
   667     000D                     	;# 
   668     000E                     	;# 
   669     000F                     	;# 
   670     0010                     	;# 
   671     0011                     	;# 
   672     0012                     	;# 
   673     0013                     	;# 
   674     0014                     	;# 
   675     0015                     	;# 
   676     0016                     	;# 
   677     0017                     	;# 
   678     0018                     	;# 
   679     0019                     	;# 
   680     001A                     	;# 
   681     001C                     	;# 
   682     001C                     	;# 
   683     001D                     	;# 
   684     001D                     	;# 
   685     001E                     	;# 
   686     001F                     	;# 
   687     008C                     	;# 
   688     008C                     	;# 
   689     008D                     	;# 
   690     008E                     	;# 
   691     008E                     	;# 
   692     008F                     	;# 
   693     0090                     	;# 
   694     0090                     	;# 
   695     0091                     	;# 
   696     0093                     	;# 
   697     0094                     	;# 
   698     0095                     	;# 
   699     0096                     	;# 
   700     0097                     	;# 
   701     0098                     	;# 
   702     0099                     	;# 
   703     009A                     	;# 
   704     009B                     	;# 
   705     009C                     	;# 
   706     009D                     	;# 
   707     009E                     	;# 
   708     010C                     	;# 
   709     010D                     	;# 
   710     010E                     	;# 
   711     010E                     	;# 
   712     010F                     	;# 
   713     0110                     	;# 
   714     0110                     	;# 
   715     0111                     	;# 
   716     0112                     	;# 
   717     0112                     	;# 
   718     0113                     	;# 
   719     0114                     	;# 
   720     0114                     	;# 
   721     0115                     	;# 
   722     0116                     	;# 
   723     0116                     	;# 
   724     0117                     	;# 
   725     0119                     	;# 
   726     0119                     	;# 
   727     0119                     	;# 
   728     011A                     	;# 
   729     011A                     	;# 
   730     011A                     	;# 
   731     011B                     	;# 
   732     011B                     	;# 
   733     011B                     	;# 
   734     011B                     	;# 
   735     011B                     	;# 
   736     011C                     	;# 
   737     011C                     	;# 
   738     011C                     	;# 
   739     011D                     	;# 
   740     011D                     	;# 
   741     011D                     	;# 
   742     011E                     	;# 
   743     011E                     	;# 
   744     011E                     	;# 
   745     011F                     	;# 
   746     011F                     	;# 
   747     011F                     	;# 
   748     011F                     	;# 
   749     011F                     	;# 
   750     018C                     	;# 
   751     018D                     	;# 
   752     018E                     	;# 
   753     018F                     	;# 
   754     0190                     	;# 
   755     0191                     	;# 
   756     0192                     	;# 
   757     0196                     	;# 
   758     0197                     	;# 
   759     0198                     	;# 
   760     0199                     	;# 
   761     019A                     	;# 
   762     019B                     	;# 
   763     019C                     	;# 
   764     020C                     	;# 
   765     020C                     	;# 
   766     020D                     	;# 
   767     020E                     	;# 
   768     020F                     	;# 
   769     020F                     	;# 
   770     0210                     	;# 
   771     0210                     	;# 
   772     0211                     	;# 
   773     0211                     	;# 
   774     0212                     	;# 
   775     0212                     	;# 
   776     0213                     	;# 
   777     0214                     	;# 
   778     0215                     	;# 
   779     0215                     	;# 
   780     0216                     	;# 
   781     0216                     	;# 
   782     0217                     	;# 
   783     0217                     	;# 
   784     0218                     	;# 
   785     0218                     	;# 
   786     0219                     	;# 
   787     021A                     	;# 
   788     021B                     	;# 
   789     021B                     	;# 
   790     021C                     	;# 
   791     021C                     	;# 
   792     021D                     	;# 
   793     021D                     	;# 
   794     021E                     	;# 
   795     021F                     	;# 
   796     028C                     	;# 
   797     028C                     	;# 
   798     028D                     	;# 
   799     028D                     	;# 
   800     028E                     	;# 
   801     028F                     	;# 
   802     0290                     	;# 
   803     0290                     	;# 
   804     0291                     	;# 
   805     0292                     	;# 
   806     0292                     	;# 
   807     0293                     	;# 
   808     0293                     	;# 
   809     0294                     	;# 
   810     0295                     	;# 
   811     0296                     	;# 
   812     0296                     	;# 
   813     0297                     	;# 
   814     0298                     	;# 
   815     0298                     	;# 
   816     0299                     	;# 
   817     0299                     	;# 
   818     029A                     	;# 
   819     029B                     	;# 
   820     029C                     	;# 
   821     029C                     	;# 
   822     029D                     	;# 
   823     030C                     	;# 
   824     030C                     	;# 
   825     030D                     	;# 
   826     030E                     	;# 
   827     030F                     	;# 
   828     0310                     	;# 
   829     0310                     	;# 
   830     0311                     	;# 
   831     0312                     	;# 
   832     0313                     	;# 
   833     0314                     	;# 
   834     0314                     	;# 
   835     0315                     	;# 
   836     0316                     	;# 
   837     0317                     	;# 
   838     0318                     	;# 
   839     0318                     	;# 
   840     0319                     	;# 
   841     031A                     	;# 
   842     031B                     	;# 
   843     031C                     	;# 
   844     031C                     	;# 
   845     031D                     	;# 
   846     031E                     	;# 
   847     031F                     	;# 
   848     038C                     	;# 
   849     038C                     	;# 
   850     038D                     	;# 
   851     038E                     	;# 
   852     0390                     	;# 
   853     0390                     	;# 
   854     0391                     	;# 
   855     0392                     	;# 
   856     040C                     	;# 
   857     040D                     	;# 
   858     040E                     	;# 
   859     040F                     	;# 
   860     0410                     	;# 
   861     0411                     	;# 
   862     0416                     	;# 
   863     0416                     	;# 
   864     0417                     	;# 
   865     0418                     	;# 
   866     0418                     	;# 
   867     0419                     	;# 
   868     041A                     	;# 
   869     041A                     	;# 
   870     041B                     	;# 
   871     041C                     	;# 
   872     041C                     	;# 
   873     041D                     	;# 
   874     041E                     	;# 
   875     041F                     	;# 
   876     048C                     	;# 
   877     048C                     	;# 
   878     048D                     	;# 
   879     048E                     	;# 
   880     048F                     	;# 
   881     048F                     	;# 
   882     0490                     	;# 
   883     0491                     	;# 
   884     0492                     	;# 
   885     0492                     	;# 
   886     0493                     	;# 
   887     0494                     	;# 
   888     0495                     	;# 
   889     0495                     	;# 
   890     0496                     	;# 
   891     0497                     	;# 
   892     0498                     	;# 
   893     0499                     	;# 
   894     049A                     	;# 
   895     049B                     	;# 
   896     049C                     	;# 
   897     049D                     	;# 
   898     050C                     	;# 
   899     050C                     	;# 
   900     050D                     	;# 
   901     050E                     	;# 
   902     050F                     	;# 
   903     050F                     	;# 
   904     0510                     	;# 
   905     0511                     	;# 
   906     0512                     	;# 
   907     0512                     	;# 
   908     0513                     	;# 
   909     0514                     	;# 
   910     0515                     	;# 
   911     0515                     	;# 
   912     0516                     	;# 
   913     0517                     	;# 
   914     0518                     	;# 
   915     0519                     	;# 
   916     051A                     	;# 
   917     051B                     	;# 
   918     051C                     	;# 
   919     051D                     	;# 
   920     058C                     	;# 
   921     058C                     	;# 
   922     058D                     	;# 
   923     058E                     	;# 
   924     058F                     	;# 
   925     058F                     	;# 
   926     0590                     	;# 
   927     0591                     	;# 
   928     0592                     	;# 
   929     0593                     	;# 
   930     060C                     	;# 
   931     060D                     	;# 
   932     060E                     	;# 
   933     060F                     	;# 
   934     0610                     	;# 
   935     0611                     	;# 
   936     0612                     	;# 
   937     0613                     	;# 
   938     0614                     	;# 
   939     0616                     	;# 
   940     0617                     	;# 
   941     0618                     	;# 
   942     0619                     	;# 
   943     061A                     	;# 
   944     061B                     	;# 
   945     061C                     	;# 
   946     061D                     	;# 
   947     061E                     	;# 
   948     068C                     	;# 
   949     068D                     	;# 
   950     068E                     	;# 
   951     068F                     	;# 
   952     0690                     	;# 
   953     0691                     	;# 
   954     0692                     	;# 
   955     0693                     	;# 
   956     0694                     	;# 
   957     070C                     	;# 
   958     070D                     	;# 
   959     070E                     	;# 
   960     070F                     	;# 
   961     0710                     	;# 
   962     0711                     	;# 
   963     0712                     	;# 
   964     0713                     	;# 
   965     0714                     	;# 
   966     0716                     	;# 
   967     0717                     	;# 
   968     0718                     	;# 
   969     0719                     	;# 
   970     071A                     	;# 
   971     071B                     	;# 
   972     071C                     	;# 
   973     071D                     	;# 
   974     071E                     	;# 
   975     0796                     	;# 
   976     0797                     	;# 
   977     0798                     	;# 
   978     0799                     	;# 
   979     079A                     	;# 
   980     079B                     	;# 
   981     080C                     	;# 
   982     080D                     	;# 
   983     080E                     	;# 
   984     080F                     	;# 
   985     0810                     	;# 
   986     0811                     	;# 
   987     0812                     	;# 
   988     0813                     	;# 
   989     0814                     	;# 
   990     081A                     	;# 
   991     081B                     	;# 
   992     081C                     	;# 
   993     081D                     	;# 
   994     081E                     	;# 
   995     081F                     	;# 
   996     088C                     	;# 
   997     088D                     	;# 
   998     088E                     	;# 
   999     088F                     	;# 
  1000     0890                     	;# 
  1001     0891                     	;# 
  1002     0892                     	;# 
  1003     0893                     	;# 
  1004     0895                     	;# 
  1005     0896                     	;# 
  1006     0897                     	;# 
  1007     0898                     	;# 
  1008     0899                     	;# 
  1009     089A                     	;# 
  1010     089B                     	;# 
  1011     090C                     	;# 
  1012     090E                     	;# 
  1013     090F                     	;# 
  1014     091F                     	;# 
  1015     091F                     	;# 
  1016     098F                     	;# 
  1017     098F                     	;# 
  1018     0990                     	;# 
  1019     0991                     	;# 
  1020     0992                     	;# 
  1021     0993                     	;# 
  1022     0994                     	;# 
  1023     0995                     	;# 
  1024     0996                     	;# 
  1025     0997                     	;# 
  1026     0E0F                     	;# 
  1027     0E10                     	;# 
  1028     0E11                     	;# 
  1029     0E12                     	;# 
  1030     0E13                     	;# 
  1031     0E14                     	;# 
  1032     0E15                     	;# 
  1033     0E16                     	;# 
  1034     0E17                     	;# 
  1035     0E18                     	;# 
  1036     0E19                     	;# 
  1037     0E1A                     	;# 
  1038     0E1B                     	;# 
  1039     0E1C                     	;# 
  1040     0E1D                     	;# 
  1041     0E1E                     	;# 
  1042     0E1F                     	;# 
  1043     0E20                     	;# 
  1044     0E21                     	;# 
  1045     0E22                     	;# 
  1046     0E23                     	;# 
  1047     0E24                     	;# 
  1048     0E25                     	;# 
  1049     0E26                     	;# 
  1050     0E27                     	;# 
  1051     0E28                     	;# 
  1052     0E29                     	;# 
  1053     0E2A                     	;# 
  1054     0E2B                     	;# 
  1055     0E2C                     	;# 
  1056     0E2D                     	;# 
  1057     0E2E                     	;# 
  1058     0E2F                     	;# 
  1059     0E30                     	;# 
  1060     0E31                     	;# 
  1061     0E32                     	;# 
  1062     0E33                     	;# 
  1063     0E34                     	;# 
  1064     0E35                     	;# 
  1065     0E36                     	;# 
  1066     0E37                     	;# 
  1067     0E8F                     	;# 
  1068     0E90                     	;# 
  1069     0E91                     	;# 
  1070     0E92                     	;# 
  1071     0E93                     	;# 
  1072     0E94                     	;# 
  1073     0E95                     	;# 
  1074     0E96                     	;# 
  1075     0E97                     	;# 
  1076     0E9C                     	;# 
  1077     0E9D                     	;# 
  1078     0E9E                     	;# 
  1079     0EA1                     	;# 
  1080     0EA2                     	;# 
  1081     0EA3                     	;# 
  1082     0EA4                     	;# 
  1083     0EA5                     	;# 
  1084     0EA9                     	;# 
  1085     0EAA                     	;# 
  1086     0EAB                     	;# 
  1087     0EAC                     	;# 
  1088     0EB1                     	;# 
  1089     0EB2                     	;# 
  1090     0EB3                     	;# 
  1091     0EB8                     	;# 
  1092     0EB9                     	;# 
  1093     0EBA                     	;# 
  1094     0EBB                     	;# 
  1095     0EBC                     	;# 
  1096     0EBD                     	;# 
  1097     0EBE                     	;# 
  1098     0EC3                     	;# 
  1099     0EC5                     	;# 
  1100     0EC6                     	;# 
  1101     0EC7                     	;# 
  1102     0EC8                     	;# 
  1103     0EC9                     	;# 
  1104     0ECA                     	;# 
  1105     0ECB                     	;# 
  1106     0ECC                     	;# 
  1107     0F10                     	;# 
  1108     0F11                     	;# 
  1109     0F12                     	;# 
  1110     0F13                     	;# 
  1111     0F14                     	;# 
  1112     0F15                     	;# 
  1113     0F16                     	;# 
  1114     0F17                     	;# 
  1115     0F18                     	;# 
  1116     0F19                     	;# 
  1117     0F1A                     	;# 
  1118     0F1B                     	;# 
  1119     0F1C                     	;# 
  1120     0F1D                     	;# 
  1121     0F1E                     	;# 
  1122     0F1F                     	;# 
  1123     0F20                     	;# 
  1124     0F21                     	;# 
  1125     0F22                     	;# 
  1126     0F23                     	;# 
  1127     0F24                     	;# 
  1128     0F25                     	;# 
  1129     0F26                     	;# 
  1130     0F27                     	;# 
  1131     0F28                     	;# 
  1132     0F29                     	;# 
  1133     0F2A                     	;# 
  1134     0F2B                     	;# 
  1135     0F2C                     	;# 
  1136     0F2D                     	;# 
  1137     0F2E                     	;# 
  1138     0F2F                     	;# 
  1139     0F30                     	;# 
  1140     0F31                     	;# 
  1141     0F32                     	;# 
  1142     0F38                     	;# 
  1143     0F39                     	;# 
  1144     0F3A                     	;# 
  1145     0F3B                     	;# 
  1146     0F3C                     	;# 
  1147     0F3D                     	;# 
  1148     0F3E                     	;# 
  1149     0F3F                     	;# 
  1150     0F40                     	;# 
  1151     0F41                     	;# 
  1152     0F43                     	;# 
  1153     0F44                     	;# 
  1154     0F45                     	;# 
  1155     0F46                     	;# 
  1156     0F47                     	;# 
  1157     0F48                     	;# 
  1158     0F49                     	;# 
  1159     0F4A                     	;# 
  1160     0F4B                     	;# 
  1161     0F4C                     	;# 
  1162     0F4E                     	;# 
  1163     0F4F                     	;# 
  1164     0F50                     	;# 
  1165     0F51                     	;# 
  1166     0F52                     	;# 
  1167     0F53                     	;# 
  1168     0F54                     	;# 
  1169     0F55                     	;# 
  1170     0F56                     	;# 
  1171     0F57                     	;# 
  1172     0F59                     	;# 
  1173     0F5A                     	;# 
  1174     0F5B                     	;# 
  1175     0F5C                     	;# 
  1176     0F5D                     	;# 
  1177     0F61                     	;# 
  1178     0F62                     	;# 
  1179     0F64                     	;# 
  1180     0F65                     	;# 
  1181     0F66                     	;# 
  1182     0F67                     	;# 
  1183     0F68                     	;# 
  1184     0F69                     	;# 
  1185     0F6A                     	;# 
  1186     0F6B                     	;# 
  1187     0F6C                     	;# 
  1188     0F6D                     	;# 
  1189     0FE4                     	;# 
  1190     0FE5                     	;# 
  1191     0FE6                     	;# 
  1192     0FE7                     	;# 
  1193     0FE8                     	;# 
  1194     0FE9                     	;# 
  1195     0FEA                     	;# 
  1196     0FEB                     	;# 
  1197     0FED                     	;# 
  1198     0FEE                     	;# 
  1199     0FEF                     	;# 
  1200     0000                     	;# 
  1201     0001                     	;# 
  1202     0002                     	;# 
  1203     0003                     	;# 
  1204     0004                     	;# 
  1205     0005                     	;# 
  1206     0006                     	;# 
  1207     0007                     	;# 
  1208     0008                     	;# 
  1209     0009                     	;# 
  1210     000A                     	;# 
  1211     000B                     	;# 
  1212     000C                     	;# 
  1213     000D                     	;# 
  1214     000E                     	;# 
  1215     000F                     	;# 
  1216     0010                     	;# 
  1217     0011                     	;# 
  1218     0012                     	;# 
  1219     0013                     	;# 
  1220     0014                     	;# 
  1221     0015                     	;# 
  1222     0016                     	;# 
  1223     0017                     	;# 
  1224     0018                     	;# 
  1225     0019                     	;# 
  1226     001A                     	;# 
  1227     001C                     	;# 
  1228     001C                     	;# 
  1229     001D                     	;# 
  1230     001D                     	;# 
  1231     001E                     	;# 
  1232     001F                     	;# 
  1233     008C                     	;# 
  1234     008C                     	;# 
  1235     008D                     	;# 
  1236     008E                     	;# 
  1237     008E                     	;# 
  1238     008F                     	;# 
  1239     0090                     	;# 
  1240     0090                     	;# 
  1241     0091                     	;# 
  1242     0093                     	;# 
  1243     0094                     	;# 
  1244     0095                     	;# 
  1245     0096                     	;# 
  1246     0097                     	;# 
  1247     0098                     	;# 
  1248     0099                     	;# 
  1249     009A                     	;# 
  1250     009B                     	;# 
  1251     009C                     	;# 
  1252     009D                     	;# 
  1253     009E                     	;# 
  1254     010C                     	;# 
  1255     010D                     	;# 
  1256     010E                     	;# 
  1257     010E                     	;# 
  1258     010F                     	;# 
  1259     0110                     	;# 
  1260     0110                     	;# 
  1261     0111                     	;# 
  1262     0112                     	;# 
  1263     0112                     	;# 
  1264     0113                     	;# 
  1265     0114                     	;# 
  1266     0114                     	;# 
  1267     0115                     	;# 
  1268     0116                     	;# 
  1269     0116                     	;# 
  1270     0117                     	;# 
  1271     0119                     	;# 
  1272     0119                     	;# 
  1273     0119                     	;# 
  1274     011A                     	;# 
  1275     011A                     	;# 
  1276     011A                     	;# 
  1277     011B                     	;# 
  1278     011B                     	;# 
  1279     011B                     	;# 
  1280     011B                     	;# 
  1281     011B                     	;# 
  1282     011C                     	;# 
  1283     011C                     	;# 
  1284     011C                     	;# 
  1285     011D                     	;# 
  1286     011D                     	;# 
  1287     011D                     	;# 
  1288     011E                     	;# 
  1289     011E                     	;# 
  1290     011E                     	;# 
  1291     011F                     	;# 
  1292     011F                     	;# 
  1293     011F                     	;# 
  1294     011F                     	;# 
  1295     011F                     	;# 
  1296     018C                     	;# 
  1297     018D                     	;# 
  1298     018E                     	;# 
  1299     018F                     	;# 
  1300     0190                     	;# 
  1301     0191                     	;# 
  1302     0192                     	;# 
  1303     0196                     	;# 
  1304     0197                     	;# 
  1305     0198                     	;# 
  1306     0199                     	;# 
  1307     019A                     	;# 
  1308     019B                     	;# 
  1309     019C                     	;# 
  1310     020C                     	;# 
  1311     020C                     	;# 
  1312     020D                     	;# 
  1313     020E                     	;# 
  1314     020F                     	;# 
  1315     020F                     	;# 
  1316     0210                     	;# 
  1317     0210                     	;# 
  1318     0211                     	;# 
  1319     0211                     	;# 
  1320     0212                     	;# 
  1321     0212                     	;# 
  1322     0213                     	;# 
  1323     0214                     	;# 
  1324     0215                     	;# 
  1325     0215                     	;# 
  1326     0216                     	;# 
  1327     0216                     	;# 
  1328     0217                     	;# 
  1329     0217                     	;# 
  1330     0218                     	;# 
  1331     0218                     	;# 
  1332     0219                     	;# 
  1333     021A                     	;# 
  1334     021B                     	;# 
  1335     021B                     	;# 
  1336     021C                     	;# 
  1337     021C                     	;# 
  1338     021D                     	;# 
  1339     021D                     	;# 
  1340     021E                     	;# 
  1341     021F                     	;# 
  1342     028C                     	;# 
  1343     028C                     	;# 
  1344     028D                     	;# 
  1345     028D                     	;# 
  1346     028E                     	;# 
  1347     028F                     	;# 
  1348     0290                     	;# 
  1349     0290                     	;# 
  1350     0291                     	;# 
  1351     0292                     	;# 
  1352     0292                     	;# 
  1353     0293                     	;# 
  1354     0293                     	;# 
  1355     0294                     	;# 
  1356     0295                     	;# 
  1357     0296                     	;# 
  1358     0296                     	;# 
  1359     0297                     	;# 
  1360     0298                     	;# 
  1361     0298                     	;# 
  1362     0299                     	;# 
  1363     0299                     	;# 
  1364     029A                     	;# 
  1365     029B                     	;# 
  1366     029C                     	;# 
  1367     029C                     	;# 
  1368     029D                     	;# 
  1369     030C                     	;# 
  1370     030C                     	;# 
  1371     030D                     	;# 
  1372     030E                     	;# 
  1373     030F                     	;# 
  1374     0310                     	;# 
  1375     0310                     	;# 
  1376     0311                     	;# 
  1377     0312                     	;# 
  1378     0313                     	;# 
  1379     0314                     	;# 
  1380     0314                     	;# 
  1381     0315                     	;# 
  1382     0316                     	;# 
  1383     0317                     	;# 
  1384     0318                     	;# 
  1385     0318                     	;# 
  1386     0319                     	;# 
  1387     031A                     	;# 
  1388     031B                     	;# 
  1389     031C                     	;# 
  1390     031C                     	;# 
  1391     031D                     	;# 
  1392     031E                     	;# 
  1393     031F                     	;# 
  1394     038C                     	;# 
  1395     038C                     	;# 
  1396     038D                     	;# 
  1397     038E                     	;# 
  1398     0390                     	;# 
  1399     0390                     	;# 
  1400     0391                     	;# 
  1401     0392                     	;# 
  1402     040C                     	;# 
  1403     040D                     	;# 
  1404     040E                     	;# 
  1405     040F                     	;# 
  1406     0410                     	;# 
  1407     0411                     	;# 
  1408     0416                     	;# 
  1409     0416                     	;# 
  1410     0417                     	;# 
  1411     0418                     	;# 
  1412     0418                     	;# 
  1413     0419                     	;# 
  1414     041A                     	;# 
  1415     041A                     	;# 
  1416     041B                     	;# 
  1417     041C                     	;# 
  1418     041C                     	;# 
  1419     041D                     	;# 
  1420     041E                     	;# 
  1421     041F                     	;# 
  1422     048C                     	;# 
  1423     048C                     	;# 
  1424     048D                     	;# 
  1425     048E                     	;# 
  1426     048F                     	;# 
  1427     048F                     	;# 
  1428     0490                     	;# 
  1429     0491                     	;# 
  1430     0492                     	;# 
  1431     0492                     	;# 
  1432     0493                     	;# 
  1433     0494                     	;# 
  1434     0495                     	;# 
  1435     0495                     	;# 
  1436     0496                     	;# 
  1437     0497                     	;# 
  1438     0498                     	;# 
  1439     0499                     	;# 
  1440     049A                     	;# 
  1441     049B                     	;# 
  1442     049C                     	;# 
  1443     049D                     	;# 
  1444     050C                     	;# 
  1445     050C                     	;# 
  1446     050D                     	;# 
  1447     050E                     	;# 
  1448     050F                     	;# 
  1449     050F                     	;# 
  1450     0510                     	;# 
  1451     0511                     	;# 
  1452     0512                     	;# 
  1453     0512                     	;# 
  1454     0513                     	;# 
  1455     0514                     	;# 
  1456     0515                     	;# 
  1457     0515                     	;# 
  1458     0516                     	;# 
  1459     0517                     	;# 
  1460     0518                     	;# 
  1461     0519                     	;# 
  1462     051A                     	;# 
  1463     051B                     	;# 
  1464     051C                     	;# 
  1465     051D                     	;# 
  1466     058C                     	;# 
  1467     058C                     	;# 
  1468     058D                     	;# 
  1469     058E                     	;# 
  1470     058F                     	;# 
  1471     058F                     	;# 
  1472     0590                     	;# 
  1473     0591                     	;# 
  1474     0592                     	;# 
  1475     0593                     	;# 
  1476     060C                     	;# 
  1477     060D                     	;# 
  1478     060E                     	;# 
  1479     060F                     	;# 
  1480     0610                     	;# 
  1481     0611                     	;# 
  1482     0612                     	;# 
  1483     0613                     	;# 
  1484     0614                     	;# 
  1485     0616                     	;# 
  1486     0617                     	;# 
  1487     0618                     	;# 
  1488     0619                     	;# 
  1489     061A                     	;# 
  1490     061B                     	;# 
  1491     061C                     	;# 
  1492     061D                     	;# 
  1493     061E                     	;# 
  1494     068C                     	;# 
  1495     068D                     	;# 
  1496     068E                     	;# 
  1497     068F                     	;# 
  1498     0690                     	;# 
  1499     0691                     	;# 
  1500     0692                     	;# 
  1501     0693                     	;# 
  1502     0694                     	;# 
  1503     070C                     	;# 
  1504     070D                     	;# 
  1505     070E                     	;# 
  1506     070F                     	;# 
  1507     0710                     	;# 
  1508     0711                     	;# 
  1509     0712                     	;# 
  1510     0713                     	;# 
  1511     0714                     	;# 
  1512     0716                     	;# 
  1513     0717                     	;# 
  1514     0718                     	;# 
  1515     0719                     	;# 
  1516     071A                     	;# 
  1517     071B                     	;# 
  1518     071C                     	;# 
  1519     071D                     	;# 
  1520     071E                     	;# 
  1521     0796                     	;# 
  1522     0797                     	;# 
  1523     0798                     	;# 
  1524     0799                     	;# 
  1525     079A                     	;# 
  1526     079B                     	;# 
  1527     080C                     	;# 
  1528     080D                     	;# 
  1529     080E                     	;# 
  1530     080F                     	;# 
  1531     0810                     	;# 
  1532     0811                     	;# 
  1533     0812                     	;# 
  1534     0813                     	;# 
  1535     0814                     	;# 
  1536     081A                     	;# 
  1537     081B                     	;# 
  1538     081C                     	;# 
  1539     081D                     	;# 
  1540     081E                     	;# 
  1541     081F                     	;# 
  1542     088C                     	;# 
  1543     088D                     	;# 
  1544     088E                     	;# 
  1545     088F                     	;# 
  1546     0890                     	;# 
  1547     0891                     	;# 
  1548     0892                     	;# 
  1549     0893                     	;# 
  1550     0895                     	;# 
  1551     0896                     	;# 
  1552     0897                     	;# 
  1553     0898                     	;# 
  1554     0899                     	;# 
  1555     089A                     	;# 
  1556     089B                     	;# 
  1557     090C                     	;# 
  1558     090E                     	;# 
  1559     090F                     	;# 
  1560     091F                     	;# 
  1561     091F                     	;# 
  1562     098F                     	;# 
  1563     098F                     	;# 
  1564     0990                     	;# 
  1565     0991                     	;# 
  1566     0992                     	;# 
  1567     0993                     	;# 
  1568     0994                     	;# 
  1569     0995                     	;# 
  1570     0996                     	;# 
  1571     0997                     	;# 
  1572     0E0F                     	;# 
  1573     0E10                     	;# 
  1574     0E11                     	;# 
  1575     0E12                     	;# 
  1576     0E13                     	;# 
  1577     0E14                     	;# 
  1578     0E15                     	;# 
  1579     0E16                     	;# 
  1580     0E17                     	;# 
  1581     0E18                     	;# 
  1582     0E19                     	;# 
  1583     0E1A                     	;# 
  1584     0E1B                     	;# 
  1585     0E1C                     	;# 
  1586     0E1D                     	;# 
  1587     0E1E                     	;# 
  1588     0E1F                     	;# 
  1589     0E20                     	;# 
  1590     0E21                     	;# 
  1591     0E22                     	;# 
  1592     0E23                     	;# 
  1593     0E24                     	;# 
  1594     0E25                     	;# 
  1595     0E26                     	;# 
  1596     0E27                     	;# 
  1597     0E28                     	;# 
  1598     0E29                     	;# 
  1599     0E2A                     	;# 
  1600     0E2B                     	;# 
  1601     0E2C                     	;# 
  1602     0E2D                     	;# 
  1603     0E2E                     	;# 
  1604     0E2F                     	;# 
  1605     0E30                     	;# 
  1606     0E31                     	;# 
  1607     0E32                     	;# 
  1608     0E33                     	;# 
  1609     0E34                     	;# 
  1610     0E35                     	;# 
  1611     0E36                     	;# 
  1612     0E37                     	;# 
  1613     0E8F                     	;# 
  1614     0E90                     	;# 
  1615     0E91                     	;# 
  1616     0E92                     	;# 
  1617     0E93                     	;# 
  1618     0E94                     	;# 
  1619     0E95                     	;# 
  1620     0E96                     	;# 
  1621     0E97                     	;# 
  1622     0E9C                     	;# 
  1623     0E9D                     	;# 
  1624     0E9E                     	;# 
  1625     0EA1                     	;# 
  1626     0EA2                     	;# 
  1627     0EA3                     	;# 
  1628     0EA4                     	;# 
  1629     0EA5                     	;# 
  1630     0EA9                     	;# 
  1631     0EAA                     	;# 
  1632     0EAB                     	;# 
  1633     0EAC                     	;# 
  1634     0EB1                     	;# 
  1635     0EB2                     	;# 
  1636     0EB3                     	;# 
  1637     0EB8                     	;# 
  1638     0EB9                     	;# 
  1639     0EBA                     	;# 
  1640     0EBB                     	;# 
  1641     0EBC                     	;# 
  1642     0EBD                     	;# 
  1643     0EBE                     	;# 
  1644     0EC3                     	;# 
  1645     0EC5                     	;# 
  1646     0EC6                     	;# 
  1647     0EC7                     	;# 
  1648     0EC8                     	;# 
  1649     0EC9                     	;# 
  1650     0ECA                     	;# 
  1651     0ECB                     	;# 
  1652     0ECC                     	;# 
  1653     0F10                     	;# 
  1654     0F11                     	;# 
  1655     0F12                     	;# 
  1656     0F13                     	;# 
  1657     0F14                     	;# 
  1658     0F15                     	;# 
  1659     0F16                     	;# 
  1660     0F17                     	;# 
  1661     0F18                     	;# 
  1662     0F19                     	;# 
  1663     0F1A                     	;# 
  1664     0F1B                     	;# 
  1665     0F1C                     	;# 
  1666     0F1D                     	;# 
  1667     0F1E                     	;# 
  1668     0F1F                     	;# 
  1669     0F20                     	;# 
  1670     0F21                     	;# 
  1671     0F22                     	;# 
  1672     0F23                     	;# 
  1673     0F24                     	;# 
  1674     0F25                     	;# 
  1675     0F26                     	;# 
  1676     0F27                     	;# 
  1677     0F28                     	;# 
  1678     0F29                     	;# 
  1679     0F2A                     	;# 
  1680     0F2B                     	;# 
  1681     0F2C                     	;# 
  1682     0F2D                     	;# 
  1683     0F2E                     	;# 
  1684     0F2F                     	;# 
  1685     0F30                     	;# 
  1686     0F31                     	;# 
  1687     0F32                     	;# 
  1688     0F38                     	;# 
  1689     0F39                     	;# 
  1690     0F3A                     	;# 
  1691     0F3B                     	;# 
  1692     0F3C                     	;# 
  1693     0F3D                     	;# 
  1694     0F3E                     	;# 
  1695     0F3F                     	;# 
  1696     0F40                     	;# 
  1697     0F41                     	;# 
  1698     0F43                     	;# 
  1699     0F44                     	;# 
  1700     0F45                     	;# 
  1701     0F46                     	;# 
  1702     0F47                     	;# 
  1703     0F48                     	;# 
  1704     0F49                     	;# 
  1705     0F4A                     	;# 
  1706     0F4B                     	;# 
  1707     0F4C                     	;# 
  1708     0F4E                     	;# 
  1709     0F4F                     	;# 
  1710     0F50                     	;# 
  1711     0F51                     	;# 
  1712     0F52                     	;# 
  1713     0F53                     	;# 
  1714     0F54                     	;# 
  1715     0F55                     	;# 
  1716     0F56                     	;# 
  1717     0F57                     	;# 
  1718     0F59                     	;# 
  1719     0F5A                     	;# 
  1720     0F5B                     	;# 
  1721     0F5C                     	;# 
  1722     0F5D                     	;# 
  1723     0F61                     	;# 
  1724     0F62                     	;# 
  1725     0F64                     	;# 
  1726     0F65                     	;# 
  1727     0F66                     	;# 
  1728     0F67                     	;# 
  1729     0F68                     	;# 
  1730     0F69                     	;# 
  1731     0F6A                     	;# 
  1732     0F6B                     	;# 
  1733     0F6C                     	;# 
  1734     0F6D                     	;# 
  1735     0FE4                     	;# 
  1736     0FE5                     	;# 
  1737     0FE6                     	;# 
  1738     0FE7                     	;# 
  1739     0FE8                     	;# 
  1740     0FE9                     	;# 
  1741     0FEA                     	;# 
  1742     0FEB                     	;# 
  1743     0FED                     	;# 
  1744     0FEE                     	;# 
  1745     0FEF                     	;# 
  1746     0000                     	;# 
  1747     0001                     	;# 
  1748     0002                     	;# 
  1749     0003                     	;# 
  1750     0004                     	;# 
  1751     0005                     	;# 
  1752     0006                     	;# 
  1753     0007                     	;# 
  1754     0008                     	;# 
  1755     0009                     	;# 
  1756     000A                     	;# 
  1757     000B                     	;# 
  1758     000C                     	;# 
  1759     000D                     	;# 
  1760     000E                     	;# 
  1761     000F                     	;# 
  1762     0010                     	;# 
  1763     0011                     	;# 
  1764     0012                     	;# 
  1765     0013                     	;# 
  1766     0014                     	;# 
  1767     0015                     	;# 
  1768     0016                     	;# 
  1769     0017                     	;# 
  1770     0018                     	;# 
  1771     0019                     	;# 
  1772     001A                     	;# 
  1773     001C                     	;# 
  1774     001C                     	;# 
  1775     001D                     	;# 
  1776     001D                     	;# 
  1777     001E                     	;# 
  1778     001F                     	;# 
  1779     008C                     	;# 
  1780     008C                     	;# 
  1781     008D                     	;# 
  1782     008E                     	;# 
  1783     008E                     	;# 
  1784     008F                     	;# 
  1785     0090                     	;# 
  1786     0090                     	;# 
  1787     0091                     	;# 
  1788     0093                     	;# 
  1789     0094                     	;# 
  1790     0095                     	;# 
  1791     0096                     	;# 
  1792     0097                     	;# 
  1793     0098                     	;# 
  1794     0099                     	;# 
  1795     009A                     	;# 
  1796     009B                     	;# 
  1797     009C                     	;# 
  1798     009D                     	;# 
  1799     009E                     	;# 
  1800     010C                     	;# 
  1801     010D                     	;# 
  1802     010E                     	;# 
  1803     010E                     	;# 
  1804     010F                     	;# 
  1805     0110                     	;# 
  1806     0110                     	;# 
  1807     0111                     	;# 
  1808     0112                     	;# 
  1809     0112                     	;# 
  1810     0113                     	;# 
  1811     0114                     	;# 
  1812     0114                     	;# 
  1813     0115                     	;# 
  1814     0116                     	;# 
  1815     0116                     	;# 
  1816     0117                     	;# 
  1817     0119                     	;# 
  1818     0119                     	;# 
  1819     0119                     	;# 
  1820     011A                     	;# 
  1821     011A                     	;# 
  1822     011A                     	;# 
  1823     011B                     	;# 
  1824     011B                     	;# 
  1825     011B                     	;# 
  1826     011B                     	;# 
  1827     011B                     	;# 
  1828     011C                     	;# 
  1829     011C                     	;# 
  1830     011C                     	;# 
  1831     011D                     	;# 
  1832     011D                     	;# 
  1833     011D                     	;# 
  1834     011E                     	;# 
  1835     011E                     	;# 
  1836     011E                     	;# 
  1837     011F                     	;# 
  1838     011F                     	;# 
  1839     011F                     	;# 
  1840     011F                     	;# 
  1841     011F                     	;# 
  1842     018C                     	;# 
  1843     018D                     	;# 
  1844     018E                     	;# 
  1845     018F                     	;# 
  1846     0190                     	;# 
  1847     0191                     	;# 
  1848     0192                     	;# 
  1849     0196                     	;# 
  1850     0197                     	;# 
  1851     0198                     	;# 
  1852     0199                     	;# 
  1853     019A                     	;# 
  1854     019B                     	;# 
  1855     019C                     	;# 
  1856     020C                     	;# 
  1857     020C                     	;# 
  1858     020D                     	;# 
  1859     020E                     	;# 
  1860     020F                     	;# 
  1861     020F                     	;# 
  1862     0210                     	;# 
  1863     0210                     	;# 
  1864     0211                     	;# 
  1865     0211                     	;# 
  1866     0212                     	;# 
  1867     0212                     	;# 
  1868     0213                     	;# 
  1869     0214                     	;# 
  1870     0215                     	;# 
  1871     0215                     	;# 
  1872     0216                     	;# 
  1873     0216                     	;# 
  1874     0217                     	;# 
  1875     0217                     	;# 
  1876     0218                     	;# 
  1877     0218                     	;# 
  1878     0219                     	;# 
  1879     021A                     	;# 
  1880     021B                     	;# 
  1881     021B                     	;# 
  1882     021C                     	;# 
  1883     021C                     	;# 
  1884     021D                     	;# 
  1885     021D                     	;# 
  1886     021E                     	;# 
  1887     021F                     	;# 
  1888     028C                     	;# 
  1889     028C                     	;# 
  1890     028D                     	;# 
  1891     028D                     	;# 
  1892     028E                     	;# 
  1893     028F                     	;# 
  1894     0290                     	;# 
  1895     0290                     	;# 
  1896     0291                     	;# 
  1897     0292                     	;# 
  1898     0292                     	;# 
  1899     0293                     	;# 
  1900     0293                     	;# 
  1901     0294                     	;# 
  1902     0295                     	;# 
  1903     0296                     	;# 
  1904     0296                     	;# 
  1905     0297                     	;# 
  1906     0298                     	;# 
  1907     0298                     	;# 
  1908     0299                     	;# 
  1909     0299                     	;# 
  1910     029A                     	;# 
  1911     029B                     	;# 
  1912     029C                     	;# 
  1913     029C                     	;# 
  1914     029D                     	;# 
  1915     030C                     	;# 
  1916     030C                     	;# 
  1917     030D                     	;# 
  1918     030E                     	;# 
  1919     030F                     	;# 
  1920     0310                     	;# 
  1921     0310                     	;# 
  1922     0311                     	;# 
  1923     0312                     	;# 
  1924     0313                     	;# 
  1925     0314                     	;# 
  1926     0314                     	;# 
  1927     0315                     	;# 
  1928     0316                     	;# 
  1929     0317                     	;# 
  1930     0318                     	;# 
  1931     0318                     	;# 
  1932     0319                     	;# 
  1933     031A                     	;# 
  1934     031B                     	;# 
  1935     031C                     	;# 
  1936     031C                     	;# 
  1937     031D                     	;# 
  1938     031E                     	;# 
  1939     031F                     	;# 
  1940     038C                     	;# 
  1941     038C                     	;# 
  1942     038D                     	;# 
  1943     038E                     	;# 
  1944     0390                     	;# 
  1945     0390                     	;# 
  1946     0391                     	;# 
  1947     0392                     	;# 
  1948     040C                     	;# 
  1949     040D                     	;# 
  1950     040E                     	;# 
  1951     040F                     	;# 
  1952     0410                     	;# 
  1953     0411                     	;# 
  1954     0416                     	;# 
  1955     0416                     	;# 
  1956     0417                     	;# 
  1957     0418                     	;# 
  1958     0418                     	;# 
  1959     0419                     	;# 
  1960     041A                     	;# 
  1961     041A                     	;# 
  1962     041B                     	;# 
  1963     041C                     	;# 
  1964     041C                     	;# 
  1965     041D                     	;# 
  1966     041E                     	;# 
  1967     041F                     	;# 
  1968     048C                     	;# 
  1969     048C                     	;# 
  1970     048D                     	;# 
  1971     048E                     	;# 
  1972     048F                     	;# 
  1973     048F                     	;# 
  1974     0490                     	;# 
  1975     0491                     	;# 
  1976     0492                     	;# 
  1977     0492                     	;# 
  1978     0493                     	;# 
  1979     0494                     	;# 
  1980     0495                     	;# 
  1981     0495                     	;# 
  1982     0496                     	;# 
  1983     0497                     	;# 
  1984     0498                     	;# 
  1985     0499                     	;# 
  1986     049A                     	;# 
  1987     049B                     	;# 
  1988     049C                     	;# 
  1989     049D                     	;# 
  1990     050C                     	;# 
  1991     050C                     	;# 
  1992     050D                     	;# 
  1993     050E                     	;# 
  1994     050F                     	;# 
  1995     050F                     	;# 
  1996     0510                     	;# 
  1997     0511                     	;# 
  1998     0512                     	;# 
  1999     0512                     	;# 
  2000     0513                     	;# 
  2001     0514                     	;# 
  2002     0515                     	;# 
  2003     0515                     	;# 
  2004     0516                     	;# 
  2005     0517                     	;# 
  2006     0518                     	;# 
  2007     0519                     	;# 
  2008     051A                     	;# 
  2009     051B                     	;# 
  2010     051C                     	;# 
  2011     051D                     	;# 
  2012     058C                     	;# 
  2013     058C                     	;# 
  2014     058D                     	;# 
  2015     058E                     	;# 
  2016     058F                     	;# 
  2017     058F                     	;# 
  2018     0590                     	;# 
  2019     0591                     	;# 
  2020     0592                     	;# 
  2021     0593                     	;# 
  2022     060C                     	;# 
  2023     060D                     	;# 
  2024     060E                     	;# 
  2025     060F                     	;# 
  2026     0610                     	;# 
  2027     0611                     	;# 
  2028     0612                     	;# 
  2029     0613                     	;# 
  2030     0614                     	;# 
  2031     0616                     	;# 
  2032     0617                     	;# 
  2033     0618                     	;# 
  2034     0619                     	;# 
  2035     061A                     	;# 
  2036     061B                     	;# 
  2037     061C                     	;# 
  2038     061D                     	;# 
  2039     061E                     	;# 
  2040     068C                     	;# 
  2041     068D                     	;# 
  2042     068E                     	;# 
  2043     068F                     	;# 
  2044     0690                     	;# 
  2045     0691                     	;# 
  2046     0692                     	;# 
  2047     0693                     	;# 
  2048     0694                     	;# 
  2049     070C                     	;# 
  2050     070D                     	;# 
  2051     070E                     	;# 
  2052     070F                     	;# 
  2053     0710                     	;# 
  2054     0711                     	;# 
  2055     0712                     	;# 
  2056     0713                     	;# 
  2057     0714                     	;# 
  2058     0716                     	;# 
  2059     0717                     	;# 
  2060     0718                     	;# 
  2061     0719                     	;# 
  2062     071A                     	;# 
  2063     071B                     	;# 
  2064     071C                     	;# 
  2065     071D                     	;# 
  2066     071E                     	;# 
  2067     0796                     	;# 
  2068     0797                     	;# 
  2069     0798                     	;# 
  2070     0799                     	;# 
  2071     079A                     	;# 
  2072     079B                     	;# 
  2073     080C                     	;# 
  2074     080D                     	;# 
  2075     080E                     	;# 
  2076     080F                     	;# 
  2077     0810                     	;# 
  2078     0811                     	;# 
  2079     0812                     	;# 
  2080     0813                     	;# 
  2081     0814                     	;# 
  2082     081A                     	;# 
  2083     081B                     	;# 
  2084     081C                     	;# 
  2085     081D                     	;# 
  2086     081E                     	;# 
  2087     081F                     	;# 
  2088     088C                     	;# 
  2089     088D                     	;# 
  2090     088E                     	;# 
  2091     088F                     	;# 
  2092     0890                     	;# 
  2093     0891                     	;# 
  2094     0892                     	;# 
  2095     0893                     	;# 
  2096     0895                     	;# 
  2097     0896                     	;# 
  2098     0897                     	;# 
  2099     0898                     	;# 
  2100     0899                     	;# 
  2101     089A                     	;# 
  2102     089B                     	;# 
  2103     090C                     	;# 
  2104     090E                     	;# 
  2105     090F                     	;# 
  2106     091F                     	;# 
  2107     091F                     	;# 
  2108     098F                     	;# 
  2109     098F                     	;# 
  2110     0990                     	;# 
  2111     0991                     	;# 
  2112     0992                     	;# 
  2113     0993                     	;# 
  2114     0994                     	;# 
  2115     0995                     	;# 
  2116     0996                     	;# 
  2117     0997                     	;# 
  2118     0E0F                     	;# 
  2119     0E10                     	;# 
  2120     0E11                     	;# 
  2121     0E12                     	;# 
  2122     0E13                     	;# 
  2123     0E14                     	;# 
  2124     0E15                     	;# 
  2125     0E16                     	;# 
  2126     0E17                     	;# 
  2127     0E18                     	;# 
  2128     0E19                     	;# 
  2129     0E1A                     	;# 
  2130     0E1B                     	;# 
  2131     0E1C                     	;# 
  2132     0E1D                     	;# 
  2133     0E1E                     	;# 
  2134     0E1F                     	;# 
  2135     0E20                     	;# 
  2136     0E21                     	;# 
  2137     0E22                     	;# 
  2138     0E23                     	;# 
  2139     0E24                     	;# 
  2140     0E25                     	;# 
  2141     0E26                     	;# 
  2142     0E27                     	;# 
  2143     0E28                     	;# 
  2144     0E29                     	;# 
  2145     0E2A                     	;# 
  2146     0E2B                     	;# 
  2147     0E2C                     	;# 
  2148     0E2D                     	;# 
  2149     0E2E                     	;# 
  2150     0E2F                     	;# 
  2151     0E30                     	;# 
  2152     0E31                     	;# 
  2153     0E32                     	;# 
  2154     0E33                     	;# 
  2155     0E34                     	;# 
  2156     0E35                     	;# 
  2157     0E36                     	;# 
  2158     0E37                     	;# 
  2159     0E8F                     	;# 
  2160     0E90                     	;# 
  2161     0E91                     	;# 
  2162     0E92                     	;# 
  2163     0E93                     	;# 
  2164     0E94                     	;# 
  2165     0E95                     	;# 
  2166     0E96                     	;# 
  2167     0E97                     	;# 
  2168     0E9C                     	;# 
  2169     0E9D                     	;# 
  2170     0E9E                     	;# 
  2171     0EA1                     	;# 
  2172     0EA2                     	;# 
  2173     0EA3                     	;# 
  2174     0EA4                     	;# 
  2175     0EA5                     	;# 
  2176     0EA9                     	;# 
  2177     0EAA                     	;# 
  2178     0EAB                     	;# 
  2179     0EAC                     	;# 
  2180     0EB1                     	;# 
  2181     0EB2                     	;# 
  2182     0EB3                     	;# 
  2183     0EB8                     	;# 
  2184     0EB9                     	;# 
  2185     0EBA                     	;# 
  2186     0EBB                     	;# 
  2187     0EBC                     	;# 
  2188     0EBD                     	;# 
  2189     0EBE                     	;# 
  2190     0EC3                     	;# 
  2191     0EC5                     	;# 
  2192     0EC6                     	;# 
  2193     0EC7                     	;# 
  2194     0EC8                     	;# 
  2195     0EC9                     	;# 
  2196     0ECA                     	;# 
  2197     0ECB                     	;# 
  2198     0ECC                     	;# 
  2199     0F10                     	;# 
  2200     0F11                     	;# 
  2201     0F12                     	;# 
  2202     0F13                     	;# 
  2203     0F14                     	;# 
  2204     0F15                     	;# 
  2205     0F16                     	;# 
  2206     0F17                     	;# 
  2207     0F18                     	;# 
  2208     0F19                     	;# 
  2209     0F1A                     	;# 
  2210     0F1B                     	;# 
  2211     0F1C                     	;# 
  2212     0F1D                     	;# 
  2213     0F1E                     	;# 
  2214     0F1F                     	;# 
  2215     0F20                     	;# 
  2216     0F21                     	;# 
  2217     0F22                     	;# 
  2218     0F23                     	;# 
  2219     0F24                     	;# 
  2220     0F25                     	;# 
  2221     0F26                     	;# 
  2222     0F27                     	;# 
  2223     0F28                     	;# 
  2224     0F29                     	;# 
  2225     0F2A                     	;# 
  2226     0F2B                     	;# 
  2227     0F2C                     	;# 
  2228     0F2D                     	;# 
  2229     0F2E                     	;# 
  2230     0F2F                     	;# 
  2231     0F30                     	;# 
  2232     0F31                     	;# 
  2233     0F32                     	;# 
  2234     0F38                     	;# 
  2235     0F39                     	;# 
  2236     0F3A                     	;# 
  2237     0F3B                     	;# 
  2238     0F3C                     	;# 
  2239     0F3D                     	;# 
  2240     0F3E                     	;# 
  2241     0F3F                     	;# 
  2242     0F40                     	;# 
  2243     0F41                     	;# 
  2244     0F43                     	;# 
  2245     0F44                     	;# 
  2246     0F45                     	;# 
  2247     0F46                     	;# 
  2248     0F47                     	;# 
  2249     0F48                     	;# 
  2250     0F49                     	;# 
  2251     0F4A                     	;# 
  2252     0F4B                     	;# 
  2253     0F4C                     	;# 
  2254     0F4E                     	;# 
  2255     0F4F                     	;# 
  2256     0F50                     	;# 
  2257     0F51                     	;# 
  2258     0F52                     	;# 
  2259     0F53                     	;# 
  2260     0F54                     	;# 
  2261     0F55                     	;# 
  2262     0F56                     	;# 
  2263     0F57                     	;# 
  2264     0F59                     	;# 
  2265     0F5A                     	;# 
  2266     0F5B                     	;# 
  2267     0F5C                     	;# 
  2268     0F5D                     	;# 
  2269     0F61                     	;# 
  2270     0F62                     	;# 
  2271     0F64                     	;# 
  2272     0F65                     	;# 
  2273     0F66                     	;# 
  2274     0F67                     	;# 
  2275     0F68                     	;# 
  2276     0F69                     	;# 
  2277     0F6A                     	;# 
  2278     0F6B                     	;# 
  2279     0F6C                     	;# 
  2280     0F6D                     	;# 
  2281     0FE4                     	;# 
  2282     0FE5                     	;# 
  2283     0FE6                     	;# 
  2284     0FE7                     	;# 
  2285     0FE8                     	;# 
  2286     0FE9                     	;# 
  2287     0FEA                     	;# 
  2288     0FEB                     	;# 
  2289     0FED                     	;# 
  2290     0FEE                     	;# 
  2291     0FEF                     	;# 
  2292     0000                     	;# 
  2293     0001                     	;# 
  2294     0002                     	;# 
  2295     0003                     	;# 
  2296     0004                     	;# 
  2297     0005                     	;# 
  2298     0006                     	;# 
  2299     0007                     	;# 
  2300     0008                     	;# 
  2301     0009                     	;# 
  2302     000A                     	;# 
  2303     000B                     	;# 
  2304     000C                     	;# 
  2305     000D                     	;# 
  2306     000E                     	;# 
  2307     000F                     	;# 
  2308     0010                     	;# 
  2309     0011                     	;# 
  2310     0012                     	;# 
  2311     0013                     	;# 
  2312     0014                     	;# 
  2313     0015                     	;# 
  2314     0016                     	;# 
  2315     0017                     	;# 
  2316     0018                     	;# 
  2317     0019                     	;# 
  2318     001A                     	;# 
  2319     001C                     	;# 
  2320     001C                     	;# 
  2321     001D                     	;# 
  2322     001D                     	;# 
  2323     001E                     	;# 
  2324     001F                     	;# 
  2325     008C                     	;# 
  2326     008C                     	;# 
  2327     008D                     	;# 
  2328     008E                     	;# 
  2329     008E                     	;# 
  2330     008F                     	;# 
  2331     0090                     	;# 
  2332     0090                     	;# 
  2333     0091                     	;# 
  2334     0093                     	;# 
  2335     0094                     	;# 
  2336     0095                     	;# 
  2337     0096                     	;# 
  2338     0097                     	;# 
  2339     0098                     	;# 
  2340     0099                     	;# 
  2341     009A                     	;# 
  2342     009B                     	;# 
  2343     009C                     	;# 
  2344     009D                     	;# 
  2345     009E                     	;# 
  2346     010C                     	;# 
  2347     010D                     	;# 
  2348     010E                     	;# 
  2349     010E                     	;# 
  2350     010F                     	;# 
  2351     0110                     	;# 
  2352     0110                     	;# 
  2353     0111                     	;# 
  2354     0112                     	;# 
  2355     0112                     	;# 
  2356     0113                     	;# 
  2357     0114                     	;# 
  2358     0114                     	;# 
  2359     0115                     	;# 
  2360     0116                     	;# 
  2361     0116                     	;# 
  2362     0117                     	;# 
  2363     0119                     	;# 
  2364     0119                     	;# 
  2365     0119                     	;# 
  2366     011A                     	;# 
  2367     011A                     	;# 
  2368     011A                     	;# 
  2369     011B                     	;# 
  2370     011B                     	;# 
  2371     011B                     	;# 
  2372     011B                     	;# 
  2373     011B                     	;# 
  2374     011C                     	;# 
  2375     011C                     	;# 
  2376     011C                     	;# 
  2377     011D                     	;# 
  2378     011D                     	;# 
  2379     011D                     	;# 
  2380     011E                     	;# 
  2381     011E                     	;# 
  2382     011E                     	;# 
  2383     011F                     	;# 
  2384     011F                     	;# 
  2385     011F                     	;# 
  2386     011F                     	;# 
  2387     011F                     	;# 
  2388     018C                     	;# 
  2389     018D                     	;# 
  2390     018E                     	;# 
  2391     018F                     	;# 
  2392     0190                     	;# 
  2393     0191                     	;# 
  2394     0192                     	;# 
  2395     0196                     	;# 
  2396     0197                     	;# 
  2397     0198                     	;# 
  2398     0199                     	;# 
  2399     019A                     	;# 
  2400     019B                     	;# 
  2401     019C                     	;# 
  2402     020C                     	;# 
  2403     020C                     	;# 
  2404     020D                     	;# 
  2405     020E                     	;# 
  2406     020F                     	;# 
  2407     020F                     	;# 
  2408     0210                     	;# 
  2409     0210                     	;# 
  2410     0211                     	;# 
  2411     0211                     	;# 
  2412     0212                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0214                     	;# 
  2416     0215                     	;# 
  2417     0215                     	;# 
  2418     0216                     	;# 
  2419     0216                     	;# 
  2420     0217                     	;# 
  2421     0217                     	;# 
  2422     0218                     	;# 
  2423     0218                     	;# 
  2424     0219                     	;# 
  2425     021A                     	;# 
  2426     021B                     	;# 
  2427     021B                     	;# 
  2428     021C                     	;# 
  2429     021C                     	;# 
  2430     021D                     	;# 
  2431     021D                     	;# 
  2432     021E                     	;# 
  2433     021F                     	;# 
  2434     028C                     	;# 
  2435     028C                     	;# 
  2436     028D                     	;# 
  2437     028D                     	;# 
  2438     028E                     	;# 
  2439     028F                     	;# 
  2440     0290                     	;# 
  2441     0290                     	;# 
  2442     0291                     	;# 
  2443     0292                     	;# 
  2444     0292                     	;# 
  2445     0293                     	;# 
  2446     0293                     	;# 
  2447     0294                     	;# 
  2448     0295                     	;# 
  2449     0296                     	;# 
  2450     0296                     	;# 
  2451     0297                     	;# 
  2452     0298                     	;# 
  2453     0298                     	;# 
  2454     0299                     	;# 
  2455     0299                     	;# 
  2456     029A                     	;# 
  2457     029B                     	;# 
  2458     029C                     	;# 
  2459     029C                     	;# 
  2460     029D                     	;# 
  2461     030C                     	;# 
  2462     030C                     	;# 
  2463     030D                     	;# 
  2464     030E                     	;# 
  2465     030F                     	;# 
  2466     0310                     	;# 
  2467     0310                     	;# 
  2468     0311                     	;# 
  2469     0312                     	;# 
  2470     0313                     	;# 
  2471     0314                     	;# 
  2472     0314                     	;# 
  2473     0315                     	;# 
  2474     0316                     	;# 
  2475     0317                     	;# 
  2476     0318                     	;# 
  2477     0318                     	;# 
  2478     0319                     	;# 
  2479     031A                     	;# 
  2480     031B                     	;# 
  2481     031C                     	;# 
  2482     031C                     	;# 
  2483     031D                     	;# 
  2484     031E                     	;# 
  2485     031F                     	;# 
  2486     038C                     	;# 
  2487     038C                     	;# 
  2488     038D                     	;# 
  2489     038E                     	;# 
  2490     0390                     	;# 
  2491     0390                     	;# 
  2492     0391                     	;# 
  2493     0392                     	;# 
  2494     040C                     	;# 
  2495     040D                     	;# 
  2496     040E                     	;# 
  2497     040F                     	;# 
  2498     0410                     	;# 
  2499     0411                     	;# 
  2500     0416                     	;# 
  2501     0416                     	;# 
  2502     0417                     	;# 
  2503     0418                     	;# 
  2504     0418                     	;# 
  2505     0419                     	;# 
  2506     041A                     	;# 
  2507     041A                     	;# 
  2508     041B                     	;# 
  2509     041C                     	;# 
  2510     041C                     	;# 
  2511     041D                     	;# 
  2512     041E                     	;# 
  2513     041F                     	;# 
  2514     048C                     	;# 
  2515     048C                     	;# 
  2516     048D                     	;# 
  2517     048E                     	;# 
  2518     048F                     	;# 
  2519     048F                     	;# 
  2520     0490                     	;# 
  2521     0491                     	;# 
  2522     0492                     	;# 
  2523     0492                     	;# 
  2524     0493                     	;# 
  2525     0494                     	;# 
  2526     0495                     	;# 
  2527     0495                     	;# 
  2528     0496                     	;# 
  2529     0497                     	;# 
  2530     0498                     	;# 
  2531     0499                     	;# 
  2532     049A                     	;# 
  2533     049B                     	;# 
  2534     049C                     	;# 
  2535     049D                     	;# 
  2536     050C                     	;# 
  2537     050C                     	;# 
  2538     050D                     	;# 
  2539     050E                     	;# 
  2540     050F                     	;# 
  2541     050F                     	;# 
  2542     0510                     	;# 
  2543     0511                     	;# 
  2544     0512                     	;# 
  2545     0512                     	;# 
  2546     0513                     	;# 
  2547     0514                     	;# 
  2548     0515                     	;# 
  2549     0515                     	;# 
  2550     0516                     	;# 
  2551     0517                     	;# 
  2552     0518                     	;# 
  2553     0519                     	;# 
  2554     051A                     	;# 
  2555     051B                     	;# 
  2556     051C                     	;# 
  2557     051D                     	;# 
  2558     058C                     	;# 
  2559     058C                     	;# 
  2560     058D                     	;# 
  2561     058E                     	;# 
  2562     058F                     	;# 
  2563     058F                     	;# 
  2564     0590                     	;# 
  2565     0591                     	;# 
  2566     0592                     	;# 
  2567     0593                     	;# 
  2568     060C                     	;# 
  2569     060D                     	;# 
  2570     060E                     	;# 
  2571     060F                     	;# 
  2572     0610                     	;# 
  2573     0611                     	;# 
  2574     0612                     	;# 
  2575     0613                     	;# 
  2576     0614                     	;# 
  2577     0616                     	;# 
  2578     0617                     	;# 
  2579     0618                     	;# 
  2580     0619                     	;# 
  2581     061A                     	;# 
  2582     061B                     	;# 
  2583     061C                     	;# 
  2584     061D                     	;# 
  2585     061E                     	;# 
  2586     068C                     	;# 
  2587     068D                     	;# 
  2588     068E                     	;# 
  2589     068F                     	;# 
  2590     0690                     	;# 
  2591     0691                     	;# 
  2592     0692                     	;# 
  2593     0693                     	;# 
  2594     0694                     	;# 
  2595     070C                     	;# 
  2596     070D                     	;# 
  2597     070E                     	;# 
  2598     070F                     	;# 
  2599     0710                     	;# 
  2600     0711                     	;# 
  2601     0712                     	;# 
  2602     0713                     	;# 
  2603     0714                     	;# 
  2604     0716                     	;# 
  2605     0717                     	;# 
  2606     0718                     	;# 
  2607     0719                     	;# 
  2608     071A                     	;# 
  2609     071B                     	;# 
  2610     071C                     	;# 
  2611     071D                     	;# 
  2612     071E                     	;# 
  2613     0796                     	;# 
  2614     0797                     	;# 
  2615     0798                     	;# 
  2616     0799                     	;# 
  2617     079A                     	;# 
  2618     079B                     	;# 
  2619     080C                     	;# 
  2620     080D                     	;# 
  2621     080E                     	;# 
  2622     080F                     	;# 
  2623     0810                     	;# 
  2624     0811                     	;# 
  2625     0812                     	;# 
  2626     0813                     	;# 
  2627     0814                     	;# 
  2628     081A                     	;# 
  2629     081B                     	;# 
  2630     081C                     	;# 
  2631     081D                     	;# 
  2632     081E                     	;# 
  2633     081F                     	;# 
  2634     088C                     	;# 
  2635     088D                     	;# 
  2636     088E                     	;# 
  2637     088F                     	;# 
  2638     0890                     	;# 
  2639     0891                     	;# 
  2640     0892                     	;# 
  2641     0893                     	;# 
  2642     0895                     	;# 
  2643     0896                     	;# 
  2644     0897                     	;# 
  2645     0898                     	;# 
  2646     0899                     	;# 
  2647     089A                     	;# 
  2648     089B                     	;# 
  2649     090C                     	;# 
  2650     090E                     	;# 
  2651     090F                     	;# 
  2652     091F                     	;# 
  2653     091F                     	;# 
  2654     098F                     	;# 
  2655     098F                     	;# 
  2656     0990                     	;# 
  2657     0991                     	;# 
  2658     0992                     	;# 
  2659     0993                     	;# 
  2660     0994                     	;# 
  2661     0995                     	;# 
  2662     0996                     	;# 
  2663     0997                     	;# 
  2664     0E0F                     	;# 
  2665     0E10                     	;# 
  2666     0E11                     	;# 
  2667     0E12                     	;# 
  2668     0E13                     	;# 
  2669     0E14                     	;# 
  2670     0E15                     	;# 
  2671     0E16                     	;# 
  2672     0E17                     	;# 
  2673     0E18                     	;# 
  2674     0E19                     	;# 
  2675     0E1A                     	;# 
  2676     0E1B                     	;# 
  2677     0E1C                     	;# 
  2678     0E1D                     	;# 
  2679     0E1E                     	;# 
  2680     0E1F                     	;# 
  2681     0E20                     	;# 
  2682     0E21                     	;# 
  2683     0E22                     	;# 
  2684     0E23                     	;# 
  2685     0E24                     	;# 
  2686     0E25                     	;# 
  2687     0E26                     	;# 
  2688     0E27                     	;# 
  2689     0E28                     	;# 
  2690     0E29                     	;# 
  2691     0E2A                     	;# 
  2692     0E2B                     	;# 
  2693     0E2C                     	;# 
  2694     0E2D                     	;# 
  2695     0E2E                     	;# 
  2696     0E2F                     	;# 
  2697     0E30                     	;# 
  2698     0E31                     	;# 
  2699     0E32                     	;# 
  2700     0E33                     	;# 
  2701     0E34                     	;# 
  2702     0E35                     	;# 
  2703     0E36                     	;# 
  2704     0E37                     	;# 
  2705     0E8F                     	;# 
  2706     0E90                     	;# 
  2707     0E91                     	;# 
  2708     0E92                     	;# 
  2709     0E93                     	;# 
  2710     0E94                     	;# 
  2711     0E95                     	;# 
  2712     0E96                     	;# 
  2713     0E97                     	;# 
  2714     0E9C                     	;# 
  2715     0E9D                     	;# 
  2716     0E9E                     	;# 
  2717     0EA1                     	;# 
  2718     0EA2                     	;# 
  2719     0EA3                     	;# 
  2720     0EA4                     	;# 
  2721     0EA5                     	;# 
  2722     0EA9                     	;# 
  2723     0EAA                     	;# 
  2724     0EAB                     	;# 
  2725     0EAC                     	;# 
  2726     0EB1                     	;# 
  2727     0EB2                     	;# 
  2728     0EB3                     	;# 
  2729     0EB8                     	;# 
  2730     0EB9                     	;# 
  2731     0EBA                     	;# 
  2732     0EBB                     	;# 
  2733     0EBC                     	;# 
  2734     0EBD                     	;# 
  2735     0EBE                     	;# 
  2736     0EC3                     	;# 
  2737     0EC5                     	;# 
  2738     0EC6                     	;# 
  2739     0EC7                     	;# 
  2740     0EC8                     	;# 
  2741     0EC9                     	;# 
  2742     0ECA                     	;# 
  2743     0ECB                     	;# 
  2744     0ECC                     	;# 
  2745     0F10                     	;# 
  2746     0F11                     	;# 
  2747     0F12                     	;# 
  2748     0F13                     	;# 
  2749     0F14                     	;# 
  2750     0F15                     	;# 
  2751     0F16                     	;# 
  2752     0F17                     	;# 
  2753     0F18                     	;# 
  2754     0F19                     	;# 
  2755     0F1A                     	;# 
  2756     0F1B                     	;# 
  2757     0F1C                     	;# 
  2758     0F1D                     	;# 
  2759     0F1E                     	;# 
  2760     0F1F                     	;# 
  2761     0F20                     	;# 
  2762     0F21                     	;# 
  2763     0F22                     	;# 
  2764     0F23                     	;# 
  2765     0F24                     	;# 
  2766     0F25                     	;# 
  2767     0F26                     	;# 
  2768     0F27                     	;# 
  2769     0F28                     	;# 
  2770     0F29                     	;# 
  2771     0F2A                     	;# 
  2772     0F2B                     	;# 
  2773     0F2C                     	;# 
  2774     0F2D                     	;# 
  2775     0F2E                     	;# 
  2776     0F2F                     	;# 
  2777     0F30                     	;# 
  2778     0F31                     	;# 
  2779     0F32                     	;# 
  2780     0F38                     	;# 
  2781     0F39                     	;# 
  2782     0F3A                     	;# 
  2783     0F3B                     	;# 
  2784     0F3C                     	;# 
  2785     0F3D                     	;# 
  2786     0F3E                     	;# 
  2787     0F3F                     	;# 
  2788     0F40                     	;# 
  2789     0F41                     	;# 
  2790     0F43                     	;# 
  2791     0F44                     	;# 
  2792     0F45                     	;# 
  2793     0F46                     	;# 
  2794     0F47                     	;# 
  2795     0F48                     	;# 
  2796     0F49                     	;# 
  2797     0F4A                     	;# 
  2798     0F4B                     	;# 
  2799     0F4C                     	;# 
  2800     0F4E                     	;# 
  2801     0F4F                     	;# 
  2802     0F50                     	;# 
  2803     0F51                     	;# 
  2804     0F52                     	;# 
  2805     0F53                     	;# 
  2806     0F54                     	;# 
  2807     0F55                     	;# 
  2808     0F56                     	;# 
  2809     0F57                     	;# 
  2810     0F59                     	;# 
  2811     0F5A                     	;# 
  2812     0F5B                     	;# 
  2813     0F5C                     	;# 
  2814     0F5D                     	;# 
  2815     0F61                     	;# 
  2816     0F62                     	;# 
  2817     0F64                     	;# 
  2818     0F65                     	;# 
  2819     0F66                     	;# 
  2820     0F67                     	;# 
  2821     0F68                     	;# 
  2822     0F69                     	;# 
  2823     0F6A                     	;# 
  2824     0F6B                     	;# 
  2825     0F6C                     	;# 
  2826     0F6D                     	;# 
  2827     0FE4                     	;# 
  2828     0FE5                     	;# 
  2829     0FE6                     	;# 
  2830     0FE7                     	;# 
  2831     0FE8                     	;# 
  2832     0FE9                     	;# 
  2833     0FEA                     	;# 
  2834     0FEB                     	;# 
  2835     0FED                     	;# 
  2836     0FEE                     	;# 
  2837     0FEF                     	;# 
  2838     0000                     	;# 
  2839     0001                     	;# 
  2840     0002                     	;# 
  2841     0003                     	;# 
  2842     0004                     	;# 
  2843     0005                     	;# 
  2844     0006                     	;# 
  2845     0007                     	;# 
  2846     0008                     	;# 
  2847     0009                     	;# 
  2848     000A                     	;# 
  2849     000B                     	;# 
  2850     000C                     	;# 
  2851     000D                     	;# 
  2852     000E                     	;# 
  2853     000F                     	;# 
  2854     0010                     	;# 
  2855     0011                     	;# 
  2856     0012                     	;# 
  2857     0013                     	;# 
  2858     0014                     	;# 
  2859     0015                     	;# 
  2860     0016                     	;# 
  2861     0017                     	;# 
  2862     0018                     	;# 
  2863     0019                     	;# 
  2864     001A                     	;# 
  2865     001C                     	;# 
  2866     001C                     	;# 
  2867     001D                     	;# 
  2868     001D                     	;# 
  2869     001E                     	;# 
  2870     001F                     	;# 
  2871     008C                     	;# 
  2872     008C                     	;# 
  2873     008D                     	;# 
  2874     008E                     	;# 
  2875     008E                     	;# 
  2876     008F                     	;# 
  2877     0090                     	;# 
  2878     0090                     	;# 
  2879     0091                     	;# 
  2880     0093                     	;# 
  2881     0094                     	;# 
  2882     0095                     	;# 
  2883     0096                     	;# 
  2884     0097                     	;# 
  2885     0098                     	;# 
  2886     0099                     	;# 
  2887     009A                     	;# 
  2888     009B                     	;# 
  2889     009C                     	;# 
  2890     009D                     	;# 
  2891     009E                     	;# 
  2892     010C                     	;# 
  2893     010D                     	;# 
  2894     010E                     	;# 
  2895     010E                     	;# 
  2896     010F                     	;# 
  2897     0110                     	;# 
  2898     0110                     	;# 
  2899     0111                     	;# 
  2900     0112                     	;# 
  2901     0112                     	;# 
  2902     0113                     	;# 
  2903     0114                     	;# 
  2904     0114                     	;# 
  2905     0115                     	;# 
  2906     0116                     	;# 
  2907     0116                     	;# 
  2908     0117                     	;# 
  2909     0119                     	;# 
  2910     0119                     	;# 
  2911     0119                     	;# 
  2912     011A                     	;# 
  2913     011A                     	;# 
  2914     011A                     	;# 
  2915     011B                     	;# 
  2916     011B                     	;# 
  2917     011B                     	;# 
  2918     011B                     	;# 
  2919     011B                     	;# 
  2920     011C                     	;# 
  2921     011C                     	;# 
  2922     011C                     	;# 
  2923     011D                     	;# 
  2924     011D                     	;# 
  2925     011D                     	;# 
  2926     011E                     	;# 
  2927     011E                     	;# 
  2928     011E                     	;# 
  2929     011F                     	;# 
  2930     011F                     	;# 
  2931     011F                     	;# 
  2932     011F                     	;# 
  2933     011F                     	;# 
  2934     018C                     	;# 
  2935     018D                     	;# 
  2936     018E                     	;# 
  2937     018F                     	;# 
  2938     0190                     	;# 
  2939     0191                     	;# 
  2940     0192                     	;# 
  2941     0196                     	;# 
  2942     0197                     	;# 
  2943     0198                     	;# 
  2944     0199                     	;# 
  2945     019A                     	;# 
  2946     019B                     	;# 
  2947     019C                     	;# 
  2948     020C                     	;# 
  2949     020C                     	;# 
  2950     020D                     	;# 
  2951     020E                     	;# 
  2952     020F                     	;# 
  2953     020F                     	;# 
  2954     0210                     	;# 
  2955     0210                     	;# 
  2956     0211                     	;# 
  2957     0211                     	;# 
  2958     0212                     	;# 
  2959     0212                     	;# 
  2960     0213                     	;# 
  2961     0214                     	;# 
  2962     0215                     	;# 
  2963     0215                     	;# 
  2964     0216                     	;# 
  2965     0216                     	;# 
  2966     0217                     	;# 
  2967     0217                     	;# 
  2968     0218                     	;# 
  2969     0218                     	;# 
  2970     0219                     	;# 
  2971     021A                     	;# 
  2972     021B                     	;# 
  2973     021B                     	;# 
  2974     021C                     	;# 
  2975     021C                     	;# 
  2976     021D                     	;# 
  2977     021D                     	;# 
  2978     021E                     	;# 
  2979     021F                     	;# 
  2980     028C                     	;# 
  2981     028C                     	;# 
  2982     028D                     	;# 
  2983     028D                     	;# 
  2984     028E                     	;# 
  2985     028F                     	;# 
  2986     0290                     	;# 
  2987     0290                     	;# 
  2988     0291                     	;# 
  2989     0292                     	;# 
  2990     0292                     	;# 
  2991     0293                     	;# 
  2992     0293                     	;# 
  2993     0294                     	;# 
  2994     0295                     	;# 
  2995     0296                     	;# 
  2996     0296                     	;# 
  2997     0297                     	;# 
  2998     0298                     	;# 
  2999     0298                     	;# 
  3000     0299                     	;# 
  3001     0299                     	;# 
  3002     029A                     	;# 
  3003     029B                     	;# 
  3004     029C                     	;# 
  3005     029C                     	;# 
  3006     029D                     	;# 
  3007     030C                     	;# 
  3008     030C                     	;# 
  3009     030D                     	;# 
  3010     030E                     	;# 
  3011     030F                     	;# 
  3012     0310                     	;# 
  3013     0310                     	;# 
  3014     0311                     	;# 
  3015     0312                     	;# 
  3016     0313                     	;# 
  3017     0314                     	;# 
  3018     0314                     	;# 
  3019     0315                     	;# 
  3020     0316                     	;# 
  3021     0317                     	;# 
  3022     0318                     	;# 
  3023     0318                     	;# 
  3024     0319                     	;# 
  3025     031A                     	;# 
  3026     031B                     	;# 
  3027     031C                     	;# 
  3028     031C                     	;# 
  3029     031D                     	;# 
  3030     031E                     	;# 
  3031     031F                     	;# 
  3032     038C                     	;# 
  3033     038C                     	;# 
  3034     038D                     	;# 
  3035     038E                     	;# 
  3036     0390                     	;# 
  3037     0390                     	;# 
  3038     0391                     	;# 
  3039     0392                     	;# 
  3040     040C                     	;# 
  3041     040D                     	;# 
  3042     040E                     	;# 
  3043     040F                     	;# 
  3044     0410                     	;# 
  3045     0411                     	;# 
  3046     0416                     	;# 
  3047     0416                     	;# 
  3048     0417                     	;# 
  3049     0418                     	;# 
  3050     0418                     	;# 
  3051     0419                     	;# 
  3052     041A                     	;# 
  3053     041A                     	;# 
  3054     041B                     	;# 
  3055     041C                     	;# 
  3056     041C                     	;# 
  3057     041D                     	;# 
  3058     041E                     	;# 
  3059     041F                     	;# 
  3060     048C                     	;# 
  3061     048C                     	;# 
  3062     048D                     	;# 
  3063     048E                     	;# 
  3064     048F                     	;# 
  3065     048F                     	;# 
  3066     0490                     	;# 
  3067     0491                     	;# 
  3068     0492                     	;# 
  3069     0492                     	;# 
  3070     0493                     	;# 
  3071     0494                     	;# 
  3072     0495                     	;# 
  3073     0495                     	;# 
  3074     0496                     	;# 
  3075     0497                     	;# 
  3076     0498                     	;# 
  3077     0499                     	;# 
  3078     049A                     	;# 
  3079     049B                     	;# 
  3080     049C                     	;# 
  3081     049D                     	;# 
  3082     050C                     	;# 
  3083     050C                     	;# 
  3084     050D                     	;# 
  3085     050E                     	;# 
  3086     050F                     	;# 
  3087     050F                     	;# 
  3088     0510                     	;# 
  3089     0511                     	;# 
  3090     0512                     	;# 
  3091     0512                     	;# 
  3092     0513                     	;# 
  3093     0514                     	;# 
  3094     0515                     	;# 
  3095     0515                     	;# 
  3096     0516                     	;# 
  3097     0517                     	;# 
  3098     0518                     	;# 
  3099     0519                     	;# 
  3100     051A                     	;# 
  3101     051B                     	;# 
  3102     051C                     	;# 
  3103     051D                     	;# 
  3104     058C                     	;# 
  3105     058C                     	;# 
  3106     058D                     	;# 
  3107     058E                     	;# 
  3108     058F                     	;# 
  3109     058F                     	;# 
  3110     0590                     	;# 
  3111     0591                     	;# 
  3112     0592                     	;# 
  3113     0593                     	;# 
  3114     060C                     	;# 
  3115     060D                     	;# 
  3116     060E                     	;# 
  3117     060F                     	;# 
  3118     0610                     	;# 
  3119     0611                     	;# 
  3120     0612                     	;# 
  3121     0613                     	;# 
  3122     0614                     	;# 
  3123     0616                     	;# 
  3124     0617                     	;# 
  3125     0618                     	;# 
  3126     0619                     	;# 
  3127     061A                     	;# 
  3128     061B                     	;# 
  3129     061C                     	;# 
  3130     061D                     	;# 
  3131     061E                     	;# 
  3132     068C                     	;# 
  3133     068D                     	;# 
  3134     068E                     	;# 
  3135     068F                     	;# 
  3136     0690                     	;# 
  3137     0691                     	;# 
  3138     0692                     	;# 
  3139     0693                     	;# 
  3140     0694                     	;# 
  3141     070C                     	;# 
  3142     070D                     	;# 
  3143     070E                     	;# 
  3144     070F                     	;# 
  3145     0710                     	;# 
  3146     0711                     	;# 
  3147     0712                     	;# 
  3148     0713                     	;# 
  3149     0714                     	;# 
  3150     0716                     	;# 
  3151     0717                     	;# 
  3152     0718                     	;# 
  3153     0719                     	;# 
  3154     071A                     	;# 
  3155     071B                     	;# 
  3156     071C                     	;# 
  3157     071D                     	;# 
  3158     071E                     	;# 
  3159     0796                     	;# 
  3160     0797                     	;# 
  3161     0798                     	;# 
  3162     0799                     	;# 
  3163     079A                     	;# 
  3164     079B                     	;# 
  3165     080C                     	;# 
  3166     080D                     	;# 
  3167     080E                     	;# 
  3168     080F                     	;# 
  3169     0810                     	;# 
  3170     0811                     	;# 
  3171     0812                     	;# 
  3172     0813                     	;# 
  3173     0814                     	;# 
  3174     081A                     	;# 
  3175     081B                     	;# 
  3176     081C                     	;# 
  3177     081D                     	;# 
  3178     081E                     	;# 
  3179     081F                     	;# 
  3180     088C                     	;# 
  3181     088D                     	;# 
  3182     088E                     	;# 
  3183     088F                     	;# 
  3184     0890                     	;# 
  3185     0891                     	;# 
  3186     0892                     	;# 
  3187     0893                     	;# 
  3188     0895                     	;# 
  3189     0896                     	;# 
  3190     0897                     	;# 
  3191     0898                     	;# 
  3192     0899                     	;# 
  3193     089A                     	;# 
  3194     089B                     	;# 
  3195     090C                     	;# 
  3196     090E                     	;# 
  3197     090F                     	;# 
  3198     091F                     	;# 
  3199     091F                     	;# 
  3200     098F                     	;# 
  3201     098F                     	;# 
  3202     0990                     	;# 
  3203     0991                     	;# 
  3204     0992                     	;# 
  3205     0993                     	;# 
  3206     0994                     	;# 
  3207     0995                     	;# 
  3208     0996                     	;# 
  3209     0997                     	;# 
  3210     0E0F                     	;# 
  3211     0E10                     	;# 
  3212     0E11                     	;# 
  3213     0E12                     	;# 
  3214     0E13                     	;# 
  3215     0E14                     	;# 
  3216     0E15                     	;# 
  3217     0E16                     	;# 
  3218     0E17                     	;# 
  3219     0E18                     	;# 
  3220     0E19                     	;# 
  3221     0E1A                     	;# 
  3222     0E1B                     	;# 
  3223     0E1C                     	;# 
  3224     0E1D                     	;# 
  3225     0E1E                     	;# 
  3226     0E1F                     	;# 
  3227     0E20                     	;# 
  3228     0E21                     	;# 
  3229     0E22                     	;# 
  3230     0E23                     	;# 
  3231     0E24                     	;# 
  3232     0E25                     	;# 
  3233     0E26                     	;# 
  3234     0E27                     	;# 
  3235     0E28                     	;# 
  3236     0E29                     	;# 
  3237     0E2A                     	;# 
  3238     0E2B                     	;# 
  3239     0E2C                     	;# 
  3240     0E2D                     	;# 
  3241     0E2E                     	;# 
  3242     0E2F                     	;# 
  3243     0E30                     	;# 
  3244     0E31                     	;# 
  3245     0E32                     	;# 
  3246     0E33                     	;# 
  3247     0E34                     	;# 
  3248     0E35                     	;# 
  3249     0E36                     	;# 
  3250     0E37                     	;# 
  3251     0E8F                     	;# 
  3252     0E90                     	;# 
  3253     0E91                     	;# 
  3254     0E92                     	;# 
  3255     0E93                     	;# 
  3256     0E94                     	;# 
  3257     0E95                     	;# 
  3258     0E96                     	;# 
  3259     0E97                     	;# 
  3260     0E9C                     	;# 
  3261     0E9D                     	;# 
  3262     0E9E                     	;# 
  3263     0EA1                     	;# 
  3264     0EA2                     	;# 
  3265     0EA3                     	;# 
  3266     0EA4                     	;# 
  3267     0EA5                     	;# 
  3268     0EA9                     	;# 
  3269     0EAA                     	;# 
  3270     0EAB                     	;# 
  3271     0EAC                     	;# 
  3272     0EB1                     	;# 
  3273     0EB2                     	;# 
  3274     0EB3                     	;# 
  3275     0EB8                     	;# 
  3276     0EB9                     	;# 
  3277     0EBA                     	;# 
  3278     0EBB                     	;# 
  3279     0EBC                     	;# 
  3280     0EBD                     	;# 
  3281     0EBE                     	;# 
  3282     0EC3                     	;# 
  3283     0EC5                     	;# 
  3284     0EC6                     	;# 
  3285     0EC7                     	;# 
  3286     0EC8                     	;# 
  3287     0EC9                     	;# 
  3288     0ECA                     	;# 
  3289     0ECB                     	;# 
  3290     0ECC                     	;# 
  3291     0F10                     	;# 
  3292     0F11                     	;# 
  3293     0F12                     	;# 
  3294     0F13                     	;# 
  3295     0F14                     	;# 
  3296     0F15                     	;# 
  3297     0F16                     	;# 
  3298     0F17                     	;# 
  3299     0F18                     	;# 
  3300     0F19                     	;# 
  3301     0F1A                     	;# 
  3302     0F1B                     	;# 
  3303     0F1C                     	;# 
  3304     0F1D                     	;# 
  3305     0F1E                     	;# 
  3306     0F1F                     	;# 
  3307     0F20                     	;# 
  3308     0F21                     	;# 
  3309     0F22                     	;# 
  3310     0F23                     	;# 
  3311     0F24                     	;# 
  3312     0F25                     	;# 
  3313     0F26                     	;# 
  3314     0F27                     	;# 
  3315     0F28                     	;# 
  3316     0F29                     	;# 
  3317     0F2A                     	;# 
  3318     0F2B                     	;# 
  3319     0F2C                     	;# 
  3320     0F2D                     	;# 
  3321     0F2E                     	;# 
  3322     0F2F                     	;# 
  3323     0F30                     	;# 
  3324     0F31                     	;# 
  3325     0F32                     	;# 
  3326     0F38                     	;# 
  3327     0F39                     	;# 
  3328     0F3A                     	;# 
  3329     0F3B                     	;# 
  3330     0F3C                     	;# 
  3331     0F3D                     	;# 
  3332     0F3E                     	;# 
  3333     0F3F                     	;# 
  3334     0F40                     	;# 
  3335     0F41                     	;# 
  3336     0F43                     	;# 
  3337     0F44                     	;# 
  3338     0F45                     	;# 
  3339     0F46                     	;# 
  3340     0F47                     	;# 
  3341     0F48                     	;# 
  3342     0F49                     	;# 
  3343     0F4A                     	;# 
  3344     0F4B                     	;# 
  3345     0F4C                     	;# 
  3346     0F4E                     	;# 
  3347     0F4F                     	;# 
  3348     0F50                     	;# 
  3349     0F51                     	;# 
  3350     0F52                     	;# 
  3351     0F53                     	;# 
  3352     0F54                     	;# 
  3353     0F55                     	;# 
  3354     0F56                     	;# 
  3355     0F57                     	;# 
  3356     0F59                     	;# 
  3357     0F5A                     	;# 
  3358     0F5B                     	;# 
  3359     0F5C                     	;# 
  3360     0F5D                     	;# 
  3361     0F61                     	;# 
  3362     0F62                     	;# 
  3363     0F64                     	;# 
  3364     0F65                     	;# 
  3365     0F66                     	;# 
  3366     0F67                     	;# 
  3367     0F68                     	;# 
  3368     0F69                     	;# 
  3369     0F6A                     	;# 
  3370     0F6B                     	;# 
  3371     0F6C                     	;# 
  3372     0F6D                     	;# 
  3373     0FE4                     	;# 
  3374     0FE5                     	;# 
  3375     0FE6                     	;# 
  3376     0FE7                     	;# 
  3377     0FE8                     	;# 
  3378     0FE9                     	;# 
  3379     0FEA                     	;# 
  3380     0FEB                     	;# 
  3381     0FED                     	;# 
  3382     0FEE                     	;# 
  3383     0FEF                     	;# 
  3384     0000                     	;# 
  3385     0001                     	;# 
  3386     0002                     	;# 
  3387     0003                     	;# 
  3388     0004                     	;# 
  3389     0005                     	;# 
  3390     0006                     	;# 
  3391     0007                     	;# 
  3392     0008                     	;# 
  3393     0009                     	;# 
  3394     000A                     	;# 
  3395     000B                     	;# 
  3396     000C                     	;# 
  3397     000D                     	;# 
  3398     000E                     	;# 
  3399     000F                     	;# 
  3400     0010                     	;# 
  3401     0011                     	;# 
  3402     0012                     	;# 
  3403     0013                     	;# 
  3404     0014                     	;# 
  3405     0015                     	;# 
  3406     0016                     	;# 
  3407     0017                     	;# 
  3408     0018                     	;# 
  3409     0019                     	;# 
  3410     001A                     	;# 
  3411     001C                     	;# 
  3412     001C                     	;# 
  3413     001D                     	;# 
  3414     001D                     	;# 
  3415     001E                     	;# 
  3416     001F                     	;# 
  3417     008C                     	;# 
  3418     008C                     	;# 
  3419     008D                     	;# 
  3420     008E                     	;# 
  3421     008E                     	;# 
  3422     008F                     	;# 
  3423     0090                     	;# 
  3424     0090                     	;# 
  3425     0091                     	;# 
  3426     0093                     	;# 
  3427     0094                     	;# 
  3428     0095                     	;# 
  3429     0096                     	;# 
  3430     0097                     	;# 
  3431     0098                     	;# 
  3432     0099                     	;# 
  3433     009A                     	;# 
  3434     009B                     	;# 
  3435     009C                     	;# 
  3436     009D                     	;# 
  3437     009E                     	;# 
  3438     010C                     	;# 
  3439     010D                     	;# 
  3440     010E                     	;# 
  3441     010E                     	;# 
  3442     010F                     	;# 
  3443     0110                     	;# 
  3444     0110                     	;# 
  3445     0111                     	;# 
  3446     0112                     	;# 
  3447     0112                     	;# 
  3448     0113                     	;# 
  3449     0114                     	;# 
  3450     0114                     	;# 
  3451     0115                     	;# 
  3452     0116                     	;# 
  3453     0116                     	;# 
  3454     0117                     	;# 
  3455     0119                     	;# 
  3456     0119                     	;# 
  3457     0119                     	;# 
  3458     011A                     	;# 
  3459     011A                     	;# 
  3460     011A                     	;# 
  3461     011B                     	;# 
  3462     011B                     	;# 
  3463     011B                     	;# 
  3464     011B                     	;# 
  3465     011B                     	;# 
  3466     011C                     	;# 
  3467     011C                     	;# 
  3468     011C                     	;# 
  3469     011D                     	;# 
  3470     011D                     	;# 
  3471     011D                     	;# 
  3472     011E                     	;# 
  3473     011E                     	;# 
  3474     011E                     	;# 
  3475     011F                     	;# 
  3476     011F                     	;# 
  3477     011F                     	;# 
  3478     011F                     	;# 
  3479     011F                     	;# 
  3480     018C                     	;# 
  3481     018D                     	;# 
  3482     018E                     	;# 
  3483     018F                     	;# 
  3484     0190                     	;# 
  3485     0191                     	;# 
  3486     0192                     	;# 
  3487     0196                     	;# 
  3488     0197                     	;# 
  3489     0198                     	;# 
  3490     0199                     	;# 
  3491     019A                     	;# 
  3492     019B                     	;# 
  3493     019C                     	;# 
  3494     020C                     	;# 
  3495     020C                     	;# 
  3496     020D                     	;# 
  3497     020E                     	;# 
  3498     020F                     	;# 
  3499     020F                     	;# 
  3500     0210                     	;# 
  3501     0210                     	;# 
  3502     0211                     	;# 
  3503     0211                     	;# 
  3504     0212                     	;# 
  3505     0212                     	;# 
  3506     0213                     	;# 
  3507     0214                     	;# 
  3508     0215                     	;# 
  3509     0215                     	;# 
  3510     0216                     	;# 
  3511     0216                     	;# 
  3512     0217                     	;# 
  3513     0217                     	;# 
  3514     0218                     	;# 
  3515     0218                     	;# 
  3516     0219                     	;# 
  3517     021A                     	;# 
  3518     021B                     	;# 
  3519     021B                     	;# 
  3520     021C                     	;# 
  3521     021C                     	;# 
  3522     021D                     	;# 
  3523     021D                     	;# 
  3524     021E                     	;# 
  3525     021F                     	;# 
  3526     028C                     	;# 
  3527     028C                     	;# 
  3528     028D                     	;# 
  3529     028D                     	;# 
  3530     028E                     	;# 
  3531     028F                     	;# 
  3532     0290                     	;# 
  3533     0290                     	;# 
  3534     0291                     	;# 
  3535     0292                     	;# 
  3536     0292                     	;# 
  3537     0293                     	;# 
  3538     0293                     	;# 
  3539     0294                     	;# 
  3540     0295                     	;# 
  3541     0296                     	;# 
  3542     0296                     	;# 
  3543     0297                     	;# 
  3544     0298                     	;# 
  3545     0298                     	;# 
  3546     0299                     	;# 
  3547     0299                     	;# 
  3548     029A                     	;# 
  3549     029B                     	;# 
  3550     029C                     	;# 
  3551     029C                     	;# 
  3552     029D                     	;# 
  3553     030C                     	;# 
  3554     030C                     	;# 
  3555     030D                     	;# 
  3556     030E                     	;# 
  3557     030F                     	;# 
  3558     0310                     	;# 
  3559     0310                     	;# 
  3560     0311                     	;# 
  3561     0312                     	;# 
  3562     0313                     	;# 
  3563     0314                     	;# 
  3564     0314                     	;# 
  3565     0315                     	;# 
  3566     0316                     	;# 
  3567     0317                     	;# 
  3568     0318                     	;# 
  3569     0318                     	;# 
  3570     0319                     	;# 
  3571     031A                     	;# 
  3572     031B                     	;# 
  3573     031C                     	;# 
  3574     031C                     	;# 
  3575     031D                     	;# 
  3576     031E                     	;# 
  3577     031F                     	;# 
  3578     038C                     	;# 
  3579     038C                     	;# 
  3580     038D                     	;# 
  3581     038E                     	;# 
  3582     0390                     	;# 
  3583     0390                     	;# 
  3584     0391                     	;# 
  3585     0392                     	;# 
  3586     040C                     	;# 
  3587     040D                     	;# 
  3588     040E                     	;# 
  3589     040F                     	;# 
  3590     0410                     	;# 
  3591     0411                     	;# 
  3592     0416                     	;# 
  3593     0416                     	;# 
  3594     0417                     	;# 
  3595     0418                     	;# 
  3596     0418                     	;# 
  3597     0419                     	;# 
  3598     041A                     	;# 
  3599     041A                     	;# 
  3600     041B                     	;# 
  3601     041C                     	;# 
  3602     041C                     	;# 
  3603     041D                     	;# 
  3604     041E                     	;# 
  3605     041F                     	;# 
  3606     048C                     	;# 
  3607     048C                     	;# 
  3608     048D                     	;# 
  3609     048E                     	;# 
  3610     048F                     	;# 
  3611     048F                     	;# 
  3612     0490                     	;# 
  3613     0491                     	;# 
  3614     0492                     	;# 
  3615     0492                     	;# 
  3616     0493                     	;# 
  3617     0494                     	;# 
  3618     0495                     	;# 
  3619     0495                     	;# 
  3620     0496                     	;# 
  3621     0497                     	;# 
  3622     0498                     	;# 
  3623     0499                     	;# 
  3624     049A                     	;# 
  3625     049B                     	;# 
  3626     049C                     	;# 
  3627     049D                     	;# 
  3628     050C                     	;# 
  3629     050C                     	;# 
  3630     050D                     	;# 
  3631     050E                     	;# 
  3632     050F                     	;# 
  3633     050F                     	;# 
  3634     0510                     	;# 
  3635     0511                     	;# 
  3636     0512                     	;# 
  3637     0512                     	;# 
  3638     0513                     	;# 
  3639     0514                     	;# 
  3640     0515                     	;# 
  3641     0515                     	;# 
  3642     0516                     	;# 
  3643     0517                     	;# 
  3644     0518                     	;# 
  3645     0519                     	;# 
  3646     051A                     	;# 
  3647     051B                     	;# 
  3648     051C                     	;# 
  3649     051D                     	;# 
  3650     058C                     	;# 
  3651     058C                     	;# 
  3652     058D                     	;# 
  3653     058E                     	;# 
  3654     058F                     	;# 
  3655     058F                     	;# 
  3656     0590                     	;# 
  3657     0591                     	;# 
  3658     0592                     	;# 
  3659     0593                     	;# 
  3660     060C                     	;# 
  3661     060D                     	;# 
  3662     060E                     	;# 
  3663     060F                     	;# 
  3664     0610                     	;# 
  3665     0611                     	;# 
  3666     0612                     	;# 
  3667     0613                     	;# 
  3668     0614                     	;# 
  3669     0616                     	;# 
  3670     0617                     	;# 
  3671     0618                     	;# 
  3672     0619                     	;# 
  3673     061A                     	;# 
  3674     061B                     	;# 
  3675     061C                     	;# 
  3676     061D                     	;# 
  3677     061E                     	;# 
  3678     068C                     	;# 
  3679     068D                     	;# 
  3680     068E                     	;# 
  3681     068F                     	;# 
  3682     0690                     	;# 
  3683     0691                     	;# 
  3684     0692                     	;# 
  3685     0693                     	;# 
  3686     0694                     	;# 
  3687     070C                     	;# 
  3688     070D                     	;# 
  3689     070E                     	;# 
  3690     070F                     	;# 
  3691     0710                     	;# 
  3692     0711                     	;# 
  3693     0712                     	;# 
  3694     0713                     	;# 
  3695     0714                     	;# 
  3696     0716                     	;# 
  3697     0717                     	;# 
  3698     0718                     	;# 
  3699     0719                     	;# 
  3700     071A                     	;# 
  3701     071B                     	;# 
  3702     071C                     	;# 
  3703     071D                     	;# 
  3704     071E                     	;# 
  3705     0796                     	;# 
  3706     0797                     	;# 
  3707     0798                     	;# 
  3708     0799                     	;# 
  3709     079A                     	;# 
  3710     079B                     	;# 
  3711     080C                     	;# 
  3712     080D                     	;# 
  3713     080E                     	;# 
  3714     080F                     	;# 
  3715     0810                     	;# 
  3716     0811                     	;# 
  3717     0812                     	;# 
  3718     0813                     	;# 
  3719     0814                     	;# 
  3720     081A                     	;# 
  3721     081B                     	;# 
  3722     081C                     	;# 
  3723     081D                     	;# 
  3724     081E                     	;# 
  3725     081F                     	;# 
  3726     088C                     	;# 
  3727     088D                     	;# 
  3728     088E                     	;# 
  3729     088F                     	;# 
  3730     0890                     	;# 
  3731     0891                     	;# 
  3732     0892                     	;# 
  3733     0893                     	;# 
  3734     0895                     	;# 
  3735     0896                     	;# 
  3736     0897                     	;# 
  3737     0898                     	;# 
  3738     0899                     	;# 
  3739     089A                     	;# 
  3740     089B                     	;# 
  3741     090C                     	;# 
  3742     090E                     	;# 
  3743     090F                     	;# 
  3744     091F                     	;# 
  3745     091F                     	;# 
  3746     098F                     	;# 
  3747     098F                     	;# 
  3748     0990                     	;# 
  3749     0991                     	;# 
  3750     0992                     	;# 
  3751     0993                     	;# 
  3752     0994                     	;# 
  3753     0995                     	;# 
  3754     0996                     	;# 
  3755     0997                     	;# 
  3756     0E0F                     	;# 
  3757     0E10                     	;# 
  3758     0E11                     	;# 
  3759     0E12                     	;# 
  3760     0E13                     	;# 
  3761     0E14                     	;# 
  3762     0E15                     	;# 
  3763     0E16                     	;# 
  3764     0E17                     	;# 
  3765     0E18                     	;# 
  3766     0E19                     	;# 
  3767     0E1A                     	;# 
  3768     0E1B                     	;# 
  3769     0E1C                     	;# 
  3770     0E1D                     	;# 
  3771     0E1E                     	;# 
  3772     0E1F                     	;# 
  3773     0E20                     	;# 
  3774     0E21                     	;# 
  3775     0E22                     	;# 
  3776     0E23                     	;# 
  3777     0E24                     	;# 
  3778     0E25                     	;# 
  3779     0E26                     	;# 
  3780     0E27                     	;# 
  3781     0E28                     	;# 
  3782     0E29                     	;# 
  3783     0E2A                     	;# 
  3784     0E2B                     	;# 
  3785     0E2C                     	;# 
  3786     0E2D                     	;# 
  3787     0E2E                     	;# 
  3788     0E2F                     	;# 
  3789     0E30                     	;# 
  3790     0E31                     	;# 
  3791     0E32                     	;# 
  3792     0E33                     	;# 
  3793     0E34                     	;# 
  3794     0E35                     	;# 
  3795     0E36                     	;# 
  3796     0E37                     	;# 
  3797     0E8F                     	;# 
  3798     0E90                     	;# 
  3799     0E91                     	;# 
  3800     0E92                     	;# 
  3801     0E93                     	;# 
  3802     0E94                     	;# 
  3803     0E95                     	;# 
  3804     0E96                     	;# 
  3805     0E97                     	;# 
  3806     0E9C                     	;# 
  3807     0E9D                     	;# 
  3808     0E9E                     	;# 
  3809     0EA1                     	;# 
  3810     0EA2                     	;# 
  3811     0EA3                     	;# 
  3812     0EA4                     	;# 
  3813     0EA5                     	;# 
  3814     0EA9                     	;# 
  3815     0EAA                     	;# 
  3816     0EAB                     	;# 
  3817     0EAC                     	;# 
  3818     0EB1                     	;# 
  3819     0EB2                     	;# 
  3820     0EB3                     	;# 
  3821     0EB8                     	;# 
  3822     0EB9                     	;# 
  3823     0EBA                     	;# 
  3824     0EBB                     	;# 
  3825     0EBC                     	;# 
  3826     0EBD                     	;# 
  3827     0EBE                     	;# 
  3828     0EC3                     	;# 
  3829     0EC5                     	;# 
  3830     0EC6                     	;# 
  3831     0EC7                     	;# 
  3832     0EC8                     	;# 
  3833     0EC9                     	;# 
  3834     0ECA                     	;# 
  3835     0ECB                     	;# 
  3836     0ECC                     	;# 
  3837     0F10                     	;# 
  3838     0F11                     	;# 
  3839     0F12                     	;# 
  3840     0F13                     	;# 
  3841     0F14                     	;# 
  3842     0F15                     	;# 
  3843     0F16                     	;# 
  3844     0F17                     	;# 
  3845     0F18                     	;# 
  3846     0F19                     	;# 
  3847     0F1A                     	;# 
  3848     0F1B                     	;# 
  3849     0F1C                     	;# 
  3850     0F1D                     	;# 
  3851     0F1E                     	;# 
  3852     0F1F                     	;# 
  3853     0F20                     	;# 
  3854     0F21                     	;# 
  3855     0F22                     	;# 
  3856     0F23                     	;# 
  3857     0F24                     	;# 
  3858     0F25                     	;# 
  3859     0F26                     	;# 
  3860     0F27                     	;# 
  3861     0F28                     	;# 
  3862     0F29                     	;# 
  3863     0F2A                     	;# 
  3864     0F2B                     	;# 
  3865     0F2C                     	;# 
  3866     0F2D                     	;# 
  3867     0F2E                     	;# 
  3868     0F2F                     	;# 
  3869     0F30                     	;# 
  3870     0F31                     	;# 
  3871     0F32                     	;# 
  3872     0F38                     	;# 
  3873     0F39                     	;# 
  3874     0F3A                     	;# 
  3875     0F3B                     	;# 
  3876     0F3C                     	;# 
  3877     0F3D                     	;# 
  3878     0F3E                     	;# 
  3879     0F3F                     	;# 
  3880     0F40                     	;# 
  3881     0F41                     	;# 
  3882     0F43                     	;# 
  3883     0F44                     	;# 
  3884     0F45                     	;# 
  3885     0F46                     	;# 
  3886     0F47                     	;# 
  3887     0F48                     	;# 
  3888     0F49                     	;# 
  3889     0F4A                     	;# 
  3890     0F4B                     	;# 
  3891     0F4C                     	;# 
  3892     0F4E                     	;# 
  3893     0F4F                     	;# 
  3894     0F50                     	;# 
  3895     0F51                     	;# 
  3896     0F52                     	;# 
  3897     0F53                     	;# 
  3898     0F54                     	;# 
  3899     0F55                     	;# 
  3900     0F56                     	;# 
  3901     0F57                     	;# 
  3902     0F59                     	;# 
  3903     0F5A                     	;# 
  3904     0F5B                     	;# 
  3905     0F5C                     	;# 
  3906     0F5D                     	;# 
  3907     0F61                     	;# 
  3908     0F62                     	;# 
  3909     0F64                     	;# 
  3910     0F65                     	;# 
  3911     0F66                     	;# 
  3912     0F67                     	;# 
  3913     0F68                     	;# 
  3914     0F69                     	;# 
  3915     0F6A                     	;# 
  3916     0F6B                     	;# 
  3917     0F6C                     	;# 
  3918     0F6D                     	;# 
  3919     0FE4                     	;# 
  3920     0FE5                     	;# 
  3921     0FE6                     	;# 
  3922     0FE7                     	;# 
  3923     0FE8                     	;# 
  3924     0FE9                     	;# 
  3925     0FEA                     	;# 
  3926     0FEB                     	;# 
  3927     0FED                     	;# 
  3928     0FEE                     	;# 
  3929     0FEF                     	;# 
  3930     0000                     	;# 
  3931     0001                     	;# 
  3932     0002                     	;# 
  3933     0003                     	;# 
  3934     0004                     	;# 
  3935     0005                     	;# 
  3936     0006                     	;# 
  3937     0007                     	;# 
  3938     0008                     	;# 
  3939     0009                     	;# 
  3940     000A                     	;# 
  3941     000B                     	;# 
  3942     000C                     	;# 
  3943     000D                     	;# 
  3944     000E                     	;# 
  3945     000F                     	;# 
  3946     0010                     	;# 
  3947     0011                     	;# 
  3948     0012                     	;# 
  3949     0013                     	;# 
  3950     0014                     	;# 
  3951     0015                     	;# 
  3952     0016                     	;# 
  3953     0017                     	;# 
  3954     0018                     	;# 
  3955     0019                     	;# 
  3956     001A                     	;# 
  3957     001C                     	;# 
  3958     001C                     	;# 
  3959     001D                     	;# 
  3960     001D                     	;# 
  3961     001E                     	;# 
  3962     001F                     	;# 
  3963     008C                     	;# 
  3964     008C                     	;# 
  3965     008D                     	;# 
  3966     008E                     	;# 
  3967     008E                     	;# 
  3968     008F                     	;# 
  3969     0090                     	;# 
  3970     0090                     	;# 
  3971     0091                     	;# 
  3972     0093                     	;# 
  3973     0094                     	;# 
  3974     0095                     	;# 
  3975     0096                     	;# 
  3976     0097                     	;# 
  3977     0098                     	;# 
  3978     0099                     	;# 
  3979     009A                     	;# 
  3980     009B                     	;# 
  3981     009C                     	;# 
  3982     009D                     	;# 
  3983     009E                     	;# 
  3984     010C                     	;# 
  3985     010D                     	;# 
  3986     010E                     	;# 
  3987     010E                     	;# 
  3988     010F                     	;# 
  3989     0110                     	;# 
  3990     0110                     	;# 
  3991     0111                     	;# 
  3992     0112                     	;# 
  3993     0112                     	;# 
  3994     0113                     	;# 
  3995     0114                     	;# 
  3996     0114                     	;# 
  3997     0115                     	;# 
  3998     0116                     	;# 
  3999     0116                     	;# 
  4000     0117                     	;# 
  4001     0119                     	;# 
  4002     0119                     	;# 
  4003     0119                     	;# 
  4004     011A                     	;# 
  4005     011A                     	;# 
  4006     011A                     	;# 
  4007     011B                     	;# 
  4008     011B                     	;# 
  4009     011B                     	;# 
  4010     011B                     	;# 
  4011     011B                     	;# 
  4012     011C                     	;# 
  4013     011C                     	;# 
  4014     011C                     	;# 
  4015     011D                     	;# 
  4016     011D                     	;# 
  4017     011D                     	;# 
  4018     011E                     	;# 
  4019     011E                     	;# 
  4020     011E                     	;# 
  4021     011F                     	;# 
  4022     011F                     	;# 
  4023     011F                     	;# 
  4024     011F                     	;# 
  4025     011F                     	;# 
  4026     018C                     	;# 
  4027     018D                     	;# 
  4028     018E                     	;# 
  4029     018F                     	;# 
  4030     0190                     	;# 
  4031     0191                     	;# 
  4032     0192                     	;# 
  4033     0196                     	;# 
  4034     0197                     	;# 
  4035     0198                     	;# 
  4036     0199                     	;# 
  4037     019A                     	;# 
  4038     019B                     	;# 
  4039     019C                     	;# 
  4040     020C                     	;# 
  4041     020C                     	;# 
  4042     020D                     	;# 
  4043     020E                     	;# 
  4044     020F                     	;# 
  4045     020F                     	;# 
  4046     0210                     	;# 
  4047     0210                     	;# 
  4048     0211                     	;# 
  4049     0211                     	;# 
  4050     0212                     	;# 
  4051     0212                     	;# 
  4052     0213                     	;# 
  4053     0214                     	;# 
  4054     0215                     	;# 
  4055     0215                     	;# 
  4056     0216                     	;# 
  4057     0216                     	;# 
  4058     0217                     	;# 
  4059     0217                     	;# 
  4060     0218                     	;# 
  4061     0218                     	;# 
  4062     0219                     	;# 
  4063     021A                     	;# 
  4064     021B                     	;# 
  4065     021B                     	;# 
  4066     021C                     	;# 
  4067     021C                     	;# 
  4068     021D                     	;# 
  4069     021D                     	;# 
  4070     021E                     	;# 
  4071     021F                     	;# 
  4072     028C                     	;# 
  4073     028C                     	;# 
  4074     028D                     	;# 
  4075     028D                     	;# 
  4076     028E                     	;# 
  4077     028F                     	;# 
  4078     0290                     	;# 
  4079     0290                     	;# 
  4080     0291                     	;# 
  4081     0292                     	;# 
  4082     0292                     	;# 
  4083     0293                     	;# 
  4084     0293                     	;# 
  4085     0294                     	;# 
  4086     0295                     	;# 
  4087     0296                     	;# 
  4088     0296                     	;# 
  4089     0297                     	;# 
  4090     0298                     	;# 
  4091     0298                     	;# 
  4092     0299                     	;# 
  4093     0299                     	;# 
  4094     029A                     	;# 
  4095     029B                     	;# 
  4096     029C                     	;# 
  4097     029C                     	;# 
  4098     029D                     	;# 
  4099     030C                     	;# 
  4100     030C                     	;# 
  4101     030D                     	;# 
  4102     030E                     	;# 
  4103     030F                     	;# 
  4104     0310                     	;# 
  4105     0310                     	;# 
  4106     0311                     	;# 
  4107     0312                     	;# 
  4108     0313                     	;# 
  4109     0314                     	;# 
  4110     0314                     	;# 
  4111     0315                     	;# 
  4112     0316                     	;# 
  4113     0317                     	;# 
  4114     0318                     	;# 
  4115     0318                     	;# 
  4116     0319                     	;# 
  4117     031A                     	;# 
  4118     031B                     	;# 
  4119     031C                     	;# 
  4120     031C                     	;# 
  4121     031D                     	;# 
  4122     031E                     	;# 
  4123     031F                     	;# 
  4124     038C                     	;# 
  4125     038C                     	;# 
  4126     038D                     	;# 
  4127     038E                     	;# 
  4128     0390                     	;# 
  4129     0390                     	;# 
  4130     0391                     	;# 
  4131     0392                     	;# 
  4132     040C                     	;# 
  4133     040D                     	;# 
  4134     040E                     	;# 
  4135     040F                     	;# 
  4136     0410                     	;# 
  4137     0411                     	;# 
  4138     0416                     	;# 
  4139     0416                     	;# 
  4140     0417                     	;# 
  4141     0418                     	;# 
  4142     0418                     	;# 
  4143     0419                     	;# 
  4144     041A                     	;# 
  4145     041A                     	;# 
  4146     041B                     	;# 
  4147     041C                     	;# 
  4148     041C                     	;# 
  4149     041D                     	;# 
  4150     041E                     	;# 
  4151     041F                     	;# 
  4152     048C                     	;# 
  4153     048C                     	;# 
  4154     048D                     	;# 
  4155     048E                     	;# 
  4156     048F                     	;# 
  4157     048F                     	;# 
  4158     0490                     	;# 
  4159     0491                     	;# 
  4160     0492                     	;# 
  4161     0492                     	;# 
  4162     0493                     	;# 
  4163     0494                     	;# 
  4164     0495                     	;# 
  4165     0495                     	;# 
  4166     0496                     	;# 
  4167     0497                     	;# 
  4168     0498                     	;# 
  4169     0499                     	;# 
  4170     049A                     	;# 
  4171     049B                     	;# 
  4172     049C                     	;# 
  4173     049D                     	;# 
  4174     050C                     	;# 
  4175     050C                     	;# 
  4176     050D                     	;# 
  4177     050E                     	;# 
  4178     050F                     	;# 
  4179     050F                     	;# 
  4180     0510                     	;# 
  4181     0511                     	;# 
  4182     0512                     	;# 
  4183     0512                     	;# 
  4184     0513                     	;# 
  4185     0514                     	;# 
  4186     0515                     	;# 
  4187     0515                     	;# 
  4188     0516                     	;# 
  4189     0517                     	;# 
  4190     0518                     	;# 
  4191     0519                     	;# 
  4192     051A                     	;# 
  4193     051B                     	;# 
  4194     051C                     	;# 
  4195     051D                     	;# 
  4196     058C                     	;# 
  4197     058C                     	;# 
  4198     058D                     	;# 
  4199     058E                     	;# 
  4200     058F                     	;# 
  4201     058F                     	;# 
  4202     0590                     	;# 
  4203     0591                     	;# 
  4204     0592                     	;# 
  4205     0593                     	;# 
  4206     060C                     	;# 
  4207     060D                     	;# 
  4208     060E                     	;# 
  4209     060F                     	;# 
  4210     0610                     	;# 
  4211     0611                     	;# 
  4212     0612                     	;# 
  4213     0613                     	;# 
  4214     0614                     	;# 
  4215     0616                     	;# 
  4216     0617                     	;# 
  4217     0618                     	;# 
  4218     0619                     	;# 
  4219     061A                     	;# 
  4220     061B                     	;# 
  4221     061C                     	;# 
  4222     061D                     	;# 
  4223     061E                     	;# 
  4224     068C                     	;# 
  4225     068D                     	;# 
  4226     068E                     	;# 
  4227     068F                     	;# 
  4228     0690                     	;# 
  4229     0691                     	;# 
  4230     0692                     	;# 
  4231     0693                     	;# 
  4232     0694                     	;# 
  4233     070C                     	;# 
  4234     070D                     	;# 
  4235     070E                     	;# 
  4236     070F                     	;# 
  4237     0710                     	;# 
  4238     0711                     	;# 
  4239     0712                     	;# 
  4240     0713                     	;# 
  4241     0714                     	;# 
  4242     0716                     	;# 
  4243     0717                     	;# 
  4244     0718                     	;# 
  4245     0719                     	;# 
  4246     071A                     	;# 
  4247     071B                     	;# 
  4248     071C                     	;# 
  4249     071D                     	;# 
  4250     071E                     	;# 
  4251     0796                     	;# 
  4252     0797                     	;# 
  4253     0798                     	;# 
  4254     0799                     	;# 
  4255     079A                     	;# 
  4256     079B                     	;# 
  4257     080C                     	;# 
  4258     080D                     	;# 
  4259     080E                     	;# 
  4260     080F                     	;# 
  4261     0810                     	;# 
  4262     0811                     	;# 
  4263     0812                     	;# 
  4264     0813                     	;# 
  4265     0814                     	;# 
  4266     081A                     	;# 
  4267     081B                     	;# 
  4268     081C                     	;# 
  4269     081D                     	;# 
  4270     081E                     	;# 
  4271     081F                     	;# 
  4272     088C                     	;# 
  4273     088D                     	;# 
  4274     088E                     	;# 
  4275     088F                     	;# 
  4276     0890                     	;# 
  4277     0891                     	;# 
  4278     0892                     	;# 
  4279     0893                     	;# 
  4280     0895                     	;# 
  4281     0896                     	;# 
  4282     0897                     	;# 
  4283     0898                     	;# 
  4284     0899                     	;# 
  4285     089A                     	;# 
  4286     089B                     	;# 
  4287     090C                     	;# 
  4288     090E                     	;# 
  4289     090F                     	;# 
  4290     091F                     	;# 
  4291     091F                     	;# 
  4292     098F                     	;# 
  4293     098F                     	;# 
  4294     0990                     	;# 
  4295     0991                     	;# 
  4296     0992                     	;# 
  4297     0993                     	;# 
  4298     0994                     	;# 
  4299     0995                     	;# 
  4300     0996                     	;# 
  4301     0997                     	;# 
  4302     0E0F                     	;# 
  4303     0E10                     	;# 
  4304     0E11                     	;# 
  4305     0E12                     	;# 
  4306     0E13                     	;# 
  4307     0E14                     	;# 
  4308     0E15                     	;# 
  4309     0E16                     	;# 
  4310     0E17                     	;# 
  4311     0E18                     	;# 
  4312     0E19                     	;# 
  4313     0E1A                     	;# 
  4314     0E1B                     	;# 
  4315     0E1C                     	;# 
  4316     0E1D                     	;# 
  4317     0E1E                     	;# 
  4318     0E1F                     	;# 
  4319     0E20                     	;# 
  4320     0E21                     	;# 
  4321     0E22                     	;# 
  4322     0E23                     	;# 
  4323     0E24                     	;# 
  4324     0E25                     	;# 
  4325     0E26                     	;# 
  4326     0E27                     	;# 
  4327     0E28                     	;# 
  4328     0E29                     	;# 
  4329     0E2A                     	;# 
  4330     0E2B                     	;# 
  4331     0E2C                     	;# 
  4332     0E2D                     	;# 
  4333     0E2E                     	;# 
  4334     0E2F                     	;# 
  4335     0E30                     	;# 
  4336     0E31                     	;# 
  4337     0E32                     	;# 
  4338     0E33                     	;# 
  4339     0E34                     	;# 
  4340     0E35                     	;# 
  4341     0E36                     	;# 
  4342     0E37                     	;# 
  4343     0E8F                     	;# 
  4344     0E90                     	;# 
  4345     0E91                     	;# 
  4346     0E92                     	;# 
  4347     0E93                     	;# 
  4348     0E94                     	;# 
  4349     0E95                     	;# 
  4350     0E96                     	;# 
  4351     0E97                     	;# 
  4352     0E9C                     	;# 
  4353     0E9D                     	;# 
  4354     0E9E                     	;# 
  4355     0EA1                     	;# 
  4356     0EA2                     	;# 
  4357     0EA3                     	;# 
  4358     0EA4                     	;# 
  4359     0EA5                     	;# 
  4360     0EA9                     	;# 
  4361     0EAA                     	;# 
  4362     0EAB                     	;# 
  4363     0EAC                     	;# 
  4364     0EB1                     	;# 
  4365     0EB2                     	;# 
  4366     0EB3                     	;# 
  4367     0EB8                     	;# 
  4368     0EB9                     	;# 
  4369     0EBA                     	;# 
  4370     0EBB                     	;# 
  4371     0EBC                     	;# 
  4372     0EBD                     	;# 
  4373     0EBE                     	;# 
  4374     0EC3                     	;# 
  4375     0EC5                     	;# 
  4376     0EC6                     	;# 
  4377     0EC7                     	;# 
  4378     0EC8                     	;# 
  4379     0EC9                     	;# 
  4380     0ECA                     	;# 
  4381     0ECB                     	;# 
  4382     0ECC                     	;# 
  4383     0F10                     	;# 
  4384     0F11                     	;# 
  4385     0F12                     	;# 
  4386     0F13                     	;# 
  4387     0F14                     	;# 
  4388     0F15                     	;# 
  4389     0F16                     	;# 
  4390     0F17                     	;# 
  4391     0F18                     	;# 
  4392     0F19                     	;# 
  4393     0F1A                     	;# 
  4394     0F1B                     	;# 
  4395     0F1C                     	;# 
  4396     0F1D                     	;# 
  4397     0F1E                     	;# 
  4398     0F1F                     	;# 
  4399     0F20                     	;# 
  4400     0F21                     	;# 
  4401     0F22                     	;# 
  4402     0F23                     	;# 
  4403     0F24                     	;# 
  4404     0F25                     	;# 
  4405     0F26                     	;# 
  4406     0F27                     	;# 
  4407     0F28                     	;# 
  4408     0F29                     	;# 
  4409     0F2A                     	;# 
  4410     0F2B                     	;# 
  4411     0F2C                     	;# 
  4412     0F2D                     	;# 
  4413     0F2E                     	;# 
  4414     0F2F                     	;# 
  4415     0F30                     	;# 
  4416     0F31                     	;# 
  4417     0F32                     	;# 
  4418     0F38                     	;# 
  4419     0F39                     	;# 
  4420     0F3A                     	;# 
  4421     0F3B                     	;# 
  4422     0F3C                     	;# 
  4423     0F3D                     	;# 
  4424     0F3E                     	;# 
  4425     0F3F                     	;# 
  4426     0F40                     	;# 
  4427     0F41                     	;# 
  4428     0F43                     	;# 
  4429     0F44                     	;# 
  4430     0F45                     	;# 
  4431     0F46                     	;# 
  4432     0F47                     	;# 
  4433     0F48                     	;# 
  4434     0F49                     	;# 
  4435     0F4A                     	;# 
  4436     0F4B                     	;# 
  4437     0F4C                     	;# 
  4438     0F4E                     	;# 
  4439     0F4F                     	;# 
  4440     0F50                     	;# 
  4441     0F51                     	;# 
  4442     0F52                     	;# 
  4443     0F53                     	;# 
  4444     0F54                     	;# 
  4445     0F55                     	;# 
  4446     0F56                     	;# 
  4447     0F57                     	;# 
  4448     0F59                     	;# 
  4449     0F5A                     	;# 
  4450     0F5B                     	;# 
  4451     0F5C                     	;# 
  4452     0F5D                     	;# 
  4453     0F61                     	;# 
  4454     0F62                     	;# 
  4455     0F64                     	;# 
  4456     0F65                     	;# 
  4457     0F66                     	;# 
  4458     0F67                     	;# 
  4459     0F68                     	;# 
  4460     0F69                     	;# 
  4461     0F6A                     	;# 
  4462     0F6B                     	;# 
  4463     0F6C                     	;# 
  4464     0F6D                     	;# 
  4465     0FE4                     	;# 
  4466     0FE5                     	;# 
  4467     0FE6                     	;# 
  4468     0FE7                     	;# 
  4469     0FE8                     	;# 
  4470     0FE9                     	;# 
  4471     0FEA                     	;# 
  4472     0FEB                     	;# 
  4473     0FED                     	;# 
  4474     0FEE                     	;# 
  4475     0FEF                     	;# 
  4476     0000                     	;# 
  4477     0001                     	;# 
  4478     0002                     	;# 
  4479     0003                     	;# 
  4480     0004                     	;# 
  4481     0005                     	;# 
  4482     0006                     	;# 
  4483     0007                     	;# 
  4484     0008                     	;# 
  4485     0009                     	;# 
  4486     000A                     	;# 
  4487     000B                     	;# 
  4488     000C                     	;# 
  4489     000D                     	;# 
  4490     000E                     	;# 
  4491     000F                     	;# 
  4492     0010                     	;# 
  4493     0011                     	;# 
  4494     0012                     	;# 
  4495     0013                     	;# 
  4496     0014                     	;# 
  4497     0015                     	;# 
  4498     0016                     	;# 
  4499     0017                     	;# 
  4500     0018                     	;# 
  4501     0019                     	;# 
  4502     001A                     	;# 
  4503     001C                     	;# 
  4504     001C                     	;# 
  4505     001D                     	;# 
  4506     001D                     	;# 
  4507     001E                     	;# 
  4508     001F                     	;# 
  4509     008C                     	;# 
  4510     008C                     	;# 
  4511     008D                     	;# 
  4512     008E                     	;# 
  4513     008E                     	;# 
  4514     008F                     	;# 
  4515     0090                     	;# 
  4516     0090                     	;# 
  4517     0091                     	;# 
  4518     0093                     	;# 
  4519     0094                     	;# 
  4520     0095                     	;# 
  4521     0096                     	;# 
  4522     0097                     	;# 
  4523     0098                     	;# 
  4524     0099                     	;# 
  4525     009A                     	;# 
  4526     009B                     	;# 
  4527     009C                     	;# 
  4528     009D                     	;# 
  4529     009E                     	;# 
  4530     010C                     	;# 
  4531     010D                     	;# 
  4532     010E                     	;# 
  4533     010E                     	;# 
  4534     010F                     	;# 
  4535     0110                     	;# 
  4536     0110                     	;# 
  4537     0111                     	;# 
  4538     0112                     	;# 
  4539     0112                     	;# 
  4540     0113                     	;# 
  4541     0114                     	;# 
  4542     0114                     	;# 
  4543     0115                     	;# 
  4544     0116                     	;# 
  4545     0116                     	;# 
  4546     0117                     	;# 
  4547     0119                     	;# 
  4548     0119                     	;# 
  4549     0119                     	;# 
  4550     011A                     	;# 
  4551     011A                     	;# 
  4552     011A                     	;# 
  4553     011B                     	;# 
  4554     011B                     	;# 
  4555     011B                     	;# 
  4556     011B                     	;# 
  4557     011B                     	;# 
  4558     011C                     	;# 
  4559     011C                     	;# 
  4560     011C                     	;# 
  4561     011D                     	;# 
  4562     011D                     	;# 
  4563     011D                     	;# 
  4564     011E                     	;# 
  4565     011E                     	;# 
  4566     011E                     	;# 
  4567     011F                     	;# 
  4568     011F                     	;# 
  4569     011F                     	;# 
  4570     011F                     	;# 
  4571     011F                     	;# 
  4572     018C                     	;# 
  4573     018D                     	;# 
  4574     018E                     	;# 
  4575     018F                     	;# 
  4576     0190                     	;# 
  4577     0191                     	;# 
  4578     0192                     	;# 
  4579     0196                     	;# 
  4580     0197                     	;# 
  4581     0198                     	;# 
  4582     0199                     	;# 
  4583     019A                     	;# 
  4584     019B                     	;# 
  4585     019C                     	;# 
  4586     020C                     	;# 
  4587     020C                     	;# 
  4588     020D                     	;# 
  4589     020E                     	;# 
  4590     020F                     	;# 
  4591     020F                     	;# 
  4592     0210                     	;# 
  4593     0210                     	;# 
  4594     0211                     	;# 
  4595     0211                     	;# 
  4596     0212                     	;# 
  4597     0212                     	;# 
  4598     0213                     	;# 
  4599     0214                     	;# 
  4600     0215                     	;# 
  4601     0215                     	;# 
  4602     0216                     	;# 
  4603     0216                     	;# 
  4604     0217                     	;# 
  4605     0217                     	;# 
  4606     0218                     	;# 
  4607     0218                     	;# 
  4608     0219                     	;# 
  4609     021A                     	;# 
  4610     021B                     	;# 
  4611     021B                     	;# 
  4612     021C                     	;# 
  4613     021C                     	;# 
  4614     021D                     	;# 
  4615     021D                     	;# 
  4616     021E                     	;# 
  4617     021F                     	;# 
  4618     028C                     	;# 
  4619     028C                     	;# 
  4620     028D                     	;# 
  4621     028D                     	;# 
  4622     028E                     	;# 
  4623     028F                     	;# 
  4624     0290                     	;# 
  4625     0290                     	;# 
  4626     0291                     	;# 
  4627     0292                     	;# 
  4628     0292                     	;# 
  4629     0293                     	;# 
  4630     0293                     	;# 
  4631     0294                     	;# 
  4632     0295                     	;# 
  4633     0296                     	;# 
  4634     0296                     	;# 
  4635     0297                     	;# 
  4636     0298                     	;# 
  4637     0298                     	;# 
  4638     0299                     	;# 
  4639     0299                     	;# 
  4640     029A                     	;# 
  4641     029B                     	;# 
  4642     029C                     	;# 
  4643     029C                     	;# 
  4644     029D                     	;# 
  4645     030C                     	;# 
  4646     030C                     	;# 
  4647     030D                     	;# 
  4648     030E                     	;# 
  4649     030F                     	;# 
  4650     0310                     	;# 
  4651     0310                     	;# 
  4652     0311                     	;# 
  4653     0312                     	;# 
  4654     0313                     	;# 
  4655     0314                     	;# 
  4656     0314                     	;# 
  4657     0315                     	;# 
  4658     0316                     	;# 
  4659     0317                     	;# 
  4660     0318                     	;# 
  4661     0318                     	;# 
  4662     0319                     	;# 
  4663     031A                     	;# 
  4664     031B                     	;# 
  4665     031C                     	;# 
  4666     031C                     	;# 
  4667     031D                     	;# 
  4668     031E                     	;# 
  4669     031F                     	;# 
  4670     038C                     	;# 
  4671     038C                     	;# 
  4672     038D                     	;# 
  4673     038E                     	;# 
  4674     0390                     	;# 
  4675     0390                     	;# 
  4676     0391                     	;# 
  4677     0392                     	;# 
  4678     040C                     	;# 
  4679     040D                     	;# 
  4680     040E                     	;# 
  4681     040F                     	;# 
  4682     0410                     	;# 
  4683     0411                     	;# 
  4684     0416                     	;# 
  4685     0416                     	;# 
  4686     0417                     	;# 
  4687     0418                     	;# 
  4688     0418                     	;# 
  4689     0419                     	;# 
  4690     041A                     	;# 
  4691     041A                     	;# 
  4692     041B                     	;# 
  4693     041C                     	;# 
  4694     041C                     	;# 
  4695     041D                     	;# 
  4696     041E                     	;# 
  4697     041F                     	;# 
  4698     048C                     	;# 
  4699     048C                     	;# 
  4700     048D                     	;# 
  4701     048E                     	;# 
  4702     048F                     	;# 
  4703     048F                     	;# 
  4704     0490                     	;# 
  4705     0491                     	;# 
  4706     0492                     	;# 
  4707     0492                     	;# 
  4708     0493                     	;# 
  4709     0494                     	;# 
  4710     0495                     	;# 
  4711     0495                     	;# 
  4712     0496                     	;# 
  4713     0497                     	;# 
  4714     0498                     	;# 
  4715     0499                     	;# 
  4716     049A                     	;# 
  4717     049B                     	;# 
  4718     049C                     	;# 
  4719     049D                     	;# 
  4720     050C                     	;# 
  4721     050C                     	;# 
  4722     050D                     	;# 
  4723     050E                     	;# 
  4724     050F                     	;# 
  4725     050F                     	;# 
  4726     0510                     	;# 
  4727     0511                     	;# 
  4728     0512                     	;# 
  4729     0512                     	;# 
  4730     0513                     	;# 
  4731     0514                     	;# 
  4732     0515                     	;# 
  4733     0515                     	;# 
  4734     0516                     	;# 
  4735     0517                     	;# 
  4736     0518                     	;# 
  4737     0519                     	;# 
  4738     051A                     	;# 
  4739     051B                     	;# 
  4740     051C                     	;# 
  4741     051D                     	;# 
  4742     058C                     	;# 
  4743     058C                     	;# 
  4744     058D                     	;# 
  4745     058E                     	;# 
  4746     058F                     	;# 
  4747     058F                     	;# 
  4748     0590                     	;# 
  4749     0591                     	;# 
  4750     0592                     	;# 
  4751     0593                     	;# 
  4752     060C                     	;# 
  4753     060D                     	;# 
  4754     060E                     	;# 
  4755     060F                     	;# 
  4756     0610                     	;# 
  4757     0611                     	;# 
  4758     0612                     	;# 
  4759     0613                     	;# 
  4760     0614                     	;# 
  4761     0616                     	;# 
  4762     0617                     	;# 
  4763     0618                     	;# 
  4764     0619                     	;# 
  4765     061A                     	;# 
  4766     061B                     	;# 
  4767     061C                     	;# 
  4768     061D                     	;# 
  4769     061E                     	;# 
  4770     068C                     	;# 
  4771     068D                     	;# 
  4772     068E                     	;# 
  4773     068F                     	;# 
  4774     0690                     	;# 
  4775     0691                     	;# 
  4776     0692                     	;# 
  4777     0693                     	;# 
  4778     0694                     	;# 
  4779     070C                     	;# 
  4780     070D                     	;# 
  4781     070E                     	;# 
  4782     070F                     	;# 
  4783     0710                     	;# 
  4784     0711                     	;# 
  4785     0712                     	;# 
  4786     0713                     	;# 
  4787     0714                     	;# 
  4788     0716                     	;# 
  4789     0717                     	;# 
  4790     0718                     	;# 
  4791     0719                     	;# 
  4792     071A                     	;# 
  4793     071B                     	;# 
  4794     071C                     	;# 
  4795     071D                     	;# 
  4796     071E                     	;# 
  4797     0796                     	;# 
  4798     0797                     	;# 
  4799     0798                     	;# 
  4800     0799                     	;# 
  4801     079A                     	;# 
  4802     079B                     	;# 
  4803     080C                     	;# 
  4804     080D                     	;# 
  4805     080E                     	;# 
  4806     080F                     	;# 
  4807     0810                     	;# 
  4808     0811                     	;# 
  4809     0812                     	;# 
  4810     0813                     	;# 
  4811     0814                     	;# 
  4812     081A                     	;# 
  4813     081B                     	;# 
  4814     081C                     	;# 
  4815     081D                     	;# 
  4816     081E                     	;# 
  4817     081F                     	;# 
  4818     088C                     	;# 
  4819     088D                     	;# 
  4820     088E                     	;# 
  4821     088F                     	;# 
  4822     0890                     	;# 
  4823     0891                     	;# 
  4824     0892                     	;# 
  4825     0893                     	;# 
  4826     0895                     	;# 
  4827     0896                     	;# 
  4828     0897                     	;# 
  4829     0898                     	;# 
  4830     0899                     	;# 
  4831     089A                     	;# 
  4832     089B                     	;# 
  4833     090C                     	;# 
  4834     090E                     	;# 
  4835     090F                     	;# 
  4836     091F                     	;# 
  4837     091F                     	;# 
  4838     098F                     	;# 
  4839     098F                     	;# 
  4840     0990                     	;# 
  4841     0991                     	;# 
  4842     0992                     	;# 
  4843     0993                     	;# 
  4844     0994                     	;# 
  4845     0995                     	;# 
  4846     0996                     	;# 
  4847     0997                     	;# 
  4848     0E0F                     	;# 
  4849     0E10                     	;# 
  4850     0E11                     	;# 
  4851     0E12                     	;# 
  4852     0E13                     	;# 
  4853     0E14                     	;# 
  4854     0E15                     	;# 
  4855     0E16                     	;# 
  4856     0E17                     	;# 
  4857     0E18                     	;# 
  4858     0E19                     	;# 
  4859     0E1A                     	;# 
  4860     0E1B                     	;# 
  4861     0E1C                     	;# 
  4862     0E1D                     	;# 
  4863     0E1E                     	;# 
  4864     0E1F                     	;# 
  4865     0E20                     	;# 
  4866     0E21                     	;# 
  4867     0E22                     	;# 
  4868     0E23                     	;# 
  4869     0E24                     	;# 
  4870     0E25                     	;# 
  4871     0E26                     	;# 
  4872     0E27                     	;# 
  4873     0E28                     	;# 
  4874     0E29                     	;# 
  4875     0E2A                     	;# 
  4876     0E2B                     	;# 
  4877     0E2C                     	;# 
  4878     0E2D                     	;# 
  4879     0E2E                     	;# 
  4880     0E2F                     	;# 
  4881     0E30                     	;# 
  4882     0E31                     	;# 
  4883     0E32                     	;# 
  4884     0E33                     	;# 
  4885     0E34                     	;# 
  4886     0E35                     	;# 
  4887     0E36                     	;# 
  4888     0E37                     	;# 
  4889     0E8F                     	;# 
  4890     0E90                     	;# 
  4891     0E91                     	;# 
  4892     0E92                     	;# 
  4893     0E93                     	;# 
  4894     0E94                     	;# 
  4895     0E95                     	;# 
  4896     0E96                     	;# 
  4897     0E97                     	;# 
  4898     0E9C                     	;# 
  4899     0E9D                     	;# 
  4900     0E9E                     	;# 
  4901     0EA1                     	;# 
  4902     0EA2                     	;# 
  4903     0EA3                     	;# 
  4904     0EA4                     	;# 
  4905     0EA5                     	;# 
  4906     0EA9                     	;# 
  4907     0EAA                     	;# 
  4908     0EAB                     	;# 
  4909     0EAC                     	;# 
  4910     0EB1                     	;# 
  4911     0EB2                     	;# 
  4912     0EB3                     	;# 
  4913     0EB8                     	;# 
  4914     0EB9                     	;# 
  4915     0EBA                     	;# 
  4916     0EBB                     	;# 
  4917     0EBC                     	;# 
  4918     0EBD                     	;# 
  4919     0EBE                     	;# 
  4920     0EC3                     	;# 
  4921     0EC5                     	;# 
  4922     0EC6                     	;# 
  4923     0EC7                     	;# 
  4924     0EC8                     	;# 
  4925     0EC9                     	;# 
  4926     0ECA                     	;# 
  4927     0ECB                     	;# 
  4928     0ECC                     	;# 
  4929     0F10                     	;# 
  4930     0F11                     	;# 
  4931     0F12                     	;# 
  4932     0F13                     	;# 
  4933     0F14                     	;# 
  4934     0F15                     	;# 
  4935     0F16                     	;# 
  4936     0F17                     	;# 
  4937     0F18                     	;# 
  4938     0F19                     	;# 
  4939     0F1A                     	;# 
  4940     0F1B                     	;# 
  4941     0F1C                     	;# 
  4942     0F1D                     	;# 
  4943     0F1E                     	;# 
  4944     0F1F                     	;# 
  4945     0F20                     	;# 
  4946     0F21                     	;# 
  4947     0F22                     	;# 
  4948     0F23                     	;# 
  4949     0F24                     	;# 
  4950     0F25                     	;# 
  4951     0F26                     	;# 
  4952     0F27                     	;# 
  4953     0F28                     	;# 
  4954     0F29                     	;# 
  4955     0F2A                     	;# 
  4956     0F2B                     	;# 
  4957     0F2C                     	;# 
  4958     0F2D                     	;# 
  4959     0F2E                     	;# 
  4960     0F2F                     	;# 
  4961     0F30                     	;# 
  4962     0F31                     	;# 
  4963     0F32                     	;# 
  4964     0F38                     	;# 
  4965     0F39                     	;# 
  4966     0F3A                     	;# 
  4967     0F3B                     	;# 
  4968     0F3C                     	;# 
  4969     0F3D                     	;# 
  4970     0F3E                     	;# 
  4971     0F3F                     	;# 
  4972     0F40                     	;# 
  4973     0F41                     	;# 
  4974     0F43                     	;# 
  4975     0F44                     	;# 
  4976     0F45                     	;# 
  4977     0F46                     	;# 
  4978     0F47                     	;# 
  4979     0F48                     	;# 
  4980     0F49                     	;# 
  4981     0F4A                     	;# 
  4982     0F4B                     	;# 
  4983     0F4C                     	;# 
  4984     0F4E                     	;# 
  4985     0F4F                     	;# 
  4986     0F50                     	;# 
  4987     0F51                     	;# 
  4988     0F52                     	;# 
  4989     0F53                     	;# 
  4990     0F54                     	;# 
  4991     0F55                     	;# 
  4992     0F56                     	;# 
  4993     0F57                     	;# 
  4994     0F59                     	;# 
  4995     0F5A                     	;# 
  4996     0F5B                     	;# 
  4997     0F5C                     	;# 
  4998     0F5D                     	;# 
  4999     0F61                     	;# 
  5000     0F62                     	;# 
  5001     0F64                     	;# 
  5002     0F65                     	;# 
  5003     0F66                     	;# 
  5004     0F67                     	;# 
  5005     0F68                     	;# 
  5006     0F69                     	;# 
  5007     0F6A                     	;# 
  5008     0F6B                     	;# 
  5009     0F6C                     	;# 
  5010     0F6D                     	;# 
  5011     0FE4                     	;# 
  5012     0FE5                     	;# 
  5013     0FE6                     	;# 
  5014     0FE7                     	;# 
  5015     0FE8                     	;# 
  5016     0FE9                     	;# 
  5017     0FEA                     	;# 
  5018     0FEB                     	;# 
  5019     0FED                     	;# 
  5020     0FEE                     	;# 
  5021     0FEF                     	;# 
  5022     0000                     	;# 
  5023     0001                     	;# 
  5024     0002                     	;# 
  5025     0003                     	;# 
  5026     0004                     	;# 
  5027     0005                     	;# 
  5028     0006                     	;# 
  5029     0007                     	;# 
  5030     0008                     	;# 
  5031     0009                     	;# 
  5032     000A                     	;# 
  5033     000B                     	;# 
  5034     000C                     	;# 
  5035     000D                     	;# 
  5036     000E                     	;# 
  5037     000F                     	;# 
  5038     0010                     	;# 
  5039     0011                     	;# 
  5040     0012                     	;# 
  5041     0013                     	;# 
  5042     0014                     	;# 
  5043     0015                     	;# 
  5044     0016                     	;# 
  5045     0017                     	;# 
  5046     0018                     	;# 
  5047     0019                     	;# 
  5048     001A                     	;# 
  5049     001C                     	;# 
  5050     001C                     	;# 
  5051     001D                     	;# 
  5052     001D                     	;# 
  5053     001E                     	;# 
  5054     001F                     	;# 
  5055     008C                     	;# 
  5056     008C                     	;# 
  5057     008D                     	;# 
  5058     008E                     	;# 
  5059     008E                     	;# 
  5060     008F                     	;# 
  5061     0090                     	;# 
  5062     0090                     	;# 
  5063     0091                     	;# 
  5064     0093                     	;# 
  5065     0094                     	;# 
  5066     0095                     	;# 
  5067     0096                     	;# 
  5068     0097                     	;# 
  5069     0098                     	;# 
  5070     0099                     	;# 
  5071     009A                     	;# 
  5072     009B                     	;# 
  5073     009C                     	;# 
  5074     009D                     	;# 
  5075     009E                     	;# 
  5076     010C                     	;# 
  5077     010D                     	;# 
  5078     010E                     	;# 
  5079     010E                     	;# 
  5080     010F                     	;# 
  5081     0110                     	;# 
  5082     0110                     	;# 
  5083     0111                     	;# 
  5084     0112                     	;# 
  5085     0112                     	;# 
  5086     0113                     	;# 
  5087     0114                     	;# 
  5088     0114                     	;# 
  5089     0115                     	;# 
  5090     0116                     	;# 
  5091     0116                     	;# 
  5092     0117                     	;# 
  5093     0119                     	;# 
  5094     0119                     	;# 
  5095     0119                     	;# 
  5096     011A                     	;# 
  5097     011A                     	;# 
  5098     011A                     	;# 
  5099     011B                     	;# 
  5100     011B                     	;# 
  5101     011B                     	;# 
  5102     011B                     	;# 
  5103     011B                     	;# 
  5104     011C                     	;# 
  5105     011C                     	;# 
  5106     011C                     	;# 
  5107     011D                     	;# 
  5108     011D                     	;# 
  5109     011D                     	;# 
  5110     011E                     	;# 
  5111     011E                     	;# 
  5112     011E                     	;# 
  5113     011F                     	;# 
  5114     011F                     	;# 
  5115     011F                     	;# 
  5116     011F                     	;# 
  5117     011F                     	;# 
  5118     018C                     	;# 
  5119     018D                     	;# 
  5120     018E                     	;# 
  5121     018F                     	;# 
  5122     0190                     	;# 
  5123     0191                     	;# 
  5124     0192                     	;# 
  5125     0196                     	;# 
  5126     0197                     	;# 
  5127     0198                     	;# 
  5128     0199                     	;# 
  5129     019A                     	;# 
  5130     019B                     	;# 
  5131     019C                     	;# 
  5132     020C                     	;# 
  5133     020C                     	;# 
  5134     020D                     	;# 
  5135     020E                     	;# 
  5136     020F                     	;# 
  5137     020F                     	;# 
  5138     0210                     	;# 
  5139     0210                     	;# 
  5140     0211                     	;# 
  5141     0211                     	;# 
  5142     0212                     	;# 
  5143     0212                     	;# 
  5144     0213                     	;# 
  5145     0214                     	;# 
  5146     0215                     	;# 
  5147     0215                     	;# 
  5148     0216                     	;# 
  5149     0216                     	;# 
  5150     0217                     	;# 
  5151     0217                     	;# 
  5152     0218                     	;# 
  5153     0218                     	;# 
  5154     0219                     	;# 
  5155     021A                     	;# 
  5156     021B                     	;# 
  5157     021B                     	;# 
  5158     021C                     	;# 
  5159     021C                     	;# 
  5160     021D                     	;# 
  5161     021D                     	;# 
  5162     021E                     	;# 
  5163     021F                     	;# 
  5164     028C                     	;# 
  5165     028C                     	;# 
  5166     028D                     	;# 
  5167     028D                     	;# 
  5168     028E                     	;# 
  5169     028F                     	;# 
  5170     0290                     	;# 
  5171     0290                     	;# 
  5172     0291                     	;# 
  5173     0292                     	;# 
  5174     0292                     	;# 
  5175     0293                     	;# 
  5176     0293                     	;# 
  5177     0294                     	;# 
  5178     0295                     	;# 
  5179     0296                     	;# 
  5180     0296                     	;# 
  5181     0297                     	;# 
  5182     0298                     	;# 
  5183     0298                     	;# 
  5184     0299                     	;# 
  5185     0299                     	;# 
  5186     029A                     	;# 
  5187     029B                     	;# 
  5188     029C                     	;# 
  5189     029C                     	;# 
  5190     029D                     	;# 
  5191     030C                     	;# 
  5192     030C                     	;# 
  5193     030D                     	;# 
  5194     030E                     	;# 
  5195     030F                     	;# 
  5196     0310                     	;# 
  5197     0310                     	;# 
  5198     0311                     	;# 
  5199     0312                     	;# 
  5200     0313                     	;# 
  5201     0314                     	;# 
  5202     0314                     	;# 
  5203     0315                     	;# 
  5204     0316                     	;# 
  5205     0317                     	;# 
  5206     0318                     	;# 
  5207     0318                     	;# 
  5208     0319                     	;# 
  5209     031A                     	;# 
  5210     031B                     	;# 
  5211     031C                     	;# 
  5212     031C                     	;# 
  5213     031D                     	;# 
  5214     031E                     	;# 
  5215     031F                     	;# 
  5216     038C                     	;# 
  5217     038C                     	;# 
  5218     038D                     	;# 
  5219     038E                     	;# 
  5220     0390                     	;# 
  5221     0390                     	;# 
  5222     0391                     	;# 
  5223     0392                     	;# 
  5224     040C                     	;# 
  5225     040D                     	;# 
  5226     040E                     	;# 
  5227     040F                     	;# 
  5228     0410                     	;# 
  5229     0411                     	;# 
  5230     0416                     	;# 
  5231     0416                     	;# 
  5232     0417                     	;# 
  5233     0418                     	;# 
  5234     0418                     	;# 
  5235     0419                     	;# 
  5236     041A                     	;# 
  5237     041A                     	;# 
  5238     041B                     	;# 
  5239     041C                     	;# 
  5240     041C                     	;# 
  5241     041D                     	;# 
  5242     041E                     	;# 
  5243     041F                     	;# 
  5244     048C                     	;# 
  5245     048C                     	;# 
  5246     048D                     	;# 
  5247     048E                     	;# 
  5248     048F                     	;# 
  5249     048F                     	;# 
  5250     0490                     	;# 
  5251     0491                     	;# 
  5252     0492                     	;# 
  5253     0492                     	;# 
  5254     0493                     	;# 
  5255     0494                     	;# 
  5256     0495                     	;# 
  5257     0495                     	;# 
  5258     0496                     	;# 
  5259     0497                     	;# 
  5260     0498                     	;# 
  5261     0499                     	;# 
  5262     049A                     	;# 
  5263     049B                     	;# 
  5264     049C                     	;# 
  5265     049D                     	;# 
  5266     050C                     	;# 
  5267     050C                     	;# 
  5268     050D                     	;# 
  5269     050E                     	;# 
  5270     050F                     	;# 
  5271     050F                     	;# 
  5272     0510                     	;# 
  5273     0511                     	;# 
  5274     0512                     	;# 
  5275     0512                     	;# 
  5276     0513                     	;# 
  5277     0514                     	;# 
  5278     0515                     	;# 
  5279     0515                     	;# 
  5280     0516                     	;# 
  5281     0517                     	;# 
  5282     0518                     	;# 
  5283     0519                     	;# 
  5284     051A                     	;# 
  5285     051B                     	;# 
  5286     051C                     	;# 
  5287     051D                     	;# 
  5288     058C                     	;# 
  5289     058C                     	;# 
  5290     058D                     	;# 
  5291     058E                     	;# 
  5292     058F                     	;# 
  5293     058F                     	;# 
  5294     0590                     	;# 
  5295     0591                     	;# 
  5296     0592                     	;# 
  5297     0593                     	;# 
  5298     060C                     	;# 
  5299     060D                     	;# 
  5300     060E                     	;# 
  5301     060F                     	;# 
  5302     0610                     	;# 
  5303     0611                     	;# 
  5304     0612                     	;# 
  5305     0613                     	;# 
  5306     0614                     	;# 
  5307     0616                     	;# 
  5308     0617                     	;# 
  5309     0618                     	;# 
  5310     0619                     	;# 
  5311     061A                     	;# 
  5312     061B                     	;# 
  5313     061C                     	;# 
  5314     061D                     	;# 
  5315     061E                     	;# 
  5316     068C                     	;# 
  5317     068D                     	;# 
  5318     068E                     	;# 
  5319     068F                     	;# 
  5320     0690                     	;# 
  5321     0691                     	;# 
  5322     0692                     	;# 
  5323     0693                     	;# 
  5324     0694                     	;# 
  5325     070C                     	;# 
  5326     070D                     	;# 
  5327     070E                     	;# 
  5328     070F                     	;# 
  5329     0710                     	;# 
  5330     0711                     	;# 
  5331     0712                     	;# 
  5332     0713                     	;# 
  5333     0714                     	;# 
  5334     0716                     	;# 
  5335     0717                     	;# 
  5336     0718                     	;# 
  5337     0719                     	;# 
  5338     071A                     	;# 
  5339     071B                     	;# 
  5340     071C                     	;# 
  5341     071D                     	;# 
  5342     071E                     	;# 
  5343     0796                     	;# 
  5344     0797                     	;# 
  5345     0798                     	;# 
  5346     0799                     	;# 
  5347     079A                     	;# 
  5348     079B                     	;# 
  5349     080C                     	;# 
  5350     080D                     	;# 
  5351     080E                     	;# 
  5352     080F                     	;# 
  5353     0810                     	;# 
  5354     0811                     	;# 
  5355     0812                     	;# 
  5356     0813                     	;# 
  5357     0814                     	;# 
  5358     081A                     	;# 
  5359     081B                     	;# 
  5360     081C                     	;# 
  5361     081D                     	;# 
  5362     081E                     	;# 
  5363     081F                     	;# 
  5364     088C                     	;# 
  5365     088D                     	;# 
  5366     088E                     	;# 
  5367     088F                     	;# 
  5368     0890                     	;# 
  5369     0891                     	;# 
  5370     0892                     	;# 
  5371     0893                     	;# 
  5372     0895                     	;# 
  5373     0896                     	;# 
  5374     0897                     	;# 
  5375     0898                     	;# 
  5376     0899                     	;# 
  5377     089A                     	;# 
  5378     089B                     	;# 
  5379     090C                     	;# 
  5380     090E                     	;# 
  5381     090F                     	;# 
  5382     091F                     	;# 
  5383     091F                     	;# 
  5384     098F                     	;# 
  5385     098F                     	;# 
  5386     0990                     	;# 
  5387     0991                     	;# 
  5388     0992                     	;# 
  5389     0993                     	;# 
  5390     0994                     	;# 
  5391     0995                     	;# 
  5392     0996                     	;# 
  5393     0997                     	;# 
  5394     0E0F                     	;# 
  5395     0E10                     	;# 
  5396     0E11                     	;# 
  5397     0E12                     	;# 
  5398     0E13                     	;# 
  5399     0E14                     	;# 
  5400     0E15                     	;# 
  5401     0E16                     	;# 
  5402     0E17                     	;# 
  5403     0E18                     	;# 
  5404     0E19                     	;# 
  5405     0E1A                     	;# 
  5406     0E1B                     	;# 
  5407     0E1C                     	;# 
  5408     0E1D                     	;# 
  5409     0E1E                     	;# 
  5410     0E1F                     	;# 
  5411     0E20                     	;# 
  5412     0E21                     	;# 
  5413     0E22                     	;# 
  5414     0E23                     	;# 
  5415     0E24                     	;# 
  5416     0E25                     	;# 
  5417     0E26                     	;# 
  5418     0E27                     	;# 
  5419     0E28                     	;# 
  5420     0E29                     	;# 
  5421     0E2A                     	;# 
  5422     0E2B                     	;# 
  5423     0E2C                     	;# 
  5424     0E2D                     	;# 
  5425     0E2E                     	;# 
  5426     0E2F                     	;# 
  5427     0E30                     	;# 
  5428     0E31                     	;# 
  5429     0E32                     	;# 
  5430     0E33                     	;# 
  5431     0E34                     	;# 
  5432     0E35                     	;# 
  5433     0E36                     	;# 
  5434     0E37                     	;# 
  5435     0E8F                     	;# 
  5436     0E90                     	;# 
  5437     0E91                     	;# 
  5438     0E92                     	;# 
  5439     0E93                     	;# 
  5440     0E94                     	;# 
  5441     0E95                     	;# 
  5442     0E96                     	;# 
  5443     0E97                     	;# 
  5444     0E9C                     	;# 
  5445     0E9D                     	;# 
  5446     0E9E                     	;# 
  5447     0EA1                     	;# 
  5448     0EA2                     	;# 
  5449     0EA3                     	;# 
  5450     0EA4                     	;# 
  5451     0EA5                     	;# 
  5452     0EA9                     	;# 
  5453     0EAA                     	;# 
  5454     0EAB                     	;# 
  5455     0EAC                     	;# 
  5456     0EB1                     	;# 
  5457     0EB2                     	;# 
  5458     0EB3                     	;# 
  5459     0EB8                     	;# 
  5460     0EB9                     	;# 
  5461     0EBA                     	;# 
  5462     0EBB                     	;# 
  5463     0EBC                     	;# 
  5464     0EBD                     	;# 
  5465     0EBE                     	;# 
  5466     0EC3                     	;# 
  5467     0EC5                     	;# 
  5468     0EC6                     	;# 
  5469     0EC7                     	;# 
  5470     0EC8                     	;# 
  5471     0EC9                     	;# 
  5472     0ECA                     	;# 
  5473     0ECB                     	;# 
  5474     0ECC                     	;# 
  5475     0F10                     	;# 
  5476     0F11                     	;# 
  5477     0F12                     	;# 
  5478     0F13                     	;# 
  5479     0F14                     	;# 
  5480     0F15                     	;# 
  5481     0F16                     	;# 
  5482     0F17                     	;# 
  5483     0F18                     	;# 
  5484     0F19                     	;# 
  5485     0F1A                     	;# 
  5486     0F1B                     	;# 
  5487     0F1C                     	;# 
  5488     0F1D                     	;# 
  5489     0F1E                     	;# 
  5490     0F1F                     	;# 
  5491     0F20                     	;# 
  5492     0F21                     	;# 
  5493     0F22                     	;# 
  5494     0F23                     	;# 
  5495     0F24                     	;# 
  5496     0F25                     	;# 
  5497     0F26                     	;# 
  5498     0F27                     	;# 
  5499     0F28                     	;# 
  5500     0F29                     	;# 
  5501     0F2A                     	;# 
  5502     0F2B                     	;# 
  5503     0F2C                     	;# 
  5504     0F2D                     	;# 
  5505     0F2E                     	;# 
  5506     0F2F                     	;# 
  5507     0F30                     	;# 
  5508     0F31                     	;# 
  5509     0F32                     	;# 
  5510     0F38                     	;# 
  5511     0F39                     	;# 
  5512     0F3A                     	;# 
  5513     0F3B                     	;# 
  5514     0F3C                     	;# 
  5515     0F3D                     	;# 
  5516     0F3E                     	;# 
  5517     0F3F                     	;# 
  5518     0F40                     	;# 
  5519     0F41                     	;# 
  5520     0F43                     	;# 
  5521     0F44                     	;# 
  5522     0F45                     	;# 
  5523     0F46                     	;# 
  5524     0F47                     	;# 
  5525     0F48                     	;# 
  5526     0F49                     	;# 
  5527     0F4A                     	;# 
  5528     0F4B                     	;# 
  5529     0F4C                     	;# 
  5530     0F4E                     	;# 
  5531     0F4F                     	;# 
  5532     0F50                     	;# 
  5533     0F51                     	;# 
  5534     0F52                     	;# 
  5535     0F53                     	;# 
  5536     0F54                     	;# 
  5537     0F55                     	;# 
  5538     0F56                     	;# 
  5539     0F57                     	;# 
  5540     0F59                     	;# 
  5541     0F5A                     	;# 
  5542     0F5B                     	;# 
  5543     0F5C                     	;# 
  5544     0F5D                     	;# 
  5545     0F61                     	;# 
  5546     0F62                     	;# 
  5547     0F64                     	;# 
  5548     0F65                     	;# 
  5549     0F66                     	;# 
  5550     0F67                     	;# 
  5551     0F68                     	;# 
  5552     0F69                     	;# 
  5553     0F6A                     	;# 
  5554     0F6B                     	;# 
  5555     0F6C                     	;# 
  5556     0F6D                     	;# 
  5557     0FE4                     	;# 
  5558     0FE5                     	;# 
  5559     0FE6                     	;# 
  5560     0FE7                     	;# 
  5561     0FE8                     	;# 
  5562     0FE9                     	;# 
  5563     0FEA                     	;# 
  5564     0FEB                     	;# 
  5565     0FED                     	;# 
  5566     0FEE                     	;# 
  5567     0FEF                     	;# 
  5568     0000                     	;# 
  5569     0001                     	;# 
  5570     0002                     	;# 
  5571     0003                     	;# 
  5572     0004                     	;# 
  5573     0005                     	;# 
  5574     0006                     	;# 
  5575     0007                     	;# 
  5576     0008                     	;# 
  5577     0009                     	;# 
  5578     000A                     	;# 
  5579     000B                     	;# 
  5580     000C                     	;# 
  5581     000D                     	;# 
  5582     000E                     	;# 
  5583     000F                     	;# 
  5584     0010                     	;# 
  5585     0011                     	;# 
  5586     0012                     	;# 
  5587     0013                     	;# 
  5588     0014                     	;# 
  5589     0015                     	;# 
  5590     0016                     	;# 
  5591     0017                     	;# 
  5592     0018                     	;# 
  5593     0019                     	;# 
  5594     001A                     	;# 
  5595     001C                     	;# 
  5596     001C                     	;# 
  5597     001D                     	;# 
  5598     001D                     	;# 
  5599     001E                     	;# 
  5600     001F                     	;# 
  5601     008C                     	;# 
  5602     008C                     	;# 
  5603     008D                     	;# 
  5604     008E                     	;# 
  5605     008E                     	;# 
  5606     008F                     	;# 
  5607     0090                     	;# 
  5608     0090                     	;# 
  5609     0091                     	;# 
  5610     0093                     	;# 
  5611     0094                     	;# 
  5612     0095                     	;# 
  5613     0096                     	;# 
  5614     0097                     	;# 
  5615     0098                     	;# 
  5616     0099                     	;# 
  5617     009A                     	;# 
  5618     009B                     	;# 
  5619     009C                     	;# 
  5620     009D                     	;# 
  5621     009E                     	;# 
  5622     010C                     	;# 
  5623     010D                     	;# 
  5624     010E                     	;# 
  5625     010E                     	;# 
  5626     010F                     	;# 
  5627     0110                     	;# 
  5628     0110                     	;# 
  5629     0111                     	;# 
  5630     0112                     	;# 
  5631     0112                     	;# 
  5632     0113                     	;# 
  5633     0114                     	;# 
  5634     0114                     	;# 
  5635     0115                     	;# 
  5636     0116                     	;# 
  5637     0116                     	;# 
  5638     0117                     	;# 
  5639     0119                     	;# 
  5640     0119                     	;# 
  5641     0119                     	;# 
  5642     011A                     	;# 
  5643     011A                     	;# 
  5644     011A                     	;# 
  5645     011B                     	;# 
  5646     011B                     	;# 
  5647     011B                     	;# 
  5648     011B                     	;# 
  5649     011B                     	;# 
  5650     011C                     	;# 
  5651     011C                     	;# 
  5652     011C                     	;# 
  5653     011D                     	;# 
  5654     011D                     	;# 
  5655     011D                     	;# 
  5656     011E                     	;# 
  5657     011E                     	;# 
  5658     011E                     	;# 
  5659     011F                     	;# 
  5660     011F                     	;# 
  5661     011F                     	;# 
  5662     011F                     	;# 
  5663     011F                     	;# 
  5664     018C                     	;# 
  5665     018D                     	;# 
  5666     018E                     	;# 
  5667     018F                     	;# 
  5668     0190                     	;# 
  5669     0191                     	;# 
  5670     0192                     	;# 
  5671     0196                     	;# 
  5672     0197                     	;# 
  5673     0198                     	;# 
  5674     0199                     	;# 
  5675     019A                     	;# 
  5676     019B                     	;# 
  5677     019C                     	;# 
  5678     020C                     	;# 
  5679     020C                     	;# 
  5680     020D                     	;# 
  5681     020E                     	;# 
  5682     020F                     	;# 
  5683     020F                     	;# 
  5684     0210                     	;# 
  5685     0210                     	;# 
  5686     0211                     	;# 
  5687     0211                     	;# 
  5688     0212                     	;# 
  5689     0212                     	;# 
  5690     0213                     	;# 
  5691     0214                     	;# 
  5692     0215                     	;# 
  5693     0215                     	;# 
  5694     0216                     	;# 
  5695     0216                     	;# 
  5696     0217                     	;# 
  5697     0217                     	;# 
  5698     0218                     	;# 
  5699     0218                     	;# 
  5700     0219                     	;# 
  5701     021A                     	;# 
  5702     021B                     	;# 
  5703     021B                     	;# 
  5704     021C                     	;# 
  5705     021C                     	;# 
  5706     021D                     	;# 
  5707     021D                     	;# 
  5708     021E                     	;# 
  5709     021F                     	;# 
  5710     028C                     	;# 
  5711     028C                     	;# 
  5712     028D                     	;# 
  5713     028D                     	;# 
  5714     028E                     	;# 
  5715     028F                     	;# 
  5716     0290                     	;# 
  5717     0290                     	;# 
  5718     0291                     	;# 
  5719     0292                     	;# 
  5720     0292                     	;# 
  5721     0293                     	;# 
  5722     0293                     	;# 
  5723     0294                     	;# 
  5724     0295                     	;# 
  5725     0296                     	;# 
  5726     0296                     	;# 
  5727     0297                     	;# 
  5728     0298                     	;# 
  5729     0298                     	;# 
  5730     0299                     	;# 
  5731     0299                     	;# 
  5732     029A                     	;# 
  5733     029B                     	;# 
  5734     029C                     	;# 
  5735     029C                     	;# 
  5736     029D                     	;# 
  5737     030C                     	;# 
  5738     030C                     	;# 
  5739     030D                     	;# 
  5740     030E                     	;# 
  5741     030F                     	;# 
  5742     0310                     	;# 
  5743     0310                     	;# 
  5744     0311                     	;# 
  5745     0312                     	;# 
  5746     0313                     	;# 
  5747     0314                     	;# 
  5748     0314                     	;# 
  5749     0315                     	;# 
  5750     0316                     	;# 
  5751     0317                     	;# 
  5752     0318                     	;# 
  5753     0318                     	;# 
  5754     0319                     	;# 
  5755     031A                     	;# 
  5756     031B                     	;# 
  5757     031C                     	;# 
  5758     031C                     	;# 
  5759     031D                     	;# 
  5760     031E                     	;# 
  5761     031F                     	;# 
  5762     038C                     	;# 
  5763     038C                     	;# 
  5764     038D                     	;# 
  5765     038E                     	;# 
  5766     0390                     	;# 
  5767     0390                     	;# 
  5768     0391                     	;# 
  5769     0392                     	;# 
  5770     040C                     	;# 
  5771     040D                     	;# 
  5772     040E                     	;# 
  5773     040F                     	;# 
  5774     0410                     	;# 
  5775     0411                     	;# 
  5776     0416                     	;# 
  5777     0416                     	;# 
  5778     0417                     	;# 
  5779     0418                     	;# 
  5780     0418                     	;# 
  5781     0419                     	;# 
  5782     041A                     	;# 
  5783     041A                     	;# 
  5784     041B                     	;# 
  5785     041C                     	;# 
  5786     041C                     	;# 
  5787     041D                     	;# 
  5788     041E                     	;# 
  5789     041F                     	;# 
  5790     048C                     	;# 
  5791     048C                     	;# 
  5792     048D                     	;# 
  5793     048E                     	;# 
  5794     048F                     	;# 
  5795     048F                     	;# 
  5796     0490                     	;# 
  5797     0491                     	;# 
  5798     0492                     	;# 
  5799     0492                     	;# 
  5800     0493                     	;# 
  5801     0494                     	;# 
  5802     0495                     	;# 
  5803     0495                     	;# 
  5804     0496                     	;# 
  5805     0497                     	;# 
  5806     0498                     	;# 
  5807     0499                     	;# 
  5808     049A                     	;# 
  5809     049B                     	;# 
  5810     049C                     	;# 
  5811     049D                     	;# 
  5812     050C                     	;# 
  5813     050C                     	;# 
  5814     050D                     	;# 
  5815     050E                     	;# 
  5816     050F                     	;# 
  5817     050F                     	;# 
  5818     0510                     	;# 
  5819     0511                     	;# 
  5820     0512                     	;# 
  5821     0512                     	;# 
  5822     0513                     	;# 
  5823     0514                     	;# 
  5824     0515                     	;# 
  5825     0515                     	;# 
  5826     0516                     	;# 
  5827     0517                     	;# 
  5828     0518                     	;# 
  5829     0519                     	;# 
  5830     051A                     	;# 
  5831     051B                     	;# 
  5832     051C                     	;# 
  5833     051D                     	;# 
  5834     058C                     	;# 
  5835     058C                     	;# 
  5836     058D                     	;# 
  5837     058E                     	;# 
  5838     058F                     	;# 
  5839     058F                     	;# 
  5840     0590                     	;# 
  5841     0591                     	;# 
  5842     0592                     	;# 
  5843     0593                     	;# 
  5844     060C                     	;# 
  5845     060D                     	;# 
  5846     060E                     	;# 
  5847     060F                     	;# 
  5848     0610                     	;# 
  5849     0611                     	;# 
  5850     0612                     	;# 
  5851     0613                     	;# 
  5852     0614                     	;# 
  5853     0616                     	;# 
  5854     0617                     	;# 
  5855     0618                     	;# 
  5856     0619                     	;# 
  5857     061A                     	;# 
  5858     061B                     	;# 
  5859     061C                     	;# 
  5860     061D                     	;# 
  5861     061E                     	;# 
  5862     068C                     	;# 
  5863     068D                     	;# 
  5864     068E                     	;# 
  5865     068F                     	;# 
  5866     0690                     	;# 
  5867     0691                     	;# 
  5868     0692                     	;# 
  5869     0693                     	;# 
  5870     0694                     	;# 
  5871     070C                     	;# 
  5872     070D                     	;# 
  5873     070E                     	;# 
  5874     070F                     	;# 
  5875     0710                     	;# 
  5876     0711                     	;# 
  5877     0712                     	;# 
  5878     0713                     	;# 
  5879     0714                     	;# 
  5880     0716                     	;# 
  5881     0717                     	;# 
  5882     0718                     	;# 
  5883     0719                     	;# 
  5884     071A                     	;# 
  5885     071B                     	;# 
  5886     071C                     	;# 
  5887     071D                     	;# 
  5888     071E                     	;# 
  5889     0796                     	;# 
  5890     0797                     	;# 
  5891     0798                     	;# 
  5892     0799                     	;# 
  5893     079A                     	;# 
  5894     079B                     	;# 
  5895     080C                     	;# 
  5896     080D                     	;# 
  5897     080E                     	;# 
  5898     080F                     	;# 
  5899     0810                     	;# 
  5900     0811                     	;# 
  5901     0812                     	;# 
  5902     0813                     	;# 
  5903     0814                     	;# 
  5904     081A                     	;# 
  5905     081B                     	;# 
  5906     081C                     	;# 
  5907     081D                     	;# 
  5908     081E                     	;# 
  5909     081F                     	;# 
  5910     088C                     	;# 
  5911     088D                     	;# 
  5912     088E                     	;# 
  5913     088F                     	;# 
  5914     0890                     	;# 
  5915     0891                     	;# 
  5916     0892                     	;# 
  5917     0893                     	;# 
  5918     0895                     	;# 
  5919     0896                     	;# 
  5920     0897                     	;# 
  5921     0898                     	;# 
  5922     0899                     	;# 
  5923     089A                     	;# 
  5924     089B                     	;# 
  5925     090C                     	;# 
  5926     090E                     	;# 
  5927     090F                     	;# 
  5928     091F                     	;# 
  5929     091F                     	;# 
  5930     098F                     	;# 
  5931     098F                     	;# 
  5932     0990                     	;# 
  5933     0991                     	;# 
  5934     0992                     	;# 
  5935     0993                     	;# 
  5936     0994                     	;# 
  5937     0995                     	;# 
  5938     0996                     	;# 
  5939     0997                     	;# 
  5940     0E0F                     	;# 
  5941     0E10                     	;# 
  5942     0E11                     	;# 
  5943     0E12                     	;# 
  5944     0E13                     	;# 
  5945     0E14                     	;# 
  5946     0E15                     	;# 
  5947     0E16                     	;# 
  5948     0E17                     	;# 
  5949     0E18                     	;# 
  5950     0E19                     	;# 
  5951     0E1A                     	;# 
  5952     0E1B                     	;# 
  5953     0E1C                     	;# 
  5954     0E1D                     	;# 
  5955     0E1E                     	;# 
  5956     0E1F                     	;# 
  5957     0E20                     	;# 
  5958     0E21                     	;# 
  5959     0E22                     	;# 
  5960     0E23                     	;# 
  5961     0E24                     	;# 
  5962     0E25                     	;# 
  5963     0E26                     	;# 
  5964     0E27                     	;# 
  5965     0E28                     	;# 
  5966     0E29                     	;# 
  5967     0E2A                     	;# 
  5968     0E2B                     	;# 
  5969     0E2C                     	;# 
  5970     0E2D                     	;# 
  5971     0E2E                     	;# 
  5972     0E2F                     	;# 
  5973     0E30                     	;# 
  5974     0E31                     	;# 
  5975     0E32                     	;# 
  5976     0E33                     	;# 
  5977     0E34                     	;# 
  5978     0E35                     	;# 
  5979     0E36                     	;# 
  5980     0E37                     	;# 
  5981     0E8F                     	;# 
  5982     0E90                     	;# 
  5983     0E91                     	;# 
  5984     0E92                     	;# 
  5985     0E93                     	;# 
  5986     0E94                     	;# 
  5987     0E95                     	;# 
  5988     0E96                     	;# 
  5989     0E97                     	;# 
  5990     0E9C                     	;# 
  5991     0E9D                     	;# 
  5992     0E9E                     	;# 
  5993     0EA1                     	;# 
  5994     0EA2                     	;# 
  5995     0EA3                     	;# 
  5996     0EA4                     	;# 
  5997     0EA5                     	;# 
  5998     0EA9                     	;# 
  5999     0EAA                     	;# 
  6000     0EAB                     	;# 
  6001     0EAC                     	;# 
  6002     0EB1                     	;# 
  6003     0EB2                     	;# 
  6004     0EB3                     	;# 
  6005     0EB8                     	;# 
  6006     0EB9                     	;# 
  6007     0EBA                     	;# 
  6008     0EBB                     	;# 
  6009     0EBC                     	;# 
  6010     0EBD                     	;# 
  6011     0EBE                     	;# 
  6012     0EC3                     	;# 
  6013     0EC5                     	;# 
  6014     0EC6                     	;# 
  6015     0EC7                     	;# 
  6016     0EC8                     	;# 
  6017     0EC9                     	;# 
  6018     0ECA                     	;# 
  6019     0ECB                     	;# 
  6020     0ECC                     	;# 
  6021     0F10                     	;# 
  6022     0F11                     	;# 
  6023     0F12                     	;# 
  6024     0F13                     	;# 
  6025     0F14                     	;# 
  6026     0F15                     	;# 
  6027     0F16                     	;# 
  6028     0F17                     	;# 
  6029     0F18                     	;# 
  6030     0F19                     	;# 
  6031     0F1A                     	;# 
  6032     0F1B                     	;# 
  6033     0F1C                     	;# 
  6034     0F1D                     	;# 
  6035     0F1E                     	;# 
  6036     0F1F                     	;# 
  6037     0F20                     	;# 
  6038     0F21                     	;# 
  6039     0F22                     	;# 
  6040     0F23                     	;# 
  6041     0F24                     	;# 
  6042     0F25                     	;# 
  6043     0F26                     	;# 
  6044     0F27                     	;# 
  6045     0F28                     	;# 
  6046     0F29                     	;# 
  6047     0F2A                     	;# 
  6048     0F2B                     	;# 
  6049     0F2C                     	;# 
  6050     0F2D                     	;# 
  6051     0F2E                     	;# 
  6052     0F2F                     	;# 
  6053     0F30                     	;# 
  6054     0F31                     	;# 
  6055     0F32                     	;# 
  6056     0F38                     	;# 
  6057     0F39                     	;# 
  6058     0F3A                     	;# 
  6059     0F3B                     	;# 
  6060     0F3C                     	;# 
  6061     0F3D                     	;# 
  6062     0F3E                     	;# 
  6063     0F3F                     	;# 
  6064     0F40                     	;# 
  6065     0F41                     	;# 
  6066     0F43                     	;# 
  6067     0F44                     	;# 
  6068     0F45                     	;# 
  6069     0F46                     	;# 
  6070     0F47                     	;# 
  6071     0F48                     	;# 
  6072     0F49                     	;# 
  6073     0F4A                     	;# 
  6074     0F4B                     	;# 
  6075     0F4C                     	;# 
  6076     0F4E                     	;# 
  6077     0F4F                     	;# 
  6078     0F50                     	;# 
  6079     0F51                     	;# 
  6080     0F52                     	;# 
  6081     0F53                     	;# 
  6082     0F54                     	;# 
  6083     0F55                     	;# 
  6084     0F56                     	;# 
  6085     0F57                     	;# 
  6086     0F59                     	;# 
  6087     0F5A                     	;# 
  6088     0F5B                     	;# 
  6089     0F5C                     	;# 
  6090     0F5D                     	;# 
  6091     0F61                     	;# 
  6092     0F62                     	;# 
  6093     0F64                     	;# 
  6094     0F65                     	;# 
  6095     0F66                     	;# 
  6096     0F67                     	;# 
  6097     0F68                     	;# 
  6098     0F69                     	;# 
  6099     0F6A                     	;# 
  6100     0F6B                     	;# 
  6101     0F6C                     	;# 
  6102     0F6D                     	;# 
  6103     0FE4                     	;# 
  6104     0FE5                     	;# 
  6105     0FE6                     	;# 
  6106     0FE7                     	;# 
  6107     0FE8                     	;# 
  6108     0FE9                     	;# 
  6109     0FEA                     	;# 
  6110     0FEB                     	;# 
  6111     0FED                     	;# 
  6112     0FEE                     	;# 
  6113     0FEF                     	;# 
  6114     0000                     	;# 
  6115     0001                     	;# 
  6116     0002                     	;# 
  6117     0003                     	;# 
  6118     0004                     	;# 
  6119     0005                     	;# 
  6120     0006                     	;# 
  6121     0007                     	;# 
  6122     0008                     	;# 
  6123     0009                     	;# 
  6124     000A                     	;# 
  6125     000B                     	;# 
  6126     000C                     	;# 
  6127     000D                     	;# 
  6128     000E                     	;# 
  6129     000F                     	;# 
  6130     0010                     	;# 
  6131     0011                     	;# 
  6132     0012                     	;# 
  6133     0013                     	;# 
  6134     0014                     	;# 
  6135     0015                     	;# 
  6136     0016                     	;# 
  6137     0017                     	;# 
  6138     0018                     	;# 
  6139     0019                     	;# 
  6140     001A                     	;# 
  6141     001C                     	;# 
  6142     001C                     	;# 
  6143     001D                     	;# 
  6144     001D                     	;# 
  6145     001E                     	;# 
  6146     001F                     	;# 
  6147     008C                     	;# 
  6148     008C                     	;# 
  6149     008D                     	;# 
  6150     008E                     	;# 
  6151     008E                     	;# 
  6152     008F                     	;# 
  6153     0090                     	;# 
  6154     0090                     	;# 
  6155     0091                     	;# 
  6156     0093                     	;# 
  6157     0094                     	;# 
  6158     0095                     	;# 
  6159     0096                     	;# 
  6160     0097                     	;# 
  6161     0098                     	;# 
  6162     0099                     	;# 
  6163     009A                     	;# 
  6164     009B                     	;# 
  6165     009C                     	;# 
  6166     009D                     	;# 
  6167     009E                     	;# 
  6168     010C                     	;# 
  6169     010D                     	;# 
  6170     010E                     	;# 
  6171     010E                     	;# 
  6172     010F                     	;# 
  6173     0110                     	;# 
  6174     0110                     	;# 
  6175     0111                     	;# 
  6176     0112                     	;# 
  6177     0112                     	;# 
  6178     0113                     	;# 
  6179     0114                     	;# 
  6180     0114                     	;# 
  6181     0115                     	;# 
  6182     0116                     	;# 
  6183     0116                     	;# 
  6184     0117                     	;# 
  6185     0119                     	;# 
  6186     0119                     	;# 
  6187     0119                     	;# 
  6188     011A                     	;# 
  6189     011A                     	;# 
  6190     011A                     	;# 
  6191     011B                     	;# 
  6192     011B                     	;# 
  6193     011B                     	;# 
  6194     011B                     	;# 
  6195     011B                     	;# 
  6196     011C                     	;# 
  6197     011C                     	;# 
  6198     011C                     	;# 
  6199     011D                     	;# 
  6200     011D                     	;# 
  6201     011D                     	;# 
  6202     011E                     	;# 
  6203     011E                     	;# 
  6204     011E                     	;# 
  6205     011F                     	;# 
  6206     011F                     	;# 
  6207     011F                     	;# 
  6208     011F                     	;# 
  6209     011F                     	;# 
  6210     018C                     	;# 
  6211     018D                     	;# 
  6212     018E                     	;# 
  6213     018F                     	;# 
  6214     0190                     	;# 
  6215     0191                     	;# 
  6216     0192                     	;# 
  6217     0196                     	;# 
  6218     0197                     	;# 
  6219     0198                     	;# 
  6220     0199                     	;# 
  6221     019A                     	;# 
  6222     019B                     	;# 
  6223     019C                     	;# 
  6224     020C                     	;# 
  6225     020C                     	;# 
  6226     020D                     	;# 
  6227     020E                     	;# 
  6228     020F                     	;# 
  6229     020F                     	;# 
  6230     0210                     	;# 
  6231     0210                     	;# 
  6232     0211                     	;# 
  6233     0211                     	;# 
  6234     0212                     	;# 
  6235     0212                     	;# 
  6236     0213                     	;# 
  6237     0214                     	;# 
  6238     0215                     	;# 
  6239     0215                     	;# 
  6240     0216                     	;# 
  6241     0216                     	;# 
  6242     0217                     	;# 
  6243     0217                     	;# 
  6244     0218                     	;# 
  6245     0218                     	;# 
  6246     0219                     	;# 
  6247     021A                     	;# 
  6248     021B                     	;# 
  6249     021B                     	;# 
  6250     021C                     	;# 
  6251     021C                     	;# 
  6252     021D                     	;# 
  6253     021D                     	;# 
  6254     021E                     	;# 
  6255     021F                     	;# 
  6256     028C                     	;# 
  6257     028C                     	;# 
  6258     028D                     	;# 
  6259     028D                     	;# 
  6260     028E                     	;# 
  6261     028F                     	;# 
  6262     0290                     	;# 
  6263     0290                     	;# 
  6264     0291                     	;# 
  6265     0292                     	;# 
  6266     0292                     	;# 
  6267     0293                     	;# 
  6268     0293                     	;# 
  6269     0294                     	;# 
  6270     0295                     	;# 
  6271     0296                     	;# 
  6272     0296                     	;# 
  6273     0297                     	;# 
  6274     0298                     	;# 
  6275     0298                     	;# 
  6276     0299                     	;# 
  6277     0299                     	;# 
  6278     029A                     	;# 
  6279     029B                     	;# 
  6280     029C                     	;# 
  6281     029C                     	;# 
  6282     029D                     	;# 
  6283     030C                     	;# 
  6284     030C                     	;# 
  6285     030D                     	;# 
  6286     030E                     	;# 
  6287     030F                     	;# 
  6288     0310                     	;# 
  6289     0310                     	;# 
  6290     0311                     	;# 
  6291     0312                     	;# 
  6292     0313                     	;# 
  6293     0314                     	;# 
  6294     0314                     	;# 
  6295     0315                     	;# 
  6296     0316                     	;# 
  6297     0317                     	;# 
  6298     0318                     	;# 
  6299     0318                     	;# 
  6300     0319                     	;# 
  6301     031A                     	;# 
  6302     031B                     	;# 
  6303     031C                     	;# 
  6304     031C                     	;# 
  6305     031D                     	;# 
  6306     031E                     	;# 
  6307     031F                     	;# 
  6308     038C                     	;# 
  6309     038C                     	;# 
  6310     038D                     	;# 
  6311     038E                     	;# 
  6312     0390                     	;# 
  6313     0390                     	;# 
  6314     0391                     	;# 
  6315     0392                     	;# 
  6316     040C                     	;# 
  6317     040D                     	;# 
  6318     040E                     	;# 
  6319     040F                     	;# 
  6320     0410                     	;# 
  6321     0411                     	;# 
  6322     0416                     	;# 
  6323     0416                     	;# 
  6324     0417                     	;# 
  6325     0418                     	;# 
  6326     0418                     	;# 
  6327     0419                     	;# 
  6328     041A                     	;# 
  6329     041A                     	;# 
  6330     041B                     	;# 
  6331     041C                     	;# 
  6332     041C                     	;# 
  6333     041D                     	;# 
  6334     041E                     	;# 
  6335     041F                     	;# 
  6336     048C                     	;# 
  6337     048C                     	;# 
  6338     048D                     	;# 
  6339     048E                     	;# 
  6340     048F                     	;# 
  6341     048F                     	;# 
  6342     0490                     	;# 
  6343     0491                     	;# 
  6344     0492                     	;# 
  6345     0492                     	;# 
  6346     0493                     	;# 
  6347     0494                     	;# 
  6348     0495                     	;# 
  6349     0495                     	;# 
  6350     0496                     	;# 
  6351     0497                     	;# 
  6352     0498                     	;# 
  6353     0499                     	;# 
  6354     049A                     	;# 
  6355     049B                     	;# 
  6356     049C                     	;# 
  6357     049D                     	;# 
  6358     050C                     	;# 
  6359     050C                     	;# 
  6360     050D                     	;# 
  6361     050E                     	;# 
  6362     050F                     	;# 
  6363     050F                     	;# 
  6364     0510                     	;# 
  6365     0511                     	;# 
  6366     0512                     	;# 
  6367     0512                     	;# 
  6368     0513                     	;# 
  6369     0514                     	;# 
  6370     0515                     	;# 
  6371     0515                     	;# 
  6372     0516                     	;# 
  6373     0517                     	;# 
  6374     0518                     	;# 
  6375     0519                     	;# 
  6376     051A                     	;# 
  6377     051B                     	;# 
  6378     051C                     	;# 
  6379     051D                     	;# 
  6380     058C                     	;# 
  6381     058C                     	;# 
  6382     058D                     	;# 
  6383     058E                     	;# 
  6384     058F                     	;# 
  6385     058F                     	;# 
  6386     0590                     	;# 
  6387     0591                     	;# 
  6388     0592                     	;# 
  6389     0593                     	;# 
  6390     060C                     	;# 
  6391     060D                     	;# 
  6392     060E                     	;# 
  6393     060F                     	;# 
  6394     0610                     	;# 
  6395     0611                     	;# 
  6396     0612                     	;# 
  6397     0613                     	;# 
  6398     0614                     	;# 
  6399     0616                     	;# 
  6400     0617                     	;# 
  6401     0618                     	;# 
  6402     0619                     	;# 
  6403     061A                     	;# 
  6404     061B                     	;# 
  6405     061C                     	;# 
  6406     061D                     	;# 
  6407     061E                     	;# 
  6408     068C                     	;# 
  6409     068D                     	;# 
  6410     068E                     	;# 
  6411     068F                     	;# 
  6412     0690                     	;# 
  6413     0691                     	;# 
  6414     0692                     	;# 
  6415     0693                     	;# 
  6416     0694                     	;# 
  6417     070C                     	;# 
  6418     070D                     	;# 
  6419     070E                     	;# 
  6420     070F                     	;# 
  6421     0710                     	;# 
  6422     0711                     	;# 
  6423     0712                     	;# 
  6424     0713                     	;# 
  6425     0714                     	;# 
  6426     0716                     	;# 
  6427     0717                     	;# 
  6428     0718                     	;# 
  6429     0719                     	;# 
  6430     071A                     	;# 
  6431     071B                     	;# 
  6432     071C                     	;# 
  6433     071D                     	;# 
  6434     071E                     	;# 
  6435     0796                     	;# 
  6436     0797                     	;# 
  6437     0798                     	;# 
  6438     0799                     	;# 
  6439     079A                     	;# 
  6440     079B                     	;# 
  6441     080C                     	;# 
  6442     080D                     	;# 
  6443     080E                     	;# 
  6444     080F                     	;# 
  6445     0810                     	;# 
  6446     0811                     	;# 
  6447     0812                     	;# 
  6448     0813                     	;# 
  6449     0814                     	;# 
  6450     081A                     	;# 
  6451     081B                     	;# 
  6452     081C                     	;# 
  6453     081D                     	;# 
  6454     081E                     	;# 
  6455     081F                     	;# 
  6456     088C                     	;# 
  6457     088D                     	;# 
  6458     088E                     	;# 
  6459     088F                     	;# 
  6460     0890                     	;# 
  6461     0891                     	;# 
  6462     0892                     	;# 
  6463     0893                     	;# 
  6464     0895                     	;# 
  6465     0896                     	;# 
  6466     0897                     	;# 
  6467     0898                     	;# 
  6468     0899                     	;# 
  6469     089A                     	;# 
  6470     089B                     	;# 
  6471     090C                     	;# 
  6472     090E                     	;# 
  6473     090F                     	;# 
  6474     091F                     	;# 
  6475     091F                     	;# 
  6476     098F                     	;# 
  6477     098F                     	;# 
  6478     0990                     	;# 
  6479     0991                     	;# 
  6480     0992                     	;# 
  6481     0993                     	;# 
  6482     0994                     	;# 
  6483     0995                     	;# 
  6484     0996                     	;# 
  6485     0997                     	;# 
  6486     0E0F                     	;# 
  6487     0E10                     	;# 
  6488     0E11                     	;# 
  6489     0E12                     	;# 
  6490     0E13                     	;# 
  6491     0E14                     	;# 
  6492     0E15                     	;# 
  6493     0E16                     	;# 
  6494     0E17                     	;# 
  6495     0E18                     	;# 
  6496     0E19                     	;# 
  6497     0E1A                     	;# 
  6498     0E1B                     	;# 
  6499     0E1C                     	;# 
  6500     0E1D                     	;# 
  6501     0E1E                     	;# 
  6502     0E1F                     	;# 
  6503     0E20                     	;# 
  6504     0E21                     	;# 
  6505     0E22                     	;# 
  6506     0E23                     	;# 
  6507     0E24                     	;# 
  6508     0E25                     	;# 
  6509     0E26                     	;# 
  6510     0E27                     	;# 
  6511     0E28                     	;# 
  6512     0E29                     	;# 
  6513     0E2A                     	;# 
  6514     0E2B                     	;# 
  6515     0E2C                     	;# 
  6516     0E2D                     	;# 
  6517     0E2E                     	;# 
  6518     0E2F                     	;# 
  6519     0E30                     	;# 
  6520     0E31                     	;# 
  6521     0E32                     	;# 
  6522     0E33                     	;# 
  6523     0E34                     	;# 
  6524     0E35                     	;# 
  6525     0E36                     	;# 
  6526     0E37                     	;# 
  6527     0E8F                     	;# 
  6528     0E90                     	;# 
  6529     0E91                     	;# 
  6530     0E92                     	;# 
  6531     0E93                     	;# 
  6532     0E94                     	;# 
  6533     0E95                     	;# 
  6534     0E96                     	;# 
  6535     0E97                     	;# 
  6536     0E9C                     	;# 
  6537     0E9D                     	;# 
  6538     0E9E                     	;# 
  6539     0EA1                     	;# 
  6540     0EA2                     	;# 
  6541     0EA3                     	;# 
  6542     0EA4                     	;# 
  6543     0EA5                     	;# 
  6544     0EA9                     	;# 
  6545     0EAA                     	;# 
  6546     0EAB                     	;# 
  6547     0EAC                     	;# 
  6548     0EB1                     	;# 
  6549     0EB2                     	;# 
  6550     0EB3                     	;# 
  6551     0EB8                     	;# 
  6552     0EB9                     	;# 
  6553     0EBA                     	;# 
  6554     0EBB                     	;# 
  6555     0EBC                     	;# 
  6556     0EBD                     	;# 
  6557     0EBE                     	;# 
  6558     0EC3                     	;# 
  6559     0EC5                     	;# 
  6560     0EC6                     	;# 
  6561     0EC7                     	;# 
  6562     0EC8                     	;# 
  6563     0EC9                     	;# 
  6564     0ECA                     	;# 
  6565     0ECB                     	;# 
  6566     0ECC                     	;# 
  6567     0F10                     	;# 
  6568     0F11                     	;# 
  6569     0F12                     	;# 
  6570     0F13                     	;# 
  6571     0F14                     	;# 
  6572     0F15                     	;# 
  6573     0F16                     	;# 
  6574     0F17                     	;# 
  6575     0F18                     	;# 
  6576     0F19                     	;# 
  6577     0F1A                     	;# 
  6578     0F1B                     	;# 
  6579     0F1C                     	;# 
  6580     0F1D                     	;# 
  6581     0F1E                     	;# 
  6582     0F1F                     	;# 
  6583     0F20                     	;# 
  6584     0F21                     	;# 
  6585     0F22                     	;# 
  6586     0F23                     	;# 
  6587     0F24                     	;# 
  6588     0F25                     	;# 
  6589     0F26                     	;# 
  6590     0F27                     	;# 
  6591     0F28                     	;# 
  6592     0F29                     	;# 
  6593     0F2A                     	;# 
  6594     0F2B                     	;# 
  6595     0F2C                     	;# 
  6596     0F2D                     	;# 
  6597     0F2E                     	;# 
  6598     0F2F                     	;# 
  6599     0F30                     	;# 
  6600     0F31                     	;# 
  6601     0F32                     	;# 
  6602     0F38                     	;# 
  6603     0F39                     	;# 
  6604     0F3A                     	;# 
  6605     0F3B                     	;# 
  6606     0F3C                     	;# 
  6607     0F3D                     	;# 
  6608     0F3E                     	;# 
  6609     0F3F                     	;# 
  6610     0F40                     	;# 
  6611     0F41                     	;# 
  6612     0F43                     	;# 
  6613     0F44                     	;# 
  6614     0F45                     	;# 
  6615     0F46                     	;# 
  6616     0F47                     	;# 
  6617     0F48                     	;# 
  6618     0F49                     	;# 
  6619     0F4A                     	;# 
  6620     0F4B                     	;# 
  6621     0F4C                     	;# 
  6622     0F4E                     	;# 
  6623     0F4F                     	;# 
  6624     0F50                     	;# 
  6625     0F51                     	;# 
  6626     0F52                     	;# 
  6627     0F53                     	;# 
  6628     0F54                     	;# 
  6629     0F55                     	;# 
  6630     0F56                     	;# 
  6631     0F57                     	;# 
  6632     0F59                     	;# 
  6633     0F5A                     	;# 
  6634     0F5B                     	;# 
  6635     0F5C                     	;# 
  6636     0F5D                     	;# 
  6637     0F61                     	;# 
  6638     0F62                     	;# 
  6639     0F64                     	;# 
  6640     0F65                     	;# 
  6641     0F66                     	;# 
  6642     0F67                     	;# 
  6643     0F68                     	;# 
  6644     0F69                     	;# 
  6645     0F6A                     	;# 
  6646     0F6B                     	;# 
  6647     0F6C                     	;# 
  6648     0F6D                     	;# 
  6649     0FE4                     	;# 
  6650     0FE5                     	;# 
  6651     0FE6                     	;# 
  6652     0FE7                     	;# 
  6653     0FE8                     	;# 
  6654     0FE9                     	;# 
  6655     0FEA                     	;# 
  6656     0FEB                     	;# 
  6657     0FED                     	;# 
  6658     0FEE                     	;# 
  6659     0FEF                     	;# 
  6660                           
  6661 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  6662     0000                     
  6663 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  6664     0000                     
  6665 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  6666     0000                     
  6667 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  6668     0000                     
  6669 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  6670     0000                     
  6671 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  6672     0000                     
  6673 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  6674     0000                     
  6675 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  6676     0000                     
  6677 ;; Function _I2C1_DO_TX is unused but had its address taken
  6678     0000                     
  6679 ;; Function _I2C1_DO_RX is unused but had its address taken
  6680     0000                     
  6681 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  6682     0000                     
  6683 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  6684     0000                     
  6685 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  6686     0000                     
  6687 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  6688     0000                     
  6689 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  6690     0000                     
  6691 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  6692     0000                     
  6693 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  6694     0000                     
  6695 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  6696     0000                     
  6697 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  6698     0000                     
  6699 ;; Function _I2C1_DO_RESET is unused but had its address taken
  6700     0000                     
  6701 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  6702     0000                     
  6703 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  6704     0000                     
  6705 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  6706     0000                     
  6707                           	psect	idataBANK1
  6708     07FE                     __pidataBANK1:
  6709                           
  6710                           ;initializer for _count
  6711     07FE  3402               	retlw	2
  6712                           
  6713                           	psect	stringtext1
  6714     1000                     __pstringtext1:
  6715     1000                     _i2c1_fsmStateTable:
  6716     1000  3400               	retlw	0
  6717     1001  3400               	retlw	0
  6718     1002  3400               	retlw	0
  6719     1003  3400               	retlw	0
  6720     1004  3400               	retlw	0
  6721     1005  3400               	retlw	0
  6722     1006  3400               	retlw	0
  6723     1007  3400               	retlw	0
  6724     1008  3400               	retlw	0
  6725     1009  3400               	retlw	0
  6726     100A  3400               	retlw	0
  6727     100B  3400               	retlw	0
  6728     100C  3400               	retlw	0
  6729     100D  3400               	retlw	0
  6730     100E  3400               	retlw	0
  6731     100F  3400               	retlw	0
  6732     1010  3400               	retlw	0
  6733     1011  3400               	retlw	0
  6734     1012  3400               	retlw	0
  6735     1013  3400               	retlw	0
  6736     1014  3400               	retlw	0
  6737     1015  3400               	retlw	0
  6738     1016  3400               	retlw	0
  6739     1017  3400               	retlw	0
  6740     1018  3400               	retlw	0
  6741     1019  3400               	retlw	0
  6742     101A  3400               	retlw	0
  6743     101B  3400               	retlw	0
  6744     101C  3400               	retlw	0
  6745     101D  3400               	retlw	0
  6746     101E  3400               	retlw	0
  6747     101F  3400               	retlw	0
  6748     1020                     __end_of_i2c1_fsmStateTable:
  6749                           
  6750                           	psect	nvBANK1
  6751     00D7                     __pnvBANK1:
  6752     00D7                     _TMR1_InterruptHandler:
  6753     00D7                     	ds	2
  6754     000C                     _PORTAbits	set	12
  6755     0016                     _LATAbits	set	22
  6756     000B                     _INTCONbits	set	11
  6757     0014                     _TRISD	set	20
  6758     0013                     _TRISC	set	19
  6759     0012                     _TRISB	set	18
  6760     0011                     _TRISA	set	17
  6761     0015                     _TRISE	set	21
  6762     0018                     _LATC	set	24
  6763     0017                     _LATB	set	23
  6764     0016                     _LATA	set	22
  6765     0019                     _LATD	set	25
  6766     001A                     _LATE	set	26
  6767     0013                     _TRISCbits	set	19
  6768     0094                     _ADCON1bits	set	148
  6769     008E                     _ADPREVL	set	142
  6770     008F                     _ADPREVH	set	143
  6771     0097                     _ADSTATbits	set	151
  6772     0090                     _ADACCL	set	144
  6773     0091                     _ADACCH	set	145
  6774     0095                     _ADCON2bits	set	149
  6775     0096                     _ADCON3bits	set	150
  6776     008C                     _ADRESL	set	140
  6777     008D                     _ADRESH	set	141
  6778     0093                     _ADCON0bits	set	147
  6779     009D                     _ADACQ	set	157
  6780     0093                     _ADCON0	set	147
  6781     0098                     _ADCLK	set	152
  6782     0099                     _ADACT	set	153
  6783     009A                     _ADREF	set	154
  6784     0097                     _ADSTAT	set	151
  6785     0096                     _ADCON3	set	150
  6786     0095                     _ADCON2	set	149
  6787     0094                     _ADCON1	set	148
  6788     009C                     _ADPRE	set	156
  6789     009B                     _ADCAP	set	155
  6790     009E                     _ADPCH	set	158
  6791     0116                     _ADERRL	set	278
  6792     0117                     _ADERRH	set	279
  6793     0114                     _ADFLTRL	set	276
  6794     0115                     _ADFLTRH	set	277
  6795     010C                     _ADCNT	set	268
  6796     010D                     _ADRPT	set	269
  6797     0113                     _ADSTPTH	set	275
  6798     0112                     _ADSTPTL	set	274
  6799     0111                     _ADUTHH	set	273
  6800     0110                     _ADUTHL	set	272
  6801     010F                     _ADLTHH	set	271
  6802     010E                     _ADLTHL	set	270
  6803     018C                     _SSP1BUF	set	396
  6804     018F                     _SSP1STATbits	set	399
  6805     0191                     _SSP1CON2bits	set	401
  6806     0190                     _SSP1CON1bits	set	400
  6807     018D                     _SSP1ADD	set	397
  6808     0191                     _SSP1CON2	set	401
  6809     0190                     _SSP1CON1	set	400
  6810     018F                     _SSP1STAT	set	399
  6811     021F                     _CCPTMRS1bits	set	543
  6812     020F                     _T1GCONbits	set	527
  6813     020E                     _T1CONbits	set	526
  6814     020E                     _T1CON	set	526
  6815     020C                     _TMR1L	set	524
  6816     020D                     _TMR1H	set	525
  6817     0211                     _T1CLK	set	529
  6818     0210                     _T1GATE	set	528
  6819     020F                     _T1GCON	set	527
  6820     028D                     _PR2	set	653
  6821     028C                     _TMR2	set	652
  6822     028E                     _T2CONbits	set	654
  6823     0291                     _T2RSTbits	set	657
  6824     028F                     _T2HLTbits	set	655
  6825     028E                     _T2CON	set	654
  6826     028C                     _T2TMR	set	652
  6827     028D                     _T2PR	set	653
  6828     0291                     _T2RST	set	657
  6829     028F                     _T2HLT	set	655
  6830     0290                     _T2CLKCON	set	656
  6831     038C                     _PWM6DCL	set	908
  6832     038D                     _PWM6DCH	set	909
  6833     038E                     _PWM6CON	set	910
  6834     071A                     _PIE4bits	set	1818
  6835     0710                     _PIR4bits	set	1808
  6836     0719                     _PIE3bits	set	1817
  6837     070F                     _PIR3bits	set	1807
  6838     079B                     _PMD5	set	1947
  6839     079A                     _PMD4	set	1946
  6840     0799                     _PMD3	set	1945
  6841     0798                     _PMD2	set	1944
  6842     0797                     _PMD1	set	1943
  6843     0796                     _PMD0	set	1942
  6844     0892                     _OSCTUNE	set	2194
  6845     0893                     _OSCFRQ	set	2195
  6846     0891                     _OSCEN	set	2193
  6847     088F                     _OSCCON3	set	2191
  6848     088D                     _OSCCON1	set	2189
  6849     0EC6                     _SSP1DATPPS	set	3782
  6850     0EC5                     _SSP1CLKPPS	set	3781
  6851     0F16                     _RA6PPS	set	3862
  6852     0F24                     _RC4PPS	set	3876
  6853     0F23                     _RC3PPS	set	3875
  6854     0F68                     _INLVLE	set	3944
  6855     0F5D                     _INLVLD	set	3933
  6856     0F52                     _INLVLC	set	3922
  6857     0F47                     _INLVLB	set	3911
  6858     0F3C                     _INLVLA	set	3900
  6859     0F67                     _SLRCONE	set	3943
  6860     0F5C                     _SLRCOND	set	3932
  6861     0F51                     _SLRCONC	set	3921
  6862     0F46                     _SLRCONB	set	3910
  6863     0F3B                     _SLRCONA	set	3899
  6864     0F5B                     _ODCOND	set	3931
  6865     0F50                     _ODCONC	set	3920
  6866     0F45                     _ODCONB	set	3909
  6867     0F3A                     _ODCONA	set	3898
  6868     0F66                     _ODCONE	set	3942
  6869     0F4F                     _WPUC	set	3919
  6870     0F39                     _WPUA	set	3897
  6871     0F44                     _WPUB	set	3908
  6872     0F65                     _WPUE	set	3941
  6873     0F5A                     _WPUD	set	3930
  6874     0F38                     _ANSELA	set	3896
  6875     0F64                     _ANSELE	set	3940
  6876     0F43                     _ANSELB	set	3907
  6877     0F4E                     _ANSELC	set	3918
  6878     0F59                     _ANSELD	set	3929
  6879                           
  6880                           	psect	stringtext2
  6881     1020                     __pstringtext2:
  6882     1020                     STR_1:
  6883     1020  3425               	retlw	37	;'%'
  6884     1021  3430               	retlw	48	;'0'
  6885     1022  3432               	retlw	50	;'2'
  6886     1023  3464               	retlw	100	;'d'
  6887     1024  343A               	retlw	58	;':'
  6888     1025  3425               	retlw	37	;'%'
  6889     1026  3430               	retlw	48	;'0'
  6890     1027  3432               	retlw	50	;'2'
  6891     1028  3464               	retlw	100	;'d'
  6892     1029  343A               	retlw	58	;':'
  6893     102A  3425               	retlw	37	;'%'
  6894     102B  3430               	retlw	48	;'0'
  6895     102C  3432               	retlw	50	;'2'
  6896     102D  3464               	retlw	100	;'d'
  6897     102E  3400               	retlw	0
  6898                           
  6899                           	psect	stringtext3
  6900     102F                     __pstringtext3:
  6901     102F                     STR_2:
  6902     102F  3425               	retlw	37	;'%'
  6903     1030  3430               	retlw	48	;'0'
  6904     1031  3432               	retlw	50	;'2'
  6905     1032  3464               	retlw	100	;'d'
  6906     1033  3420               	retlw	32	;' '
  6907     1034  3443               	retlw	67	;'C'
  6908     1035  3420               	retlw	32	;' '
  6909     1036  3400               	retlw	0
  6910                           
  6911                           	psect	stringtext4
  6912     1037                     __pstringtext4:
  6913     1037                     STR_3:
  6914     1037  344C               	retlw	76	;'L'
  6915     1038  3425               	retlw	37	;'%'
  6916     1039  3464               	retlw	100	;'d'
  6917     103A  3400               	retlw	0
  6918                           
  6919                           	psect	stringtext5
  6920     103B                     __pstringtext5:
  6921     103B                     STR_4:
  6922     103B  3441               	retlw	65	;'A'
  6923     103C  3400               	retlw	0
  6924                           
  6925                           	psect	stringtext6
  6926     103D                     __pstringtext6:
  6927     103D                     STR_5:
  6928     103D  3443               	retlw	67	;'C'
  6929     103E  3400               	retlw	0
  6930                           
  6931                           	psect	stringtext7
  6932     103F                     __pstringtext7:
  6933     103F                     STR_7:
  6934     103F  344C               	retlw	76	;'L'
  6935     1040  3400               	retlw	0
  6936                           
  6937                           	psect	stringtext8
  6938     1041                     __pstringtext8:
  6939     1041                     STR_6:
  6940     1041  3454               	retlw	84	;'T'
  6941     1042  3400               	retlw	0
  6942                           
  6943                           	psect	stringtext9
  6944     0000                     __pstringtext9:
  6945                           
  6946                           	psect	cinit
  6947     001A                     start_initialization:	
  6948                           ; #config settings
  6949                           
  6950     001A                     __initialization:
  6951                           
  6952                           ; Initialize objects allocated to BANK1
  6953     001A  0021               	movlb	1	; select bank1
  6954     001B  3187  27FE  3180   	fcall	__pidataBANK1	;fetch initializer
  6955     001E  00D9               	movwf	__pdataBANK1& (0+127)
  6956                           
  6957                           ; Clear objects allocated to COMMON
  6958     001F  01FA               	clrf	__pbssCOMMON& (0+127)
  6959     0020  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  6960                           
  6961                           ; Clear objects allocated to BANK0
  6962     0021  3065               	movlw	low __pbssBANK0
  6963     0022  0084               	movwf	4
  6964     0023  3000               	movlw	high __pbssBANK0
  6965     0024  0085               	movwf	5
  6966     0025  3007               	movlw	7
  6967     0026  318D  251E  3180   	fcall	clear_ram0
  6968                           
  6969                           ; Clear objects allocated to BANK1
  6970     0029  30A0               	movlw	low __pbssBANK1
  6971     002A  0084               	movwf	4
  6972     002B  3000               	movlw	high __pbssBANK1
  6973     002C  0085               	movwf	5
  6974     002D  3031               	movlw	49
  6975     002E  318D  251E  3180   	fcall	clear_ram0
  6976                           
  6977                           ; Clear objects allocated to BANK2
  6978     0031  3020               	movlw	low __pbssBANK2
  6979     0032  0084               	movwf	4
  6980     0033  3001               	movlw	high __pbssBANK2
  6981     0034  0085               	movwf	5
  6982     0035  3020               	movlw	32
  6983     0036  318D  251E  3180   	fcall	clear_ram0
  6984     0039                     end_of_initialization:	
  6985                           ;End of C runtime variable initialization code
  6986                           
  6987     0039                     __end_of__initialization:
  6988     0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6989     003A  0020               	movlb	0
  6990     003B  3180  283D         	ljmp	_main	;jump to C main() function
  6991                           
  6992                           	psect	bssCOMMON
  6993     007A                     __pbssCOMMON:
  6994     007A                     _timer1ReloadVal:
  6995     007A                     	ds	2
  6996                           
  6997                           	psect	bssBANK0
  6998     0065                     __pbssBANK0:
  6999     0065                     _flags:
  7000     0065                     	ds	1
  7001     0066                     _seconds:
  7002     0066                     	ds	1
  7003     0067                     _minutes:
  7004     0067                     	ds	1
  7005     0068                     _hours:
  7006     0068                     	ds	1
  7007     0069                     _luminosity:
  7008     0069                     	ds	1
  7009     006A                     _temperature:
  7010     006A                     	ds	1
  7011     006B                     _TMR1_overflow:
  7012     006B                     	ds	1
  7013                           
  7014                           	psect	bssBANK1
  7015     00A0                     __pbssBANK1:
  7016     00A0                     _I2C1_Status:
  7017     00A0                     	ds	29
  7018     00BD                     _width:
  7019     00BD                     	ds	2
  7020     00BF                     _prec:
  7021     00BF                     	ds	2
  7022     00C1                     _alarm:
  7023     00C1                     	ds	1
  7024     00C2                     _pwm_count:
  7025     00C2                     	ds	1
  7026     00C3                     _time_buffer:
  7027     00C3                     	ds	8
  7028     00CB                     _measure_buffer:
  7029     00CB                     	ds	6
  7030                           
  7031                           	psect	dataBANK1
  7032     00D9                     __pdataBANK1:
  7033     00D9                     _count:
  7034     00D9                     	ds	1
  7035                           
  7036                           	psect	bssBANK2
  7037     0120                     __pbssBANK2:
  7038     0120                     _dbuf:
  7039     0120                     	ds	32
  7040                           
  7041                           	psect	clrtext
  7042     0D1E                     clear_ram0:	
  7043                           ;	Called with FSR0 containing the base address, and
  7044                           ;	WREG with the size to clear
  7045                           
  7046     0D1E  0064               	clrwdt	;clear the watchdog before getting into this loop
  7047     0D1F                     clrloop0:
  7048     0D1F  0180               	clrf	0	;clear RAM location pointed to by FSR
  7049     0D20  3101               	addfsr 0,1
  7050     0D21  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7051     0D22  2D1F               	goto	clrloop0	;have we reached the end yet?
  7052     0D23  3400               	retlw	0	;all done for this memory range, return
  7053                           
  7054                           	psect	cstackBANK1
  7055     00D1                     __pcstackBANK1:
  7056     00D1                     ??_main:
  7057                           
  7058                           ; 1 bytes @ 0x0
  7059     00D1                     	ds	6
  7060                           
  7061                           	psect	cstackCOMMON
  7062     0070                     __pcstackCOMMON:
  7063     0070                     ?_PMD_Initialize:
  7064     0070                     ?_I2C1_Initialize:	
  7065                           ; 1 bytes @ 0x0
  7066                           
  7067     0070                     ?_PIN_MANAGER_Initialize:	
  7068                           ; 1 bytes @ 0x0
  7069                           
  7070     0070                     ?_OSCILLATOR_Initialize:	
  7071                           ; 1 bytes @ 0x0
  7072                           
  7073     0070                     ?_PWM6_Initialize:	
  7074                           ; 1 bytes @ 0x0
  7075                           
  7076     0070                     ?_ADCC_Initialize:	
  7077                           ; 1 bytes @ 0x0
  7078                           
  7079     0070                     ?_TMR2_Initialize:	
  7080                           ; 1 bytes @ 0x0
  7081                           
  7082     0070                     ?_TMR1_Initialize:	
  7083                           ; 1 bytes @ 0x0
  7084                           
  7085     0070                     ?_TMR1_DefaultInterruptHandler:	
  7086                           ; 1 bytes @ 0x0
  7087                           
  7088     0070                     ??_TMR1_DefaultInterruptHandler:	
  7089                           ; 1 bytes @ 0x0
  7090                           
  7091     0070                     ?_putch:	
  7092                           ; 1 bytes @ 0x0
  7093                           
  7094     0070                     ?_OpenI2C:	
  7095                           ; 1 bytes @ 0x0
  7096                           
  7097     0070                     ?_ReadI2C:	
  7098                           ; 1 bytes @ 0x0
  7099                           
  7100     0070                     ?_WriteI2C:	
  7101                           ; 1 bytes @ 0x0
  7102                           
  7103     0070                     ?_LCDsend:	
  7104                           ; 1 bytes @ 0x0
  7105                           
  7106     0070                     ?_LCDrecv:	
  7107                           ; 1 bytes @ 0x0
  7108                           
  7109     0070                     ?_LCDinit:	
  7110                           ; 1 bytes @ 0x0
  7111                           
  7112     0070                     ?_LCDcmd:	
  7113                           ; 1 bytes @ 0x0
  7114                           
  7115     0070                     ?_LCDchar:	
  7116                           ; 1 bytes @ 0x0
  7117                           
  7118     0070                     ?_SYSTEM_Initialize:	
  7119                           ; 1 bytes @ 0x0
  7120                           
  7121     0070                     ?_TMR1_WriteTimer:	
  7122                           ; 1 bytes @ 0x0
  7123                           
  7124     0070                     ?_TMR1_ISR:	
  7125                           ; 1 bytes @ 0x0
  7126                           
  7127     0070                     ?_INTERRUPT_InterruptManager:	
  7128                           ; 1 bytes @ 0x0
  7129                           
  7130     0070                     ?_TMR1_IRQ:	
  7131                           ; 1 bytes @ 0x0
  7132                           
  7133     0070                     ??_TMR1_IRQ:	
  7134                           ; 1 bytes @ 0x0
  7135                           
  7136     0070                     ?_alarm_handler:	
  7137                           ; 1 bytes @ 0x0
  7138                           
  7139     0070                     ?_readTC74:	
  7140                           ; 1 bytes @ 0x0
  7141                           
  7142     0070                     ?_main:	
  7143                           ; 1 bytes @ 0x0
  7144                           
  7145     0070                     putch@c:	
  7146                           ; 1 bytes @ 0x0
  7147                           
  7148     0070                     TMR1_WriteTimer@timerVal:	
  7149                           ; 1 bytes @ 0x0
  7150                           
  7151                           
  7152                           ; 2 bytes @ 0x0
  7153     0070                     	ds	2
  7154     0072                     ??_PMD_Initialize:
  7155     0072                     ??_I2C1_Initialize:	
  7156                           ; 1 bytes @ 0x2
  7157                           
  7158     0072                     ??_PIN_MANAGER_Initialize:	
  7159                           ; 1 bytes @ 0x2
  7160                           
  7161     0072                     ??_OSCILLATOR_Initialize:	
  7162                           ; 1 bytes @ 0x2
  7163                           
  7164     0072                     ??_PWM6_Initialize:	
  7165                           ; 1 bytes @ 0x2
  7166                           
  7167     0072                     ??_ADCC_Initialize:	
  7168                           ; 1 bytes @ 0x2
  7169                           
  7170     0072                     ??_TMR2_Initialize:	
  7171                           ; 1 bytes @ 0x2
  7172                           
  7173     0072                     ?_TMR1_SetInterruptHandler:	
  7174                           ; 1 bytes @ 0x2
  7175                           
  7176     0072                     ??_putch:	
  7177                           ; 1 bytes @ 0x2
  7178                           
  7179     0072                     ??_OpenI2C:	
  7180                           ; 1 bytes @ 0x2
  7181                           
  7182     0072                     ??_ReadI2C:	
  7183                           ; 1 bytes @ 0x2
  7184                           
  7185     0072                     ??_WriteI2C:	
  7186                           ; 1 bytes @ 0x2
  7187                           
  7188     0072                     ??_TMR1_WriteTimer:	
  7189                           ; 1 bytes @ 0x2
  7190                           
  7191     0072                     ??_TMR1_ISR:	
  7192                           ; 1 bytes @ 0x2
  7193                           
  7194     0072                     ??_INTERRUPT_InterruptManager:	
  7195                           ; 1 bytes @ 0x2
  7196                           
  7197     0072                     ??_alarm_handler:	
  7198                           ; 1 bytes @ 0x2
  7199                           
  7200     0072                     ?_fputc:	
  7201                           ; 1 bytes @ 0x2
  7202                           
  7203     0072                     ?_ADCC_GetSingleConversion:	
  7204                           ; 2 bytes @ 0x2
  7205                           
  7206     0072                     ?___wmul:	
  7207                           ; 2 bytes @ 0x2
  7208                           
  7209     0072                     ?___awdiv:	
  7210                           ; 2 bytes @ 0x2
  7211                           
  7212     0072                     ?___awmod:	
  7213                           ; 2 bytes @ 0x2
  7214                           
  7215     0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  7216                           ; 2 bytes @ 0x2
  7217                           
  7218     0072                     ___wmul@multiplier:	
  7219                           ; 2 bytes @ 0x2
  7220                           
  7221     0072                     ___awdiv@divisor:	
  7222                           ; 2 bytes @ 0x2
  7223                           
  7224     0072                     ___awmod@divisor:	
  7225                           ; 2 bytes @ 0x2
  7226                           
  7227     0072                     fputc@c:	
  7228                           ; 2 bytes @ 0x2
  7229                           
  7230                           
  7231                           ; 2 bytes @ 0x2
  7232     0072                     	ds	1
  7233     0073                     WriteI2C@data_out:
  7234                           
  7235                           ; 1 bytes @ 0x3
  7236     0073                     	ds	1
  7237     0074                     ??_TMR1_Initialize:
  7238     0074                     ??_TMR1_SetInterruptHandler:	
  7239                           ; 1 bytes @ 0x4
  7240                           
  7241     0074                     ??_LCDsend:	
  7242                           ; 1 bytes @ 0x4
  7243                           
  7244     0074                     ??_LCDrecv:	
  7245                           ; 1 bytes @ 0x4
  7246                           
  7247     0074                     ?_LCDsend2x4:	
  7248                           ; 1 bytes @ 0x4
  7249                           
  7250     0074                     ??_SYSTEM_Initialize:	
  7251                           ; 1 bytes @ 0x4
  7252                           
  7253     0074                     ??_ADCC_GetSingleConversion:	
  7254                           ; 1 bytes @ 0x4
  7255                           
  7256     0074                     ??_readTC74:	
  7257                           ; 1 bytes @ 0x4
  7258                           
  7259     0074                     LCDsend2x4@mode:	
  7260                           ; 1 bytes @ 0x4
  7261                           
  7262     0074                     ADCC_GetSingleConversion@channel:	
  7263                           ; 1 bytes @ 0x4
  7264                           
  7265     0074                     fputc@fp:	
  7266                           ; 1 bytes @ 0x4
  7267                           
  7268     0074                     ___wmul@multiplicand:	
  7269                           ; 1 bytes @ 0x4
  7270                           
  7271     0074                     ___awdiv@dividend:	
  7272                           ; 2 bytes @ 0x4
  7273                           
  7274     0074                     ___awmod@dividend:	
  7275                           ; 2 bytes @ 0x4
  7276                           
  7277                           
  7278                           ; 2 bytes @ 0x4
  7279     0074                     	ds	1
  7280     0075                     ??_fputc:
  7281     0075                     ??_LCDsend2x4:	
  7282                           ; 1 bytes @ 0x5
  7283                           
  7284     0075                     LCDsend@c:	
  7285                           ; 1 bytes @ 0x5
  7286                           
  7287     0075                     readTC74@value:	
  7288                           ; 1 bytes @ 0x5
  7289                           
  7290                           
  7291                           ; 1 bytes @ 0x5
  7292     0075                     	ds	1
  7293     0076                     ??___wmul:
  7294     0076                     ??___awdiv:	
  7295                           ; 1 bytes @ 0x6
  7296                           
  7297     0076                     ??___awmod:	
  7298                           ; 1 bytes @ 0x6
  7299                           
  7300     0076                     LCDrecv@hc:	
  7301                           ; 1 bytes @ 0x6
  7302                           
  7303     0076                     LCDsend2x4@c:	
  7304                           ; 1 bytes @ 0x6
  7305                           
  7306     0076                     ___wmul@product:	
  7307                           ; 1 bytes @ 0x6
  7308                           
  7309                           
  7310                           ; 2 bytes @ 0x6
  7311     0076                     	ds	1
  7312     0077                     LCDrecv@lc:
  7313     0077                     LCDsend2x4@hc:	
  7314                           ; 1 bytes @ 0x7
  7315                           
  7316     0077                     ___awmod@counter:	
  7317                           ; 1 bytes @ 0x7
  7318                           
  7319                           
  7320                           ; 1 bytes @ 0x7
  7321     0077                     	ds	1
  7322     0078                     ?_read_prec_or_width:
  7323     0078                     LCDrecv@mode:	
  7324                           ; 2 bytes @ 0x8
  7325                           
  7326     0078                     LCDsend2x4@lc:	
  7327                           ; 1 bytes @ 0x8
  7328                           
  7329     0078                     ___awmod@sign:	
  7330                           ; 1 bytes @ 0x8
  7331                           
  7332     0078                     read_prec_or_width@ap:	
  7333                           ; 1 bytes @ 0x8
  7334                           
  7335                           
  7336                           ; 1 bytes @ 0x8
  7337     0078                     	ds	1
  7338     0079                     ??_LCDinit:
  7339     0079                     ??_LCDcmd:	
  7340                           ; 1 bytes @ 0x9
  7341                           
  7342     0079                     ??_LCDchar:	
  7343                           ; 1 bytes @ 0x9
  7344                           
  7345     0079                     ??_LCDbusy:	
  7346                           ; 1 bytes @ 0x9
  7347                           
  7348     0079                     LCDcmd@c:	
  7349                           ; 1 bytes @ 0x9
  7350                           
  7351     0079                     LCDchar@c:	
  7352                           ; 1 bytes @ 0x9
  7353                           
  7354                           
  7355                           ; 1 bytes @ 0x9
  7356     0079                     	ds	1
  7357     007A                     ??_LCDpos:
  7358                           
  7359                           	psect	cstackBANK0
  7360     0020                     __pcstackBANK0:	
  7361                           ; 1 bytes @ 0xA
  7362                           
  7363     0020                     ?_LCDstr:
  7364     0020                     ?_LCDpos:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367     0020                     ??_read_prec_or_width:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370     0020                     ?_fputs:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373     0020                     ?_abs:	
  7374                           ; 2 bytes @ 0x0
  7375                           
  7376     0020                     ?_LCDbusy:	
  7377                           ; 2 bytes @ 0x0
  7378                           
  7379     0020                     LCDpos@c:	
  7380                           ; 2 bytes @ 0x0
  7381                           
  7382     0020                     ___awdiv@counter:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385     0020                     fputs@fp:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388     0020                     LCDstr@p:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391     0020                     abs@a:	
  7392                           ; 2 bytes @ 0x0
  7393                           
  7394                           
  7395                           ; 2 bytes @ 0x0
  7396     0020                     	ds	1
  7397     0021                     ??_fputs:
  7398     0021                     LCDpos@l:	
  7399                           ; 1 bytes @ 0x1
  7400                           
  7401     0021                     ___awdiv@sign:	
  7402                           ; 1 bytes @ 0x1
  7403                           
  7404                           
  7405                           ; 1 bytes @ 0x1
  7406     0021                     	ds	1
  7407     0022                     ??_abs:
  7408     0022                     ??_LCDstr:	
  7409                           ; 1 bytes @ 0x2
  7410                           
  7411     0022                     LCDpos@p:	
  7412                           ; 1 bytes @ 0x2
  7413                           
  7414     0022                     ___awdiv@quotient:	
  7415                           ; 1 bytes @ 0x2
  7416                           
  7417                           
  7418                           ; 2 bytes @ 0x2
  7419     0022                     	ds	1
  7420     0023                     read_prec_or_width@c:
  7421     0023                     fputs@c:	
  7422                           ; 1 bytes @ 0x3
  7423                           
  7424                           
  7425                           ; 1 bytes @ 0x3
  7426     0023                     	ds	1
  7427     0024                     LCDstr@c:
  7428     0024                     read_prec_or_width@n:	
  7429                           ; 1 bytes @ 0x4
  7430                           
  7431     0024                     fputs@i:	
  7432                           ; 2 bytes @ 0x4
  7433                           
  7434                           
  7435                           ; 2 bytes @ 0x4
  7436     0024                     	ds	2
  7437     0026                     read_prec_or_width@fmt:
  7438     0026                     fputs@s:	
  7439                           ; 1 bytes @ 0x6
  7440                           
  7441                           
  7442                           ; 1 bytes @ 0x6
  7443     0026                     	ds	1
  7444     0027                     ?_pad:
  7445     0027                     pad@buf:	
  7446                           ; 1 bytes @ 0x7
  7447                           
  7448                           
  7449                           ; 1 bytes @ 0x7
  7450     0027                     	ds	1
  7451     0028                     pad@p:
  7452                           
  7453                           ; 2 bytes @ 0x8
  7454     0028                     	ds	2
  7455     002A                     ??_pad:
  7456                           
  7457                           ; 1 bytes @ 0xA
  7458     002A                     	ds	1
  7459     002B                     pad@i:
  7460                           
  7461                           ; 2 bytes @ 0xB
  7462     002B                     	ds	2
  7463     002D                     pad@fp:
  7464                           
  7465                           ; 1 bytes @ 0xD
  7466     002D                     	ds	1
  7467     002E                     ?_dtoa:
  7468     002E                     dtoa@d:	
  7469                           ; 1 bytes @ 0xE
  7470                           
  7471                           
  7472                           ; 2 bytes @ 0xE
  7473     002E                     	ds	2
  7474     0030                     ??_dtoa:
  7475                           
  7476                           ; 1 bytes @ 0x10
  7477     0030                     	ds	1
  7478     0031                     dtoa@fp:
  7479                           
  7480                           ; 1 bytes @ 0x11
  7481     0031                     	ds	1
  7482     0032                     _dtoa$2988:
  7483                           
  7484                           ; 2 bytes @ 0x12
  7485     0032                     	ds	2
  7486     0034                     dtoa@p:
  7487                           
  7488                           ; 1 bytes @ 0x14
  7489     0034                     	ds	1
  7490     0035                     dtoa@w:
  7491                           
  7492                           ; 2 bytes @ 0x15
  7493     0035                     	ds	2
  7494     0037                     dtoa@s:
  7495                           
  7496                           ; 1 bytes @ 0x17
  7497     0037                     	ds	1
  7498     0038                     dtoa@i:
  7499                           
  7500                           ; 2 bytes @ 0x18
  7501     0038                     	ds	2
  7502     003A                     ?_vfpfcnvrt:
  7503     003A                     vfpfcnvrt@fmt:	
  7504                           ; 1 bytes @ 0x1A
  7505                           
  7506                           
  7507                           ; 1 bytes @ 0x1A
  7508     003A                     	ds	1
  7509     003B                     vfpfcnvrt@ap:
  7510                           
  7511                           ; 1 bytes @ 0x1B
  7512     003B                     	ds	1
  7513     003C                     ??_vfpfcnvrt:
  7514                           
  7515                           ; 1 bytes @ 0x1C
  7516     003C                     	ds	4
  7517     0040                     vfpfcnvrt@convarg:
  7518                           
  7519                           ; 4 bytes @ 0x20
  7520     0040                     	ds	4
  7521     0044                     vfpfcnvrt@done:
  7522                           
  7523                           ; 1 bytes @ 0x24
  7524     0044                     	ds	1
  7525     0045                     vfpfcnvrt@fp:
  7526                           
  7527                           ; 1 bytes @ 0x25
  7528     0045                     	ds	1
  7529     0046                     vfpfcnvrt@cp:
  7530                           
  7531                           ; 2 bytes @ 0x26
  7532     0046                     	ds	2
  7533     0048                     ?_vfprintf:
  7534     0048                     vfprintf@fmt:	
  7535                           ; 2 bytes @ 0x28
  7536                           
  7537                           
  7538                           ; 2 bytes @ 0x28
  7539     0048                     	ds	2
  7540     004A                     vfprintf@ap:
  7541                           
  7542                           ; 1 bytes @ 0x2A
  7543     004A                     	ds	1
  7544     004B                     ??_vfprintf:
  7545                           
  7546                           ; 1 bytes @ 0x2B
  7547     004B                     	ds	1
  7548     004C                     vfprintf@fp:
  7549                           
  7550                           ; 1 bytes @ 0x2C
  7551     004C                     	ds	1
  7552     004D                     vfprintf@cfmt:
  7553                           
  7554                           ; 2 bytes @ 0x2D
  7555     004D                     	ds	2
  7556     004F                     ?_sprintf:
  7557     004F                     sprintf@fmt:	
  7558                           ; 2 bytes @ 0x2F
  7559                           
  7560                           
  7561                           ; 2 bytes @ 0x2F
  7562     004F                     	ds	8
  7563     0057                     ??_sprintf:
  7564                           
  7565                           ; 1 bytes @ 0x37
  7566     0057                     	ds	1
  7567     0058                     sprintf@ap:
  7568                           
  7569                           ; 1 bytes @ 0x38
  7570     0058                     	ds	1
  7571     0059                     sprintf@s:
  7572                           
  7573                           ; 1 bytes @ 0x39
  7574     0059                     	ds	1
  7575     005A                     sprintf@f:
  7576                           
  7577                           ; 11 bytes @ 0x3A
  7578     005A                     	ds	11
  7579                           
  7580                           	psect	maintext
  7581     003D                     __pmaintext:	
  7582 ;;
  7583 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  7584 ;;
  7585 ;; *************** function _main *****************
  7586 ;; Defined at:
  7587 ;;		line 135 in file "main.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : B1F/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7603 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;Total ram usage:        6 bytes
  7606 ;; Hardware stack levels required when called: 11
  7607 ;; This function calls:
  7608 ;;		_ADCC_GetSingleConversion
  7609 ;;		_LCDbusy
  7610 ;;		_LCDcmd
  7611 ;;		_LCDinit
  7612 ;;		_LCDpos
  7613 ;;		_LCDstr
  7614 ;;		_OpenI2C
  7615 ;;		_SYSTEM_Initialize
  7616 ;;		_TMR1_SetInterruptHandler
  7617 ;;		_alarm_handler
  7618 ;;		_readTC74
  7619 ;;		_sprintf
  7620 ;; This function is called by:
  7621 ;;		Startup code after reset
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625     003D                     _main:	
  7626                           ;psect for function _main
  7627                           
  7628     003D                     l5190:	
  7629                           ;incstack = 0
  7630                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7631                           
  7632                           
  7633                           ;main.c: 138:     SYSTEM_Initialize();
  7634     003D  318E  2619  3180   	fcall	_SYSTEM_Initialize
  7635     0040                     l5192:
  7636                           
  7637                           ;main.c: 140:     (INTCONbits.GIE = 1);
  7638     0040  178B               	bsf	11,7	;volatile
  7639     0041                     l5194:
  7640                           
  7641                           ;main.c: 141:     (INTCONbits.PEIE = 1);
  7642     0041  170B               	bsf	11,6	;volatile
  7643                           
  7644                           ;main.c: 143:     TMR1_SetInterruptHandler(TMR1_IRQ);
  7645     0042  300E               	movlw	low _TMR1_IRQ
  7646     0043  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7647     0044  300D               	movlw	high _TMR1_IRQ
  7648     0045  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7649     0046  318D  2512  3180   	fcall	_TMR1_SetInterruptHandler
  7650                           
  7651                           ;main.c: 146:     OpenI2C();
  7652     0049  318D  254E  3180   	fcall	_OpenI2C
  7653     004C                     l5196:
  7654     004C  0020               	movlb	0	; select bank0
  7655     004D  1316               	bcf	22,6	;volatile
  7656     004E                     l1225:
  7657                           
  7658                           ;main.c: 155:     LCDinit();
  7659     004E  3186  2624  3180   	fcall	_LCDinit
  7660     0051                     l5198:
  7661                           
  7662                           ;main.c: 158:     {;main.c: 160:         if (TMR1_overflow)
  7663     0051  0020               	movlb	0	; select bank0
  7664     0052  086B               	movf	_TMR1_overflow,w	;volatile
  7665     0053  1903               	btfsc	3,2
  7666     0054  2856               	goto	u4101
  7667     0055  2857               	goto	u4100
  7668     0056                     u4101:
  7669     0056  2851               	goto	l5198
  7670     0057                     u4100:
  7671     0057                     l5200:
  7672                           
  7673                           ;main.c: 161:   {;main.c: 162:             LCDcmd(0x80);
  7674     0057  3080               	movlw	128
  7675     0058  318D  2524  3180   	fcall	_LCDcmd
  7676     005B                     l5202:
  7677                           
  7678                           ;main.c: 164:             sprintf(time_buffer, "%02d:%02d:%02d", hours, minutes, seconds
      +                          );
  7679     005B  3020               	movlw	low (STR_1| (0+32768))
  7680     005C  0020               	movlb	0	; select bank0
  7681     005D  00CF               	movwf	sprintf@fmt
  7682     005E  3090               	movlw	high (STR_1| (0+32768))
  7683     005F  00D0               	movwf	sprintf@fmt+1
  7684     0060  0868               	movf	_hours,w
  7685     0061  0021               	movlb	1	; select bank1
  7686     0062  00D1               	movwf	??_main^(0+128)
  7687     0063  01D2               	clrf	(??_main^(0+128)+1)
  7688     0064  0851               	movf	??_main^(0+128),w
  7689     0065  0020               	movlb	0	; select bank0
  7690     0066  00D1               	movwf	?_sprintf+2
  7691     0067  0021               	movlb	1	; select bank1
  7692     0068  0852               	movf	(??_main+1)^(0+128),w
  7693     0069  0020               	movlb	0	; select bank0
  7694     006A  00D2               	movwf	?_sprintf+3
  7695     006B  0867               	movf	_minutes,w
  7696     006C  0021               	movlb	1	; select bank1
  7697     006D  00D3               	movwf	(??_main+2)^(0+128)
  7698     006E  01D4               	clrf	((??_main+2)^(0+128)+1)
  7699     006F  0853               	movf	(??_main+2)^(0+128),w
  7700     0070  0020               	movlb	0	; select bank0
  7701     0071  00D3               	movwf	?_sprintf+4
  7702     0072  0021               	movlb	1	; select bank1
  7703     0073  0854               	movf	(??_main+3)^(0+128),w
  7704     0074  0020               	movlb	0	; select bank0
  7705     0075  00D4               	movwf	?_sprintf+5
  7706     0076  0866               	movf	_seconds,w
  7707     0077  0021               	movlb	1	; select bank1
  7708     0078  00D5               	movwf	(??_main+4)^(0+128)
  7709     0079  01D6               	clrf	((??_main+4)^(0+128)+1)
  7710     007A  0855               	movf	(??_main+4)^(0+128),w
  7711     007B  0020               	movlb	0	; select bank0
  7712     007C  00D5               	movwf	?_sprintf+6
  7713     007D  0021               	movlb	1	; select bank1
  7714     007E  0856               	movf	(??_main+5)^(0+128),w
  7715     007F  0020               	movlb	0	; select bank0
  7716     0080  00D6               	movwf	?_sprintf+7
  7717     0081  30C3               	movlw	(low (_time_buffer| 0))& (0+255)
  7718     0082  318E  2685  3180   	fcall	_sprintf
  7719     0085                     l5204:
  7720                           
  7721                           ;main.c: 166:             LCDstr(time_buffer);
  7722     0085  30C3               	movlw	low _time_buffer
  7723     0086  0020               	movlb	0	; select bank0
  7724     0087  00A0               	movwf	LCDstr@p
  7725     0088  3000               	movlw	high _time_buffer
  7726     0089  00A1               	movwf	LCDstr@p+1
  7727     008A  318E  2600  3180   	fcall	_LCDstr
  7728     008D                     l5206:
  7729     008D  1003               	clrc
  7730     008E  0020               	movlb	0	; select bank0
  7731     008F  1F96               	btfss	22,7	;volatile
  7732     0090  1403               	setc
  7733     0091  1803               	btfsc	3,0
  7734     0092  2894               	goto	u4111
  7735     0093  2897               	goto	u4110
  7736     0094                     u4111:
  7737     0094  0020               	movlb	0	; select bank0
  7738     0095  1796               	bsf	22,7	;volatile
  7739     0096  2899               	goto	u4124
  7740     0097                     u4110:
  7741     0097  0020               	movlb	0	; select bank0
  7742     0098  1396               	bcf	22,7	;volatile
  7743     0099                     u4124:
  7744     0099                     l5208:
  7745                           
  7746                           ;main.c: 172:             count++;
  7747     0099  3001               	movlw	1
  7748     009A  0021               	movlb	1	; select bank1
  7749     009B  00D1               	movwf	??_main^(0+128)
  7750     009C  0851               	movf	??_main^(0+128),w
  7751     009D  07D9               	addwf	_count^(0+128),f
  7752     009E                     l5210:
  7753                           
  7754                           ;main.c: 175:             if (count == 3)
  7755     009E  3003               	movlw	3
  7756     009F  0659               	xorwf	_count^(0+128),w
  7757     00A0  1D03               	btfss	3,2
  7758     00A1  28A3               	goto	u4131
  7759     00A2  28A4               	goto	u4130
  7760     00A3                     u4131:
  7761     00A3  2907               	goto	l5234
  7762     00A4                     u4130:
  7763     00A4                     l5212:
  7764                           
  7765                           ;main.c: 176:    {;main.c: 178:                 temperature = readTC74();
  7766     00A4  3182  22EA  3180   	fcall	_readTC74
  7767     00A7  0020               	movlb	0	; select bank0
  7768     00A8  00EA               	movwf	_temperature
  7769     00A9                     l5214:
  7770                           
  7771                           ;main.c: 179:                 luminosity = ADCC_GetSingleConversion(0x0) >> 8;
  7772     00A9  3000               	movlw	0
  7773     00AA  318D  2587  3180   	fcall	_ADCC_GetSingleConversion
  7774     00AD  0873               	movf	?_ADCC_GetSingleConversion+1,w
  7775     00AE  0020               	movlb	0	; select bank0
  7776     00AF  00E9               	movwf	_luminosity
  7777     00B0                     l5216:
  7778                           
  7779                           ;main.c: 182:                 LCDcmd(0xc0);
  7780     00B0  30C0               	movlw	192
  7781     00B1  318D  2524  3180   	fcall	_LCDcmd
  7782     00B4                     l5218:
  7783                           
  7784                           ;main.c: 183:                 sprintf(measure_buffer, "%02d C ", temperature);
  7785     00B4  302F               	movlw	low (STR_2| (0+32768))
  7786     00B5  0020               	movlb	0	; select bank0
  7787     00B6  00CF               	movwf	sprintf@fmt
  7788     00B7  3090               	movlw	high (STR_2| (0+32768))
  7789     00B8  00D0               	movwf	sprintf@fmt+1
  7790     00B9  086A               	movf	_temperature,w
  7791     00BA  0021               	movlb	1	; select bank1
  7792     00BB  00D1               	movwf	??_main^(0+128)
  7793     00BC  01D2               	clrf	(??_main^(0+128)+1)
  7794     00BD  0851               	movf	??_main^(0+128),w
  7795     00BE  0020               	movlb	0	; select bank0
  7796     00BF  00D1               	movwf	?_sprintf+2
  7797     00C0  0021               	movlb	1	; select bank1
  7798     00C1  0852               	movf	(??_main+1)^(0+128),w
  7799     00C2  0020               	movlb	0	; select bank0
  7800     00C3  00D2               	movwf	?_sprintf+3
  7801     00C4  30CB               	movlw	(low (_measure_buffer| 0))& (0+255)
  7802     00C5  318E  2685  3180   	fcall	_sprintf
  7803     00C8                     l5220:	
  7804                           ;main.c: 184:                 while (LCDbusy());
  7805                           
  7806     00C8  318D  25AB  3180   	fcall	_LCDbusy
  7807     00CB  0020               	movlb	0	; select bank0
  7808     00CC  0820               	movf	?_LCDbusy,w
  7809     00CD  0421               	iorwf	?_LCDbusy+1,w
  7810     00CE  1D03               	btfss	3,2
  7811     00CF  28D1               	goto	u4141
  7812     00D0  28D2               	goto	u4140
  7813     00D1                     u4141:
  7814     00D1  28C8               	goto	l5220
  7815     00D2                     u4140:
  7816     00D2                     l5222:
  7817                           
  7818                           ;main.c: 185:                 LCDstr(measure_buffer);
  7819     00D2  30CB               	movlw	low _measure_buffer
  7820     00D3  00A0               	movwf	LCDstr@p
  7821     00D4  3000               	movlw	high _measure_buffer
  7822     00D5  00A1               	movwf	LCDstr@p+1
  7823     00D6  318E  2600  3180   	fcall	_LCDstr
  7824     00D9                     l5224:
  7825                           
  7826                           ;main.c: 188:                 LCDpos(1,14);
  7827     00D9  300E               	movlw	14
  7828     00DA  0020               	movlb	0	; select bank0
  7829     00DB  00A0               	movwf	LCDpos@c
  7830     00DC  3001               	movlw	1
  7831     00DD  318D  25BE  3180   	fcall	_LCDpos
  7832     00E0                     l5226:
  7833                           
  7834                           ;main.c: 189:                 sprintf(measure_buffer, "L%d", luminosity);
  7835     00E0  3037               	movlw	low (STR_3| (0+32768))
  7836     00E1  0020               	movlb	0	; select bank0
  7837     00E2  00CF               	movwf	sprintf@fmt
  7838     00E3  3090               	movlw	high (STR_3| (0+32768))
  7839     00E4  00D0               	movwf	sprintf@fmt+1
  7840     00E5  0869               	movf	_luminosity,w
  7841     00E6  0021               	movlb	1	; select bank1
  7842     00E7  00D1               	movwf	??_main^(0+128)
  7843     00E8  01D2               	clrf	(??_main^(0+128)+1)
  7844     00E9  0851               	movf	??_main^(0+128),w
  7845     00EA  0020               	movlb	0	; select bank0
  7846     00EB  00D1               	movwf	?_sprintf+2
  7847     00EC  0021               	movlb	1	; select bank1
  7848     00ED  0852               	movf	(??_main+1)^(0+128),w
  7849     00EE  0020               	movlb	0	; select bank0
  7850     00EF  00D2               	movwf	?_sprintf+3
  7851     00F0  30CB               	movlw	(low (_measure_buffer| 0))& (0+255)
  7852     00F1  318E  2685  3180   	fcall	_sprintf
  7853     00F4                     l5228:	
  7854                           ;main.c: 190:                 while (LCDbusy());
  7855                           
  7856     00F4  318D  25AB  3180   	fcall	_LCDbusy
  7857     00F7  0020               	movlb	0	; select bank0
  7858     00F8  0820               	movf	?_LCDbusy,w
  7859     00F9  0421               	iorwf	?_LCDbusy+1,w
  7860     00FA  1D03               	btfss	3,2
  7861     00FB  28FD               	goto	u4151
  7862     00FC  28FE               	goto	u4150
  7863     00FD                     u4151:
  7864     00FD  28F4               	goto	l5228
  7865     00FE                     u4150:
  7866     00FE                     l5230:
  7867                           
  7868                           ;main.c: 191:                 LCDstr(measure_buffer);
  7869     00FE  30CB               	movlw	low _measure_buffer
  7870     00FF  00A0               	movwf	LCDstr@p
  7871     0100  3000               	movlw	high _measure_buffer
  7872     0101  00A1               	movwf	LCDstr@p+1
  7873     0102  318E  2600  3180   	fcall	_LCDstr
  7874     0105                     l5232:
  7875                           
  7876                           ;main.c: 194:                 count = 0;
  7877     0105  0021               	movlb	1	; select bank1
  7878     0106  01D9               	clrf	_count^(0+128)
  7879     0107                     l5234:
  7880                           
  7881                           ;main.c: 199:    {;main.c: 200:                 LCDpos(0,15);
  7882     0107  300F               	movlw	15
  7883     0108  0020               	movlb	0	; select bank0
  7884     0109  00A0               	movwf	LCDpos@c
  7885     010A  3000               	movlw	0
  7886     010B  318D  25BE  3180   	fcall	_LCDpos
  7887     010E                     l5236:
  7888                           
  7889                           ;main.c: 201:                 LCDstr("A");
  7890     010E  303B               	movlw	low (STR_4| (0+32768))
  7891     010F  0020               	movlb	0	; select bank0
  7892     0110  00A0               	movwf	LCDstr@p
  7893     0111  3090               	movlw	high (STR_4| (0+32768))
  7894     0112  00A1               	movwf	LCDstr@p+1
  7895     0113  318E  2600  3180   	fcall	_LCDstr
  7896     0116                     l5238:
  7897                           
  7898                           ;main.c: 204:                 LCDpos(0,11);
  7899     0116  300B               	movlw	11
  7900     0117  0020               	movlb	0	; select bank0
  7901     0118  00A0               	movwf	LCDpos@c
  7902     0119  3000               	movlw	0
  7903     011A  318D  25BE  3180   	fcall	_LCDpos
  7904     011D                     l5240:
  7905                           
  7906                           ;main.c: 205:                 if (hours == 1 && minutes == 0 && seconds == 0)
  7907     011D  0020               	movlb	0	; select bank0
  7908     011E  0368               	decf	_hours,w
  7909     011F  1D03               	btfss	3,2
  7910     0120  2922               	goto	u4161
  7911     0121  2923               	goto	u4160
  7912     0122                     u4161:
  7913     0122  2937               	goto	l5250
  7914     0123                     u4160:
  7915     0123                     l5242:
  7916     0123  0867               	movf	_minutes,w
  7917     0124  1D03               	btfss	3,2
  7918     0125  2927               	goto	u4171
  7919     0126  2928               	goto	u4170
  7920     0127                     u4171:
  7921     0127  2937               	goto	l5250
  7922     0128                     u4170:
  7923     0128                     l5244:
  7924     0128  0866               	movf	_seconds,w
  7925     0129  1D03               	btfss	3,2
  7926     012A  292C               	goto	u4181
  7927     012B  292D               	goto	u4180
  7928     012C                     u4181:
  7929     012C  2937               	goto	l5250
  7930     012D                     u4180:
  7931     012D                     l5246:
  7932                           
  7933                           ;main.c: 206:        {;main.c: 207:                     LCDstr("C");
  7934     012D  303D               	movlw	low (STR_5| (0+32768))
  7935     012E  00A0               	movwf	LCDstr@p
  7936     012F  3090               	movlw	high (STR_5| (0+32768))
  7937     0130  00A1               	movwf	LCDstr@p+1
  7938     0131  318E  2600  3180   	fcall	_LCDstr
  7939     0134                     l5248:
  7940                           
  7941                           ;main.c: 208:      alarm_handler();
  7942     0134  318D  2518  3180   	fcall	_alarm_handler
  7943     0137                     l5250:
  7944                           
  7945                           ;main.c: 212:                 LCDpos(0,12);
  7946     0137  300C               	movlw	12
  7947     0138  0020               	movlb	0	; select bank0
  7948     0139  00A0               	movwf	LCDpos@c
  7949     013A  3000               	movlw	0
  7950     013B  318D  25BE  3180   	fcall	_LCDpos
  7951     013E                     l5252:
  7952                           
  7953                           ;main.c: 213:                 if (temperature > 25)
  7954     013E  301A               	movlw	26
  7955     013F  0020               	movlb	0	; select bank0
  7956     0140  026A               	subwf	_temperature,w
  7957     0141  1C03               	skipc
  7958     0142  2944               	goto	u4191
  7959     0143  2945               	goto	u4190
  7960     0144                     u4191:
  7961     0144  2951               	goto	l5260
  7962     0145                     u4190:
  7963     0145                     l5254:
  7964                           
  7965                           ;main.c: 214:     {;main.c: 215:                     LCDstr("T");
  7966     0145  3041               	movlw	low (STR_6| (0+32768))
  7967     0146  00A0               	movwf	LCDstr@p
  7968     0147  3090               	movlw	high (STR_6| (0+32768))
  7969     0148  00A1               	movwf	LCDstr@p+1
  7970     0149  318E  2600  3180   	fcall	_LCDstr
  7971     014C                     l5256:
  7972     014C  0020               	movlb	0	; select bank0
  7973     014D  1696               	bsf	22,5	;volatile
  7974     014E                     l5258:
  7975                           
  7976                           ;main.c: 218:      alarm_handler();
  7977     014E  318D  2518  3180   	fcall	_alarm_handler
  7978     0151                     l5260:
  7979                           
  7980                           ;main.c: 222:                 LCDpos(0,13);
  7981     0151  300D               	movlw	13
  7982     0152  0020               	movlb	0	; select bank0
  7983     0153  00A0               	movwf	LCDpos@c
  7984     0154  3000               	movlw	0
  7985     0155  318D  25BE  3180   	fcall	_LCDpos
  7986     0158                     l5262:
  7987                           
  7988                           ;main.c: 223:                 if (luminosity > 2)
  7989     0158  3003               	movlw	3
  7990     0159  0020               	movlb	0	; select bank0
  7991     015A  0269               	subwf	_luminosity,w
  7992     015B  1C03               	skipc
  7993     015C  295E               	goto	u4201
  7994     015D  295F               	goto	u4200
  7995     015E                     u4201:
  7996     015E  296B               	goto	l5270
  7997     015F                     u4200:
  7998     015F                     l5264:
  7999                           
  8000                           ;main.c: 224:     {;main.c: 225:                     LCDstr("L");
  8001     015F  303F               	movlw	low (STR_7| (0+32768))
  8002     0160  00A0               	movwf	LCDstr@p
  8003     0161  3090               	movlw	high (STR_7| (0+32768))
  8004     0162  00A1               	movwf	LCDstr@p+1
  8005     0163  318E  2600  3180   	fcall	_LCDstr
  8006     0166                     l5266:
  8007     0166  0020               	movlb	0	; select bank0
  8008     0167  1616               	bsf	22,4	;volatile
  8009     0168                     l5268:
  8010                           
  8011                           ;main.c: 228:      alarm_handler();
  8012     0168  318D  2518  3180   	fcall	_alarm_handler
  8013     016B                     l5270:
  8014                           
  8015                           ;main.c: 231:                 if (PORTAbits.RA6 == 1)
  8016     016B  0020               	movlb	0	; select bank0
  8017     016C  1F0C               	btfss	12,6	;volatile
  8018     016D  296F               	goto	u4211
  8019     016E  2970               	goto	u4210
  8020     016F                     u4211:
  8021     016F  297F               	goto	l5276
  8022     0170                     u4210:
  8023     0170                     l5272:
  8024                           
  8025                           ;main.c: 232:                 {;main.c: 233:                     pwm_count++;
  8026     0170  3001               	movlw	1
  8027     0171  0021               	movlb	1	; select bank1
  8028     0172  00D1               	movwf	??_main^(0+128)
  8029     0173  0851               	movf	??_main^(0+128),w
  8030     0174  07C2               	addwf	_pwm_count^(0+128),f
  8031                           
  8032                           ;main.c: 234:                     if (pwm_count == 5)
  8033     0175  3005               	movlw	5
  8034     0176  0642               	xorwf	_pwm_count^(0+128),w
  8035     0177  1D03               	btfss	3,2
  8036     0178  297A               	goto	u4221
  8037     0179  297B               	goto	u4220
  8038     017A                     u4221:
  8039     017A  297F               	goto	l5276
  8040     017B                     u4220:
  8041     017B                     l1247:	
  8042                           ;main.c: 235:                     {;main.c: 236:                         do { LATAbits.L
      +                          ATA6 = 0; } while(0);
  8043                           
  8044     017B  0020               	movlb	0	; select bank0
  8045     017C  1316               	bcf	22,6	;volatile
  8046     017D                     l5274:
  8047                           
  8048                           ;main.c: 237:                         pwm_count = 0;
  8049     017D  0021               	movlb	1	; select bank1
  8050     017E  01C2               	clrf	_pwm_count^(0+128)
  8051     017F                     l5276:
  8052                           
  8053                           ;main.c: 247:             if (seconds < 59)
  8054     017F  303B               	movlw	59
  8055     0180  0020               	movlb	0	; select bank0
  8056     0181  0266               	subwf	_seconds,w
  8057     0182  1803               	skipnc
  8058     0183  2985               	goto	u4231
  8059     0184  2986               	goto	u4230
  8060     0185                     u4231:
  8061     0185  298D               	goto	l5280
  8062     0186                     u4230:
  8063     0186                     l5278:
  8064                           
  8065                           ;main.c: 248:                 seconds++;
  8066     0186  3001               	movlw	1
  8067     0187  0021               	movlb	1	; select bank1
  8068     0188  00D1               	movwf	??_main^(0+128)
  8069     0189  0851               	movf	??_main^(0+128),w
  8070     018A  0020               	movlb	0	; select bank0
  8071     018B  07E6               	addwf	_seconds,f
  8072     018C  29A2               	goto	l5290
  8073     018D                     l5280:
  8074                           
  8075                           ;main.c: 250:    {;main.c: 251:                 seconds = 0;
  8076     018D  01E6               	clrf	_seconds
  8077     018E                     l5282:
  8078                           
  8079                           ;main.c: 252:                 if (minutes < 59)
  8080     018E  303B               	movlw	59
  8081     018F  0267               	subwf	_minutes,w
  8082     0190  1803               	skipnc
  8083     0191  2993               	goto	u4241
  8084     0192  2994               	goto	u4240
  8085     0193                     u4241:
  8086     0193  299B               	goto	l5286
  8087     0194                     u4240:
  8088     0194                     l5284:
  8089                           
  8090                           ;main.c: 253:                     minutes++;
  8091     0194  3001               	movlw	1
  8092     0195  0021               	movlb	1	; select bank1
  8093     0196  00D1               	movwf	??_main^(0+128)
  8094     0197  0851               	movf	??_main^(0+128),w
  8095     0198  0020               	movlb	0	; select bank0
  8096     0199  07E7               	addwf	_minutes,f
  8097     019A  29A2               	goto	l5290
  8098     019B                     l5286:
  8099                           
  8100                           ;main.c: 255:     {;main.c: 256:                     minutes=0;
  8101     019B  01E7               	clrf	_minutes
  8102     019C                     l5288:
  8103                           
  8104                           ;main.c: 257:                     hours++;
  8105     019C  3001               	movlw	1
  8106     019D  0021               	movlb	1	; select bank1
  8107     019E  00D1               	movwf	??_main^(0+128)
  8108     019F  0851               	movf	??_main^(0+128),w
  8109     01A0  0020               	movlb	0	; select bank0
  8110     01A1  07E8               	addwf	_hours,f
  8111     01A2                     l5290:
  8112                           
  8113                           ;main.c: 262:             TMR1_overflow = 0;
  8114     01A2  01EB               	clrf	_TMR1_overflow	;volatile
  8115     01A3  2851               	goto	l5198
  8116     01A4  3180  2818         	ljmp	start
  8117     01A6                     __end_of_main:
  8118                           
  8119                           	psect	text1
  8120     0E85                     __ptext1:	
  8121 ;; *************** function _sprintf *****************
  8122 ;; Defined at:
  8123 ;;		line 9 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_sprintf.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  s               1    wreg     PTR unsigned char 
  8126 ;;		 -> measure_buffer(6), time_buffer(8), 
  8127 ;;  fmt             2   47[BANK0 ] PTR const unsigned char 
  8128 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;  s               1   57[BANK0 ] PTR unsigned char 
  8131 ;;		 -> measure_buffer(6), time_buffer(8), 
  8132 ;;  f              11   58[BANK0 ] struct _IO_FILE
  8133 ;;  ret             2    0        int 
  8134 ;;  ap              1   56[BANK0 ] PTR void [1]
  8135 ;;		 -> ?_sprintf(2), 
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  2   47[BANK0 ] int 
  8138 ;; Registers used:
  8139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8140 ;; Tracked objects:
  8141 ;;		On entry : 0/0
  8142 ;;		On exit  : 0/0
  8143 ;;		Unchanged: 0/0
  8144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8145 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;Total ram usage:       22 bytes
  8150 ;; Hardware stack levels used: 1
  8151 ;; Hardware stack levels required when called: 10
  8152 ;; This function calls:
  8153 ;;		_vfprintf
  8154 ;; This function is called by:
  8155 ;;		_main
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           
  8159     0E85                     _sprintf:	
  8160                           ;psect for function _sprintf
  8161                           
  8162                           
  8163                           ;incstack = 0
  8164                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8165                           ;sprintf@s stored from wreg
  8166     0E85  0020               	movlb	0	; select bank0
  8167     0E86  00D9               	movwf	sprintf@s
  8168     0E87                     l5178:
  8169     0E87  3051               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8170     0E88  00D8               	movwf	sprintf@ap
  8171     0E89  0859               	movf	sprintf@s,w
  8172     0E8A  00DA               	movwf	sprintf@f
  8173     0E8B                     l5180:
  8174     0E8B  01DC               	clrf	sprintf@f+2
  8175     0E8C  01DD               	clrf	sprintf@f+3
  8176     0E8D                     l5182:
  8177     0E8D  01E3               	clrf	sprintf@f+9
  8178     0E8E  01E4               	clrf	sprintf@f+10
  8179     0E8F                     l5184:
  8180     0E8F  0850               	movf	sprintf@fmt+1,w
  8181     0E90  00C9               	movwf	vfprintf@fmt+1
  8182     0E91  084F               	movf	sprintf@fmt,w
  8183     0E92  00C8               	movwf	vfprintf@fmt
  8184     0E93  3058               	movlw	(low (sprintf@ap| 0))& (0+255)
  8185     0E94  00CA               	movwf	vfprintf@ap
  8186     0E95  305A               	movlw	(low (sprintf@f| 0))& (0+255)
  8187     0E96  318E  264C  318E   	fcall	_vfprintf
  8188     0E99                     l5186:
  8189     0E99  0020               	movlb	0	; select bank0
  8190     0E9A  085C               	movf	sprintf@f+2,w
  8191     0E9B  0759               	addwf	sprintf@s,w
  8192     0E9C  00D7               	movwf	??_sprintf
  8193     0E9D  0857               	movf	??_sprintf,w
  8194     0E9E  0086               	movwf	6
  8195     0E9F  0187               	clrf	7
  8196     0EA0  0181               	clrf	1
  8197     0EA1                     l1954:
  8198     0EA1  0008               	return
  8199     0EA2                     __end_of_sprintf:
  8200                           
  8201                           	psect	text2
  8202     0E4C                     __ptext2:	
  8203 ;; *************** function _vfprintf *****************
  8204 ;; Defined at:
  8205 ;;		line 1817 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  fp              1    wreg     PTR struct _IO_FILE
  8208 ;;		 -> sprintf@f(11), 
  8209 ;;  fmt             2   40[BANK0 ] PTR const unsigned char 
  8210 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  8211 ;;  ap              1   42[BANK0 ] PTR PTR void 
  8212 ;;		 -> sprintf@ap(1), 
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  8215 ;;		 -> sprintf@f(11), 
  8216 ;;  cfmt            2   45[BANK0 ] PTR unsigned char 
  8217 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  2   40[BANK0 ] int 
  8220 ;; Registers used:
  8221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8227 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;Total ram usage:        7 bytes
  8232 ;; Hardware stack levels used: 1
  8233 ;; Hardware stack levels required when called: 9
  8234 ;; This function calls:
  8235 ;;		_vfpfcnvrt
  8236 ;; This function is called by:
  8237 ;;		_sprintf
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241     0E4C                     _vfprintf:	
  8242                           ;psect for function _vfprintf
  8243                           
  8244                           
  8245                           ;incstack = 0
  8246                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8247                           ;vfprintf@fp stored from wreg
  8248     0E4C  0020               	movlb	0	; select bank0
  8249     0E4D  00CC               	movwf	vfprintf@fp
  8250     0E4E                     l5142:
  8251                           
  8252                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
  8253     0E4E  0849               	movf	vfprintf@fmt+1,w
  8254     0E4F  00CE               	movwf	vfprintf@cfmt+1
  8255     0E50  0848               	movf	vfprintf@fmt,w
  8256     0E51  00CD               	movwf	vfprintf@cfmt
  8257                           
  8258                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  8259     0E52  2E5B               	goto	l5146
  8260     0E53                     l5144:
  8261                           
  8262                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  8263     0E53  304D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  8264     0E54  00BA               	movwf	vfpfcnvrt@fmt
  8265     0E55  084A               	movf	vfprintf@ap,w
  8266     0E56  00BB               	movwf	vfpfcnvrt@ap
  8267     0E57  084C               	movf	vfprintf@fp,w
  8268     0E58  3183  23F3  318E   	fcall	_vfpfcnvrt
  8269     0E5B                     l5146:
  8270                           
  8271                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  8272     0E5B  0020               	movlb	0	; select bank0
  8273     0E5C  084D               	movf	vfprintf@cfmt,w
  8274     0E5D  0084               	movwf	4
  8275     0E5E  084E               	movf	vfprintf@cfmt+1,w
  8276     0E5F  0085               	movwf	5
  8277     0E60  0012               	moviw fsr0++
  8278     0E61  1D03               	btfss	3,2
  8279     0E62  2E64               	goto	u4061
  8280     0E63  2E65               	goto	u4060
  8281     0E64                     u4061:
  8282     0E64  2E53               	goto	l5144
  8283     0E65                     u4060:
  8284     0E65                     l5148:
  8285                           
  8286                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  8287     0E65  01C8               	clrf	?_vfprintf
  8288     0E66  01C9               	clrf	?_vfprintf+1
  8289     0E67                     l2024:
  8290     0E67  0008               	return
  8291     0E68                     __end_of_vfprintf:
  8292                           
  8293                           	psect	text3
  8294     03F3                     __ptext3:	
  8295 ;; *************** function _vfpfcnvrt *****************
  8296 ;; Defined at:
  8297 ;;		line 1177 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;  fp              1    wreg     PTR struct _IO_FILE
  8300 ;;		 -> sprintf@f(11), 
  8301 ;;  fmt             1   26[BANK0 ] PTR PTR unsigned char 
  8302 ;;		 -> vfprintf@cfmt(2), 
  8303 ;;  ap              1   27[BANK0 ] PTR PTR void 
  8304 ;;		 -> sprintf@ap(1), 
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  8307 ;;		 -> sprintf@f(11), 
  8308 ;;  convarg         4   32[BANK0 ] struct .
  8309 ;;  cp              2   38[BANK0 ] PTR unsigned char 
  8310 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  8311 ;;  done            1   36[BANK0 ] _Bool 
  8312 ;;  c               1    0        unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;Total ram usage:       14 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 8
  8329 ;; This function calls:
  8330 ;;		_dtoa
  8331 ;;		_fputc
  8332 ;;		_read_prec_or_width
  8333 ;; This function is called by:
  8334 ;;		_vfprintf
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338     03F3                     _vfpfcnvrt:	
  8339                           ;psect for function _vfpfcnvrt
  8340                           
  8341                           
  8342                           ;incstack = 0
  8343                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8344                           ;vfpfcnvrt@fp stored from wreg
  8345     03F3  0020               	movlb	0	; select bank0
  8346     03F4  00C5               	movwf	vfpfcnvrt@fp
  8347     03F5                     l5088:
  8348                           
  8349                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.45/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  8350     03F5  083A               	movf	vfpfcnvrt@fmt,w
  8351     03F6  0086               	movwf	6
  8352     03F7  0187               	clrf	7
  8353     03F8  3F40               	moviw [0]fsr1
  8354     03F9  00BC               	movwf	??_vfpfcnvrt
  8355     03FA  3F41               	moviw [1]fsr1
  8356     03FB  00BD               	movwf	??_vfpfcnvrt+1
  8357     03FC  083C               	movf	??_vfpfcnvrt,w
  8358     03FD  0084               	movwf	4
  8359     03FE  083D               	movf	??_vfpfcnvrt+1,w
  8360     03FF  0085               	movwf	5
  8361     0400  0012               	moviw fsr0++
  8362     0401  3A25               	xorlw	37
  8363     0402  1D03               	btfss	3,2
  8364     0403  2C05               	goto	u4011
  8365     0404  2C06               	goto	u4010
  8366     0405                     u4011:
  8367     0405  2CA8               	goto	l5132
  8368     0406                     u4010:
  8369     0406                     l5090:
  8370                           
  8371                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
  8372     0406  083A               	movf	vfpfcnvrt@fmt,w
  8373     0407  0086               	movwf	6
  8374     0408  0187               	clrf	7
  8375     0409  3001               	movlw	1
  8376     040A  0781               	addwf	1,f
  8377     040B  3141               	addfsr 1,1
  8378     040C  1803               	skipnc
  8379     040D  0A81               	incf	1,f
  8380     040E                     l5092:
  8381                           
  8382                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
  8383     040E  0021               	movlb	1	; select bank1
  8384     040F  01BD               	clrf	_width^(0+128)
  8385     0410  01BE               	clrf	(_width+1)^(0+128)
  8386     0411  1003               	clrc
  8387     0412  3000               	movlw	0
  8388     0413  1803               	btfsc	3,0
  8389     0414  3001               	movlw	1
  8390     0415  0020               	movlb	0	; select bank0
  8391     0416  00E5               	movwf	_flags
  8392     0417                     l5094:
  8393                           
  8394                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
  8395     0417  30FF               	movlw	255
  8396     0418  0021               	movlb	1	; select bank1
  8397     0419  00BF               	movwf	_prec^(0+128)
  8398     041A  30FF               	movlw	255
  8399     041B  00C0               	movwf	(_prec^(0+128)+1)
  8400     041C                     l5096:
  8401                           
  8402                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1209:         done = 0;
  8403     041C  0020               	movlb	0	; select bank0
  8404     041D  01C4               	clrf	vfpfcnvrt@done
  8405                           
  8406                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
  8407     041E  2C44               	goto	l5104
  8408     041F                     l2010:	
  8409                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1219:                 case '0
      +                          ' :
  8410                           
  8411                           
  8412                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1220:                     fla
      +                          gs |= (1 << 1);
  8413     041F  14E5               	bsf	_flags,1
  8414     0420                     l5098:
  8415                           
  8416                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1221:                     ++*
      +                          fmt;
  8417     0420  083A               	movf	vfpfcnvrt@fmt,w
  8418     0421  0086               	movwf	6
  8419     0422  0187               	clrf	7
  8420     0423  3001               	movlw	1
  8421     0424  0781               	addwf	1,f
  8422     0425  3141               	addfsr 1,1
  8423     0426  1803               	skipnc
  8424     0427  0A81               	incf	1,f
  8425                           
  8426                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1222:                     bre
      +                          ak;
  8427     0428  2C44               	goto	l5104
  8428     0429                     l2012:	
  8429                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1242:                 default
      +                          :
  8430                           
  8431                           
  8432                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1243:                     don
      +                          e = 1;
  8433     0429  01C4               	clrf	vfpfcnvrt@done
  8434     042A  0AC4               	incf	vfpfcnvrt@done,f
  8435                           
  8436                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1244:                     bre
      +                          ak;
  8437     042B  2C44               	goto	l5104
  8438     042C                     l5102:
  8439     042C  083A               	movf	vfpfcnvrt@fmt,w
  8440     042D  0086               	movwf	6
  8441     042E  0187               	clrf	7
  8442     042F  3F40               	moviw [0]fsr1
  8443     0430  00BC               	movwf	??_vfpfcnvrt
  8444     0431  3F41               	moviw [1]fsr1
  8445     0432  00BD               	movwf	??_vfpfcnvrt+1
  8446     0433  083C               	movf	??_vfpfcnvrt,w
  8447     0434  0084               	movwf	4
  8448     0435  083D               	movf	??_vfpfcnvrt+1,w
  8449     0436  0085               	movwf	5
  8450     0437  0800               	movf	0,w	;code access
  8451     0438  00BE               	movwf	??_vfpfcnvrt+2
  8452     0439  01BF               	clrf	??_vfpfcnvrt+3
  8453                           
  8454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8455                           ; Switch size 1, requested type "simple"
  8456                           ; Number of cases is 1, Range of values is 0 to 0
  8457                           ; switch strategies available:
  8458                           ; Name         Instructions Cycles
  8459                           ; simple_byte            4     3 (average)
  8460                           ; direct_byte            8     6 (fixed)
  8461                           ; jumptable            260     6 (fixed)
  8462                           ;	Chosen strategy is simple_byte
  8463     043A  083F               	movf	??_vfpfcnvrt+3,w
  8464     043B  3A00               	xorlw	0	; case 0
  8465     043C  1903               	skipnz
  8466     043D  2C3F               	goto	l5312
  8467     043E  2C29               	goto	l2012
  8468     043F                     l5312:
  8469                           
  8470                           ; Switch size 1, requested type "simple"
  8471                           ; Number of cases is 1, Range of values is 48 to 48
  8472                           ; switch strategies available:
  8473                           ; Name         Instructions Cycles
  8474                           ; simple_byte            4     3 (average)
  8475                           ; direct_byte           11     9 (fixed)
  8476                           ; jumptable            263     9 (fixed)
  8477                           ;	Chosen strategy is simple_byte
  8478     043F  083E               	movf	??_vfpfcnvrt+2,w
  8479     0440  3A30               	xorlw	48	; case 48
  8480     0441  1903               	skipnz
  8481     0442  2C1F               	goto	l2010
  8482     0443  2C29               	goto	l2012
  8483     0444                     l5104:
  8484                           
  8485                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
  8486     0444  0844               	movf	vfpfcnvrt@done,w
  8487     0445  1903               	btfsc	3,2
  8488     0446  2C48               	goto	u4021
  8489     0447  2C49               	goto	u4020
  8490     0448                     u4021:
  8491     0448  2C2C               	goto	l5102
  8492     0449                     u4020:
  8493     0449                     l5106:
  8494                           
  8495                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1256:   width = read_prec_or_
      +                          width(fmt, ap);
  8496     0449  083B               	movf	vfpfcnvrt@ap,w
  8497     044A  00F8               	movwf	read_prec_or_width@ap
  8498     044B  083A               	movf	vfpfcnvrt@fmt,w
  8499     044C  3186  26A0  3183   	fcall	_read_prec_or_width
  8500     044F  0879               	movf	?_read_prec_or_width+1,w
  8501     0450  0021               	movlb	1	; select bank1
  8502     0451  00BE               	movwf	(_width+1)^(0+128)
  8503     0452  0878               	movf	?_read_prec_or_width,w
  8504     0453  00BD               	movwf	_width^(0+128)
  8505     0454                     l5108:
  8506                           
  8507                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1257:   if (width < 0) {
  8508     0454  1FBE               	btfss	(_width+1)^(0+128),7
  8509     0455  2C57               	goto	u4031
  8510     0456  2C58               	goto	u4030
  8511     0457                     u4031:
  8512     0457  2C60               	goto	l5114
  8513     0458                     u4030:
  8514     0458                     l5110:
  8515                           
  8516                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1 << 0);
  8517     0458  0020               	movlb	0	; select bank0
  8518     0459  1465               	bsf	_flags,0
  8519     045A                     l5112:
  8520                           
  8521                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1259:    width = -width;
  8522     045A  0021               	movlb	1	; select bank1
  8523     045B  09BD               	comf	_width^(0+128),f
  8524     045C  09BE               	comf	(_width+1)^(0+128),f
  8525     045D  0ABD               	incf	_width^(0+128),f
  8526     045E  1903               	skipnz
  8527     045F  0ABE               	incf	(_width+1)^(0+128),f
  8528     0460                     l5114:
  8529                           
  8530                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  8531     0460  0020               	movlb	0	; select bank0
  8532     0461  083A               	movf	vfpfcnvrt@fmt,w
  8533     0462  0086               	movwf	6
  8534     0463  0187               	clrf	7
  8535     0464  3F40               	moviw [0]fsr1
  8536     0465  00C6               	movwf	vfpfcnvrt@cp
  8537     0466  3F41               	moviw [1]fsr1
  8538     0467  00C7               	movwf	vfpfcnvrt@cp+1
  8539     0468                     l5116:
  8540                           
  8541                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == 'd' || *cp
      +                           == 'i') {
  8542     0468  0846               	movf	vfpfcnvrt@cp,w
  8543     0469  0084               	movwf	4
  8544     046A  0847               	movf	vfpfcnvrt@cp+1,w
  8545     046B  0085               	movwf	5
  8546     046C  0012               	moviw fsr0++
  8547     046D  3A64               	xorlw	100
  8548     046E  1903               	btfsc	3,2
  8549     046F  2C71               	goto	u4041
  8550     0470  2C72               	goto	u4040
  8551     0471                     u4041:
  8552     0471  2C7C               	goto	l5120
  8553     0472                     u4040:
  8554     0472                     l5118:
  8555     0472  0846               	movf	vfpfcnvrt@cp,w
  8556     0473  0084               	movwf	4
  8557     0474  0847               	movf	vfpfcnvrt@cp+1,w
  8558     0475  0085               	movwf	5
  8559     0476  0012               	moviw fsr0++
  8560     0477  3A69               	xorlw	105
  8561     0478  1D03               	btfss	3,2
  8562     0479  2C7B               	goto	u4051
  8563     047A  2C7C               	goto	u4050
  8564     047B                     u4051:
  8565     047B  2C9E               	goto	l5128
  8566     047C                     u4050:
  8567     047C                     l5120:
  8568                           
  8569                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1404:    convarg.sint = (vfpf
      +                          _sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8570     047C  083B               	movf	vfpfcnvrt@ap,w
  8571     047D  0086               	movwf	6
  8572     047E  0187               	clrf	7
  8573     047F  0801               	movf	1,w
  8574     0480  0084               	movwf	4
  8575     0481  0185               	clrf	5
  8576     0482  3002               	movlw	2
  8577     0483  0781               	addwf	1,f
  8578     0484  3F00               	moviw [0]fsr0
  8579     0485  00C0               	movwf	vfpfcnvrt@convarg
  8580     0486  3F01               	moviw [1]fsr0
  8581     0487  00C1               	movwf	vfpfcnvrt@convarg+1
  8582     0488                     l5122:
  8583                           
  8584                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1;
  8585     0488  0846               	movf	vfpfcnvrt@cp,w
  8586     0489  3E01               	addlw	1
  8587     048A  00BC               	movwf	??_vfpfcnvrt
  8588     048B  3000               	movlw	0
  8589     048C  3D47               	addwfc	vfpfcnvrt@cp+1,w
  8590     048D  00BD               	movwf	??_vfpfcnvrt+1
  8591     048E  083A               	movf	vfpfcnvrt@fmt,w
  8592     048F  0086               	movwf	6
  8593     0490  0187               	clrf	7
  8594     0491  083C               	movf	??_vfpfcnvrt,w
  8595     0492  3FC0               	movwi [0]fsr1
  8596     0493  083D               	movf	??_vfpfcnvrt+1,w
  8597     0494  3FC1               	movwi [1]fsr1
  8598     0495                     l5124:
  8599                           
  8600                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1432:    return (void) dtoa(f
      +                          p, convarg.sint);;	Return value of _vfpfcnvrt is never used
  8601     0495  0841               	movf	vfpfcnvrt@convarg+1,w
  8602     0496  00AF               	movwf	dtoa@d+1
  8603     0497  0840               	movf	vfpfcnvrt@convarg,w
  8604     0498  00AE               	movwf	dtoa@d
  8605     0499  0845               	movf	vfpfcnvrt@fp,w
  8606     049A  3185  2573  3183   	fcall	_dtoa
  8607     049D  2CC0               	goto	l2018
  8608     049E                     l5128:
  8609                           
  8610                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  8611     049E  0020               	movlb	0	; select bank0
  8612     049F  083A               	movf	vfpfcnvrt@fmt,w
  8613     04A0  0086               	movwf	6
  8614     04A1  0187               	clrf	7
  8615     04A2  3001               	movlw	1
  8616     04A3  0781               	addwf	1,f
  8617     04A4  3141               	addfsr 1,1
  8618     04A5  1803               	skipnc
  8619     04A6  0A81               	incf	1,f
  8620     04A7  2CC0               	goto	l2018
  8621     04A8                     l5132:
  8622                           
  8623                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  8624     04A8  083A               	movf	vfpfcnvrt@fmt,w
  8625     04A9  0086               	movwf	6
  8626     04AA  0187               	clrf	7
  8627     04AB  3F40               	moviw [0]fsr1
  8628     04AC  00BC               	movwf	??_vfpfcnvrt
  8629     04AD  3F41               	moviw [1]fsr1
  8630     04AE  00BD               	movwf	??_vfpfcnvrt+1
  8631     04AF  083C               	movf	??_vfpfcnvrt,w
  8632     04B0  0084               	movwf	4
  8633     04B1  083D               	movf	??_vfpfcnvrt+1,w
  8634     04B2  0085               	movwf	5
  8635     04B3  0800               	movf	0,w	;code access
  8636     04B4  00BE               	movwf	??_vfpfcnvrt+2
  8637     04B5  01BF               	clrf	??_vfpfcnvrt+3
  8638     04B6  083E               	movf	??_vfpfcnvrt+2,w
  8639     04B7  00F2               	movwf	fputc@c
  8640     04B8  083F               	movf	??_vfpfcnvrt+3,w
  8641     04B9  00F3               	movwf	fputc@c+1
  8642     04BA  0845               	movf	vfpfcnvrt@fp,w
  8643     04BB  00F4               	movwf	fputc@fp
  8644     04BC  318F  27B0  3183   	fcall	_fputc
  8645     04BF  2C9E               	goto	l5128
  8646     04C0                     l2018:
  8647     04C0  0008               	return
  8648     04C1                     __end_of_vfpfcnvrt:
  8649                           
  8650                           	psect	text4
  8651     06A0                     __ptext4:	
  8652 ;; *************** function _read_prec_or_width *****************
  8653 ;; Defined at:
  8654 ;;		line 1158 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;  fmt             1    wreg     PTR PTR const unsigned c
  8657 ;;		 -> vfprintf@cfmt(2), 
  8658 ;;  ap              1    8[COMMON] PTR PTR void [1]
  8659 ;;		 -> sprintf@ap(1), 
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;  fmt             1    6[BANK0 ] PTR PTR const unsigned c
  8662 ;;		 -> vfprintf@cfmt(2), 
  8663 ;;  c               1    3[BANK0 ] unsigned char 
  8664 ;;  n               2    4[BANK0 ] int 
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  2    8[COMMON] int 
  8667 ;; Registers used:
  8668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8678 ;;Total ram usage:        9 bytes
  8679 ;; Hardware stack levels used: 1
  8680 ;; Hardware stack levels required when called: 4
  8681 ;; This function calls:
  8682 ;;		___wmul
  8683 ;; This function is called by:
  8684 ;;		_vfpfcnvrt
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688     06A0                     _read_prec_or_width:	
  8689                           ;psect for function _read_prec_or_width
  8690                           
  8691                           
  8692                           ;incstack = 0
  8693                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8694                           ;read_prec_or_width@fmt stored from wreg
  8695     06A0  0020               	movlb	0	; select bank0
  8696     06A1  00A6               	movwf	read_prec_or_width@fmt
  8697     06A2                     l3798:
  8698                           
  8699                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  8700     06A2  01A4               	clrf	read_prec_or_width@n
  8701     06A3  01A5               	clrf	read_prec_or_width@n+1
  8702     06A4                     l3800:
  8703                           
  8704                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
  8705     06A4  0826               	movf	read_prec_or_width@fmt,w
  8706     06A5  0086               	movwf	6
  8707     06A6  0187               	clrf	7
  8708     06A7  3F40               	moviw [0]fsr1
  8709     06A8  00A0               	movwf	??_read_prec_or_width
  8710     06A9  3F41               	moviw [1]fsr1
  8711     06AA  00A1               	movwf	??_read_prec_or_width+1
  8712     06AB  0820               	movf	??_read_prec_or_width,w
  8713     06AC  0084               	movwf	4
  8714     06AD  0821               	movf	??_read_prec_or_width+1,w
  8715     06AE  0085               	movwf	5
  8716     06AF  0012               	moviw fsr0++
  8717     06B0  3A2A               	xorlw	42
  8718     06B1  1D03               	btfss	3,2
  8719     06B2  2EB4               	goto	u2411
  8720     06B3  2EB5               	goto	u2410
  8721     06B4                     u2411:
  8722     06B4  2EE7               	goto	l3810
  8723     06B5                     u2410:
  8724     06B5                     l3802:
  8725                           
  8726                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
  8727     06B5  0826               	movf	read_prec_or_width@fmt,w
  8728     06B6  0086               	movwf	6
  8729     06B7  0187               	clrf	7
  8730     06B8  3001               	movlw	1
  8731     06B9  0781               	addwf	1,f
  8732     06BA  3141               	addfsr 1,1
  8733     06BB  1803               	skipnc
  8734     06BC  0A81               	incf	1,f
  8735     06BD                     l3804:
  8736                           
  8737                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
  8738     06BD  0878               	movf	read_prec_or_width@ap,w
  8739     06BE  0086               	movwf	6
  8740     06BF  0187               	clrf	7
  8741     06C0  0801               	movf	1,w
  8742     06C1  0084               	movwf	4
  8743     06C2  0185               	clrf	5
  8744     06C3  3002               	movlw	2
  8745     06C4  0781               	addwf	1,f
  8746     06C5  3F00               	moviw [0]fsr0
  8747     06C6  00A4               	movwf	read_prec_or_width@n
  8748     06C7  3F01               	moviw [1]fsr0
  8749     06C8  00A5               	movwf	read_prec_or_width@n+1
  8750                           
  8751                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1163:     } else {
  8752     06C9  2EFB               	goto	l3812
  8753     06CA                     l3806:
  8754                           
  8755                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
  8756     06CA  0823               	movf	read_prec_or_width@c,w
  8757     06CB  00A0               	movwf	??_read_prec_or_width
  8758     06CC  01A1               	clrf	??_read_prec_or_width+1
  8759     06CD  0825               	movf	read_prec_or_width@n+1,w
  8760     06CE  00F3               	movwf	___wmul@multiplier+1
  8761     06CF  0824               	movf	read_prec_or_width@n,w
  8762     06D0  00F2               	movwf	___wmul@multiplier
  8763     06D1  300A               	movlw	10
  8764     06D2  00F4               	movwf	___wmul@multiplicand
  8765     06D3  3000               	movlw	0
  8766     06D4  00F5               	movwf	___wmul@multiplicand+1
  8767     06D5  318E  26A2  3186   	fcall	___wmul
  8768     06D8  0020               	movlb	0	; select bank0
  8769     06D9  0820               	movf	??_read_prec_or_width,w
  8770     06DA  0772               	addwf	?___wmul,w
  8771     06DB  00A4               	movwf	read_prec_or_width@n
  8772     06DC  0821               	movf	??_read_prec_or_width+1,w
  8773     06DD  3D73               	addwfc	?___wmul+1,w
  8774     06DE  00A5               	movwf	read_prec_or_width@n+1
  8775     06DF                     l3808:
  8776                           
  8777                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
  8778     06DF  0826               	movf	read_prec_or_width@fmt,w
  8779     06E0  0086               	movwf	6
  8780     06E1  0187               	clrf	7
  8781     06E2  3001               	movlw	1
  8782     06E3  0781               	addwf	1,f
  8783     06E4  3141               	addfsr 1,1
  8784     06E5  1803               	skipnc
  8785     06E6  0A81               	incf	1,f
  8786     06E7                     l3810:
  8787                           
  8788                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
  8789     06E7  0826               	movf	read_prec_or_width@fmt,w
  8790     06E8  0086               	movwf	6
  8791     06E9  0187               	clrf	7
  8792     06EA  3F40               	moviw [0]fsr1
  8793     06EB  00A0               	movwf	??_read_prec_or_width
  8794     06EC  3F41               	moviw [1]fsr1
  8795     06ED  00A1               	movwf	??_read_prec_or_width+1
  8796     06EE  0820               	movf	??_read_prec_or_width,w
  8797     06EF  0084               	movwf	4
  8798     06F0  0821               	movf	??_read_prec_or_width+1,w
  8799     06F1  0085               	movwf	5
  8800     06F2  0800               	movf	0,w	;code access
  8801     06F3  3ED0               	addlw	208
  8802     06F4  00A3               	movwf	read_prec_or_width@c
  8803     06F5  300A               	movlw	10
  8804     06F6  0223               	subwf	read_prec_or_width@c,w
  8805     06F7  1C03               	skipc
  8806     06F8  2EFA               	goto	u2421
  8807     06F9  2EFB               	goto	u2420
  8808     06FA                     u2421:
  8809     06FA  2ECA               	goto	l3806
  8810     06FB                     u2420:
  8811     06FB                     l3812:
  8812                           
  8813                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1170:     return n;
  8814     06FB  0825               	movf	read_prec_or_width@n+1,w
  8815     06FC  00F9               	movwf	?_read_prec_or_width+1
  8816     06FD  0824               	movf	read_prec_or_width@n,w
  8817     06FE  00F8               	movwf	?_read_prec_or_width
  8818     06FF                     l2003:
  8819     06FF  0008               	return
  8820     0700                     __end_of_read_prec_or_width:
  8821                           
  8822                           	psect	text5
  8823     0EA2                     __ptext5:	
  8824 ;; *************** function ___wmul *****************
  8825 ;; Defined at:
  8826 ;;		line 15 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  multiplier      2    2[COMMON] unsigned int 
  8829 ;;  multiplicand    2    4[COMMON] unsigned int 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  product         2    6[COMMON] unsigned int 
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  2    2[COMMON] unsigned int 
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;Total ram usage:        6 bytes
  8846 ;; Hardware stack levels used: 1
  8847 ;; Hardware stack levels required when called: 3
  8848 ;; This function calls:
  8849 ;;		Nothing
  8850 ;; This function is called by:
  8851 ;;		_read_prec_or_width
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855     0EA2                     ___wmul:	
  8856                           ;psect for function ___wmul
  8857                           
  8858     0EA2                     l3602:	
  8859                           ;incstack = 0
  8860                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8861                           
  8862     0EA2  01F6               	clrf	___wmul@product
  8863     0EA3  01F7               	clrf	___wmul@product+1
  8864     0EA4                     l3604:
  8865     0EA4  1C72               	btfss	___wmul@multiplier,0
  8866     0EA5  2EA7               	goto	u1941
  8867     0EA6  2EA8               	goto	u1940
  8868     0EA7                     u1941:
  8869     0EA7  2EAC               	goto	l1491
  8870     0EA8                     u1940:
  8871     0EA8                     l3606:
  8872     0EA8  0874               	movf	___wmul@multiplicand,w
  8873     0EA9  07F6               	addwf	___wmul@product,f
  8874     0EAA  0875               	movf	___wmul@multiplicand+1,w
  8875     0EAB  3DF7               	addwfc	___wmul@product+1,f
  8876     0EAC                     l1491:
  8877     0EAC  3001               	movlw	1
  8878     0EAD                     u1955:
  8879     0EAD  35F4               	lslf	___wmul@multiplicand,f
  8880     0EAE  0DF5               	rlf	___wmul@multiplicand+1,f
  8881     0EAF  0B89               	decfsz	9,f
  8882     0EB0  2EAD               	goto	u1955
  8883     0EB1                     l3608:
  8884     0EB1  3001               	movlw	1
  8885     0EB2                     u1965:
  8886     0EB2  36F3               	lsrf	___wmul@multiplier+1,f
  8887     0EB3  0CF2               	rrf	___wmul@multiplier,f
  8888     0EB4  0B89               	decfsz	9,f
  8889     0EB5  2EB2               	goto	u1965
  8890     0EB6                     l3610:
  8891     0EB6  0872               	movf	___wmul@multiplier,w
  8892     0EB7  0473               	iorwf	___wmul@multiplier+1,w
  8893     0EB8  1D03               	btfss	3,2
  8894     0EB9  2EBB               	goto	u1971
  8895     0EBA  2EBC               	goto	u1970
  8896     0EBB                     u1971:
  8897     0EBB  2EA4               	goto	l3604
  8898     0EBC                     u1970:
  8899     0EBC                     l3612:
  8900     0EBC  0877               	movf	___wmul@product+1,w
  8901     0EBD  00F3               	movwf	?___wmul+1
  8902     0EBE  0876               	movf	___wmul@product,w
  8903     0EBF  00F2               	movwf	?___wmul
  8904     0EC0                     l1493:
  8905     0EC0  0008               	return
  8906     0EC1                     __end_of___wmul:
  8907                           
  8908                           	psect	text6
  8909     0573                     __ptext6:	
  8910 ;; *************** function _dtoa *****************
  8911 ;; Defined at:
  8912 ;;		line 513 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  fp              1    wreg     PTR struct _IO_FILE
  8915 ;;		 -> sprintf@f(11), 
  8916 ;;  d               2   14[BANK0 ] int 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  fp              1   17[BANK0 ] PTR struct _IO_FILE
  8919 ;;		 -> sprintf@f(11), 
  8920 ;;  i               2   24[BANK0 ] int 
  8921 ;;  w               2   21[BANK0 ] int 
  8922 ;;  s               1   23[BANK0 ] unsigned char 
  8923 ;;  p               1   20[BANK0 ] _Bool 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8933 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;Total ram usage:       12 bytes
  8938 ;; Hardware stack levels used: 1
  8939 ;; Hardware stack levels required when called: 7
  8940 ;; This function calls:
  8941 ;;		___awdiv
  8942 ;;		___awmod
  8943 ;;		_abs
  8944 ;;		_pad
  8945 ;; This function is called by:
  8946 ;;		_vfpfcnvrt
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950     0573                     _dtoa:	
  8951                           ;psect for function _dtoa
  8952                           
  8953                           
  8954                           ;incstack = 0
  8955                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8956                           ;dtoa@fp stored from wreg
  8957     0573  0020               	movlb	0	; select bank0
  8958     0574  00B1               	movwf	dtoa@fp
  8959     0575                     l5042:
  8960                           
  8961                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 513: static void dtoa(FILE *f
      +                          p, vfpf_sint_t d);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 514: {;/opt/
      +                          microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 515:  char s;;/opt/microchip/xc8/v2
      +                          .45/pic/sources/c99/common/doprnt.c: 516:     int i, w;;/opt/microchip/xc8/v2.45/pic/sou
      +                          rces/c99/common/doprnt.c: 520:  _Bool p = 1;
  8962     0575  01B4               	clrf	dtoa@p
  8963     0576  0AB4               	incf	dtoa@p,f
  8964     0577                     l5044:
  8965                           
  8966                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 524:     s = d < 0 ? 1 : 0;
  8967     0577  1BAF               	btfsc	dtoa@d+1,7
  8968     0578  2D7A               	goto	u3911
  8969     0579  2D7C               	goto	u3910
  8970     057A                     u3911:
  8971     057A  3001               	movlw	1
  8972     057B  2D7D               	goto	u3920
  8973     057C                     u3910:
  8974     057C  3000               	movlw	0
  8975     057D                     u3920:
  8976     057D  00B7               	movwf	dtoa@s
  8977                           
  8978                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 535:     w = width;
  8979     057E  0021               	movlb	1	; select bank1
  8980     057F  083E               	movf	(_width+1)^(0+128),w
  8981     0580  0020               	movlb	0	; select bank0
  8982     0581  00B6               	movwf	dtoa@w+1
  8983     0582  0021               	movlb	1	; select bank1
  8984     0583  083D               	movf	_width^(0+128),w
  8985     0584  0020               	movlb	0	; select bank0
  8986     0585  00B5               	movwf	dtoa@w
  8987     0586                     l5046:
  8988                           
  8989                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 536:     if (s
  8990     0586  0837               	movf	dtoa@s,w
  8991     0587  1903               	btfsc	3,2
  8992     0588  2D8A               	goto	u3931
  8993     0589  2D8B               	goto	u3930
  8994     058A                     u3931:
  8995     058A  2D9F               	goto	l1982
  8996     058B                     u3930:
  8997     058B                     l5048:
  8998                           
  8999                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 540:     ) {;/opt/microchip/x
      +                          c8/v2.45/pic/sources/c99/common/doprnt.c: 541:         --w;
  9000     058B  30FF               	movlw	255
  9001     058C  07B5               	addwf	dtoa@w,f
  9002     058D  30FF               	movlw	255
  9003     058E  3DB6               	addwfc	dtoa@w+1,f
  9004     058F                     l5050:
  9005                           
  9006                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' : '+';
  9007     058F  0837               	movf	dtoa@s,w
  9008     0590  1D03               	btfss	3,2
  9009     0591  2D93               	goto	u3941
  9010     0592  2D94               	goto	u3940
  9011     0593                     u3941:
  9012     0593  2D99               	goto	l5054
  9013     0594                     u3940:
  9014     0594                     l5052:
  9015     0594  302B               	movlw	43
  9016     0595  00B2               	movwf	_dtoa$2988
  9017     0596  3000               	movlw	0
  9018     0597  00B3               	movwf	_dtoa$2988+1
  9019     0598  2D9D               	goto	l1986
  9020     0599                     l5054:
  9021     0599  302D               	movlw	45
  9022     059A  00B2               	movwf	_dtoa$2988
  9023     059B  3000               	movlw	0
  9024     059C  00B3               	movwf	_dtoa$2988+1
  9025     059D                     l1986:
  9026     059D  0832               	movf	_dtoa$2988,w
  9027     059E  00B7               	movwf	dtoa@s
  9028     059F                     l1982:	
  9029                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 543:     }
  9030                           
  9031                           
  9032                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(dbuf) - 1
      +                          ;
  9033     059F  301F               	movlw	31
  9034     05A0  00B8               	movwf	dtoa@i
  9035     05A1  3000               	movlw	0
  9036     05A2  00B9               	movwf	dtoa@i+1
  9037     05A3                     l5056:
  9038                           
  9039                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '\0';
  9040     05A3  0022               	movlb	2	; select bank2
  9041     05A4  01BF               	clrf	(_dbuf^(0+256)+31)
  9042                           
  9043                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
  9044     05A5  2DDB               	goto	l5068
  9045     05A6                     l5058:
  9046                           
  9047                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 563:     )) {;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 564:         --i;
  9048     05A6  30FF               	movlw	255
  9049     05A7  07B8               	addwf	dtoa@i,f
  9050     05A8  30FF               	movlw	255
  9051     05A9  3DB9               	addwfc	dtoa@i+1,f
  9052     05AA                     l5060:
  9053                           
  9054                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 565:         dbuf[i] = (char)
      +                          ((int)'0' + abs(d % 10));
  9055     05AA  0838               	movf	dtoa@i,w
  9056     05AB  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9057     05AC  0086               	movwf	6
  9058     05AD  3001               	movlw	1	; select bank2/3
  9059     05AE  0087               	movwf	7
  9060     05AF  300A               	movlw	10
  9061     05B0  00F2               	movwf	___awmod@divisor
  9062     05B1  3000               	movlw	0
  9063     05B2  00F3               	movwf	___awmod@divisor+1
  9064     05B3  082F               	movf	dtoa@d+1,w
  9065     05B4  00F5               	movwf	___awmod@dividend+1
  9066     05B5  082E               	movf	dtoa@d,w
  9067     05B6  00F4               	movwf	___awmod@dividend
  9068     05B7  3187  2760  3185   	fcall	___awmod
  9069     05BA  0873               	movf	?___awmod+1,w
  9070     05BB  0020               	movlb	0	; select bank0
  9071     05BC  00A1               	movwf	abs@a+1
  9072     05BD  0872               	movf	?___awmod,w
  9073     05BE  00A0               	movwf	abs@a
  9074     05BF  318D  2599  3185   	fcall	_abs
  9075     05C2  0020               	movlb	0	; select bank0
  9076     05C3  0820               	movf	?_abs,w
  9077     05C4  3E30               	addlw	48
  9078     05C5  0081               	movwf	1
  9079     05C6                     l5062:
  9080                           
  9081                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 569:   p = 0;
  9082     05C6  01B4               	clrf	dtoa@p
  9083     05C7                     l5064:
  9084                           
  9085                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 571:         --w;
  9086     05C7  30FF               	movlw	255
  9087     05C8  07B5               	addwf	dtoa@w,f
  9088     05C9  30FF               	movlw	255
  9089     05CA  3DB6               	addwfc	dtoa@w+1,f
  9090     05CB                     l5066:
  9091                           
  9092                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 572:         d = d / 10;
  9093     05CB  300A               	movlw	10
  9094     05CC  00F2               	movwf	___awdiv@divisor
  9095     05CD  3000               	movlw	0
  9096     05CE  00F3               	movwf	___awdiv@divisor+1
  9097     05CF  082F               	movf	dtoa@d+1,w
  9098     05D0  00F5               	movwf	___awdiv@dividend+1
  9099     05D1  082E               	movf	dtoa@d,w
  9100     05D2  00F4               	movwf	___awdiv@dividend
  9101     05D3  3187  2700  3185   	fcall	___awdiv
  9102     05D6  0873               	movf	?___awdiv+1,w
  9103     05D7  0020               	movlb	0	; select bank0
  9104     05D8  00AF               	movwf	dtoa@d+1
  9105     05D9  0872               	movf	?___awdiv,w
  9106     05DA  00AE               	movwf	dtoa@d
  9107     05DB                     l5068:
  9108                           
  9109                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
  9110     05DB  0020               	movlb	0	; select bank0
  9111     05DC  0839               	movf	dtoa@i+1,w
  9112     05DD  3A80               	xorlw	128
  9113     05DE  00B0               	movwf	??_dtoa
  9114     05DF  3080               	movlw	128
  9115     05E0  0230               	subwf	??_dtoa,w
  9116     05E1  1D03               	skipz
  9117     05E2  2DE5               	goto	u3955
  9118     05E3  3001               	movlw	1
  9119     05E4  0238               	subwf	dtoa@i,w
  9120     05E5                     u3955:
  9121     05E5  1C03               	skipc
  9122     05E6  2DE8               	goto	u3951
  9123     05E7  2DE9               	goto	u3950
  9124     05E8                     u3951:
  9125     05E8  2E07               	goto	l5078
  9126     05E9                     u3950:
  9127     05E9                     l5070:
  9128     05E9  0020               	movlb	0	; select bank0
  9129     05EA  082E               	movf	dtoa@d,w
  9130     05EB  042F               	iorwf	dtoa@d+1,w
  9131     05EC  1D03               	btfss	3,2
  9132     05ED  2DEF               	goto	u3961
  9133     05EE  2DF0               	goto	u3960
  9134     05EF                     u3961:
  9135     05EF  2DA6               	goto	l5058
  9136     05F0                     u3960:
  9137     05F0                     l5072:
  9138     05F0  0834               	movf	dtoa@p,w
  9139     05F1  1D03               	btfss	3,2
  9140     05F2  2DF4               	goto	u3971
  9141     05F3  2DF5               	goto	u3970
  9142     05F4                     u3971:
  9143     05F4  2DA6               	goto	l5058
  9144     05F5                     u3970:
  9145     05F5                     l5074:
  9146     05F5  0836               	movf	dtoa@w+1,w
  9147     05F6  3A80               	xorlw	128
  9148     05F7  00B0               	movwf	??_dtoa
  9149     05F8  3080               	movlw	128
  9150     05F9  0230               	subwf	??_dtoa,w
  9151     05FA  1D03               	skipz
  9152     05FB  2DFE               	goto	u3985
  9153     05FC  3001               	movlw	1
  9154     05FD  0235               	subwf	dtoa@w,w
  9155     05FE                     u3985:
  9156     05FE  1C03               	skipc
  9157     05FF  2E01               	goto	u3981
  9158     0600  2E02               	goto	u3980
  9159     0601                     u3981:
  9160     0601  2E07               	goto	l5078
  9161     0602                     u3980:
  9162     0602                     l5076:
  9163     0602  0020               	movlb	0	; select bank0
  9164     0603  18E5               	btfsc	_flags,1
  9165     0604  2E06               	goto	u3991
  9166     0605  2E07               	goto	u3990
  9167     0606                     u3991:
  9168     0606  2DA6               	goto	l5058
  9169     0607                     u3990:
  9170     0607                     l5078:
  9171                           
  9172                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 576:     if (s != 0) {
  9173     0607  0020               	movlb	0	; select bank0
  9174     0608  0837               	movf	dtoa@s,w
  9175     0609  1903               	btfsc	3,2
  9176     060A  2E0C               	goto	u4001
  9177     060B  2E0D               	goto	u4000
  9178     060C                     u4001:
  9179     060C  2E18               	goto	l5084
  9180     060D                     u4000:
  9181     060D                     l5080:
  9182                           
  9183                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 577:         --i;
  9184     060D  30FF               	movlw	255
  9185     060E  07B8               	addwf	dtoa@i,f
  9186     060F  30FF               	movlw	255
  9187     0610  3DB9               	addwfc	dtoa@i+1,f
  9188     0611                     l5082:
  9189                           
  9190                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 578:         dbuf[i] = s;
  9191     0611  0838               	movf	dtoa@i,w
  9192     0612  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9193     0613  0086               	movwf	6
  9194     0614  3001               	movlw	1	; select bank2/3
  9195     0615  0087               	movwf	7
  9196     0616  0837               	movf	dtoa@s,w
  9197     0617  0081               	movwf	1
  9198     0618                     l5084:
  9199                           
  9200                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 582:     return (void) pad(fp
      +                          , &dbuf[i], w);
  9201     0618  0838               	movf	dtoa@i,w
  9202     0619  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9203     061A  00A7               	movwf	pad@buf
  9204     061B  0836               	movf	dtoa@w+1,w
  9205     061C  00A9               	movwf	pad@p+1
  9206     061D  0835               	movf	dtoa@w,w
  9207     061E  00A8               	movwf	pad@p
  9208     061F  0831               	movf	dtoa@fp,w
  9209     0620  318E  26E6  3185   	fcall	_pad
  9210     0623                     l1995:
  9211     0623  0008               	return
  9212     0624                     __end_of_dtoa:
  9213                           
  9214                           	psect	text7
  9215     0EE6                     __ptext7:	
  9216 ;; *************** function _pad *****************
  9217 ;; Defined at:
  9218 ;;		line 193 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;  fp              1    wreg     PTR struct _IO_FILE
  9221 ;;		 -> sprintf@f(11), 
  9222 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  9223 ;;		 -> dbuf(32), 
  9224 ;;  p               2    8[BANK0 ] int 
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  9227 ;;		 -> sprintf@f(11), 
  9228 ;;  i               2   11[BANK0 ] int 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9238 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;Total ram usage:        7 bytes
  9243 ;; Hardware stack levels used: 1
  9244 ;; Hardware stack levels required when called: 6
  9245 ;; This function calls:
  9246 ;;		_fputc
  9247 ;;		_fputs
  9248 ;; This function is called by:
  9249 ;;		_dtoa
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253     0EE6                     _pad:	
  9254                           ;psect for function _pad
  9255                           
  9256                           
  9257                           ;incstack = 0
  9258                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9259                           ;pad@fp stored from wreg
  9260     0EE6  0020               	movlb	0	; select bank0
  9261     0EE7  00AD               	movwf	pad@fp
  9262     0EE8                     l5018:
  9263                           
  9264                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 193: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 194: {;/op
      +                          t/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc
      +                          8/v2.45/pic/sources/c99/common/doprnt.c: 199:     if (flags & (1 << 0)) {
  9265     0EE8  1C65               	btfss	_flags,0
  9266     0EE9  2EEB               	goto	u3861
  9267     0EEA  2EEC               	goto	u3860
  9268     0EEB                     u3861:
  9269     0EEB  2EF2               	goto	l5022
  9270     0EEC                     u3860:
  9271     0EEC                     l5020:
  9272                           
  9273                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 200:         fputs((const cha
      +                          r *)buf, fp);
  9274     0EEC  082D               	movf	pad@fp,w
  9275     0EED  00A0               	movwf	fputs@fp
  9276     0EEE  0827               	movf	pad@buf,w
  9277     0EEF  318E  26C1  318E   	fcall	_fputs
  9278     0EF2                     l5022:
  9279                           
  9280                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  9281     0EF2  0020               	movlb	0	; select bank0
  9282     0EF3  1FA9               	btfss	pad@p+1,7
  9283     0EF4  2EF6               	goto	u3871
  9284     0EF5  2EF7               	goto	u3870
  9285     0EF6                     u3871:
  9286     0EF6  2EF9               	goto	l1974
  9287     0EF7                     u3870:
  9288     0EF7                     l5024:
  9289                           
  9290                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  9291     0EF7  01A8               	clrf	pad@p
  9292     0EF8  01A9               	clrf	pad@p+1
  9293     0EF9                     l1974:	
  9294                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 207:  }
  9295                           
  9296                           
  9297                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  9298     0EF9  01AB               	clrf	pad@i
  9299     0EFA  01AC               	clrf	pad@i+1
  9300                           
  9301                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  9302     0EFB  2F0B               	goto	l5030
  9303     0EFC                     l5026:
  9304                           
  9305                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
  9306     0EFC  3020               	movlw	32
  9307     0EFD  00F2               	movwf	fputc@c
  9308     0EFE  3000               	movlw	0
  9309     0EFF  00F3               	movwf	fputc@c+1
  9310     0F00  0020               	movlb	0	; select bank0
  9311     0F01  082D               	movf	pad@fp,w
  9312     0F02  00F4               	movwf	fputc@fp
  9313     0F03  318F  27B0  318E   	fcall	_fputc
  9314     0F06                     l5028:
  9315                           
  9316                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 211:         ++i;
  9317     0F06  3001               	movlw	1
  9318     0F07  0020               	movlb	0	; select bank0
  9319     0F08  07AB               	addwf	pad@i,f
  9320     0F09  3000               	movlw	0
  9321     0F0A  3DAC               	addwfc	pad@i+1,f
  9322     0F0B                     l5030:
  9323                           
  9324                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  9325     0F0B  082C               	movf	pad@i+1,w
  9326     0F0C  3A80               	xorlw	128
  9327     0F0D  00AA               	movwf	??_pad
  9328     0F0E  0829               	movf	pad@p+1,w
  9329     0F0F  3A80               	xorlw	128
  9330     0F10  022A               	subwf	??_pad,w
  9331     0F11  1D03               	skipz
  9332     0F12  2F15               	goto	u3885
  9333     0F13  0828               	movf	pad@p,w
  9334     0F14  022B               	subwf	pad@i,w
  9335     0F15                     u3885:
  9336     0F15  1C03               	skipc
  9337     0F16  2F18               	goto	u3881
  9338     0F17  2F19               	goto	u3880
  9339     0F18                     u3881:
  9340     0F18  2EFC               	goto	l5026
  9341     0F19                     u3880:
  9342     0F19                     l1977:
  9343                           
  9344                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 216:     if (!(flags & (1 << 
      +                          0))) {
  9345     0F19  0020               	movlb	0	; select bank0
  9346     0F1A  1865               	btfsc	_flags,0
  9347     0F1B  2F1D               	goto	u3891
  9348     0F1C  2F1E               	goto	u3890
  9349     0F1D                     u3891:
  9350     0F1D  2F24               	goto	l1979
  9351     0F1E                     u3890:
  9352     0F1E                     l5032:
  9353                           
  9354                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
  9355     0F1E  082D               	movf	pad@fp,w
  9356     0F1F  00A0               	movwf	fputs@fp
  9357     0F20  0827               	movf	pad@buf,w
  9358     0F21  318E  26C1  318E   	fcall	_fputs
  9359     0F24                     l1979:
  9360     0F24  0008               	return
  9361     0F25                     __end_of_pad:
  9362                           
  9363                           	psect	text8
  9364     0EC1                     __ptext8:	
  9365 ;; *************** function _fputs *****************
  9366 ;; Defined at:
  9367 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputs.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;  s               1    wreg     PTR const unsigned char 
  9370 ;;		 -> dbuf(32), 
  9371 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  9372 ;;		 -> sprintf@f(11), 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  9375 ;;		 -> dbuf(32), 
  9376 ;;  i               2    4[BANK0 ] int 
  9377 ;;  c               1    3[BANK0 ] unsigned char 
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  2    0[BANK0 ] int 
  9380 ;; Registers used:
  9381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9387 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9388 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9389 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9390 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9391 ;;Total ram usage:        7 bytes
  9392 ;; Hardware stack levels used: 1
  9393 ;; Hardware stack levels required when called: 5
  9394 ;; This function calls:
  9395 ;;		_fputc
  9396 ;; This function is called by:
  9397 ;;		_pad
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401     0EC1                     _fputs:	
  9402                           ;psect for function _fputs
  9403                           
  9404                           
  9405                           ;incstack = 0
  9406                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9407                           ;fputs@s stored from wreg
  9408     0EC1  0020               	movlb	0	; select bank0
  9409     0EC2  00A6               	movwf	fputs@s
  9410     0EC3                     l4966:
  9411     0EC3  01A4               	clrf	fputs@i
  9412     0EC4  01A5               	clrf	fputs@i+1
  9413     0EC5  2ED7               	goto	l4972
  9414     0EC6                     l4968:
  9415     0EC6  0823               	movf	fputs@c,w
  9416     0EC7  00A1               	movwf	??_fputs
  9417     0EC8  01A2               	clrf	??_fputs+1
  9418     0EC9  0821               	movf	??_fputs,w
  9419     0ECA  00F2               	movwf	fputc@c
  9420     0ECB  0822               	movf	??_fputs+1,w
  9421     0ECC  00F3               	movwf	fputc@c+1
  9422     0ECD  0820               	movf	fputs@fp,w
  9423     0ECE  00F4               	movwf	fputc@fp
  9424     0ECF  318F  27B0  318E   	fcall	_fputc
  9425     0ED2                     l4970:
  9426     0ED2  3001               	movlw	1
  9427     0ED3  0020               	movlb	0	; select bank0
  9428     0ED4  07A4               	addwf	fputs@i,f
  9429     0ED5  3000               	movlw	0
  9430     0ED6  3DA5               	addwfc	fputs@i+1,f
  9431     0ED7                     l4972:
  9432     0ED7  0824               	movf	fputs@i,w
  9433     0ED8  0726               	addwf	fputs@s,w
  9434     0ED9  00A1               	movwf	??_fputs
  9435     0EDA  0821               	movf	??_fputs,w
  9436     0EDB  0086               	movwf	6
  9437     0EDC  3001               	movlw	1	; select bank2/3
  9438     0EDD  0087               	movwf	7
  9439     0EDE  0801               	movf	1,w
  9440     0EDF  00A3               	movwf	fputs@c
  9441     0EE0  0823               	movf	fputs@c,w
  9442     0EE1  1D03               	btfss	3,2
  9443     0EE2  2EE4               	goto	u3751
  9444     0EE3  2EE5               	goto	u3750
  9445     0EE4                     u3751:
  9446     0EE4  2EC6               	goto	l4968
  9447     0EE5                     u3750:
  9448     0EE5                     l2051:
  9449     0EE5  0008               	return
  9450     0EE6                     __end_of_fputs:
  9451                           
  9452                           	psect	text9
  9453     0FB0                     __ptext9:	
  9454 ;; *************** function _fputc *****************
  9455 ;; Defined at:
  9456 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputc.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  c               2    2[COMMON] int 
  9459 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  9460 ;;		 -> sprintf@f(11), 
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;		None
  9463 ;; Return value:  Size  Location     Type
  9464 ;;                  2    2[COMMON] int 
  9465 ;; Registers used:
  9466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9467 ;; Tracked objects:
  9468 ;;		On entry : 0/0
  9469 ;;		On exit  : 0/0
  9470 ;;		Unchanged: 0/0
  9471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9472 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9474 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9475 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9476 ;;Total ram usage:        8 bytes
  9477 ;; Hardware stack levels used: 1
  9478 ;; Hardware stack levels required when called: 4
  9479 ;; This function calls:
  9480 ;;		_putch
  9481 ;; This function is called by:
  9482 ;;		_pad
  9483 ;;		_vfpfcnvrt
  9484 ;;		_fputs
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488     0FB0                     _fputc:	
  9489                           ;psect for function _fputc
  9490                           
  9491     0FB0                     l3578:	
  9492                           ;incstack = 0
  9493                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9494                           
  9495     0FB0  0874               	movf	fputc@fp,w
  9496     0FB1  1903               	btfsc	3,2
  9497     0FB2  2FB4               	goto	u1891
  9498     0FB3  2FB5               	goto	u1890
  9499     0FB4                     u1891:
  9500     0FB4  2FBA               	goto	l3582
  9501     0FB5                     u1890:
  9502     0FB5                     l3580:
  9503     0FB5  0874               	movf	fputc@fp,w
  9504     0FB6  1D03               	btfss	3,2
  9505     0FB7  2FB9               	goto	u1901
  9506     0FB8  2FBA               	goto	u1900
  9507     0FB9                     u1901:
  9508     0FB9  2FBF               	goto	l3584
  9509     0FBA                     u1900:
  9510     0FBA                     l3582:
  9511     0FBA  0872               	movf	fputc@c,w
  9512     0FBB  3187  27FF  318F   	fcall	_putch
  9513     0FBE  2FFF               	goto	l2043
  9514     0FBF                     l3584:
  9515     0FBF  0874               	movf	fputc@fp,w
  9516     0FC0  3E09               	addlw	9
  9517     0FC1  0086               	movwf	6
  9518     0FC2  0187               	clrf	7
  9519     0FC3  0016               	moviw fsr1++
  9520     0FC4  0401               	iorwf	1,w
  9521     0FC5  1903               	btfsc	3,2
  9522     0FC6  2FC8               	goto	u1911
  9523     0FC7  2FC9               	goto	u1910
  9524     0FC8                     u1911:
  9525     0FC8  2FE7               	goto	l3588
  9526     0FC9                     u1910:
  9527     0FC9                     l3586:
  9528     0FC9  0874               	movf	fputc@fp,w
  9529     0FCA  3E09               	addlw	9
  9530     0FCB  0086               	movwf	6
  9531     0FCC  0187               	clrf	7
  9532     0FCD  3F40               	moviw [0]fsr1
  9533     0FCE  00F5               	movwf	??_fputc
  9534     0FCF  3F41               	moviw [1]fsr1
  9535     0FD0  00F6               	movwf	??_fputc+1
  9536     0FD1  0874               	movf	fputc@fp,w
  9537     0FD2  3E02               	addlw	2
  9538     0FD3  0086               	movwf	6
  9539     0FD4  0187               	clrf	7
  9540     0FD5  3F40               	moviw [0]fsr1
  9541     0FD6  00F7               	movwf	??_fputc+2
  9542     0FD7  3F41               	moviw [1]fsr1
  9543     0FD8  00F8               	movwf	??_fputc+3
  9544     0FD9  0878               	movf	??_fputc+3,w
  9545     0FDA  3A80               	xorlw	128
  9546     0FDB  00F9               	movwf	??_fputc+4
  9547     0FDC  0876               	movf	??_fputc+1,w
  9548     0FDD  3A80               	xorlw	128
  9549     0FDE  0279               	subwf	??_fputc+4,w
  9550     0FDF  1D03               	skipz
  9551     0FE0  2FE3               	goto	u1925
  9552     0FE1  0875               	movf	??_fputc,w
  9553     0FE2  0277               	subwf	??_fputc+2,w
  9554     0FE3                     u1925:
  9555     0FE3  1803               	skipnc
  9556     0FE4  2FE6               	goto	u1921
  9557     0FE5  2FE7               	goto	u1920
  9558     0FE6                     u1921:
  9559     0FE6  2FFF               	goto	l2043
  9560     0FE7                     u1920:
  9561     0FE7                     l3588:
  9562     0FE7  0874               	movf	fputc@fp,w
  9563     0FE8  0086               	movwf	6
  9564     0FE9  0187               	clrf	7
  9565     0FEA  0874               	movf	fputc@fp,w
  9566     0FEB  3E02               	addlw	2
  9567     0FEC  0084               	movwf	4
  9568     0FED  0185               	clrf	5
  9569     0FEE  0800               	movf	0,w
  9570     0FEF  0701               	addwf	1,w
  9571     0FF0  00F5               	movwf	??_fputc
  9572     0FF1  0875               	movf	??_fputc,w
  9573     0FF2  0086               	movwf	6
  9574     0FF3  0187               	clrf	7
  9575     0FF4  0872               	movf	fputc@c,w
  9576     0FF5  0081               	movwf	1
  9577     0FF6                     l3590:
  9578     0FF6  0874               	movf	fputc@fp,w
  9579     0FF7  3E02               	addlw	2
  9580     0FF8  0086               	movwf	6
  9581     0FF9  0187               	clrf	7
  9582     0FFA  3001               	movlw	1
  9583     0FFB  0781               	addwf	1,f
  9584     0FFC  3141               	addfsr 1,1
  9585     0FFD  1803               	skipnc
  9586     0FFE  0A81               	incf	1,f
  9587     0FFF                     l2043:
  9588     0FFF  0008               	return
  9589     1000                     __end_of_fputc:
  9590                           
  9591                           	psect	text10
  9592     07FF                     __ptext10:	
  9593 ;; *************** function _putch *****************
  9594 ;; Defined at:
  9595 ;;		line 7 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/putch.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  c               1    wreg     unsigned char 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  c               1    0[COMMON] unsigned char 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;Total ram usage:        0 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; Hardware stack levels required when called: 3
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_fputc
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623     07FF                     _putch:	
  9624                           ;psect for function _putch
  9625                           
  9626     07FF                     l2054:	
  9627                           ;incstack = 0
  9628                           ; Regs used in _putch: [wreg]
  9629                           
  9630     07FF  0008               	return
  9631     0800                     __end_of_putch:
  9632                           
  9633                           	psect	text11
  9634     0D99                     __ptext11:	
  9635 ;; *************** function _abs *****************
  9636 ;; Defined at:
  9637 ;;		line 1 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/abs.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  a               2    0[BANK0 ] int 
  9640 ;; Auto vars:     Size  Location     Type
  9641 ;;		None
  9642 ;; Return value:  Size  Location     Type
  9643 ;;                  2    0[BANK0 ] int 
  9644 ;; Registers used:
  9645 ;;		wreg, status,2, status,0
  9646 ;; Tracked objects:
  9647 ;;		On entry : 0/0
  9648 ;;		On exit  : 0/0
  9649 ;;		Unchanged: 0/0
  9650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;Total ram usage:        4 bytes
  9656 ;; Hardware stack levels used: 1
  9657 ;; Hardware stack levels required when called: 3
  9658 ;; This function calls:
  9659 ;;		Nothing
  9660 ;; This function is called by:
  9661 ;;		_dtoa
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665     0D99                     _abs:	
  9666                           ;psect for function _abs
  9667                           
  9668     0D99                     l5034:	
  9669                           ;incstack = 0
  9670                           ; Regs used in _abs: [wreg+status,2+status,0]
  9671                           
  9672     0D99  0020               	movlb	0	; select bank0
  9673     0D9A  1BA1               	btfsc	abs@a+1,7
  9674     0D9B  2D9D               	goto	u3901
  9675     0D9C  2D9E               	goto	u3900
  9676     0D9D                     u3901:
  9677     0D9D  2D9F               	goto	l5038
  9678     0D9E                     u3900:
  9679     0D9E                     l5036:
  9680     0D9E  2DAA               	goto	l2031
  9681     0D9F                     l5038:
  9682     0D9F  0920               	comf	abs@a,w
  9683     0DA0  00A2               	movwf	??_abs
  9684     0DA1  0921               	comf	abs@a+1,w
  9685     0DA2  00A3               	movwf	??_abs+1
  9686     0DA3  0AA2               	incf	??_abs,f
  9687     0DA4  1903               	skipnz
  9688     0DA5  0AA3               	incf	??_abs+1,f
  9689     0DA6  0822               	movf	??_abs,w
  9690     0DA7  00A0               	movwf	?_abs
  9691     0DA8  0823               	movf	??_abs+1,w
  9692     0DA9  00A1               	movwf	?_abs+1
  9693     0DAA                     l2031:
  9694     0DAA  0008               	return
  9695     0DAB                     __end_of_abs:
  9696                           
  9697                           	psect	text12
  9698     0760                     __ptext12:	
  9699 ;; *************** function ___awmod *****************
  9700 ;; Defined at:
  9701 ;;		line 5 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/awmod.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  divisor         2    2[COMMON] int 
  9704 ;;  dividend        2    4[COMMON] int 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  sign            1    8[COMMON] unsigned char 
  9707 ;;  counter         1    7[COMMON] unsigned char 
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  2    2[COMMON] int 
  9710 ;; Registers used:
  9711 ;;		wreg, status,2, status,0
  9712 ;; Tracked objects:
  9713 ;;		On entry : 0/0
  9714 ;;		On exit  : 0/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9721 ;;Total ram usage:        7 bytes
  9722 ;; Hardware stack levels used: 1
  9723 ;; Hardware stack levels required when called: 3
  9724 ;; This function calls:
  9725 ;;		Nothing
  9726 ;; This function is called by:
  9727 ;;		_dtoa
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731     0760                     ___awmod:	
  9732                           ;psect for function ___awmod
  9733                           
  9734     0760                     l3660:	
  9735                           ;incstack = 0
  9736                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9737                           
  9738     0760  01F8               	clrf	___awmod@sign
  9739     0761                     l3662:
  9740     0761  1FF5               	btfss	___awmod@dividend+1,7
  9741     0762  2F64               	goto	u2081
  9742     0763  2F65               	goto	u2080
  9743     0764                     u2081:
  9744     0764  2F6C               	goto	l3668
  9745     0765                     u2080:
  9746     0765                     l3664:
  9747     0765  09F4               	comf	___awmod@dividend,f
  9748     0766  09F5               	comf	___awmod@dividend+1,f
  9749     0767  0AF4               	incf	___awmod@dividend,f
  9750     0768  1903               	skipnz
  9751     0769  0AF5               	incf	___awmod@dividend+1,f
  9752     076A                     l3666:
  9753     076A  01F8               	clrf	___awmod@sign
  9754     076B  0AF8               	incf	___awmod@sign,f
  9755     076C                     l3668:
  9756     076C  1FF3               	btfss	___awmod@divisor+1,7
  9757     076D  2F6F               	goto	u2091
  9758     076E  2F70               	goto	u2090
  9759     076F                     u2091:
  9760     076F  2F75               	goto	l3672
  9761     0770                     u2090:
  9762     0770                     l3670:
  9763     0770  09F2               	comf	___awmod@divisor,f
  9764     0771  09F3               	comf	___awmod@divisor+1,f
  9765     0772  0AF2               	incf	___awmod@divisor,f
  9766     0773  1903               	skipnz
  9767     0774  0AF3               	incf	___awmod@divisor+1,f
  9768     0775                     l3672:
  9769     0775  0872               	movf	___awmod@divisor,w
  9770     0776  0473               	iorwf	___awmod@divisor+1,w
  9771     0777  1903               	btfsc	3,2
  9772     0778  2F7A               	goto	u2101
  9773     0779  2F7B               	goto	u2100
  9774     077A                     u2101:
  9775     077A  2FA4               	goto	l3690
  9776     077B                     u2100:
  9777     077B                     l3674:
  9778     077B  01F7               	clrf	___awmod@counter
  9779     077C  0AF7               	incf	___awmod@counter,f
  9780     077D  2F87               	goto	l3680
  9781     077E                     l3676:
  9782     077E  3001               	movlw	1
  9783     077F                     u2115:
  9784     077F  35F2               	lslf	___awmod@divisor,f
  9785     0780  0DF3               	rlf	___awmod@divisor+1,f
  9786     0781  0B89               	decfsz	9,f
  9787     0782  2F7F               	goto	u2115
  9788     0783                     l3678:
  9789     0783  3001               	movlw	1
  9790     0784  00F6               	movwf	??___awmod
  9791     0785  0876               	movf	??___awmod,w
  9792     0786  07F7               	addwf	___awmod@counter,f
  9793     0787                     l3680:
  9794     0787  1FF3               	btfss	___awmod@divisor+1,7
  9795     0788  2F8A               	goto	u2121
  9796     0789  2F8B               	goto	u2120
  9797     078A                     u2121:
  9798     078A  2F7E               	goto	l3676
  9799     078B                     u2120:
  9800     078B                     l3682:
  9801     078B  0873               	movf	___awmod@divisor+1,w
  9802     078C  0275               	subwf	___awmod@dividend+1,w
  9803     078D  1D03               	skipz
  9804     078E  2F91               	goto	u2135
  9805     078F  0872               	movf	___awmod@divisor,w
  9806     0790  0274               	subwf	___awmod@dividend,w
  9807     0791                     u2135:
  9808     0791  1C03               	skipc
  9809     0792  2F94               	goto	u2131
  9810     0793  2F95               	goto	u2130
  9811     0794                     u2131:
  9812     0794  2F99               	goto	l3686
  9813     0795                     u2130:
  9814     0795                     l3684:
  9815     0795  0872               	movf	___awmod@divisor,w
  9816     0796  02F4               	subwf	___awmod@dividend,f
  9817     0797  0873               	movf	___awmod@divisor+1,w
  9818     0798  3BF5               	subwfb	___awmod@dividend+1,f
  9819     0799                     l3686:
  9820     0799  3001               	movlw	1
  9821     079A                     u2145:
  9822     079A  36F3               	lsrf	___awmod@divisor+1,f
  9823     079B  0CF2               	rrf	___awmod@divisor,f
  9824     079C  0B89               	decfsz	9,f
  9825     079D  2F9A               	goto	u2145
  9826     079E                     l3688:
  9827     079E  3001               	movlw	1
  9828     079F  02F7               	subwf	___awmod@counter,f
  9829     07A0  1D03               	btfss	3,2
  9830     07A1  2FA3               	goto	u2151
  9831     07A2  2FA4               	goto	u2150
  9832     07A3                     u2151:
  9833     07A3  2F8B               	goto	l3682
  9834     07A4                     u2150:
  9835     07A4                     l3690:
  9836     07A4  0878               	movf	___awmod@sign,w
  9837     07A5  1903               	btfsc	3,2
  9838     07A6  2FA8               	goto	u2161
  9839     07A7  2FA9               	goto	u2160
  9840     07A8                     u2161:
  9841     07A8  2FAE               	goto	l3694
  9842     07A9                     u2160:
  9843     07A9                     l3692:
  9844     07A9  09F4               	comf	___awmod@dividend,f
  9845     07AA  09F5               	comf	___awmod@dividend+1,f
  9846     07AB  0AF4               	incf	___awmod@dividend,f
  9847     07AC  1903               	skipnz
  9848     07AD  0AF5               	incf	___awmod@dividend+1,f
  9849     07AE                     l3694:
  9850     07AE  0875               	movf	___awmod@dividend+1,w
  9851     07AF  00F3               	movwf	?___awmod+1
  9852     07B0  0874               	movf	___awmod@dividend,w
  9853     07B1  00F2               	movwf	?___awmod
  9854     07B2                     l1657:
  9855     07B2  0008               	return
  9856     07B3                     __end_of___awmod:
  9857                           
  9858                           	psect	text13
  9859     0700                     __ptext13:	
  9860 ;; *************** function ___awdiv *****************
  9861 ;; Defined at:
  9862 ;;		line 5 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/awdiv.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  divisor         2    2[COMMON] int 
  9865 ;;  dividend        2    4[COMMON] int 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  quotient        2    2[BANK0 ] int 
  9868 ;;  sign            1    1[BANK0 ] unsigned char 
  9869 ;;  counter         1    0[BANK0 ] unsigned char 
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  2    2[COMMON] int 
  9872 ;; Registers used:
  9873 ;;		wreg, status,2, status,0
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;Total ram usage:        9 bytes
  9884 ;; Hardware stack levels used: 1
  9885 ;; Hardware stack levels required when called: 3
  9886 ;; This function calls:
  9887 ;;		Nothing
  9888 ;; This function is called by:
  9889 ;;		_dtoa
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893     0700                     ___awdiv:	
  9894                           ;psect for function ___awdiv
  9895                           
  9896     0700                     l4974:	
  9897                           ;incstack = 0
  9898                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9899                           
  9900     0700  0020               	movlb	0	; select bank0
  9901     0701  01A1               	clrf	___awdiv@sign
  9902     0702                     l4976:
  9903     0702  1FF3               	btfss	___awdiv@divisor+1,7
  9904     0703  2F05               	goto	u3761
  9905     0704  2F06               	goto	u3760
  9906     0705                     u3761:
  9907     0705  2F0D               	goto	l4982
  9908     0706                     u3760:
  9909     0706                     l4978:
  9910     0706  09F2               	comf	___awdiv@divisor,f
  9911     0707  09F3               	comf	___awdiv@divisor+1,f
  9912     0708  0AF2               	incf	___awdiv@divisor,f
  9913     0709  1903               	skipnz
  9914     070A  0AF3               	incf	___awdiv@divisor+1,f
  9915     070B                     l4980:
  9916     070B  01A1               	clrf	___awdiv@sign
  9917     070C  0AA1               	incf	___awdiv@sign,f
  9918     070D                     l4982:
  9919     070D  1FF5               	btfss	___awdiv@dividend+1,7
  9920     070E  2F10               	goto	u3771
  9921     070F  2F11               	goto	u3770
  9922     0710                     u3771:
  9923     0710  2F1A               	goto	l4988
  9924     0711                     u3770:
  9925     0711                     l4984:
  9926     0711  09F4               	comf	___awdiv@dividend,f
  9927     0712  09F5               	comf	___awdiv@dividend+1,f
  9928     0713  0AF4               	incf	___awdiv@dividend,f
  9929     0714  1903               	skipnz
  9930     0715  0AF5               	incf	___awdiv@dividend+1,f
  9931     0716                     l4986:
  9932     0716  3001               	movlw	1
  9933     0717  00F6               	movwf	??___awdiv
  9934     0718  0876               	movf	??___awdiv,w
  9935     0719  06A1               	xorwf	___awdiv@sign,f
  9936     071A                     l4988:
  9937     071A  01A2               	clrf	___awdiv@quotient
  9938     071B  01A3               	clrf	___awdiv@quotient+1
  9939     071C                     l4990:
  9940     071C  0872               	movf	___awdiv@divisor,w
  9941     071D  0473               	iorwf	___awdiv@divisor+1,w
  9942     071E  1903               	btfsc	3,2
  9943     071F  2F21               	goto	u3781
  9944     0720  2F22               	goto	u3780
  9945     0721                     u3781:
  9946     0721  2F51               	goto	l5010
  9947     0722                     u3780:
  9948     0722                     l4992:
  9949     0722  01A0               	clrf	___awdiv@counter
  9950     0723  0AA0               	incf	___awdiv@counter,f
  9951     0724  2F2E               	goto	l4998
  9952     0725                     l4994:
  9953     0725  3001               	movlw	1
  9954     0726                     u3795:
  9955     0726  35F2               	lslf	___awdiv@divisor,f
  9956     0727  0DF3               	rlf	___awdiv@divisor+1,f
  9957     0728  0B89               	decfsz	9,f
  9958     0729  2F26               	goto	u3795
  9959     072A                     l4996:
  9960     072A  3001               	movlw	1
  9961     072B  00F6               	movwf	??___awdiv
  9962     072C  0876               	movf	??___awdiv,w
  9963     072D  07A0               	addwf	___awdiv@counter,f
  9964     072E                     l4998:
  9965     072E  1FF3               	btfss	___awdiv@divisor+1,7
  9966     072F  2F31               	goto	u3801
  9967     0730  2F32               	goto	u3800
  9968     0731                     u3801:
  9969     0731  2F25               	goto	l4994
  9970     0732                     u3800:
  9971     0732                     l5000:
  9972     0732  3001               	movlw	1
  9973     0733                     u3815:
  9974     0733  35A2               	lslf	___awdiv@quotient,f
  9975     0734  0DA3               	rlf	___awdiv@quotient+1,f
  9976     0735  0B89               	decfsz	9,f
  9977     0736  2F33               	goto	u3815
  9978     0737  0873               	movf	___awdiv@divisor+1,w
  9979     0738  0275               	subwf	___awdiv@dividend+1,w
  9980     0739  1D03               	skipz
  9981     073A  2F3D               	goto	u3825
  9982     073B  0872               	movf	___awdiv@divisor,w
  9983     073C  0274               	subwf	___awdiv@dividend,w
  9984     073D                     u3825:
  9985     073D  1C03               	skipc
  9986     073E  2F40               	goto	u3821
  9987     073F  2F41               	goto	u3820
  9988     0740                     u3821:
  9989     0740  2F46               	goto	l5006
  9990     0741                     u3820:
  9991     0741                     l5002:
  9992     0741  0872               	movf	___awdiv@divisor,w
  9993     0742  02F4               	subwf	___awdiv@dividend,f
  9994     0743  0873               	movf	___awdiv@divisor+1,w
  9995     0744  3BF5               	subwfb	___awdiv@dividend+1,f
  9996     0745                     l5004:
  9997     0745  1422               	bsf	___awdiv@quotient,0
  9998     0746                     l5006:
  9999     0746  3001               	movlw	1
 10000     0747                     u3835:
 10001     0747  36F3               	lsrf	___awdiv@divisor+1,f
 10002     0748  0CF2               	rrf	___awdiv@divisor,f
 10003     0749  0B89               	decfsz	9,f
 10004     074A  2F47               	goto	u3835
 10005     074B                     l5008:
 10006     074B  3001               	movlw	1
 10007     074C  02A0               	subwf	___awdiv@counter,f
 10008     074D  1D03               	btfss	3,2
 10009     074E  2F50               	goto	u3841
 10010     074F  2F51               	goto	u3840
 10011     0750                     u3841:
 10012     0750  2F32               	goto	l5000
 10013     0751                     u3840:
 10014     0751                     l5010:
 10015     0751  0821               	movf	___awdiv@sign,w
 10016     0752  1903               	btfsc	3,2
 10017     0753  2F55               	goto	u3851
 10018     0754  2F56               	goto	u3850
 10019     0755                     u3851:
 10020     0755  2F5B               	goto	l5014
 10021     0756                     u3850:
 10022     0756                     l5012:
 10023     0756  09A2               	comf	___awdiv@quotient,f
 10024     0757  09A3               	comf	___awdiv@quotient+1,f
 10025     0758  0AA2               	incf	___awdiv@quotient,f
 10026     0759  1903               	skipnz
 10027     075A  0AA3               	incf	___awdiv@quotient+1,f
 10028     075B                     l5014:
 10029     075B  0823               	movf	___awdiv@quotient+1,w
 10030     075C  00F3               	movwf	?___awdiv+1
 10031     075D  0822               	movf	___awdiv@quotient,w
 10032     075E  00F2               	movwf	?___awdiv
 10033     075F                     l1644:
 10034     075F  0008               	return
 10035     0760                     __end_of___awdiv:
 10036                           
 10037                           	psect	text14
 10038     02EA                     __ptext14:	
 10039 ;; *************** function _readTC74 *****************
 10040 ;; Defined at:
 10041 ;;		line 101 in file "main.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;		None
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;  value           1    5[COMMON] unsigned char 
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  1    wreg      unsigned char 
 10048 ;; Registers used:
 10049 ;;		wreg, status,2, status,0, pclath, cstack
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;Total ram usage:        2 bytes
 10060 ;; Hardware stack levels used: 1
 10061 ;; Hardware stack levels required when called: 4
 10062 ;; This function calls:
 10063 ;;		_ReadI2C
 10064 ;;		_WriteI2C
 10065 ;; This function is called by:
 10066 ;;		_main
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070     02EA                     _readTC74:	
 10071                           ;psect for function _readTC74
 10072                           
 10073     02EA                     l1129:	
 10074                           ;incstack = 0
 10075                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
 10076                           ;main.c: 103:  unsigned char value;;main.c: 104:     do
 10077                           
 10078     02EA                     l4316:	
 10079                           ;main.c: 105:     {;main.c: 106:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10080                           
 10081     02EA  0023               	movlb	3	; select bank3
 10082     02EB  0C0F               	rrf	15,w	;volatile
 10083     02EC  0C89               	rrf	9,f
 10084     02ED  3901               	andlw	1
 10085     02EE  00F4               	movwf	??_readTC74
 10086     02EF  0811               	movf	17,w	;volatile
 10087     02F0  391F               	andlw	31
 10088     02F1  0474               	iorwf	??_readTC74,w
 10089     02F2  1D03               	btfss	3,2
 10090     02F3  2AF5               	goto	u3071
 10091     02F4  2AF6               	goto	u3070
 10092     02F5                     u3071:
 10093     02F5  2AEA               	goto	l4316
 10094     02F6                     u3070:
 10095     02F6                     l1133:	
 10096                           ;main.c: 107:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10097                           
 10098     02F6  1411               	bsf	17,0	;volatile
 10099     02F7                     l1134:
 10100     02F7  1811               	btfsc	17,0	;volatile
 10101     02F8  2AFA               	goto	u3081
 10102     02F9  2AFB               	goto	u3080
 10103     02FA                     u3081:
 10104     02FA  2AF7               	goto	l1134
 10105     02FB                     u3080:
 10106     02FB                     l4318:
 10107     02FB  0C0F               	rrf	15,w	;volatile
 10108     02FC  0C89               	rrf	9,f
 10109     02FD  3901               	andlw	1
 10110     02FE  00F4               	movwf	??_readTC74
 10111     02FF  0811               	movf	17,w	;volatile
 10112     0300  391F               	andlw	31
 10113     0301  0474               	iorwf	??_readTC74,w
 10114     0302  1D03               	btfss	3,2
 10115     0303  2B05               	goto	u3091
 10116     0304  2B06               	goto	u3090
 10117     0305                     u3091:
 10118     0305  2AFB               	goto	l4318
 10119     0306                     u3090:
 10120     0306                     l4320:
 10121                           
 10122                           ;main.c: 109:   WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10123     0306  309A               	movlw	154
 10124     0307  3187  27B3  3182   	fcall	_WriteI2C
 10125     030A                     l4322:
 10126     030A  0023               	movlb	3	; select bank3
 10127     030B  0C0F               	rrf	15,w	;volatile
 10128     030C  0C89               	rrf	9,f
 10129     030D  3901               	andlw	1
 10130     030E  00F4               	movwf	??_readTC74
 10131     030F  0811               	movf	17,w	;volatile
 10132     0310  391F               	andlw	31
 10133     0311  0474               	iorwf	??_readTC74,w
 10134     0312  1D03               	btfss	3,2
 10135     0313  2B15               	goto	u3101
 10136     0314  2B16               	goto	u3100
 10137     0315                     u3101:
 10138     0315  2B0A               	goto	l4322
 10139     0316                     u3100:
 10140     0316                     l4324:
 10141                           
 10142                           ;main.c: 110:   WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10143     0316  3001               	movlw	1
 10144     0317  3187  27B3  3182   	fcall	_WriteI2C
 10145     031A                     l4326:
 10146     031A  0023               	movlb	3	; select bank3
 10147     031B  0C0F               	rrf	15,w	;volatile
 10148     031C  0C89               	rrf	9,f
 10149     031D  3901               	andlw	1
 10150     031E  00F4               	movwf	??_readTC74
 10151     031F  0811               	movf	17,w	;volatile
 10152     0320  391F               	andlw	31
 10153     0321  0474               	iorwf	??_readTC74,w
 10154     0322  1D03               	btfss	3,2
 10155     0323  2B25               	goto	u3111
 10156     0324  2B26               	goto	u3110
 10157     0325                     u3111:
 10158     0325  2B1A               	goto	l4326
 10159     0326                     u3110:
 10160     0326                     l1147:	
 10161                           ;main.c: 111:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10162                           
 10163     0326  1491               	bsf	17,1	;volatile
 10164     0327                     l1148:
 10165     0327  1891               	btfsc	17,1	;volatile
 10166     0328  2B2A               	goto	u3121
 10167     0329  2B2B               	goto	u3120
 10168     032A                     u3121:
 10169     032A  2B27               	goto	l1148
 10170     032B                     u3120:
 10171     032B                     l4328:
 10172     032B  0C0F               	rrf	15,w	;volatile
 10173     032C  0C89               	rrf	9,f
 10174     032D  3901               	andlw	1
 10175     032E  00F4               	movwf	??_readTC74
 10176     032F  0811               	movf	17,w	;volatile
 10177     0330  391F               	andlw	31
 10178     0331  0474               	iorwf	??_readTC74,w
 10179     0332  1D03               	btfss	3,2
 10180     0333  2B35               	goto	u3131
 10181     0334  2B36               	goto	u3130
 10182     0335                     u3131:
 10183     0335  2B2B               	goto	l4328
 10184     0336                     u3130:
 10185     0336                     l4330:
 10186                           
 10187                           ;main.c: 112:   WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10188     0336  309B               	movlw	155
 10189     0337  3187  27B3  3182   	fcall	_WriteI2C
 10190     033A                     l4332:
 10191     033A  0023               	movlb	3	; select bank3
 10192     033B  0C0F               	rrf	15,w	;volatile
 10193     033C  0C89               	rrf	9,f
 10194     033D  3901               	andlw	1
 10195     033E  00F4               	movwf	??_readTC74
 10196     033F  0811               	movf	17,w	;volatile
 10197     0340  391F               	andlw	31
 10198     0341  0474               	iorwf	??_readTC74,w
 10199     0342  1D03               	btfss	3,2
 10200     0343  2B45               	goto	u3141
 10201     0344  2B46               	goto	u3140
 10202     0345                     u3141:
 10203     0345  2B3A               	goto	l4332
 10204     0346                     u3140:
 10205     0346                     l4334:
 10206                           
 10207                           ;main.c: 113:   value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10208     0346  318E  2632  3182   	fcall	_ReadI2C
 10209     0349  00F5               	movwf	readTC74@value
 10210     034A                     l4336:
 10211     034A  0023               	movlb	3	; select bank3
 10212     034B  0C0F               	rrf	15,w	;volatile
 10213     034C  0C89               	rrf	9,f
 10214     034D  3901               	andlw	1
 10215     034E  00F4               	movwf	??_readTC74
 10216     034F  0811               	movf	17,w	;volatile
 10217     0350  391F               	andlw	31
 10218     0351  0474               	iorwf	??_readTC74,w
 10219     0352  1D03               	btfss	3,2
 10220     0353  2B55               	goto	u3151
 10221     0354  2B56               	goto	u3150
 10222     0355                     u3151:
 10223     0355  2B4A               	goto	l4336
 10224     0356                     u3150:
 10225     0356                     l1161:	
 10226                           ;main.c: 114:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ; } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10227                           
 10228     0356  1691               	bsf	17,5	;volatile
 10229     0357  1611               	bsf	17,4	;volatile
 10230     0358                     l1162:
 10231     0358  1A11               	btfsc	17,4	;volatile
 10232     0359  2B5B               	goto	u3161
 10233     035A  2B5C               	goto	u3160
 10234     035B                     u3161:
 10235     035B  2B58               	goto	l1162
 10236     035C                     u3160:
 10237     035C                     l4338:
 10238     035C  0C0F               	rrf	15,w	;volatile
 10239     035D  0C89               	rrf	9,f
 10240     035E  3901               	andlw	1
 10241     035F  00F4               	movwf	??_readTC74
 10242     0360  0811               	movf	17,w	;volatile
 10243     0361  391F               	andlw	31
 10244     0362  0474               	iorwf	??_readTC74,w
 10245     0363  1D03               	btfss	3,2
 10246     0364  2B66               	goto	u3171
 10247     0365  2B67               	goto	u3170
 10248     0366                     u3171:
 10249     0366  2B5C               	goto	l4338
 10250     0367                     u3170:
 10251     0367                     l1169:	
 10252                           ;main.c: 115:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10253                           
 10254     0367  1511               	bsf	17,2	;volatile
 10255     0368                     l1170:
 10256     0368  1911               	btfsc	17,2	;volatile
 10257     0369  2B6B               	goto	u3181
 10258     036A  2B6C               	goto	u3180
 10259     036B                     u3181:
 10260     036B  2B68               	goto	l1170
 10261     036C                     u3180:
 10262     036C                     l1173:
 10263                           
 10264                           ;main.c: 116:  } while (!(value & 0x40));
 10265     036C  1F75               	btfss	readTC74@value,6
 10266     036D  2B6F               	goto	u3191
 10267     036E  2B70               	goto	u3190
 10268     036F                     u3191:
 10269     036F  2AEA               	goto	l1129
 10270     0370                     u3190:
 10271     0370                     l4340:
 10272     0370  0C0F               	rrf	15,w	;volatile
 10273     0371  0C89               	rrf	9,f
 10274     0372  3901               	andlw	1
 10275     0373  00F4               	movwf	??_readTC74
 10276     0374  0811               	movf	17,w	;volatile
 10277     0375  391F               	andlw	31
 10278     0376  0474               	iorwf	??_readTC74,w
 10279     0377  1D03               	btfss	3,2
 10280     0378  2B7A               	goto	u3201
 10281     0379  2B7B               	goto	u3200
 10282     037A                     u3201:
 10283     037A  2B70               	goto	l4340
 10284     037B                     u3200:
 10285     037B                     l1178:	
 10286                           ;main.c: 119:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP
      +                          1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10287                           
 10288     037B  1411               	bsf	17,0	;volatile
 10289     037C                     l1179:
 10290     037C  1811               	btfsc	17,0	;volatile
 10291     037D  2B7F               	goto	u3211
 10292     037E  2B80               	goto	u3210
 10293     037F                     u3211:
 10294     037F  2B7C               	goto	l1179
 10295     0380                     u3210:
 10296     0380                     l4342:
 10297     0380  0C0F               	rrf	15,w	;volatile
 10298     0381  0C89               	rrf	9,f
 10299     0382  3901               	andlw	1
 10300     0383  00F4               	movwf	??_readTC74
 10301     0384  0811               	movf	17,w	;volatile
 10302     0385  391F               	andlw	31
 10303     0386  0474               	iorwf	??_readTC74,w
 10304     0387  1D03               	btfss	3,2
 10305     0388  2B8A               	goto	u3221
 10306     0389  2B8B               	goto	u3220
 10307     038A                     u3221:
 10308     038A  2B80               	goto	l4342
 10309     038B                     u3220:
 10310     038B                     l4344:
 10311                           
 10312                           ;main.c: 120:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10313     038B  309A               	movlw	154
 10314     038C  3187  27B3  3182   	fcall	_WriteI2C
 10315     038F                     l4346:
 10316     038F  0023               	movlb	3	; select bank3
 10317     0390  0C0F               	rrf	15,w	;volatile
 10318     0391  0C89               	rrf	9,f
 10319     0392  3901               	andlw	1
 10320     0393  00F4               	movwf	??_readTC74
 10321     0394  0811               	movf	17,w	;volatile
 10322     0395  391F               	andlw	31
 10323     0396  0474               	iorwf	??_readTC74,w
 10324     0397  1D03               	btfss	3,2
 10325     0398  2B9A               	goto	u3231
 10326     0399  2B9B               	goto	u3230
 10327     039A                     u3231:
 10328     039A  2B8F               	goto	l4346
 10329     039B                     u3230:
 10330     039B                     l4348:
 10331                           
 10332                           ;main.c: 121:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10333     039B  3000               	movlw	0
 10334     039C  3187  27B3  3182   	fcall	_WriteI2C
 10335     039F                     l4350:
 10336     039F  0023               	movlb	3	; select bank3
 10337     03A0  0C0F               	rrf	15,w	;volatile
 10338     03A1  0C89               	rrf	9,f
 10339     03A2  3901               	andlw	1
 10340     03A3  00F4               	movwf	??_readTC74
 10341     03A4  0811               	movf	17,w	;volatile
 10342     03A5  391F               	andlw	31
 10343     03A6  0474               	iorwf	??_readTC74,w
 10344     03A7  1D03               	btfss	3,2
 10345     03A8  2BAA               	goto	u3241
 10346     03A9  2BAB               	goto	u3240
 10347     03AA                     u3241:
 10348     03AA  2B9F               	goto	l4350
 10349     03AB                     u3240:
 10350     03AB                     l1192:	
 10351                           ;main.c: 122:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((S
      +                          SP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10352                           
 10353     03AB  1491               	bsf	17,1	;volatile
 10354     03AC                     l1193:
 10355     03AC  1891               	btfsc	17,1	;volatile
 10356     03AD  2BAF               	goto	u3251
 10357     03AE  2BB0               	goto	u3250
 10358     03AF                     u3251:
 10359     03AF  2BAC               	goto	l1193
 10360     03B0                     u3250:
 10361     03B0                     l4352:
 10362     03B0  0C0F               	rrf	15,w	;volatile
 10363     03B1  0C89               	rrf	9,f
 10364     03B2  3901               	andlw	1
 10365     03B3  00F4               	movwf	??_readTC74
 10366     03B4  0811               	movf	17,w	;volatile
 10367     03B5  391F               	andlw	31
 10368     03B6  0474               	iorwf	??_readTC74,w
 10369     03B7  1D03               	btfss	3,2
 10370     03B8  2BBA               	goto	u3261
 10371     03B9  2BBB               	goto	u3260
 10372     03BA                     u3261:
 10373     03BA  2BB0               	goto	l4352
 10374     03BB                     u3260:
 10375     03BB                     l4354:
 10376                           
 10377                           ;main.c: 123:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10378     03BB  309B               	movlw	155
 10379     03BC  3187  27B3  3182   	fcall	_WriteI2C
 10380     03BF                     l4356:
 10381     03BF  0023               	movlb	3	; select bank3
 10382     03C0  0C0F               	rrf	15,w	;volatile
 10383     03C1  0C89               	rrf	9,f
 10384     03C2  3901               	andlw	1
 10385     03C3  00F4               	movwf	??_readTC74
 10386     03C4  0811               	movf	17,w	;volatile
 10387     03C5  391F               	andlw	31
 10388     03C6  0474               	iorwf	??_readTC74,w
 10389     03C7  1D03               	btfss	3,2
 10390     03C8  2BCA               	goto	u3271
 10391     03C9  2BCB               	goto	u3270
 10392     03CA                     u3271:
 10393     03CA  2BBF               	goto	l4356
 10394     03CB                     u3270:
 10395     03CB                     l4358:
 10396                           
 10397                           ;main.c: 124:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10398     03CB  318E  2632  3182   	fcall	_ReadI2C
 10399     03CE  00F5               	movwf	readTC74@value
 10400     03CF                     l4360:
 10401     03CF  0023               	movlb	3	; select bank3
 10402     03D0  0C0F               	rrf	15,w	;volatile
 10403     03D1  0C89               	rrf	9,f
 10404     03D2  3901               	andlw	1
 10405     03D3  00F4               	movwf	??_readTC74
 10406     03D4  0811               	movf	17,w	;volatile
 10407     03D5  391F               	andlw	31
 10408     03D6  0474               	iorwf	??_readTC74,w
 10409     03D7  1D03               	btfss	3,2
 10410     03D8  2BDA               	goto	u3281
 10411     03D9  2BDB               	goto	u3280
 10412     03DA                     u3281:
 10413     03DA  2BCF               	goto	l4360
 10414     03DB                     u3280:
 10415     03DB                     l1206:	
 10416                           ;main.c: 125:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
      +                           } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10417                           
 10418     03DB  1691               	bsf	17,5	;volatile
 10419     03DC  1611               	bsf	17,4	;volatile
 10420     03DD                     l1207:
 10421     03DD  1A11               	btfsc	17,4	;volatile
 10422     03DE  2BE0               	goto	u3291
 10423     03DF  2BE1               	goto	u3290
 10424     03E0                     u3291:
 10425     03E0  2BDD               	goto	l1207
 10426     03E1                     u3290:
 10427     03E1                     l4362:
 10428     03E1  0C0F               	rrf	15,w	;volatile
 10429     03E2  0C89               	rrf	9,f
 10430     03E3  3901               	andlw	1
 10431     03E4  00F4               	movwf	??_readTC74
 10432     03E5  0811               	movf	17,w	;volatile
 10433     03E6  391F               	andlw	31
 10434     03E7  0474               	iorwf	??_readTC74,w
 10435     03E8  1D03               	btfss	3,2
 10436     03E9  2BEB               	goto	u3301
 10437     03EA  2BEC               	goto	u3300
 10438     03EB                     u3301:
 10439     03EB  2BE1               	goto	l4362
 10440     03EC                     u3300:
 10441     03EC                     l1214:	
 10442                           ;main.c: 126:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10443                           
 10444     03EC  1511               	bsf	17,2	;volatile
 10445     03ED                     l1215:
 10446     03ED  1911               	btfsc	17,2	;volatile
 10447     03EE  2BF0               	goto	u3311
 10448     03EF  2BF1               	goto	u3310
 10449     03F0                     u3311:
 10450     03F0  2BED               	goto	l1215
 10451     03F1                     u3310:
 10452     03F1                     l4364:
 10453                           
 10454                           ;main.c: 128:  return value;
 10455     03F1  0875               	movf	readTC74@value,w
 10456     03F2                     l1219:
 10457     03F2  0008               	return
 10458     03F3                     __end_of_readTC74:
 10459                           
 10460                           	psect	text15
 10461     0D18                     __ptext15:	
 10462 ;; *************** function _alarm_handler *****************
 10463 ;; Defined at:
 10464 ;;		line 93 in file "main.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;		None
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;		None
 10469 ;; Return value:  Size  Location     Type
 10470 ;;                  1    wreg      void 
 10471 ;; Registers used:
 10472 ;;		None
 10473 ;; Tracked objects:
 10474 ;;		On entry : 0/0
 10475 ;;		On exit  : 0/0
 10476 ;;		Unchanged: 0/0
 10477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;Total ram usage:        0 bytes
 10483 ;; Hardware stack levels used: 1
 10484 ;; Hardware stack levels required when called: 3
 10485 ;; This function calls:
 10486 ;;		Nothing
 10487 ;; This function is called by:
 10488 ;;		_main
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492     0D18                     _alarm_handler:	
 10493                           ;psect for function _alarm_handler
 10494                           
 10495     0D18                     l4314:	
 10496                           ;incstack = 0
 10497                           ; Regs used in _alarm_handler: []
 10498                           
 10499                           
 10500                           ;main.c: 94:  alarm = 1;
 10501     0D18  0021               	movlb	1	; select bank1
 10502     0D19  01C1               	clrf	_alarm^(0+128)
 10503     0D1A  0AC1               	incf	_alarm^(0+128),f
 10504     0D1B                     l1124:	
 10505                           ;main.c: 96:     do { LATAbits.LATA6 = 1; } while(0);
 10506                           
 10507     0D1B  0020               	movlb	0	; select bank0
 10508     0D1C  1716               	bsf	22,6	;volatile
 10509     0D1D                     l1126:
 10510     0D1D  0008               	return
 10511     0D1E                     __end_of_alarm_handler:
 10512                           
 10513                           	psect	text16
 10514     0E19                     __ptext16:	
 10515 ;; *************** function _SYSTEM_Initialize *****************
 10516 ;; Defined at:
 10517 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;		None
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      void 
 10524 ;; Registers used:
 10525 ;;		wreg, status,2, status,0, pclath, cstack
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;Total ram usage:        0 bytes
 10536 ;; Hardware stack levels used: 1
 10537 ;; Hardware stack levels required when called: 5
 10538 ;; This function calls:
 10539 ;;		_ADCC_Initialize
 10540 ;;		_I2C1_Initialize
 10541 ;;		_OSCILLATOR_Initialize
 10542 ;;		_PIN_MANAGER_Initialize
 10543 ;;		_PMD_Initialize
 10544 ;;		_PWM6_Initialize
 10545 ;;		_TMR1_Initialize
 10546 ;;		_TMR2_Initialize
 10547 ;; This function is called by:
 10548 ;;		_main
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551                           
 10552     0E19                     _SYSTEM_Initialize:	
 10553                           ;psect for function _SYSTEM_Initialize
 10554                           
 10555     0E19                     l4244:	
 10556                           ;incstack = 0
 10557                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10558                           
 10559                           
 10560                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 10561     0E19  318D  2533  318E   	fcall	_PMD_Initialize
 10562     0E1C                     l4246:
 10563                           
 10564                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 10565     0E1C  318D  2544  318E   	fcall	_I2C1_Initialize
 10566     0E1F                     l4248:
 10567                           
 10568                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10569     0E1F  318F  2768  318E   	fcall	_PIN_MANAGER_Initialize
 10570     0E22                     l4250:
 10571                           
 10572                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10573     0E22  318D  253B  318E   	fcall	_OSCILLATOR_Initialize
 10574     0E25                     l4252:
 10575                           
 10576                           ;mcc_generated_files/mcc.c: 56:     PWM6_Initialize();
 10577     0E25  318D  255B  318E   	fcall	_PWM6_Initialize
 10578     0E28                     l4254:
 10579                           
 10580                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 10581     0E28  318D  25E9  318E   	fcall	_ADCC_Initialize
 10582     0E2B                     l4256:
 10583                           
 10584                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 10585     0E2B  318D  2568  318E   	fcall	_TMR2_Initialize
 10586     0E2E                     l4258:
 10587                           
 10588                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 10589     0E2E  318E  2668  318E   	fcall	_TMR1_Initialize
 10590     0E31                     l396:
 10591     0E31  0008               	return
 10592     0E32                     __end_of_SYSTEM_Initialize:
 10593                           
 10594                           	psect	text17
 10595     0D68                     __ptext17:	
 10596 ;; *************** function _TMR2_Initialize *****************
 10597 ;; Defined at:
 10598 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;		None
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;		None
 10603 ;; Return value:  Size  Location     Type
 10604 ;;                  1    wreg      void 
 10605 ;; Registers used:
 10606 ;;		wreg, status,2
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;Total ram usage:        0 bytes
 10617 ;; Hardware stack levels used: 1
 10618 ;; Hardware stack levels required when called: 3
 10619 ;; This function calls:
 10620 ;;		Nothing
 10621 ;; This function is called by:
 10622 ;;		_SYSTEM_Initialize
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626     0D68                     _TMR2_Initialize:	
 10627                           ;psect for function _TMR2_Initialize
 10628                           
 10629     0D68                     l4078:	
 10630                           ;incstack = 0
 10631                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10632                           
 10633                           
 10634                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 10635     0D68  3001               	movlw	1
 10636     0D69  0025               	movlb	5	; select bank5
 10637     0D6A  0090               	movwf	16	;volatile
 10638     0D6B                     l4080:
 10639                           
 10640                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 10641     0D6B  018F               	clrf	15	;volatile
 10642     0D6C                     l4082:
 10643                           
 10644                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 10645     0D6C  0191               	clrf	17	;volatile
 10646                           
 10647                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 10648     0D6D  30FF               	movlw	255
 10649     0D6E  008D               	movwf	13	;volatile
 10650     0D6F                     l4084:
 10651                           
 10652                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 10653     0D6F  018C               	clrf	12	;volatile
 10654     0D70                     l4086:
 10655                           
 10656                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 10657     0D70  002E               	movlb	14	; select bank14
 10658     0D71  1090               	bcf	16,1	;volatile
 10659     0D72                     l4088:
 10660                           
 10661                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 10662     0D72  3080               	movlw	128
 10663     0D73  0025               	movlb	5	; select bank5
 10664     0D74  008E               	movwf	14	;volatile
 10665     0D75                     l1285:
 10666     0D75  0008               	return
 10667     0D76                     __end_of_TMR2_Initialize:
 10668                           
 10669                           	psect	text18
 10670     0E68                     __ptext18:	
 10671 ;; *************** function _TMR1_Initialize *****************
 10672 ;; Defined at:
 10673 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 10674 ;; Parameters:    Size  Location     Type
 10675 ;;		None
 10676 ;; Auto vars:     Size  Location     Type
 10677 ;;		None
 10678 ;; Return value:  Size  Location     Type
 10679 ;;                  1    wreg      void 
 10680 ;; Registers used:
 10681 ;;		wreg, status,2, status,0, pclath, cstack
 10682 ;; Tracked objects:
 10683 ;;		On entry : 0/0
 10684 ;;		On exit  : 0/0
 10685 ;;		Unchanged: 0/0
 10686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10691 ;;Total ram usage:        0 bytes
 10692 ;; Hardware stack levels used: 1
 10693 ;; Hardware stack levels required when called: 4
 10694 ;; This function calls:
 10695 ;;		_TMR1_SetInterruptHandler
 10696 ;; This function is called by:
 10697 ;;		_SYSTEM_Initialize
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701     0E68                     _TMR1_Initialize:	
 10702                           ;psect for function _TMR1_Initialize
 10703                           
 10704     0E68                     l4090:	
 10705                           ;incstack = 0
 10706                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10707                           
 10708                           
 10709                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 10710     0E68  0024               	movlb	4	; select bank4
 10711     0E69  018F               	clrf	15	;volatile
 10712                           
 10713                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 10714     0E6A  0190               	clrf	16	;volatile
 10715     0E6B                     l4092:
 10716                           
 10717                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 10718     0E6B  3004               	movlw	4
 10719     0E6C  0091               	movwf	17	;volatile
 10720     0E6D                     l4094:
 10721                           
 10722                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
 10723     0E6D  3086               	movlw	134
 10724     0E6E  008D               	movwf	13	;volatile
 10725     0E6F                     l4096:
 10726                           
 10727                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
 10728     0E6F  30E8               	movlw	232
 10729     0E70  008C               	movwf	12	;volatile
 10730     0E71                     l4098:
 10731                           
 10732                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
 10733     0E71  002E               	movlb	14	; select bank14
 10734     0E72  1010               	bcf	16,0	;volatile
 10735     0E73                     l4100:
 10736                           
 10737                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10738     0E73  0024               	movlb	4	; select bank4
 10739     0E74  080D               	movf	13,w	;volatile
 10740     0E75  00FB               	movwf	_timer1ReloadVal+1	;volatile
 10741     0E76  080C               	movf	12,w	;volatile
 10742     0E77  00FA               	movwf	_timer1ReloadVal	;volatile
 10743     0E78                     l4102:
 10744                           
 10745                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 10746     0E78  002E               	movlb	14	; select bank14
 10747     0E79  141A               	bsf	26,0	;volatile
 10748     0E7A                     l4104:
 10749                           
 10750                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 10751     0E7A  3003               	movlw	low _TMR1_DefaultInterruptHandler
 10752     0E7B  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10753     0E7C  3000               	movlw	high _TMR1_DefaultInterruptHandler
 10754     0E7D  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10755     0E7E  318D  2512  318E   	fcall	_TMR1_SetInterruptHandler
 10756     0E81                     l4106:
 10757                           
 10758                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 10759     0E81  3001               	movlw	1
 10760     0E82  0024               	movlb	4	; select bank4
 10761     0E83  008E               	movwf	14	;volatile
 10762     0E84                     l1010:
 10763     0E84  0008               	return
 10764     0E85                     __end_of_TMR1_Initialize:
 10765                           
 10766                           	psect	text19
 10767     0D12                     __ptext19:	
 10768 ;; *************** function _TMR1_SetInterruptHandler *****************
 10769 ;; Defined at:
 10770 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 10773 ;;		 -> TMR1_IRQ(1), TMR1_DefaultInterruptHandler(1), 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;		None
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      void 
 10778 ;; Registers used:
 10779 ;;		wreg
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;Total ram usage:        2 bytes
 10790 ;; Hardware stack levels used: 1
 10791 ;; Hardware stack levels required when called: 3
 10792 ;; This function calls:
 10793 ;;		Nothing
 10794 ;; This function is called by:
 10795 ;;		_TMR1_Initialize
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800     0D12                     _TMR1_SetInterruptHandler:	
 10801                           ;psect for function _TMR1_SetInterruptHandler
 10802                           
 10803     0D12                     l3868:	
 10804                           ;incstack = 0
 10805                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 10806                           
 10807                           
 10808                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 10809     0D12  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 10810     0D13  0021               	movlb	1	; select bank1
 10811     0D14  00D8               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 10812     0D15  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 10813     0D16  00D7               	movwf	_TMR1_InterruptHandler^(0+128)
 10814     0D17                     l1040:
 10815     0D17  0008               	return
 10816     0D18                     __end_of_TMR1_SetInterruptHandler:
 10817                           
 10818                           	psect	text20
 10819     0D5B                     __ptext20:	
 10820 ;; *************** function _PWM6_Initialize *****************
 10821 ;; Defined at:
 10822 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10823 ;; Parameters:    Size  Location     Type
 10824 ;;		None
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;		None
 10827 ;; Return value:  Size  Location     Type
 10828 ;;                  1    wreg      void 
 10829 ;; Registers used:
 10830 ;;		wreg, status,2, status,0
 10831 ;; Tracked objects:
 10832 ;;		On entry : 0/0
 10833 ;;		On exit  : 0/0
 10834 ;;		Unchanged: 0/0
 10835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;Total ram usage:        0 bytes
 10841 ;; Hardware stack levels used: 1
 10842 ;; Hardware stack levels required when called: 3
 10843 ;; This function calls:
 10844 ;;		Nothing
 10845 ;; This function is called by:
 10846 ;;		_SYSTEM_Initialize
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850     0D5B                     _PWM6_Initialize:	
 10851                           ;psect for function _PWM6_Initialize
 10852                           
 10853     0D5B                     l4068:	
 10854                           ;incstack = 0
 10855                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10856                           
 10857                           
 10858                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 10859     0D5B  3080               	movlw	128
 10860     0D5C  0027               	movlb	7	; select bank7
 10861     0D5D  008E               	movwf	14	;volatile
 10862                           
 10863                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x7F;
 10864     0D5E  307F               	movlw	127
 10865     0D5F  008D               	movwf	13	;volatile
 10866                           
 10867                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 10868     0D60  30C0               	movlw	192
 10869     0D61  008C               	movwf	12	;volatile
 10870     0D62                     l4070:
 10871                           
 10872                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 10873     0D62  0024               	movlb	4	; select bank4
 10874     0D63  081F               	movf	31,w	;volatile
 10875     0D64  39F3               	andlw	-13
 10876     0D65  3804               	iorlw	4
 10877     0D66  009F               	movwf	31	;volatile
 10878     0D67                     l1336:
 10879     0D67  0008               	return
 10880     0D68                     __end_of_PWM6_Initialize:
 10881                           
 10882                           	psect	text21
 10883     0D33                     __ptext21:	
 10884 ;; *************** function _PMD_Initialize *****************
 10885 ;; Defined at:
 10886 ;;		line 76 in file "mcc_generated_files/mcc.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;		None
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;		None
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		status,2
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;Total ram usage:        0 bytes
 10905 ;; Hardware stack levels used: 1
 10906 ;; Hardware stack levels required when called: 3
 10907 ;; This function calls:
 10908 ;;		Nothing
 10909 ;; This function is called by:
 10910 ;;		_SYSTEM_Initialize
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914     0D33                     _PMD_Initialize:	
 10915                           ;psect for function _PMD_Initialize
 10916                           
 10917     0D33                     l4016:	
 10918                           ;incstack = 0
 10919                           ; Regs used in _PMD_Initialize: [status,2]
 10920                           
 10921                           
 10922                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 10923     0D33  002F               	movlb	15	; select bank15
 10924     0D34  0196               	clrf	22	;volatile
 10925                           
 10926                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 10927     0D35  0197               	clrf	23	;volatile
 10928                           
 10929                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 10930     0D36  0198               	clrf	24	;volatile
 10931                           
 10932                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 10933     0D37  0199               	clrf	25	;volatile
 10934                           
 10935                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 10936     0D38  019A               	clrf	26	;volatile
 10937                           
 10938                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 10939     0D39  019B               	clrf	27	;volatile
 10940     0D3A                     l402:
 10941     0D3A  0008               	return
 10942     0D3B                     __end_of_PMD_Initialize:
 10943                           
 10944                           	psect	text22
 10945     0F68                     __ptext22:	
 10946 ;; *************** function _PIN_MANAGER_Initialize *****************
 10947 ;; Defined at:
 10948 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;		None
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;		None
 10953 ;; Return value:  Size  Location     Type
 10954 ;;                  1    wreg      void 
 10955 ;; Registers used:
 10956 ;;		wreg, status,2
 10957 ;; Tracked objects:
 10958 ;;		On entry : 0/0
 10959 ;;		On exit  : 0/0
 10960 ;;		Unchanged: 0/0
 10961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;Total ram usage:        0 bytes
 10967 ;; Hardware stack levels used: 1
 10968 ;; Hardware stack levels required when called: 3
 10969 ;; This function calls:
 10970 ;;		Nothing
 10971 ;; This function is called by:
 10972 ;;		_SYSTEM_Initialize
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976     0F68                     _PIN_MANAGER_Initialize:	
 10977                           ;psect for function _PIN_MANAGER_Initialize
 10978                           
 10979     0F68                     l4026:	
 10980                           ;incstack = 0
 10981                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10982                           
 10983                           
 10984                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10985     0F68  0020               	movlb	0	; select bank0
 10986     0F69  019A               	clrf	26	;volatile
 10987                           
 10988                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 10989     0F6A  0199               	clrf	25	;volatile
 10990                           
 10991                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 10992     0F6B  0196               	clrf	22	;volatile
 10993                           
 10994                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 10995     0F6C  0197               	clrf	23	;volatile
 10996                           
 10997                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 10998     0F6D  0198               	clrf	24	;volatile
 10999     0F6E                     l4028:
 11000                           
 11001                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 11002     0F6E  3007               	movlw	7
 11003     0F6F  0095               	movwf	21	;volatile
 11004     0F70                     l4030:
 11005                           
 11006                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 11007     0F70  300F               	movlw	15
 11008     0F71  0091               	movwf	17	;volatile
 11009     0F72                     l4032:
 11010                           
 11011                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 11012     0F72  30FF               	movlw	255
 11013     0F73  0092               	movwf	18	;volatile
 11014     0F74                     l4034:
 11015                           
 11016                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 11017     0F74  30FF               	movlw	255
 11018     0F75  0093               	movwf	19	;volatile
 11019     0F76                     l4036:
 11020                           
 11021                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 11022     0F76  30FF               	movlw	255
 11023     0F77  0094               	movwf	20	;volatile
 11024     0F78                     l4038:
 11025                           
 11026                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 11027     0F78  30FF               	movlw	255
 11028     0F79  003E               	movlb	30	; select bank30
 11029     0F7A  00D9               	movwf	89	;volatile
 11030     0F7B                     l4040:
 11031                           
 11032                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE7;
 11033     0F7B  30E7               	movlw	231
 11034     0F7C  00CE               	movwf	78	;volatile
 11035     0F7D                     l4042:
 11036                           
 11037                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
 11038     0F7D  30FF               	movlw	255
 11039     0F7E  00C3               	movwf	67	;volatile
 11040     0F7F                     l4044:
 11041                           
 11042                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 11043     0F7F  3007               	movlw	7
 11044     0F80  00E4               	movwf	100	;volatile
 11045     0F81                     l4046:
 11046                           
 11047                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 11048     0F81  30FF               	movlw	255
 11049     0F82  00B8               	movwf	56	;volatile
 11050                           
 11051                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 11052     0F83  01DA               	clrf	90	;volatile
 11053                           
 11054                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 11055     0F84  01E5               	clrf	101	;volatile
 11056                           
 11057                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 11058     0F85  01C4               	clrf	68	;volatile
 11059                           
 11060                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 11061     0F86  01B9               	clrf	57	;volatile
 11062     0F87                     l4048:
 11063                           
 11064                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x18;
 11065     0F87  3018               	movlw	24
 11066     0F88  00CF               	movwf	79	;volatile
 11067     0F89                     l4050:
 11068                           
 11069                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 11070     0F89  01E6               	clrf	102	;volatile
 11071     0F8A                     l4052:
 11072                           
 11073                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 11074     0F8A  01BA               	clrf	58	;volatile
 11075     0F8B                     l4054:
 11076                           
 11077                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 11078     0F8B  01C5               	clrf	69	;volatile
 11079     0F8C                     l4056:
 11080                           
 11081                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 11082     0F8C  01D0               	clrf	80	;volatile
 11083     0F8D                     l4058:
 11084                           
 11085                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 11086     0F8D  01DB               	clrf	91	;volatile
 11087                           
 11088                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 11089     0F8E  30FF               	movlw	255
 11090     0F8F  00BB               	movwf	59	;volatile
 11091                           
 11092                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 11093     0F90  30FF               	movlw	255
 11094     0F91  00C6               	movwf	70	;volatile
 11095                           
 11096                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 11097     0F92  30FF               	movlw	255
 11098     0F93  00D1               	movwf	81	;volatile
 11099                           
 11100                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 11101     0F94  30FF               	movlw	255
 11102     0F95  00DC               	movwf	92	;volatile
 11103                           
 11104                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 11105     0F96  3007               	movlw	7
 11106     0F97  00E7               	movwf	103	;volatile
 11107                           
 11108                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 11109     0F98  30FF               	movlw	255
 11110     0F99  00BC               	movwf	60	;volatile
 11111                           
 11112                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 11113     0F9A  30FF               	movlw	255
 11114     0F9B  00C7               	movwf	71	;volatile
 11115                           
 11116                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 11117     0F9C  30FF               	movlw	255
 11118     0F9D  00D2               	movwf	82	;volatile
 11119                           
 11120                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 11121     0F9E  30FF               	movlw	255
 11122     0F9F  00DD               	movwf	93	;volatile
 11123                           
 11124                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 11125     0FA0  3007               	movlw	7
 11126     0FA1  00E8               	movwf	104	;volatile
 11127                           
 11128                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 11129     0FA2  3013               	movlw	19
 11130     0FA3  003D               	movlb	29	; select bank29
 11131     0FA4  00C5               	movwf	69	;volatile
 11132                           
 11133                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
 11134     0FA5  3014               	movlw	20
 11135     0FA6  003E               	movlb	30	; select bank30
 11136     0FA7  00A3               	movwf	35	;volatile
 11137                           
 11138                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
 11139     0FA8  3015               	movlw	21
 11140     0FA9  00A4               	movwf	36	;volatile
 11141                           
 11142                           ;mcc_generated_files/pin_manager.c: 130:     RA6PPS = 0x0E;
 11143     0FAA  300E               	movlw	14
 11144     0FAB  0096               	movwf	22	;volatile
 11145                           
 11146                           ;mcc_generated_files/pin_manager.c: 131:     SSP1DATPPS = 0x14;
 11147     0FAC  3014               	movlw	20
 11148     0FAD  003D               	movlb	29	; select bank29
 11149     0FAE  00C6               	movwf	70	;volatile
 11150     0FAF                     l485:
 11151     0FAF  0008               	return
 11152     0FB0                     __end_of_PIN_MANAGER_Initialize:
 11153                           
 11154                           	psect	text23
 11155     0D3B                     __ptext23:	
 11156 ;; *************** function _OSCILLATOR_Initialize *****************
 11157 ;; Defined at:
 11158 ;;		line 62 in file "mcc_generated_files/mcc.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      void 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;Total ram usage:        0 bytes
 11177 ;; Hardware stack levels used: 1
 11178 ;; Hardware stack levels required when called: 3
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_SYSTEM_Initialize
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186     0D3B                     _OSCILLATOR_Initialize:	
 11187                           ;psect for function _OSCILLATOR_Initialize
 11188                           
 11189     0D3B                     l4060:	
 11190                           ;incstack = 0
 11191                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11192                           
 11193                           
 11194                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x62;
 11195     0D3B  3062               	movlw	98
 11196     0D3C  0031               	movlb	17	; select bank17
 11197     0D3D  008D               	movwf	13	;volatile
 11198     0D3E                     l4062:
 11199                           
 11200                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 11201     0D3E  018F               	clrf	15	;volatile
 11202     0D3F                     l4064:
 11203                           
 11204                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 11205     0D3F  0191               	clrf	17	;volatile
 11206                           
 11207                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x02;
 11208     0D40  3002               	movlw	2
 11209     0D41  0093               	movwf	19	;volatile
 11210     0D42                     l4066:
 11211                           
 11212                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 11213     0D42  0192               	clrf	18	;volatile
 11214     0D43                     l399:
 11215     0D43  0008               	return
 11216     0D44                     __end_of_OSCILLATOR_Initialize:
 11217                           
 11218                           	psect	text24
 11219     0D44                     __ptext24:	
 11220 ;; *************** function _I2C1_Initialize *****************
 11221 ;; Defined at:
 11222 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 11223 ;; Parameters:    Size  Location     Type
 11224 ;;		None
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;		None
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  1    wreg      void 
 11229 ;; Registers used:
 11230 ;;		wreg, status,2
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11240 ;;Total ram usage:        0 bytes
 11241 ;; Hardware stack levels used: 1
 11242 ;; Hardware stack levels required when called: 3
 11243 ;; This function calls:
 11244 ;;		Nothing
 11245 ;; This function is called by:
 11246 ;;		_SYSTEM_Initialize
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250     0D44                     _I2C1_Initialize:	
 11251                           ;psect for function _I2C1_Initialize
 11252                           
 11253     0D44                     l4018:	
 11254                           ;incstack = 0
 11255                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 11256                           
 11257                           
 11258                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 11259     0D44  3080               	movlw	128
 11260     0D45  0023               	movlb	3	; select bank3
 11261     0D46  008F               	movwf	15	;volatile
 11262                           
 11263                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 11264     0D47  3008               	movlw	8
 11265     0D48  0090               	movwf	16	;volatile
 11266     0D49                     l4020:
 11267                           
 11268                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 11269     0D49  0191               	clrf	17	;volatile
 11270     0D4A                     l4022:
 11271                           
 11272                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 11273     0D4A  3003               	movlw	3
 11274     0D4B  008D               	movwf	13	;volatile
 11275     0D4C                     l4024:
 11276                           
 11277                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 11278     0D4C  1290               	bcf	16,5	;volatile
 11279     0D4D                     l593:
 11280     0D4D  0008               	return
 11281     0D4E                     __end_of_I2C1_Initialize:
 11282                           
 11283                           	psect	text25
 11284     0DE9                     __ptext25:	
 11285 ;; *************** function _ADCC_Initialize *****************
 11286 ;; Defined at:
 11287 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;		None
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;		None
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      void 
 11294 ;; Registers used:
 11295 ;;		wreg, status,2
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11305 ;;Total ram usage:        0 bytes
 11306 ;; Hardware stack levels used: 1
 11307 ;; Hardware stack levels required when called: 3
 11308 ;; This function calls:
 11309 ;;		Nothing
 11310 ;; This function is called by:
 11311 ;;		_SYSTEM_Initialize
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315     0DE9                     _ADCC_Initialize:	
 11316                           ;psect for function _ADCC_Initialize
 11317                           
 11318     0DE9                     l4072:	
 11319                           ;incstack = 0
 11320                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11321                           
 11322                           
 11323                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 11324     0DE9  0022               	movlb	2	; select bank2
 11325     0DEA  018E               	clrf	14	;volatile
 11326                           
 11327                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 11328     0DEB  018F               	clrf	15	;volatile
 11329                           
 11330                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 11331     0DEC  0190               	clrf	16	;volatile
 11332                           
 11333                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 11334     0DED  0191               	clrf	17	;volatile
 11335                           
 11336                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 11337     0DEE  0192               	clrf	18	;volatile
 11338                           
 11339                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 11340     0DEF  0193               	clrf	19	;volatile
 11341                           
 11342                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 11343     0DF0  018D               	clrf	13	;volatile
 11344                           
 11345                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 11346     0DF1  0021               	movlb	1	; select bank1
 11347     0DF2  019E               	clrf	30	;volatile
 11348                           
 11349                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 11350     0DF3  019B               	clrf	27	;volatile
 11351                           
 11352                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 11353     0DF4  019C               	clrf	28	;volatile
 11354                           
 11355                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 11356     0DF5  0194               	clrf	20	;volatile
 11357                           
 11358                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 11359     0DF6  0195               	clrf	21	;volatile
 11360                           
 11361                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 11362     0DF7  0196               	clrf	22	;volatile
 11363                           
 11364                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 11365     0DF8  0197               	clrf	23	;volatile
 11366                           
 11367                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 11368     0DF9  019A               	clrf	26	;volatile
 11369                           
 11370                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 11371     0DFA  0199               	clrf	25	;volatile
 11372                           
 11373                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
 11374     0DFB  0198               	clrf	24	;volatile
 11375     0DFC                     l4074:
 11376                           
 11377                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 11378     0DFC  3084               	movlw	132
 11379     0DFD  0093               	movwf	19	;volatile
 11380     0DFE                     l4076:
 11381                           
 11382                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 11383     0DFE  019D               	clrf	29	;volatile
 11384     0DFF                     l898:
 11385     0DFF  0008               	return
 11386     0E00                     __end_of_ADCC_Initialize:
 11387                           
 11388                           	psect	text26
 11389     0D4E                     __ptext26:	
 11390 ;; *************** function _OpenI2C *****************
 11391 ;; Defined at:
 11392 ;;		line 26 in file "I2C/i2c.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;		None
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;                  1    wreg      void 
 11399 ;; Registers used:
 11400 ;;		wreg, status,2
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11410 ;;Total ram usage:        0 bytes
 11411 ;; Hardware stack levels used: 1
 11412 ;; Hardware stack levels required when called: 3
 11413 ;; This function calls:
 11414 ;;		Nothing
 11415 ;; This function is called by:
 11416 ;;		_main
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420     0D4E                     _OpenI2C:	
 11421                           ;psect for function _OpenI2C
 11422                           
 11423     0D4E                     l4134:	
 11424                           ;incstack = 0
 11425                           ; Regs used in _OpenI2C: [wreg+status,2]
 11426                           
 11427                           
 11428                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
 11429     0D4E  3080               	movlw	128
 11430     0D4F  0023               	movlb	3	; select bank3
 11431     0D50  008F               	movwf	15	;volatile
 11432                           
 11433                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
 11434     0D51  3008               	movlw	8
 11435     0D52  0090               	movwf	16	;volatile
 11436     0D53                     l4136:
 11437                           
 11438                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
 11439     0D53  0191               	clrf	17	;volatile
 11440     0D54                     l4138:
 11441                           
 11442                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
 11443     0D54  3003               	movlw	3
 11444     0D55  008D               	movwf	13	;volatile
 11445     0D56                     l4140:
 11446                           
 11447                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
 11448     0D56  1690               	bsf	16,5	;volatile
 11449     0D57                     l4142:
 11450                           
 11451                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
 11452     0D57  0020               	movlb	0	; select bank0
 11453     0D58  1593               	bsf	19,3	;volatile
 11454     0D59                     l4144:
 11455                           
 11456                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
 11457     0D59  1613               	bsf	19,4	;volatile
 11458     0D5A                     l23:
 11459     0D5A  0008               	return
 11460     0D5B                     __end_of_OpenI2C:
 11461                           
 11462                           	psect	text27
 11463     0E00                     __ptext27:	
 11464 ;; *************** function _LCDstr *****************
 11465 ;; Defined at:
 11466 ;;		line 112 in file "LCD/lcd.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;  p               2    0[BANK0 ] PTR unsigned char 
 11469 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
 11470 ;;		 -> measure_buffer(6), time_buffer(8), 
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  c               1    4[BANK0 ] unsigned char 
 11473 ;; Return value:  Size  Location     Type
 11474 ;;                  1    wreg      void 
 11475 ;; Registers used:
 11476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11477 ;; Tracked objects:
 11478 ;;		On entry : 0/0
 11479 ;;		On exit  : 0/0
 11480 ;;		Unchanged: 0/0
 11481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11485 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11486 ;;Total ram usage:        5 bytes
 11487 ;; Hardware stack levels used: 1
 11488 ;; Hardware stack levels required when called: 6
 11489 ;; This function calls:
 11490 ;;		_LCDchar
 11491 ;; This function is called by:
 11492 ;;		_main
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496     0E00                     _LCDstr:	
 11497                           ;psect for function _LCDstr
 11498                           
 11499     0E00                     l5152:	
 11500                           ;incstack = 0
 11501                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11502                           
 11503                           
 11504                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
 11505     0E00  2E05               	goto	l5156
 11506     0E01                     l5154:
 11507     0E01  0824               	movf	LCDstr@c,w
 11508     0E02  318D  252B  318E   	fcall	_LCDchar
 11509     0E05                     l5156:
 11510     0E05  0020               	movlb	0	; select bank0
 11511     0E06  0821               	movf	LCDstr@p+1,w
 11512     0E07  00A3               	movwf	??_LCDstr+1
 11513     0E08  0820               	movf	LCDstr@p,w
 11514     0E09  00A2               	movwf	??_LCDstr
 11515     0E0A  0AA0               	incf	LCDstr@p,f
 11516     0E0B  1903               	skipnz
 11517     0E0C  0AA1               	incf	LCDstr@p+1,f
 11518     0E0D  0822               	movf	??_LCDstr,w
 11519     0E0E  0084               	movwf	4
 11520     0E0F  0823               	movf	??_LCDstr+1,w
 11521     0E10  0085               	movwf	5
 11522     0E11  0800               	movf	0,w	;code access
 11523     0E12  00A4               	movwf	LCDstr@c
 11524     0E13  0824               	movf	LCDstr@c,w
 11525     0E14  1D03               	btfss	3,2
 11526     0E15  2E17               	goto	u4071
 11527     0E16  2E18               	goto	u4070
 11528     0E17                     u4071:
 11529     0E17  2E01               	goto	l5154
 11530     0E18                     u4070:
 11531     0E18                     l244:
 11532     0E18  0008               	return
 11533     0E19                     __end_of_LCDstr:
 11534                           
 11535                           	psect	text28
 11536     0D2B                     __ptext28:	
 11537 ;; *************** function _LCDchar *****************
 11538 ;; Defined at:
 11539 ;;		line 107 in file "LCD/lcd.c"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;  c               1    wreg     unsigned char 
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;  c               1    9[COMMON] unsigned char 
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  1    wreg      void 
 11546 ;; Registers used:
 11547 ;;		wreg, status,2, status,0, pclath, cstack
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;Total ram usage:        1 bytes
 11558 ;; Hardware stack levels used: 1
 11559 ;; Hardware stack levels required when called: 5
 11560 ;; This function calls:
 11561 ;;		_LCDsend2x4
 11562 ;; This function is called by:
 11563 ;;		_LCDstr
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567     0D2B                     _LCDchar:	
 11568                           ;psect for function _LCDchar
 11569                           
 11570                           
 11571                           ;incstack = 0
 11572                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 11573                           ;LCDchar@c stored from wreg
 11574     0D2B  00F9               	movwf	LCDchar@c
 11575     0D2C                     l4006:
 11576                           
 11577                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
 11578     0D2C  01F4               	clrf	LCDsend2x4@mode
 11579     0D2D  0AF4               	incf	LCDsend2x4@mode,f
 11580     0D2E  0879               	movf	LCDchar@c,w
 11581     0D2F  3184  24C1  318D   	fcall	_LCDsend2x4
 11582     0D32                     l238:
 11583     0D32  0008               	return
 11584     0D33                     __end_of_LCDchar:
 11585                           
 11586                           	psect	text29
 11587     0DBE                     __ptext29:	
 11588 ;; *************** function _LCDpos *****************
 11589 ;; Defined at:
 11590 ;;		line 125 in file "LCD/lcd.c"
 11591 ;; Parameters:    Size  Location     Type
 11592 ;;  l               1    wreg     unsigned char 
 11593 ;;  c               1    0[BANK0 ] unsigned char 
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;  l               1    1[BANK0 ] unsigned char 
 11596 ;;  p               1    2[BANK0 ] unsigned char 
 11597 ;; Return value:  Size  Location     Type
 11598 ;;                  1    wreg      void 
 11599 ;; Registers used:
 11600 ;;		wreg, status,2, status,0, pclath, cstack
 11601 ;; Tracked objects:
 11602 ;;		On entry : 0/0
 11603 ;;		On exit  : 0/0
 11604 ;;		Unchanged: 0/0
 11605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11606 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11607 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11609 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11610 ;;Total ram usage:        3 bytes
 11611 ;; Hardware stack levels used: 1
 11612 ;; Hardware stack levels required when called: 6
 11613 ;; This function calls:
 11614 ;;		_LCDcmd
 11615 ;; This function is called by:
 11616 ;;		_main
 11617 ;; This function uses a non-reentrant model
 11618 ;;
 11619                           
 11620     0DBE                     _LCDpos:	
 11621                           ;psect for function _LCDpos
 11622                           
 11623                           
 11624                           ;incstack = 0
 11625                           ; Regs used in _LCDpos: [wreg+status,2+status,0+pclath+cstack]
 11626                           ;LCDpos@l stored from wreg
 11627     0DBE  0020               	movlb	0	; select bank0
 11628     0DBF  00A1               	movwf	LCDpos@l
 11629     0DC0                     l5168:
 11630                           
 11631                           ;LCD/lcd.c: 125: void LCDpos(unsigned char l, unsigned char c);LCD/lcd.c: 126: {;LCD/lcd
      +                          .c: 127:   unsigned char p;;LCD/lcd.c: 131:   if (l>=1) p = 0xc0; else p=0x80;
 11632     0DC0  0821               	movf	LCDpos@l,w
 11633     0DC1  1903               	btfsc	3,2
 11634     0DC2  2DC4               	goto	u4091
 11635     0DC3  2DC5               	goto	u4090
 11636     0DC4                     u4091:
 11637     0DC4  2DC8               	goto	l5172
 11638     0DC5                     u4090:
 11639     0DC5                     l5170:
 11640     0DC5  30C0               	movlw	192
 11641     0DC6  00A2               	movwf	LCDpos@p
 11642     0DC7  2DCA               	goto	l5174
 11643     0DC8                     l5172:
 11644     0DC8  3080               	movlw	128
 11645     0DC9  00A2               	movwf	LCDpos@p
 11646     0DCA                     l5174:
 11647                           
 11648                           ;LCD/lcd.c: 132:   p = p | (c&0x0f);
 11649     0DCA  0820               	movf	LCDpos@c,w
 11650     0DCB  390F               	andlw	15
 11651     0DCC  0422               	iorwf	LCDpos@p,w
 11652     0DCD  00A2               	movwf	LCDpos@p
 11653     0DCE                     l5176:
 11654                           
 11655                           ;LCD/lcd.c: 133:   LCDcmd(p);
 11656     0DCE  0822               	movf	LCDpos@p,w
 11657     0DCF  318D  2524  318D   	fcall	_LCDcmd
 11658     0DD2                     l253:
 11659     0DD2  0008               	return
 11660     0DD3                     __end_of_LCDpos:
 11661                           
 11662                           	psect	text30
 11663     0D24                     __ptext30:	
 11664 ;; *************** function _LCDcmd *****************
 11665 ;; Defined at:
 11666 ;;		line 102 in file "LCD/lcd.c"
 11667 ;; Parameters:    Size  Location     Type
 11668 ;;  c               1    wreg     unsigned char 
 11669 ;; Auto vars:     Size  Location     Type
 11670 ;;  c               1    9[COMMON] unsigned char 
 11671 ;; Return value:  Size  Location     Type
 11672 ;;                  1    wreg      void 
 11673 ;; Registers used:
 11674 ;;		wreg, status,2, status,0, pclath, cstack
 11675 ;; Tracked objects:
 11676 ;;		On entry : 0/0
 11677 ;;		On exit  : 0/0
 11678 ;;		Unchanged: 0/0
 11679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;Total ram usage:        1 bytes
 11685 ;; Hardware stack levels used: 1
 11686 ;; Hardware stack levels required when called: 5
 11687 ;; This function calls:
 11688 ;;		_LCDsend2x4
 11689 ;; This function is called by:
 11690 ;;		_LCDpos
 11691 ;;		_main
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           
 11695     0D24                     _LCDcmd:	
 11696                           ;psect for function _LCDcmd
 11697                           
 11698                           
 11699                           ;incstack = 0
 11700                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 11701                           ;LCDcmd@c stored from wreg
 11702     0D24  00F9               	movwf	LCDcmd@c
 11703     0D25                     l4004:
 11704                           
 11705                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
 11706     0D25  01F4               	clrf	LCDsend2x4@mode
 11707     0D26  0879               	movf	LCDcmd@c,w
 11708     0D27  3184  24C1  318D   	fcall	_LCDsend2x4
 11709     0D2A                     l235:
 11710     0D2A  0008               	return
 11711     0D2B                     __end_of_LCDcmd:
 11712                           
 11713                           	psect	text31
 11714     0624                     __ptext31:	
 11715 ;; *************** function _LCDinit *****************
 11716 ;; Defined at:
 11717 ;;		line 79 in file "LCD/lcd.c"
 11718 ;; Parameters:    Size  Location     Type
 11719 ;;		None
 11720 ;; Auto vars:     Size  Location     Type
 11721 ;;		None
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  1    wreg      void 
 11724 ;; Registers used:
 11725 ;;		wreg, status,2, status,0, pclath, cstack
 11726 ;; Tracked objects:
 11727 ;;		On entry : 0/0
 11728 ;;		On exit  : 0/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;Total ram usage:        1 bytes
 11736 ;; Hardware stack levels used: 1
 11737 ;; Hardware stack levels required when called: 5
 11738 ;; This function calls:
 11739 ;;		_LCDsend
 11740 ;;		_LCDsend2x4
 11741 ;; This function is called by:
 11742 ;;		_main
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746     0624                     _LCDinit:	
 11747                           ;psect for function _LCDinit
 11748                           
 11749     0624                     l4146:	
 11750                           ;incstack = 0
 11751                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 11752                           
 11753                           
 11754                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
 11755     0624  3041               	movlw	65
 11756     0625  00F9               	movwf	??_LCDinit
 11757     0626  30EE               	movlw	238
 11758     0627                     u4257:
 11759     0627  0B89               	decfsz	9,f
 11760     0628  2E27               	goto	u4257
 11761     0629  0BF9               	decfsz	??_LCDinit,f
 11762     062A  2E27               	goto	u4257
 11763     062B  3200               	nop2
 11764     062C                     l4148:
 11765                           
 11766                           ;LCD/lcd.c: 82:   LCDsend(0x30);
 11767     062C  3030               	movlw	48
 11768     062D  318F  2725  3186   	fcall	_LCDsend
 11769     0630                     l4150:
 11770                           
 11771                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 11772     0630  3034               	movlw	52
 11773     0631  318F  2725  3186   	fcall	_LCDsend
 11774     0634  30A6               	movlw	166
 11775     0635                     u4267:
 11776     0635  0B89               	decfsz	9,f
 11777     0636  2E35               	goto	u4267
 11778     0637  3200               	nop2
 11779     0638                     l4152:
 11780     0638  3030               	movlw	48
 11781     0639  318F  2725  3186   	fcall	_LCDsend
 11782     063C                     l4154:
 11783                           
 11784                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
 11785     063C  3007               	movlw	7
 11786     063D  00F9               	movwf	??_LCDinit
 11787     063E  307D               	movlw	125
 11788     063F                     u4277:
 11789     063F  0B89               	decfsz	9,f
 11790     0640  2E3F               	goto	u4277
 11791     0641  0BF9               	decfsz	??_LCDinit,f
 11792     0642  2E3F               	goto	u4277
 11793     0643  0000               	nop
 11794                           
 11795                           ;LCD/lcd.c: 85:   LCDsend(0x30);
 11796     0644  3030               	movlw	48
 11797     0645  318F  2725  3186   	fcall	_LCDsend
 11798                           
 11799                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 11800     0648  3034               	movlw	52
 11801     0649  318F  2725  3186   	fcall	_LCDsend
 11802     064C                     l4156:
 11803     064C  30A6               	movlw	166
 11804     064D                     u4287:
 11805     064D  0B89               	decfsz	9,f
 11806     064E  2E4D               	goto	u4287
 11807     064F  3200               	nop2
 11808     0650                     l4158:
 11809     0650  3030               	movlw	48
 11810     0651  318F  2725  3186   	fcall	_LCDsend
 11811                           
 11812                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 11813     0654  3021               	movlw	33
 11814     0655                     u4297:
 11815     0655  0B89               	decfsz	9,f
 11816     0656  2E55               	goto	u4297
 11817     0657  0000               	nop
 11818     0658                     l4160:
 11819                           
 11820                           ;LCD/lcd.c: 88:   LCDsend(0x30);
 11821     0658  3030               	movlw	48
 11822     0659  318F  2725  3186   	fcall	_LCDsend
 11823     065C                     l4162:
 11824                           
 11825                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 11826     065C  3034               	movlw	52
 11827     065D  318F  2725  3186   	fcall	_LCDsend
 11828     0660  30A6               	movlw	166
 11829     0661                     u4307:
 11830     0661  0B89               	decfsz	9,f
 11831     0662  2E61               	goto	u4307
 11832     0663  3200               	nop2
 11833     0664                     l4164:
 11834     0664  3030               	movlw	48
 11835     0665  318F  2725  3186   	fcall	_LCDsend
 11836     0668                     l4166:
 11837                           
 11838                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 11839     0668  3021               	movlw	33
 11840     0669                     u4317:
 11841     0669  0B89               	decfsz	9,f
 11842     066A  2E69               	goto	u4317
 11843     066B  0000               	nop
 11844                           
 11845                           ;LCD/lcd.c: 91:   LCDsend(0x20);
 11846     066C  3020               	movlw	32
 11847     066D  318F  2725  3186   	fcall	_LCDsend
 11848                           
 11849                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
 11850     0670  3024               	movlw	36
 11851     0671  318F  2725  3186   	fcall	_LCDsend
 11852     0674                     l4168:
 11853     0674  30A6               	movlw	166
 11854     0675                     u4327:
 11855     0675  0B89               	decfsz	9,f
 11856     0676  2E75               	goto	u4327
 11857     0677  3200               	nop2
 11858     0678                     l4170:
 11859     0678  3020               	movlw	32
 11860     0679  318F  2725  3186   	fcall	_LCDsend
 11861                           
 11862                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
 11863     067C  3007               	movlw	7
 11864     067D  00F9               	movwf	??_LCDinit
 11865     067E  307D               	movlw	125
 11866     067F                     u4337:
 11867     067F  0B89               	decfsz	9,f
 11868     0680  2E7F               	goto	u4337
 11869     0681  0BF9               	decfsz	??_LCDinit,f
 11870     0682  2E7F               	goto	u4337
 11871     0683  0000               	nop
 11872     0684                     l4172:
 11873                           
 11874                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
 11875     0684  01F4               	clrf	LCDsend2x4@mode
 11876     0685  3028               	movlw	40
 11877     0686  3184  24C1  3186   	fcall	_LCDsend2x4
 11878     0689                     l4174:
 11879                           
 11880                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
 11881     0689  01F4               	clrf	LCDsend2x4@mode
 11882     068A  3006               	movlw	6
 11883     068B  3184  24C1  3186   	fcall	_LCDsend2x4
 11884     068E                     l4176:
 11885                           
 11886                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
 11887     068E  01F4               	clrf	LCDsend2x4@mode
 11888     068F  300F               	movlw	15
 11889     0690  3184  24C1  3186   	fcall	_LCDsend2x4
 11890     0693                     l4178:
 11891                           
 11892                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
 11893     0693  01F4               	clrf	LCDsend2x4@mode
 11894     0694  3001               	movlw	1
 11895     0695  3184  24C1  3186   	fcall	_LCDsend2x4
 11896                           
 11897                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
 11898     0698  3003               	movlw	3
 11899     0699  00F9               	movwf	??_LCDinit
 11900     069A  3098               	movlw	152
 11901     069B                     u4347:
 11902     069B  0B89               	decfsz	9,f
 11903     069C  2E9B               	goto	u4347
 11904     069D  0BF9               	decfsz	??_LCDinit,f
 11905     069E  2E9B               	goto	u4347
 11906     069F                     l232:
 11907     069F  0008               	return
 11908     06A0                     __end_of_LCDinit:
 11909                           
 11910                           	psect	text32
 11911     04C1                     __ptext32:	
 11912 ;; *************** function _LCDsend2x4 *****************
 11913 ;; Defined at:
 11914 ;;		line 56 in file "LCD/lcd.c"
 11915 ;; Parameters:    Size  Location     Type
 11916 ;;  c               1    wreg     unsigned char 
 11917 ;;  mode            1    4[COMMON] unsigned char 
 11918 ;; Auto vars:     Size  Location     Type
 11919 ;;  c               1    6[COMMON] unsigned char 
 11920 ;;  lc              1    8[COMMON] unsigned char 
 11921 ;;  hc              1    7[COMMON] unsigned char 
 11922 ;; Return value:  Size  Location     Type
 11923 ;;                  1    wreg      void 
 11924 ;; Registers used:
 11925 ;;		wreg, status,2, status,0, pclath, cstack
 11926 ;; Tracked objects:
 11927 ;;		On entry : 0/0
 11928 ;;		On exit  : 0/0
 11929 ;;		Unchanged: 0/0
 11930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11931 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;Total ram usage:        5 bytes
 11936 ;; Hardware stack levels used: 1
 11937 ;; Hardware stack levels required when called: 4
 11938 ;; This function calls:
 11939 ;;		_WriteI2C
 11940 ;; This function is called by:
 11941 ;;		_LCDinit
 11942 ;;		_LCDcmd
 11943 ;;		_LCDchar
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947     04C1                     _LCDsend2x4:	
 11948                           ;psect for function _LCDsend2x4
 11949                           
 11950                           
 11951                           ;incstack = 0
 11952                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 11953                           ;LCDsend2x4@c stored from wreg
 11954     04C1  00F6               	movwf	LCDsend2x4@c
 11955     04C2                     l3824:
 11956                           
 11957                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 11958     04C2  0876               	movf	LCDsend2x4@c,w
 11959     04C3  39F0               	andlw	240
 11960     04C4  00F7               	movwf	LCDsend2x4@hc
 11961     04C5                     l3826:
 11962                           
 11963                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 11964     04C5  0876               	movf	LCDsend2x4@c,w
 11965     04C6  00F5               	movwf	??_LCDsend2x4
 11966     04C7  3003               	movlw	3
 11967     04C8                     u2465:
 11968     04C8  35F5               	lslf	??_LCDsend2x4,f
 11969     04C9  3EFF               	addlw	-1
 11970     04CA  1D03               	skipz
 11971     04CB  2CC8               	goto	u2465
 11972     04CC  3575               	lslf	??_LCDsend2x4,w
 11973     04CD  39F0               	andlw	240
 11974     04CE  00F8               	movwf	LCDsend2x4@lc
 11975     04CF                     l3828:	
 11976                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11977                           
 11978     04CF  0023               	movlb	3	; select bank3
 11979     04D0  0C0F               	rrf	15,w	;volatile
 11980     04D1  0C89               	rrf	9,f
 11981     04D2  3901               	andlw	1
 11982     04D3  00F5               	movwf	??_LCDsend2x4
 11983     04D4  0811               	movf	17,w	;volatile
 11984     04D5  391F               	andlw	31
 11985     04D6  0475               	iorwf	??_LCDsend2x4,w
 11986     04D7  1D03               	btfss	3,2
 11987     04D8  2CDA               	goto	u2471
 11988     04D9  2CDB               	goto	u2470
 11989     04DA                     u2471:
 11990     04DA  2CCF               	goto	l3828
 11991     04DB                     u2470:
 11992     04DB                     l195:	
 11993                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11994                           
 11995     04DB  1411               	bsf	17,0	;volatile
 11996     04DC                     l196:
 11997     04DC  1811               	btfsc	17,0	;volatile
 11998     04DD  2CDF               	goto	u2481
 11999     04DE  2CE0               	goto	u2480
 12000     04DF                     u2481:
 12001     04DF  2CDC               	goto	l196
 12002     04E0                     u2480:
 12003     04E0                     l3830:
 12004     04E0  0C0F               	rrf	15,w	;volatile
 12005     04E1  0C89               	rrf	9,f
 12006     04E2  3901               	andlw	1
 12007     04E3  00F5               	movwf	??_LCDsend2x4
 12008     04E4  0811               	movf	17,w	;volatile
 12009     04E5  391F               	andlw	31
 12010     04E6  0475               	iorwf	??_LCDsend2x4,w
 12011     04E7  1D03               	btfss	3,2
 12012     04E8  2CEA               	goto	u2491
 12013     04E9  2CEB               	goto	u2490
 12014     04EA                     u2491:
 12015     04EA  2CE0               	goto	l3830
 12016     04EB                     u2490:
 12017     04EB                     l3832:
 12018                           
 12019                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12020     04EB  304E               	movlw	78
 12021     04EC  3187  27B3  3184   	fcall	_WriteI2C
 12022     04EF                     l3834:
 12023     04EF  0023               	movlb	3	; select bank3
 12024     04F0  0C0F               	rrf	15,w	;volatile
 12025     04F1  0C89               	rrf	9,f
 12026     04F2  3901               	andlw	1
 12027     04F3  00F5               	movwf	??_LCDsend2x4
 12028     04F4  0811               	movf	17,w	;volatile
 12029     04F5  391F               	andlw	31
 12030     04F6  0475               	iorwf	??_LCDsend2x4,w
 12031     04F7  1D03               	btfss	3,2
 12032     04F8  2CFA               	goto	u2501
 12033     04F9  2CFB               	goto	u2500
 12034     04FA                     u2501:
 12035     04FA  2CEF               	goto	l3834
 12036     04FB                     u2500:
 12037     04FB                     l3836:
 12038                           
 12039                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12040     04FB  0877               	movf	LCDsend2x4@hc,w
 12041     04FC  0474               	iorwf	LCDsend2x4@mode,w
 12042     04FD  3808               	iorlw	8
 12043     04FE  3187  27B3  3184   	fcall	_WriteI2C
 12044     0501                     l3838:
 12045     0501  0023               	movlb	3	; select bank3
 12046     0502  0C0F               	rrf	15,w	;volatile
 12047     0503  0C89               	rrf	9,f
 12048     0504  3901               	andlw	1
 12049     0505  00F5               	movwf	??_LCDsend2x4
 12050     0506  0811               	movf	17,w	;volatile
 12051     0507  391F               	andlw	31
 12052     0508  0475               	iorwf	??_LCDsend2x4,w
 12053     0509  1D03               	btfss	3,2
 12054     050A  2D0C               	goto	u2511
 12055     050B  2D0D               	goto	u2510
 12056     050C                     u2511:
 12057     050C  2D01               	goto	l3838
 12058     050D                     u2510:
 12059     050D                     l3840:
 12060                           
 12061                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 12062     050D  0877               	movf	LCDsend2x4@hc,w
 12063     050E  0474               	iorwf	LCDsend2x4@mode,w
 12064     050F  380C               	iorlw	12
 12065     0510  3187  27B3  3184   	fcall	_WriteI2C
 12066     0513                     l3842:
 12067     0513  0023               	movlb	3	; select bank3
 12068     0514  0C0F               	rrf	15,w	;volatile
 12069     0515  0C89               	rrf	9,f
 12070     0516  3901               	andlw	1
 12071     0517  00F5               	movwf	??_LCDsend2x4
 12072     0518  0811               	movf	17,w	;volatile
 12073     0519  391F               	andlw	31
 12074     051A  0475               	iorwf	??_LCDsend2x4,w
 12075     051B  1D03               	btfss	3,2
 12076     051C  2D1E               	goto	u2521
 12077     051D  2D1F               	goto	u2520
 12078     051E                     u2521:
 12079     051E  2D13               	goto	l3842
 12080     051F                     u2520:
 12081     051F                     l211:
 12082                           
 12083                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12084     051F  0000               	nop
 12085     0520                     l3844:
 12086                           
 12087                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12088     0520  0877               	movf	LCDsend2x4@hc,w
 12089     0521  0474               	iorwf	LCDsend2x4@mode,w
 12090     0522  3808               	iorlw	8
 12091     0523  3187  27B3  3184   	fcall	_WriteI2C
 12092     0526                     l3846:
 12093     0526  0023               	movlb	3	; select bank3
 12094     0527  0C0F               	rrf	15,w	;volatile
 12095     0528  0C89               	rrf	9,f
 12096     0529  3901               	andlw	1
 12097     052A  00F5               	movwf	??_LCDsend2x4
 12098     052B  0811               	movf	17,w	;volatile
 12099     052C  391F               	andlw	31
 12100     052D  0475               	iorwf	??_LCDsend2x4,w
 12101     052E  1D03               	btfss	3,2
 12102     052F  2D31               	goto	u2531
 12103     0530  2D32               	goto	u2530
 12104     0531                     u2531:
 12105     0531  2D26               	goto	l3846
 12106     0532                     u2530:
 12107     0532                     l3848:
 12108                           
 12109                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12110     0532  0878               	movf	LCDsend2x4@lc,w
 12111     0533  0474               	iorwf	LCDsend2x4@mode,w
 12112     0534  3808               	iorlw	8
 12113     0535  3187  27B3  3184   	fcall	_WriteI2C
 12114     0538                     l3850:
 12115     0538  0023               	movlb	3	; select bank3
 12116     0539  0C0F               	rrf	15,w	;volatile
 12117     053A  0C89               	rrf	9,f
 12118     053B  3901               	andlw	1
 12119     053C  00F5               	movwf	??_LCDsend2x4
 12120     053D  0811               	movf	17,w	;volatile
 12121     053E  391F               	andlw	31
 12122     053F  0475               	iorwf	??_LCDsend2x4,w
 12123     0540  1D03               	btfss	3,2
 12124     0541  2D43               	goto	u2541
 12125     0542  2D44               	goto	u2540
 12126     0543                     u2541:
 12127     0543  2D38               	goto	l3850
 12128     0544                     u2540:
 12129     0544                     l3852:
 12130                           
 12131                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 12132     0544  0878               	movf	LCDsend2x4@lc,w
 12133     0545  0474               	iorwf	LCDsend2x4@mode,w
 12134     0546  380C               	iorlw	12
 12135     0547  3187  27B3  3184   	fcall	_WriteI2C
 12136     054A                     l3854:
 12137     054A  0023               	movlb	3	; select bank3
 12138     054B  0C0F               	rrf	15,w	;volatile
 12139     054C  0C89               	rrf	9,f
 12140     054D  3901               	andlw	1
 12141     054E  00F5               	movwf	??_LCDsend2x4
 12142     054F  0811               	movf	17,w	;volatile
 12143     0550  391F               	andlw	31
 12144     0551  0475               	iorwf	??_LCDsend2x4,w
 12145     0552  1D03               	btfss	3,2
 12146     0553  2D55               	goto	u2551
 12147     0554  2D56               	goto	u2550
 12148     0555                     u2551:
 12149     0555  2D4A               	goto	l3854
 12150     0556                     u2550:
 12151     0556                     l220:
 12152                           
 12153                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12154     0556  0000               	nop
 12155     0557                     l3856:
 12156                           
 12157                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12158     0557  0878               	movf	LCDsend2x4@lc,w
 12159     0558  0474               	iorwf	LCDsend2x4@mode,w
 12160     0559  3808               	iorlw	8
 12161     055A  3187  27B3  3184   	fcall	_WriteI2C
 12162     055D                     l3858:
 12163     055D  0023               	movlb	3	; select bank3
 12164     055E  0C0F               	rrf	15,w	;volatile
 12165     055F  0C89               	rrf	9,f
 12166     0560  3901               	andlw	1
 12167     0561  00F5               	movwf	??_LCDsend2x4
 12168     0562  0811               	movf	17,w	;volatile
 12169     0563  391F               	andlw	31
 12170     0564  0475               	iorwf	??_LCDsend2x4,w
 12171     0565  1D03               	btfss	3,2
 12172     0566  2D68               	goto	u2561
 12173     0567  2D69               	goto	u2560
 12174     0568                     u2561:
 12175     0568  2D5D               	goto	l3858
 12176     0569                     u2560:
 12177     0569                     l224:	
 12178                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12179                           
 12180     0569  1511               	bsf	17,2	;volatile
 12181     056A                     l225:
 12182     056A  1911               	btfsc	17,2	;volatile
 12183     056B  2D6D               	goto	u2571
 12184     056C  2D6E               	goto	u2570
 12185     056D                     u2571:
 12186     056D  2D6A               	goto	l225
 12187     056E                     u2570:
 12188     056E                     l3860:
 12189                           
 12190                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 12191     056E  3010               	movlw	16
 12192     056F                     u4357:
 12193     056F  0B89               	decfsz	9,f
 12194     0570  2D6F               	goto	u4357
 12195     0571  3200               	nop2
 12196     0572                     l229:
 12197     0572  0008               	return
 12198     0573                     __end_of_LCDsend2x4:
 12199                           
 12200                           	psect	text33
 12201     0F25                     __ptext33:	
 12202 ;; *************** function _LCDsend *****************
 12203 ;; Defined at:
 12204 ;;		line 17 in file "LCD/lcd.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;  c               1    wreg     unsigned char 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  c               1    5[COMMON] unsigned char 
 12209 ;; Return value:  Size  Location     Type
 12210 ;;                  1    wreg      void 
 12211 ;; Registers used:
 12212 ;;		wreg, status,2, status,0, pclath, cstack
 12213 ;; Tracked objects:
 12214 ;;		On entry : 0/0
 12215 ;;		On exit  : 0/0
 12216 ;;		Unchanged: 0/0
 12217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;Total ram usage:        2 bytes
 12223 ;; Hardware stack levels used: 1
 12224 ;; Hardware stack levels required when called: 4
 12225 ;; This function calls:
 12226 ;;		_WriteI2C
 12227 ;; This function is called by:
 12228 ;;		_LCDinit
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232     0F25                     _LCDsend:	
 12233                           ;psect for function _LCDsend
 12234                           
 12235                           
 12236                           ;incstack = 0
 12237                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12238                           ;LCDsend@c stored from wreg
 12239     0F25  00F5               	movwf	LCDsend@c
 12240     0F26                     l3924:
 12241     0F26                     l3926:	
 12242                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12243                           
 12244     0F26  0023               	movlb	3	; select bank3
 12245     0F27  0C0F               	rrf	15,w	;volatile
 12246     0F28  0C89               	rrf	9,f
 12247     0F29  3901               	andlw	1
 12248     0F2A  00F4               	movwf	??_LCDsend
 12249     0F2B  0811               	movf	17,w	;volatile
 12250     0F2C  391F               	andlw	31
 12251     0F2D  0474               	iorwf	??_LCDsend,w
 12252     0F2E  1D03               	btfss	3,2
 12253     0F2F  2F31               	goto	u2641
 12254     0F30  2F32               	goto	u2640
 12255     0F31                     u2641:
 12256     0F31  2F26               	goto	l3926
 12257     0F32                     u2640:
 12258     0F32                     l73:	
 12259                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12260                           
 12261     0F32  1411               	bsf	17,0	;volatile
 12262     0F33                     l74:
 12263     0F33  1811               	btfsc	17,0	;volatile
 12264     0F34  2F36               	goto	u2651
 12265     0F35  2F37               	goto	u2650
 12266     0F36                     u2651:
 12267     0F36  2F33               	goto	l74
 12268     0F37                     u2650:
 12269     0F37                     l3928:
 12270     0F37  0C0F               	rrf	15,w	;volatile
 12271     0F38  0C89               	rrf	9,f
 12272     0F39  3901               	andlw	1
 12273     0F3A  00F4               	movwf	??_LCDsend
 12274     0F3B  0811               	movf	17,w	;volatile
 12275     0F3C  391F               	andlw	31
 12276     0F3D  0474               	iorwf	??_LCDsend,w
 12277     0F3E  1D03               	btfss	3,2
 12278     0F3F  2F41               	goto	u2661
 12279     0F40  2F42               	goto	u2660
 12280     0F41                     u2661:
 12281     0F41  2F37               	goto	l3928
 12282     0F42                     u2660:
 12283     0F42                     l3930:
 12284                           
 12285                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12286     0F42  304E               	movlw	78
 12287     0F43  3187  27B3  318F   	fcall	_WriteI2C
 12288     0F46                     l3932:
 12289     0F46  0023               	movlb	3	; select bank3
 12290     0F47  0C0F               	rrf	15,w	;volatile
 12291     0F48  0C89               	rrf	9,f
 12292     0F49  3901               	andlw	1
 12293     0F4A  00F4               	movwf	??_LCDsend
 12294     0F4B  0811               	movf	17,w	;volatile
 12295     0F4C  391F               	andlw	31
 12296     0F4D  0474               	iorwf	??_LCDsend,w
 12297     0F4E  1D03               	btfss	3,2
 12298     0F4F  2F51               	goto	u2671
 12299     0F50  2F52               	goto	u2670
 12300     0F51                     u2671:
 12301     0F51  2F46               	goto	l3932
 12302     0F52                     u2670:
 12303     0F52                     l3934:
 12304                           
 12305                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12306     0F52  0875               	movf	LCDsend@c,w
 12307     0F53  3187  27B3  318F   	fcall	_WriteI2C
 12308     0F56                     l3936:
 12309     0F56  0023               	movlb	3	; select bank3
 12310     0F57  0C0F               	rrf	15,w	;volatile
 12311     0F58  0C89               	rrf	9,f
 12312     0F59  3901               	andlw	1
 12313     0F5A  00F4               	movwf	??_LCDsend
 12314     0F5B  0811               	movf	17,w	;volatile
 12315     0F5C  391F               	andlw	31
 12316     0F5D  0474               	iorwf	??_LCDsend,w
 12317     0F5E  1D03               	btfss	3,2
 12318     0F5F  2F61               	goto	u2681
 12319     0F60  2F62               	goto	u2680
 12320     0F61                     u2681:
 12321     0F61  2F56               	goto	l3936
 12322     0F62                     u2680:
 12323     0F62                     l87:	
 12324                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12325                           
 12326     0F62  1511               	bsf	17,2	;volatile
 12327     0F63                     l88:
 12328     0F63  1911               	btfsc	17,2	;volatile
 12329     0F64  2F66               	goto	u2691
 12330     0F65  2F67               	goto	u2690
 12331     0F66                     u2691:
 12332     0F66  2F63               	goto	l88
 12333     0F67                     u2690:
 12334     0F67                     l92:
 12335     0F67  0008               	return
 12336     0F68                     __end_of_LCDsend:
 12337                           
 12338                           	psect	text34
 12339     0DAB                     __ptext34:	
 12340 ;; *************** function _LCDbusy *****************
 12341 ;; Defined at:
 12342 ;;		line 119 in file "LCD/lcd.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;		None
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;		None
 12347 ;; Return value:  Size  Location     Type
 12348 ;;                  2    0[BANK0 ] int 
 12349 ;; Registers used:
 12350 ;;		wreg, status,2, status,0, pclath, cstack
 12351 ;; Tracked objects:
 12352 ;;		On entry : 0/0
 12353 ;;		On exit  : 0/0
 12354 ;;		Unchanged: 0/0
 12355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12359 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;Total ram usage:        2 bytes
 12361 ;; Hardware stack levels used: 1
 12362 ;; Hardware stack levels required when called: 5
 12363 ;; This function calls:
 12364 ;;		_LCDrecv
 12365 ;; This function is called by:
 12366 ;;		_main
 12367 ;; This function uses a non-reentrant model
 12368 ;;
 12369                           
 12370     0DAB                     _LCDbusy:	
 12371                           ;psect for function _LCDbusy
 12372                           
 12373     0DAB                     l5158:	
 12374                           ;incstack = 0
 12375                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 12376                           
 12377                           
 12378                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 12379     0DAB  3000               	movlw	0
 12380     0DAC  3181  21A6  318D   	fcall	_LCDrecv
 12381     0DAF  3980               	andlw	128
 12382     0DB0  1903               	btfsc	3,2
 12383     0DB1  2DB3               	goto	u4081
 12384     0DB2  2DB4               	goto	u4080
 12385     0DB3                     u4081:
 12386     0DB3  2DBA               	goto	l5164
 12387     0DB4                     u4080:
 12388     0DB4                     l5160:
 12389     0DB4  3001               	movlw	1
 12390     0DB5  0020               	movlb	0	; select bank0
 12391     0DB6  00A0               	movwf	?_LCDbusy
 12392     0DB7  3000               	movlw	0
 12393     0DB8  00A1               	movwf	?_LCDbusy+1
 12394     0DB9  2DBD               	goto	l248
 12395     0DBA                     l5164:
 12396                           
 12397                           ;LCD/lcd.c: 122:   return 0;
 12398     0DBA  0020               	movlb	0	; select bank0
 12399     0DBB  01A0               	clrf	?_LCDbusy
 12400     0DBC  01A1               	clrf	?_LCDbusy+1
 12401     0DBD                     l248:
 12402     0DBD  0008               	return
 12403     0DBE                     __end_of_LCDbusy:
 12404                           
 12405                           	psect	text35
 12406     01A6                     __ptext35:	
 12407 ;; *************** function _LCDrecv *****************
 12408 ;; Defined at:
 12409 ;;		line 25 in file "LCD/lcd.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;  mode            1    wreg     unsigned char 
 12412 ;; Auto vars:     Size  Location     Type
 12413 ;;  mode            1    8[COMMON] unsigned char 
 12414 ;;  lc              1    7[COMMON] unsigned char 
 12415 ;;  hc              1    6[COMMON] unsigned char 
 12416 ;; Return value:  Size  Location     Type
 12417 ;;                  1    wreg      unsigned char 
 12418 ;; Registers used:
 12419 ;;		wreg, status,2, status,0, pclath, cstack
 12420 ;; Tracked objects:
 12421 ;;		On entry : 0/0
 12422 ;;		On exit  : 0/0
 12423 ;;		Unchanged: 0/0
 12424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;Total ram usage:        5 bytes
 12430 ;; Hardware stack levels used: 1
 12431 ;; Hardware stack levels required when called: 4
 12432 ;; This function calls:
 12433 ;;		_ReadI2C
 12434 ;;		_WriteI2C
 12435 ;; This function is called by:
 12436 ;;		_LCDbusy
 12437 ;; This function uses a non-reentrant model
 12438 ;;
 12439                           
 12440     01A6                     _LCDrecv:	
 12441                           ;psect for function _LCDrecv
 12442                           
 12443                           
 12444                           ;incstack = 0
 12445                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 12446                           ;LCDrecv@mode stored from wreg
 12447     01A6  00F8               	movwf	LCDrecv@mode
 12448     01A7                     l3938:
 12449     01A7                     l3940:	
 12450                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 12451                           
 12452     01A7  0023               	movlb	3	; select bank3
 12453     01A8  0C0F               	rrf	15,w	;volatile
 12454     01A9  0C89               	rrf	9,f
 12455     01AA  3901               	andlw	1
 12456     01AB  00F4               	movwf	??_LCDrecv
 12457     01AC  0811               	movf	17,w	;volatile
 12458     01AD  391F               	andlw	31
 12459     01AE  0474               	iorwf	??_LCDrecv,w
 12460     01AF  1D03               	btfss	3,2
 12461     01B0  29B2               	goto	u2701
 12462     01B1  29B3               	goto	u2700
 12463     01B2                     u2701:
 12464     01B2  29A7               	goto	l3940
 12465     01B3                     u2700:
 12466     01B3                     l98:	
 12467                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12468                           
 12469     01B3  1411               	bsf	17,0	;volatile
 12470     01B4                     l99:
 12471     01B4  1811               	btfsc	17,0	;volatile
 12472     01B5  29B7               	goto	u2711
 12473     01B6  29B8               	goto	u2710
 12474     01B7                     u2711:
 12475     01B7  29B4               	goto	l99
 12476     01B8                     u2710:
 12477     01B8                     l3942:
 12478     01B8  0C0F               	rrf	15,w	;volatile
 12479     01B9  0C89               	rrf	9,f
 12480     01BA  3901               	andlw	1
 12481     01BB  00F4               	movwf	??_LCDrecv
 12482     01BC  0811               	movf	17,w	;volatile
 12483     01BD  391F               	andlw	31
 12484     01BE  0474               	iorwf	??_LCDrecv,w
 12485     01BF  1D03               	btfss	3,2
 12486     01C0  29C2               	goto	u2721
 12487     01C1  29C3               	goto	u2720
 12488     01C2                     u2721:
 12489     01C2  29B8               	goto	l3942
 12490     01C3                     u2720:
 12491     01C3                     l3944:
 12492                           
 12493                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12494     01C3  304E               	movlw	78
 12495     01C4  3187  27B3  3181   	fcall	_WriteI2C
 12496     01C7                     l3946:
 12497     01C7  0023               	movlb	3	; select bank3
 12498     01C8  0C0F               	rrf	15,w	;volatile
 12499     01C9  0C89               	rrf	9,f
 12500     01CA  3901               	andlw	1
 12501     01CB  00F4               	movwf	??_LCDrecv
 12502     01CC  0811               	movf	17,w	;volatile
 12503     01CD  391F               	andlw	31
 12504     01CE  0474               	iorwf	??_LCDrecv,w
 12505     01CF  1D03               	btfss	3,2
 12506     01D0  29D2               	goto	u2731
 12507     01D1  29D3               	goto	u2730
 12508     01D2                     u2731:
 12509     01D2  29C7               	goto	l3946
 12510     01D3                     u2730:
 12511     01D3                     l3948:
 12512                           
 12513                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 12514     01D3  0878               	movf	LCDrecv@mode,w
 12515     01D4  38FA               	iorlw	250
 12516     01D5  3187  27B3  3181   	fcall	_WriteI2C
 12517     01D8                     l3950:
 12518     01D8  0023               	movlb	3	; select bank3
 12519     01D9  0C0F               	rrf	15,w	;volatile
 12520     01DA  0C89               	rrf	9,f
 12521     01DB  3901               	andlw	1
 12522     01DC  00F4               	movwf	??_LCDrecv
 12523     01DD  0811               	movf	17,w	;volatile
 12524     01DE  391F               	andlw	31
 12525     01DF  0474               	iorwf	??_LCDrecv,w
 12526     01E0  1D03               	btfss	3,2
 12527     01E1  29E3               	goto	u2741
 12528     01E2  29E4               	goto	u2740
 12529     01E3                     u2741:
 12530     01E3  29D8               	goto	l3950
 12531     01E4                     u2740:
 12532     01E4                     l3952:
 12533                           
 12534                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 12535     01E4  0878               	movf	LCDrecv@mode,w
 12536     01E5  38FE               	iorlw	254
 12537     01E6  3187  27B3  3181   	fcall	_WriteI2C
 12538     01E9                     l3954:
 12539     01E9  0023               	movlb	3	; select bank3
 12540     01EA  0C0F               	rrf	15,w	;volatile
 12541     01EB  0C89               	rrf	9,f
 12542     01EC  3901               	andlw	1
 12543     01ED  00F4               	movwf	??_LCDrecv
 12544     01EE  0811               	movf	17,w	;volatile
 12545     01EF  391F               	andlw	31
 12546     01F0  0474               	iorwf	??_LCDrecv,w
 12547     01F1  1D03               	btfss	3,2
 12548     01F2  29F4               	goto	u2751
 12549     01F3  29F5               	goto	u2750
 12550     01F4                     u2751:
 12551     01F4  29E9               	goto	l3954
 12552     01F5                     u2750:
 12553     01F5                     l114:
 12554                           
 12555                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12556     01F5  0000               	nop
 12557     01F6                     l115:	
 12558                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12559                           
 12560     01F6  0023               	movlb	3	; select bank3
 12561     01F7  1491               	bsf	17,1	;volatile
 12562     01F8                     l116:
 12563     01F8  1891               	btfsc	17,1	;volatile
 12564     01F9  29FB               	goto	u2761
 12565     01FA  29FC               	goto	u2760
 12566     01FB                     u2761:
 12567     01FB  29F8               	goto	l116
 12568     01FC                     u2760:
 12569     01FC                     l3956:
 12570     01FC  0C0F               	rrf	15,w	;volatile
 12571     01FD  0C89               	rrf	9,f
 12572     01FE  3901               	andlw	1
 12573     01FF  00F4               	movwf	??_LCDrecv
 12574     0200  0811               	movf	17,w	;volatile
 12575     0201  391F               	andlw	31
 12576     0202  0474               	iorwf	??_LCDrecv,w
 12577     0203  1D03               	btfss	3,2
 12578     0204  2A06               	goto	u2771
 12579     0205  2A07               	goto	u2770
 12580     0206                     u2771:
 12581     0206  29FC               	goto	l3956
 12582     0207                     u2770:
 12583     0207                     l3958:
 12584                           
 12585                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12586     0207  304F               	movlw	79
 12587     0208  3187  27B3  3181   	fcall	_WriteI2C
 12588     020B                     l3960:
 12589     020B  0023               	movlb	3	; select bank3
 12590     020C  0C0F               	rrf	15,w	;volatile
 12591     020D  0C89               	rrf	9,f
 12592     020E  3901               	andlw	1
 12593     020F  00F4               	movwf	??_LCDrecv
 12594     0210  0811               	movf	17,w	;volatile
 12595     0211  391F               	andlw	31
 12596     0212  0474               	iorwf	??_LCDrecv,w
 12597     0213  1D03               	btfss	3,2
 12598     0214  2A16               	goto	u2781
 12599     0215  2A17               	goto	u2780
 12600     0216                     u2781:
 12601     0216  2A0B               	goto	l3960
 12602     0217                     u2780:
 12603     0217                     l3962:
 12604                           
 12605                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12606     0217  318E  2632  3181   	fcall	_ReadI2C
 12607     021A  00F6               	movwf	LCDrecv@hc
 12608     021B                     l3964:
 12609     021B  0023               	movlb	3	; select bank3
 12610     021C  0C0F               	rrf	15,w	;volatile
 12611     021D  0C89               	rrf	9,f
 12612     021E  3901               	andlw	1
 12613     021F  00F4               	movwf	??_LCDrecv
 12614     0220  0811               	movf	17,w	;volatile
 12615     0221  391F               	andlw	31
 12616     0222  0474               	iorwf	??_LCDrecv,w
 12617     0223  1D03               	btfss	3,2
 12618     0224  2A26               	goto	u2791
 12619     0225  2A27               	goto	u2790
 12620     0226                     u2791:
 12621     0226  2A1B               	goto	l3964
 12622     0227                     u2790:
 12623     0227                     l129:	
 12624                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 12625                           
 12626     0227  1691               	bsf	17,5	;volatile
 12627     0228  1611               	bsf	17,4	;volatile
 12628     0229                     l130:
 12629     0229  1A11               	btfsc	17,4	;volatile
 12630     022A  2A2C               	goto	u2801
 12631     022B  2A2D               	goto	u2800
 12632     022C                     u2801:
 12633     022C  2A29               	goto	l130
 12634     022D                     u2800:
 12635     022D                     l134:	
 12636                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12637                           
 12638     022D  1491               	bsf	17,1	;volatile
 12639     022E                     l135:
 12640     022E  1891               	btfsc	17,1	;volatile
 12641     022F  2A31               	goto	u2811
 12642     0230  2A32               	goto	u2810
 12643     0231                     u2811:
 12644     0231  2A2E               	goto	l135
 12645     0232                     u2810:
 12646     0232                     l3966:
 12647     0232  0C0F               	rrf	15,w	;volatile
 12648     0233  0C89               	rrf	9,f
 12649     0234  3901               	andlw	1
 12650     0235  00F4               	movwf	??_LCDrecv
 12651     0236  0811               	movf	17,w	;volatile
 12652     0237  391F               	andlw	31
 12653     0238  0474               	iorwf	??_LCDrecv,w
 12654     0239  1D03               	btfss	3,2
 12655     023A  2A3C               	goto	u2821
 12656     023B  2A3D               	goto	u2820
 12657     023C                     u2821:
 12658     023C  2A32               	goto	l3966
 12659     023D                     u2820:
 12660     023D                     l3968:
 12661                           
 12662                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12663     023D  304E               	movlw	78
 12664     023E  3187  27B3  3181   	fcall	_WriteI2C
 12665     0241                     l3970:
 12666     0241  0023               	movlb	3	; select bank3
 12667     0242  0C0F               	rrf	15,w	;volatile
 12668     0243  0C89               	rrf	9,f
 12669     0244  3901               	andlw	1
 12670     0245  00F4               	movwf	??_LCDrecv
 12671     0246  0811               	movf	17,w	;volatile
 12672     0247  391F               	andlw	31
 12673     0248  0474               	iorwf	??_LCDrecv,w
 12674     0249  1D03               	btfss	3,2
 12675     024A  2A4C               	goto	u2831
 12676     024B  2A4D               	goto	u2830
 12677     024C                     u2831:
 12678     024C  2A41               	goto	l3970
 12679     024D                     u2830:
 12680     024D                     l3972:
 12681                           
 12682                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 12683     024D  0878               	movf	LCDrecv@mode,w
 12684     024E  38FA               	iorlw	250
 12685     024F  3187  27B3  3181   	fcall	_WriteI2C
 12686     0252                     l3974:
 12687     0252  0023               	movlb	3	; select bank3
 12688     0253  0C0F               	rrf	15,w	;volatile
 12689     0254  0C89               	rrf	9,f
 12690     0255  3901               	andlw	1
 12691     0256  00F4               	movwf	??_LCDrecv
 12692     0257  0811               	movf	17,w	;volatile
 12693     0258  391F               	andlw	31
 12694     0259  0474               	iorwf	??_LCDrecv,w
 12695     025A  1D03               	btfss	3,2
 12696     025B  2A5D               	goto	u2841
 12697     025C  2A5E               	goto	u2840
 12698     025D                     u2841:
 12699     025D  2A52               	goto	l3974
 12700     025E                     u2840:
 12701     025E                     l3976:
 12702                           
 12703                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 12704     025E  0878               	movf	LCDrecv@mode,w
 12705     025F  38FE               	iorlw	254
 12706     0260  3187  27B3  3181   	fcall	_WriteI2C
 12707     0263                     l3978:
 12708     0263  0023               	movlb	3	; select bank3
 12709     0264  0C0F               	rrf	15,w	;volatile
 12710     0265  0C89               	rrf	9,f
 12711     0266  3901               	andlw	1
 12712     0267  00F4               	movwf	??_LCDrecv
 12713     0268  0811               	movf	17,w	;volatile
 12714     0269  391F               	andlw	31
 12715     026A  0474               	iorwf	??_LCDrecv,w
 12716     026B  1D03               	btfss	3,2
 12717     026C  2A6E               	goto	u2851
 12718     026D  2A6F               	goto	u2850
 12719     026E                     u2851:
 12720     026E  2A63               	goto	l3978
 12721     026F                     u2850:
 12722     026F                     l150:
 12723                           
 12724                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12725     026F  0000               	nop
 12726     0270                     l151:	
 12727                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12728                           
 12729     0270  0023               	movlb	3	; select bank3
 12730     0271  1491               	bsf	17,1	;volatile
 12731     0272                     l152:
 12732     0272  1891               	btfsc	17,1	;volatile
 12733     0273  2A75               	goto	u2861
 12734     0274  2A76               	goto	u2860
 12735     0275                     u2861:
 12736     0275  2A72               	goto	l152
 12737     0276                     u2860:
 12738     0276                     l3980:
 12739     0276  0C0F               	rrf	15,w	;volatile
 12740     0277  0C89               	rrf	9,f
 12741     0278  3901               	andlw	1
 12742     0279  00F4               	movwf	??_LCDrecv
 12743     027A  0811               	movf	17,w	;volatile
 12744     027B  391F               	andlw	31
 12745     027C  0474               	iorwf	??_LCDrecv,w
 12746     027D  1D03               	btfss	3,2
 12747     027E  2A80               	goto	u2871
 12748     027F  2A81               	goto	u2870
 12749     0280                     u2871:
 12750     0280  2A76               	goto	l3980
 12751     0281                     u2870:
 12752     0281                     l3982:
 12753                           
 12754                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12755     0281  304F               	movlw	79
 12756     0282  3187  27B3  3181   	fcall	_WriteI2C
 12757     0285                     l3984:
 12758     0285  0023               	movlb	3	; select bank3
 12759     0286  0C0F               	rrf	15,w	;volatile
 12760     0287  0C89               	rrf	9,f
 12761     0288  3901               	andlw	1
 12762     0289  00F4               	movwf	??_LCDrecv
 12763     028A  0811               	movf	17,w	;volatile
 12764     028B  391F               	andlw	31
 12765     028C  0474               	iorwf	??_LCDrecv,w
 12766     028D  1D03               	btfss	3,2
 12767     028E  2A90               	goto	u2881
 12768     028F  2A91               	goto	u2880
 12769     0290                     u2881:
 12770     0290  2A85               	goto	l3984
 12771     0291                     u2880:
 12772     0291                     l3986:
 12773                           
 12774                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12775     0291  318E  2632  3181   	fcall	_ReadI2C
 12776     0294  00F7               	movwf	LCDrecv@lc
 12777     0295                     l3988:
 12778     0295  0023               	movlb	3	; select bank3
 12779     0296  0C0F               	rrf	15,w	;volatile
 12780     0297  0C89               	rrf	9,f
 12781     0298  3901               	andlw	1
 12782     0299  00F4               	movwf	??_LCDrecv
 12783     029A  0811               	movf	17,w	;volatile
 12784     029B  391F               	andlw	31
 12785     029C  0474               	iorwf	??_LCDrecv,w
 12786     029D  1D03               	btfss	3,2
 12787     029E  2AA0               	goto	u2891
 12788     029F  2AA1               	goto	u2890
 12789     02A0                     u2891:
 12790     02A0  2A95               	goto	l3988
 12791     02A1                     u2890:
 12792     02A1                     l165:	
 12793                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 12794                           
 12795     02A1  1691               	bsf	17,5	;volatile
 12796     02A2  1611               	bsf	17,4	;volatile
 12797     02A3                     l166:
 12798     02A3  1A11               	btfsc	17,4	;volatile
 12799     02A4  2AA6               	goto	u2901
 12800     02A5  2AA7               	goto	u2900
 12801     02A6                     u2901:
 12802     02A6  2AA3               	goto	l166
 12803     02A7                     u2900:
 12804     02A7                     l170:	
 12805                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12806                           
 12807     02A7  1491               	bsf	17,1	;volatile
 12808     02A8                     l171:
 12809     02A8  1891               	btfsc	17,1	;volatile
 12810     02A9  2AAB               	goto	u2911
 12811     02AA  2AAC               	goto	u2910
 12812     02AB                     u2911:
 12813     02AB  2AA8               	goto	l171
 12814     02AC                     u2910:
 12815     02AC                     l3990:
 12816     02AC  0C0F               	rrf	15,w	;volatile
 12817     02AD  0C89               	rrf	9,f
 12818     02AE  3901               	andlw	1
 12819     02AF  00F4               	movwf	??_LCDrecv
 12820     02B0  0811               	movf	17,w	;volatile
 12821     02B1  391F               	andlw	31
 12822     02B2  0474               	iorwf	??_LCDrecv,w
 12823     02B3  1D03               	btfss	3,2
 12824     02B4  2AB6               	goto	u2921
 12825     02B5  2AB7               	goto	u2920
 12826     02B6                     u2921:
 12827     02B6  2AAC               	goto	l3990
 12828     02B7                     u2920:
 12829     02B7                     l3992:
 12830                           
 12831                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12832     02B7  304E               	movlw	78
 12833     02B8  3187  27B3  3181   	fcall	_WriteI2C
 12834     02BB                     l3994:
 12835     02BB  0023               	movlb	3	; select bank3
 12836     02BC  0C0F               	rrf	15,w	;volatile
 12837     02BD  0C89               	rrf	9,f
 12838     02BE  3901               	andlw	1
 12839     02BF  00F4               	movwf	??_LCDrecv
 12840     02C0  0811               	movf	17,w	;volatile
 12841     02C1  391F               	andlw	31
 12842     02C2  0474               	iorwf	??_LCDrecv,w
 12843     02C3  1D03               	btfss	3,2
 12844     02C4  2AC6               	goto	u2931
 12845     02C5  2AC7               	goto	u2930
 12846     02C6                     u2931:
 12847     02C6  2ABB               	goto	l3994
 12848     02C7                     u2930:
 12849     02C7                     l3996:
 12850                           
 12851                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 12852     02C7  0878               	movf	LCDrecv@mode,w
 12853     02C8  38FA               	iorlw	250
 12854     02C9  3187  27B3  3181   	fcall	_WriteI2C
 12855     02CC                     l3998:
 12856     02CC  0023               	movlb	3	; select bank3
 12857     02CD  0C0F               	rrf	15,w	;volatile
 12858     02CE  0C89               	rrf	9,f
 12859     02CF  3901               	andlw	1
 12860     02D0  00F4               	movwf	??_LCDrecv
 12861     02D1  0811               	movf	17,w	;volatile
 12862     02D2  391F               	andlw	31
 12863     02D3  0474               	iorwf	??_LCDrecv,w
 12864     02D4  1D03               	btfss	3,2
 12865     02D5  2AD7               	goto	u2941
 12866     02D6  2AD8               	goto	u2940
 12867     02D7                     u2941:
 12868     02D7  2ACC               	goto	l3998
 12869     02D8                     u2940:
 12870     02D8                     l184:	
 12871                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12872                           
 12873     02D8  1511               	bsf	17,2	;volatile
 12874     02D9                     l185:
 12875     02D9  1911               	btfsc	17,2	;volatile
 12876     02DA  2ADC               	goto	u2951
 12877     02DB  2ADD               	goto	u2950
 12878     02DC                     u2951:
 12879     02DC  2AD9               	goto	l185
 12880     02DD                     u2950:
 12881     02DD                     l4000:
 12882                           
 12883                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 12884     02DD  0877               	movf	LCDrecv@lc,w
 12885     02DE  00F4               	movwf	??_LCDrecv
 12886     02DF  3004               	movlw	4
 12887     02E0                     u2965:
 12888     02E0  36F4               	lsrf	??_LCDrecv,f
 12889     02E1  0B89               	decfsz	9,f
 12890     02E2  2AE0               	goto	u2965
 12891     02E3  300F               	movlw	15
 12892     02E4  0574               	andwf	??_LCDrecv,w
 12893     02E5  00F5               	movwf	??_LCDrecv+1
 12894     02E6  0876               	movf	LCDrecv@hc,w
 12895     02E7  39F0               	andlw	240
 12896     02E8  0475               	iorwf	??_LCDrecv+1,w
 12897     02E9                     l189:
 12898     02E9  0008               	return
 12899     02EA                     __end_of_LCDrecv:
 12900                           
 12901                           	psect	text36
 12902     07B3                     __ptext36:	
 12903 ;; *************** function _WriteI2C *****************
 12904 ;; Defined at:
 12905 ;;		line 59 in file "I2C/i2c.c"
 12906 ;; Parameters:    Size  Location     Type
 12907 ;;  data_out        1    wreg     unsigned char 
 12908 ;; Auto vars:     Size  Location     Type
 12909 ;;  data_out        1    3[COMMON] unsigned char 
 12910 ;; Return value:  Size  Location     Type
 12911 ;;                  1    wreg      char 
 12912 ;; Registers used:
 12913 ;;		wreg, status,2, status,0
 12914 ;; Tracked objects:
 12915 ;;		On entry : 0/0
 12916 ;;		On exit  : 0/0
 12917 ;;		Unchanged: 0/0
 12918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;Total ram usage:        2 bytes
 12924 ;; Hardware stack levels used: 1
 12925 ;; Hardware stack levels required when called: 3
 12926 ;; This function calls:
 12927 ;;		Nothing
 12928 ;; This function is called by:
 12929 ;;		_LCDsend
 12930 ;;		_LCDrecv
 12931 ;;		_LCDsend2x4
 12932 ;;		_readTC74
 12933 ;; This function uses a non-reentrant model
 12934 ;;
 12935                           
 12936     07B3                     _WriteI2C:	
 12937                           ;psect for function _WriteI2C
 12938                           
 12939                           
 12940                           ;incstack = 0
 12941                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12942                           ;WriteI2C@data_out stored from wreg
 12943     07B3  00F3               	movwf	WriteI2C@data_out
 12944     07B4                     l3722:
 12945                           
 12946                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 12947     07B4  0873               	movf	WriteI2C@data_out,w
 12948     07B5  0023               	movlb	3	; select bank3
 12949     07B6  008C               	movwf	12	;volatile
 12950     07B7                     l3724:
 12951                           
 12952                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 12953     07B7  1F90               	btfss	16,7	;volatile
 12954     07B8  2FBA               	goto	u2221
 12955     07B9  2FBB               	goto	u2220
 12956     07BA                     u2221:
 12957     07BA  2FBC               	goto	l3730
 12958     07BB                     u2220:
 12959     07BB  2FFD               	goto	l36
 12960     07BC                     l3730:
 12961                           
 12962                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 12963     07BC  300F               	movlw	15
 12964     07BD  0510               	andwf	16,w	;volatile
 12965     07BE  00F2               	movwf	??_WriteI2C
 12966     07BF  3008               	movlw	8
 12967     07C0  0672               	xorwf	??_WriteI2C,w
 12968     07C1  1903               	btfsc	3,2
 12969     07C2  2FC4               	goto	u2231
 12970     07C3  2FC5               	goto	u2230
 12971     07C4                     u2231:
 12972     07C4  2FDB               	goto	l3742
 12973     07C5                     u2230:
 12974     07C5                     l3732:
 12975     07C5  300F               	movlw	15
 12976     07C6  0510               	andwf	16,w	;volatile
 12977     07C7  00F2               	movwf	??_WriteI2C
 12978     07C8  300B               	movlw	11
 12979     07C9  0672               	xorwf	??_WriteI2C,w
 12980     07CA  1903               	btfsc	3,2
 12981     07CB  2FCD               	goto	u2241
 12982     07CC  2FCE               	goto	u2240
 12983     07CD                     u2241:
 12984     07CD  2FDB               	goto	l3742
 12985     07CE                     u2240:
 12986     07CE                     l3734:
 12987                           
 12988                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 12989     07CE  1610               	bsf	16,4	;volatile
 12990     07CF                     l39:	
 12991                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 12992                           
 12993     07CF  002E               	movlb	14	; select bank14
 12994     07D0  1C0F               	btfss	15,0	;volatile
 12995     07D1  2FD3               	goto	u2251
 12996     07D2  2FD4               	goto	u2250
 12997     07D3                     u2251:
 12998     07D3  2FCF               	goto	l39
 12999     07D4                     u2250:
 13000     07D4                     l41:
 13001                           
 13002                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 13003     07D4  0023               	movlb	3	; select bank3
 13004     07D5  190F               	btfsc	15,2	;volatile
 13005     07D6  2FD8               	goto	u2261
 13006     07D7  2FD9               	goto	u2260
 13007     07D8                     u2261:
 13008     07D8  2FFD               	goto	l36
 13009     07D9                     u2260:
 13010     07D9                     l3736:
 13011     07D9  080F               	movf	15,w	;volatile
 13012     07DA  2FFD               	goto	l36
 13013     07DB                     l3742:
 13014     07DB  300F               	movlw	15
 13015     07DC  0510               	andwf	16,w	;volatile
 13016     07DD  00F2               	movwf	??_WriteI2C
 13017     07DE  3008               	movlw	8
 13018     07DF  0672               	xorwf	??_WriteI2C,w
 13019     07E0  1903               	btfsc	3,2
 13020     07E1  2FE3               	goto	u2271
 13021     07E2  2FE4               	goto	u2270
 13022     07E3                     u2271:
 13023     07E3  2FED               	goto	l48
 13024     07E4                     u2270:
 13025     07E4                     l3744:
 13026     07E4  300F               	movlw	15
 13027     07E5  0510               	andwf	16,w	;volatile
 13028     07E6  00F2               	movwf	??_WriteI2C
 13029     07E7  300B               	movlw	11
 13030     07E8  0672               	xorwf	??_WriteI2C,w
 13031     07E9  1D03               	btfss	3,2
 13032     07EA  2FEC               	goto	u2281
 13033     07EB  2FED               	goto	u2280
 13034     07EC                     u2281:
 13035     07EC  2FFD               	goto	l36
 13036     07ED                     u2280:
 13037     07ED                     l48:
 13038     07ED  180F               	btfsc	15,0	;volatile
 13039     07EE  2FF0               	goto	u2291
 13040     07EF  2FF1               	goto	u2290
 13041     07F0                     u2291:
 13042     07F0  2FED               	goto	l48
 13043     07F1                     u2290:
 13044     07F1                     l3746:
 13045     07F1  0C0F               	rrf	15,w	;volatile
 13046     07F2  0C89               	rrf	9,f
 13047     07F3  3901               	andlw	1
 13048     07F4  00F2               	movwf	??_WriteI2C
 13049     07F5  0811               	movf	17,w	;volatile
 13050     07F6  391F               	andlw	31
 13051     07F7  0472               	iorwf	??_WriteI2C,w
 13052     07F8  1D03               	btfss	3,2
 13053     07F9  2FFB               	goto	u2301
 13054     07FA  2FFC               	goto	u2300
 13055     07FB                     u2301:
 13056     07FB  2FF1               	goto	l3746
 13057     07FC                     u2300:
 13058     07FC                     l53:
 13059                           
 13060                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 13061     07FC  0811               	movf	17,w	;volatile
 13062     07FD                     l36:
 13063     07FD  0008               	return
 13064     07FE                     __end_of_WriteI2C:
 13065                           
 13066                           	psect	text37
 13067     0E32                     __ptext37:	
 13068 ;; *************** function _ReadI2C *****************
 13069 ;; Defined at:
 13070 ;;		line 44 in file "I2C/i2c.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;		None
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;		None
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  1    wreg      unsigned char 
 13077 ;; Registers used:
 13078 ;;		wreg, status,2, status,0
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13086 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;Total ram usage:        1 bytes
 13089 ;; Hardware stack levels used: 1
 13090 ;; Hardware stack levels required when called: 3
 13091 ;; This function calls:
 13092 ;;		Nothing
 13093 ;; This function is called by:
 13094 ;;		_LCDrecv
 13095 ;;		_readTC74
 13096 ;; This function uses a non-reentrant model
 13097 ;;
 13098                           
 13099     0E32                     _ReadI2C:	
 13100                           ;psect for function _ReadI2C
 13101                           
 13102     0E32                     l3816:	
 13103                           ;incstack = 0
 13104                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 13105                           
 13106                           
 13107                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 13108     0E32  300F               	movlw	15
 13109     0E33  0023               	movlb	3	; select bank3
 13110     0E34  0510               	andwf	16,w	;volatile
 13111     0E35  00F2               	movwf	??_ReadI2C
 13112     0E36  3008               	movlw	8
 13113     0E37  0672               	xorwf	??_ReadI2C,w
 13114     0E38  1903               	btfsc	3,2
 13115     0E39  2E3B               	goto	u2431
 13116     0E3A  2E3C               	goto	u2430
 13117     0E3B                     u2431:
 13118     0E3B  2E45               	goto	l28
 13119     0E3C                     u2430:
 13120     0E3C                     l3818:
 13121     0E3C  300F               	movlw	15
 13122     0E3D  0510               	andwf	16,w	;volatile
 13123     0E3E  00F2               	movwf	??_ReadI2C
 13124     0E3F  300B               	movlw	11
 13125     0E40  0672               	xorwf	??_ReadI2C,w
 13126     0E41  1D03               	btfss	3,2
 13127     0E42  2E44               	goto	u2441
 13128     0E43  2E45               	goto	u2440
 13129     0E44                     u2441:
 13130     0E44  2E46               	goto	l29
 13131     0E45                     u2440:
 13132     0E45                     l28:
 13133                           
 13134                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 13135     0E45  1591               	bsf	17,3	;volatile
 13136     0E46                     l29:
 13137     0E46  1C0F               	btfss	15,0	;volatile
 13138     0E47  2E49               	goto	u2451
 13139     0E48  2E4A               	goto	u2450
 13140     0E49                     u2451:
 13141     0E49  2E46               	goto	l29
 13142     0E4A                     u2450:
 13143     0E4A                     l3820:
 13144                           
 13145                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 13146     0E4A  080C               	movf	12,w	;volatile
 13147     0E4B                     l32:
 13148     0E4B  0008               	return
 13149     0E4C                     __end_of_ReadI2C:
 13150                           
 13151                           	psect	text38
 13152     0D87                     __ptext38:	
 13153 ;; *************** function _ADCC_GetSingleConversion *****************
 13154 ;; Defined at:
 13155 ;;		line 132 in file "mcc_generated_files/adcc.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;  channel         1    wreg     enum E12225
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;  channel         1    4[COMMON] enum E12225
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  2    2[COMMON] unsigned short 
 13162 ;; Registers used:
 13163 ;;		wreg
 13164 ;; Tracked objects:
 13165 ;;		On entry : 0/0
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13172 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13173 ;;Total ram usage:        3 bytes
 13174 ;; Hardware stack levels used: 1
 13175 ;; Hardware stack levels required when called: 3
 13176 ;; This function calls:
 13177 ;;		Nothing
 13178 ;; This function is called by:
 13179 ;;		_main
 13180 ;; This function uses a non-reentrant model
 13181 ;;
 13182                           
 13183     0D87                     _ADCC_GetSingleConversion:	
 13184                           ;psect for function _ADCC_GetSingleConversion
 13185                           
 13186                           
 13187                           ;incstack = 0
 13188                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 13189                           ;ADCC_GetSingleConversion@channel stored from wreg
 13190     0D87  00F4               	movwf	ADCC_GetSingleConversion@channel
 13191     0D88                     l4292:
 13192                           
 13193                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 13194     0D88  0874               	movf	ADCC_GetSingleConversion@channel,w
 13195     0D89  0021               	movlb	1	; select bank1
 13196     0D8A  009E               	movwf	30	;volatile
 13197     0D8B                     l4294:
 13198                           
 13199                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 13200     0D8B  1793               	bsf	19,7	;volatile
 13201     0D8C                     l4296:
 13202                           
 13203                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 13204     0D8C  1313               	bcf	19,6	;volatile
 13205     0D8D                     l4298:
 13206                           
 13207                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 13208     0D8D  1413               	bsf	19,0	;volatile
 13209     0D8E                     l4300:
 13210                           
 13211                           ;mcc_generated_files/adcc.c: 147:     __nop();
 13212     0D8E  0000               	nop
 13213     0D8F                     l910:	
 13214                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 13215                           
 13216                           
 13217                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 13218     0D8F  0021               	movlb	1	; select bank1
 13219     0D90  1813               	btfsc	19,0	;volatile
 13220     0D91  2D93               	goto	u3051
 13221     0D92  2D94               	goto	u3050
 13222     0D93                     u3051:
 13223     0D93  2D8F               	goto	l910
 13224     0D94                     u3050:
 13225     0D94                     l4302:
 13226                           
 13227                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13228     0D94  080D               	movf	13,w	;volatile
 13229     0D95  00F3               	movwf	?_ADCC_GetSingleConversion+1
 13230     0D96  080C               	movf	12,w	;volatile
 13231     0D97  00F2               	movwf	?_ADCC_GetSingleConversion
 13232     0D98                     l913:
 13233     0D98  0008               	return
 13234     0D99                     __end_of_ADCC_GetSingleConversion:
 13235                           
 13236                           	psect	intentry
 13237     0004                     __pintentry:	
 13238 ;; *************** function _INTERRUPT_InterruptManager *****************
 13239 ;; Defined at:
 13240 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13241 ;; Parameters:    Size  Location     Type
 13242 ;;		None
 13243 ;; Auto vars:     Size  Location     Type
 13244 ;;		None
 13245 ;; Return value:  Size  Location     Type
 13246 ;;                  1    wreg      void 
 13247 ;; Registers used:
 13248 ;;		wreg, status,2, status,0, pclath, cstack
 13249 ;; Tracked objects:
 13250 ;;		On entry : 0/0
 13251 ;;		On exit  : 0/0
 13252 ;;		Unchanged: 0/0
 13253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13258 ;;Total ram usage:        0 bytes
 13259 ;; Hardware stack levels used: 1
 13260 ;; Hardware stack levels required when called: 2
 13261 ;; This function calls:
 13262 ;;		_TMR1_ISR
 13263 ;; This function is called by:
 13264 ;;		Interrupt level 1
 13265 ;; This function uses a non-reentrant model
 13266 ;;
 13267                           
 13268     0004                     _INTERRUPT_InterruptManager:
 13269                           
 13270                           ;incstack = 0
 13271     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13272                           
 13273                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 13274     0005  3180               	pagesel	$
 13275     0006                     i1l4836:
 13276                           
 13277                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 13278     0006  1F0B               	btfss	11,6	;volatile
 13279     0007  2809               	goto	u357_21
 13280     0008  280A               	goto	u357_20
 13281     0009                     u357_21:
 13282     0009  2816               	goto	i1l1060
 13283     000A                     u357_20:
 13284     000A                     i1l4838:
 13285                           
 13286                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 13287     000A  002E               	movlb	14	; select bank14
 13288     000B  1C1A               	btfss	26,0	;volatile
 13289     000C  280E               	goto	u358_21
 13290     000D  280F               	goto	u358_20
 13291     000E                     u358_21:
 13292     000E  2816               	goto	i1l1060
 13293     000F                     u358_20:
 13294     000F                     i1l4840:
 13295     000F  1C10               	btfss	16,0	;volatile
 13296     0010  2812               	goto	u359_21
 13297     0011  2813               	goto	u359_20
 13298     0012                     u359_21:
 13299     0012  2816               	goto	i1l1060
 13300     0013                     u359_20:
 13301     0013                     i1l4842:
 13302                           
 13303                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 13304     0013  318D  25D3  3180   	fcall	_TMR1_ISR
 13305     0016                     i1l1060:	
 13306                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 13307                           
 13308     0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13309     0017  0009               	retfie
 13310     0018                     __end_of_INTERRUPT_InterruptManager:
 13311                           
 13312                           	psect	text40
 13313     0DD3                     __ptext40:	
 13314 ;; *************** function _TMR1_ISR *****************
 13315 ;; Defined at:
 13316 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;		None
 13319 ;; Auto vars:     Size  Location     Type
 13320 ;;		None
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  1    wreg      void 
 13323 ;; Registers used:
 13324 ;;		wreg, status,2, status,0, pclath, cstack
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13334 ;;Total ram usage:        0 bytes
 13335 ;; Hardware stack levels used: 1
 13336 ;; Hardware stack levels required when called: 1
 13337 ;; This function calls:
 13338 ;;		NULL
 13339 ;;		_TMR1_DefaultInterruptHandler
 13340 ;;		_TMR1_IRQ
 13341 ;;		_TMR1_WriteTimer
 13342 ;; This function is called by:
 13343 ;;		_INTERRUPT_InterruptManager
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347     0DD3                     _TMR1_ISR:	
 13348                           ;psect for function _TMR1_ISR
 13349                           
 13350     0DD3                     i1l4306:	
 13351                           ;incstack = 0
 13352                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 13353                           
 13354                           
 13355                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 13356     0DD3  002E               	movlb	14	; select bank14
 13357     0DD4  1010               	bcf	16,0	;volatile
 13358     0DD5                     i1l4308:
 13359                           
 13360                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 13361     0DD5  087B               	movf	_timer1ReloadVal+1,w	;volatile
 13362     0DD6  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 13363     0DD7  087A               	movf	_timer1ReloadVal,w	;volatile
 13364     0DD8  00F0               	movwf	TMR1_WriteTimer@timerVal
 13365     0DD9  318D  2576  318D   	fcall	_TMR1_WriteTimer
 13366     0DDC                     i1l4310:
 13367                           
 13368                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 13369     0DDC  0021               	movlb	1	; select bank1
 13370     0DDD  0857               	movf	_TMR1_InterruptHandler^(0+128),w
 13371     0DDE  0458               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 13372     0DDF  1903               	btfsc	3,2
 13373     0DE0  2DE2               	goto	u306_21
 13374     0DE1  2DE3               	goto	u306_20
 13375     0DE2                     u306_21:
 13376     0DE2  2DE8               	goto	i1l1037
 13377     0DE3                     u306_20:
 13378     0DE3                     i1l4312:
 13379                           
 13380                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 13381     0DE3  0858               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 13382     0DE4  008A               	movwf	10
 13383     0DE5  0857               	movf	_TMR1_InterruptHandler^(0+128),w
 13384     0DE6  000A               	callw
 13385     0DE7  318D               	pagesel	$
 13386     0DE8                     i1l1037:
 13387     0DE8  0008               	return
 13388     0DE9                     __end_of_TMR1_ISR:
 13389                           
 13390                           	psect	text41
 13391     0D76                     __ptext41:	
 13392 ;; *************** function _TMR1_WriteTimer *****************
 13393 ;; Defined at:
 13394 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  timerVal        2    0[COMMON] unsigned short 
 13397 ;; Auto vars:     Size  Location     Type
 13398 ;;		None
 13399 ;; Return value:  Size  Location     Type
 13400 ;;                  1    wreg      void 
 13401 ;; Registers used:
 13402 ;;		wreg, status,2
 13403 ;; Tracked objects:
 13404 ;;		On entry : 0/0
 13405 ;;		On exit  : 0/0
 13406 ;;		Unchanged: 0/0
 13407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;Total ram usage:        2 bytes
 13413 ;; Hardware stack levels used: 1
 13414 ;; This function calls:
 13415 ;;		Nothing
 13416 ;; This function is called by:
 13417 ;;		_TMR1_ISR
 13418 ;;		_TMR1_Reload
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422     0D76                     _TMR1_WriteTimer:	
 13423                           ;psect for function _TMR1_WriteTimer
 13424                           
 13425     0D76                     i1l4108:	
 13426                           ;incstack = 0
 13427                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 13428                           
 13429                           
 13430                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 13431     0D76  0024               	movlb	4	; select bank4
 13432     0D77  1D0E               	btfss	14,2	;volatile
 13433     0D78  2D7A               	goto	u298_21
 13434     0D79  2D7B               	goto	u298_20
 13435     0D7A                     u298_21:
 13436     0D7A  2D82               	goto	i1l4118
 13437     0D7B                     u298_20:
 13438     0D7B                     i1l4110:
 13439                           
 13440                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 13441     0D7B  100E               	bcf	14,0	;volatile
 13442     0D7C                     i1l4112:
 13443                           
 13444                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 13445     0D7C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 13446     0D7D  008D               	movwf	13	;volatile
 13447     0D7E                     i1l4114:
 13448                           
 13449                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 13450     0D7E  0870               	movf	TMR1_WriteTimer@timerVal,w
 13451     0D7F  008C               	movwf	12	;volatile
 13452     0D80                     i1l4116:
 13453                           
 13454                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 13455     0D80  140E               	bsf	14,0	;volatile
 13456                           
 13457                           ;mcc_generated_files/tmr1.c: 140:     }
 13458     0D81  2D86               	goto	i1l1024
 13459     0D82                     i1l4118:
 13460                           
 13461                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 13462     0D82  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 13463     0D83  008D               	movwf	13	;volatile
 13464     0D84                     i1l4120:
 13465                           
 13466                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 13467     0D84  0870               	movf	TMR1_WriteTimer@timerVal,w
 13468     0D85  008C               	movwf	12	;volatile
 13469     0D86                     i1l1024:
 13470     0D86  0008               	return
 13471     0D87                     __end_of_TMR1_WriteTimer:
 13472                           
 13473                           	psect	text42
 13474     0003                     __ptext42:	
 13475 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 13476 ;; Defined at:
 13477 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;		None
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;		None
 13482 ;; Return value:  Size  Location     Type
 13483 ;;                  1    wreg      void 
 13484 ;; Registers used:
 13485 ;;		None
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;Total ram usage:        0 bytes
 13496 ;; Hardware stack levels used: 1
 13497 ;; This function calls:
 13498 ;;		Nothing
 13499 ;; This function is called by:
 13500 ;;		_TMR1_Initialize
 13501 ;;		_TMR1_ISR
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505     0003                     _TMR1_DefaultInterruptHandler:	
 13506                           ;psect for function _TMR1_DefaultInterruptHandler
 13507                           
 13508     0003                     i1l1043:	
 13509                           ;incstack = 0
 13510                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 13511                           
 13512     0003  0008               	return
 13513     0004                     __end_of_TMR1_DefaultInterruptHandler:
 13514                           
 13515                           	psect	text43
 13516     0D0E                     __ptext43:	
 13517 ;; *************** function _TMR1_IRQ *****************
 13518 ;; Defined at:
 13519 ;;		line 89 in file "main.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;		None
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;		None
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  1    wreg      void 
 13526 ;; Registers used:
 13527 ;;		wreg
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;Total ram usage:        0 bytes
 13538 ;; Hardware stack levels used: 1
 13539 ;; This function calls:
 13540 ;;		Nothing
 13541 ;; This function is called by:
 13542 ;;		_main
 13543 ;;		_TMR1_ISR
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546                           
 13547     0D0E                     _TMR1_IRQ:	
 13548                           ;psect for function _TMR1_IRQ
 13549                           
 13550     0D0E                     i1l4122:	
 13551                           ;incstack = 0
 13552                           ; Regs used in _TMR1_IRQ: [wreg]
 13553                           
 13554                           
 13555                           ;main.c: 90:     TMR1_overflow = 1;
 13556     0D0E  3001               	movlw	1
 13557     0D0F  0020               	movlb	0	; select bank0
 13558     0D10  00EB               	movwf	_TMR1_overflow	;volatile
 13559     0D11                     i1l1121:
 13560     0D11  0008               	return
 13561     0D12                     __end_of_TMR1_IRQ:
 13562     007E                     btemp	set	126	;btemp
 13563     007E                     int$flags	set	126
 13564     007E                     wtemp0	set	126
 13565                           
 13566                           	psect	idloc
 13567                           
 13568                           ;Config register IDLOC0 @ 0x8000
 13569                           ;	unspecified, using default values
 13570     8000                     	org	32768
 13571     8000  3FFF               	dw	16383
 13572                           
 13573                           ;Config register IDLOC1 @ 0x8001
 13574                           ;	unspecified, using default values
 13575     8001                     	org	32769
 13576     8001  3FFF               	dw	16383
 13577                           
 13578                           ;Config register IDLOC2 @ 0x8002
 13579                           ;	unspecified, using default values
 13580     8002                     	org	32770
 13581     8002  3FFF               	dw	16383
 13582                           
 13583                           ;Config register IDLOC3 @ 0x8003
 13584                           ;	unspecified, using default values
 13585     8003                     	org	32771
 13586     8003  3FFF               	dw	16383
 13587                           
 13588                           	psect	config
 13589                           
 13590                           ;Config register CONFIG1 @ 0x8007
 13591                           ;	External Oscillator mode selection bits
 13592                           ;	FEXTOSC = OFF, Oscillator not enabled
 13593                           ;	Power-up default value for COSC bits
 13594                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 13595                           ;	Clock Out Enable bit
 13596                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 13597                           ;	Clock Switch Enable bit
 13598                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13599                           ;	Fail-Safe Clock Monitor Enable bit
 13600                           ;	FCMEN = ON, FSCM timer enabled
 13601     8007                     	org	32775
 13602     8007  3FEC               	dw	16364
 13603                           
 13604                           ;Config register CONFIG2 @ 0x8008
 13605                           ;	Master Clear Enable bit
 13606                           ;	MCLRE = ON, MCLR pin is Master Clear function
 13607                           ;	Power-up Timer Enable bit
 13608                           ;	PWRTE = OFF, PWRT disabled
 13609                           ;	Low-Power BOR enable bit
 13610                           ;	LPBOREN = OFF, ULPBOR disabled
 13611                           ;	Brown-out reset enable bits
 13612                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 13613                           ;	Brown-out Reset Voltage Selection
 13614                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 13615                           ;	Zero-cross detect disable
 13616                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 13617                           ;	Peripheral Pin Select one-way control
 13618                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
 13619                           ;	Stack Overflow/Underflow Reset Enable bit
 13620                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 13621                           ;	Background Debugger
 13622                           ;	DEBUG = OFF, Background Debugger disabled
 13623     8008                     	org	32776
 13624     8008  37FF               	dw	14335
 13625                           
 13626                           ;Config register CONFIG3 @ 0x8009
 13627                           ;	WDT Period Select bits
 13628                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13629                           ;	WDT operating mode
 13630                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 13631                           ;	WDT Window Select bits
 13632                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13633                           ;	WDT input clock selector
 13634                           ;	WDTCCS = SC, Software Control
 13635     8009                     	org	32777
 13636     8009  3F9F               	dw	16287
 13637                           
 13638                           ;Config register CONFIG4 @ 0x800A
 13639                           ;	UserNVM self-write protection bits
 13640                           ;	WRT = OFF, Write protection off
 13641                           ;	Scanner Enable bit
 13642                           ;	SCANE = available, Scanner module is available for use
 13643                           ;	Low Voltage Programming Enable bit
 13644                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 13645     800A                     	org	32778
 13646     800A  3FFF               	dw	16383
 13647                           
 13648                           ;Config register CONFIG5 @ 0x800B
 13649                           ;	UserNVM Program memory code protection bit
 13650                           ;	CP = OFF, Program Memory code protection disabled
 13651                           ;	DataNVM code protection bit
 13652                           ;	CPD = OFF, Data EEPROM code protection disabled
 13653     800B                     	org	32779
 13654     800B  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    32
    Data        1
    BSS         90
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     69      76
    BANK1            80      6      58
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    I2C1_DO_TX$3455$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_fsmStateTable	const PTR FTN()enum E12617[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> measure_buffer(BANK1[6]), STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), 
		 -> STR_7(CODE[2]), time_buffer(BANK1[8]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2909$buffer	PTR unsigned char  size(2) Largest target is 0

    S2909$source	PTR const unsigned char  size(2) Largest target is 0

    S679$data	PTR unsigned char  size(2) Largest target is 0

    S919$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S919$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S919$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S919$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 8
		 -> measure_buffer(BANK1[6]), time_buffer(BANK1[8]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR1_IRQ(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR1_IRQ(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_LCDcmd
    _main->_LCDinit
    _vfpfcnvrt->_fputc
    _vfpfcnvrt->_read_prec_or_width
    _read_prec_or_width->___wmul
    _pad->_fputc
    _fputs->_fputc
    _abs->___awmod
    _readTC74->_WriteI2C
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDpos->_LCDcmd
    _LCDcmd->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   13420
                                              0 BANK1      6     6      0
           _ADCC_GetSingleConversion
                            _LCDbusy
                             _LCDcmd
                            _LCDinit
                             _LCDpos
                             _LCDstr
                            _OpenI2C
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                      _alarm_handler
                           _readTC74
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8    8264
                                             47 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    7574
                                             40 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           15    13      2    7140
                                             26 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2    1433
                                              8 COMMON     2     0      2
                                              0 BANK0      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1144
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12    10      2    4208
                                             14 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    2229
                                              7 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1    1074
                                              0 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              0 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _readTC74                                             2     2      0      68
                                              4 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _alarm_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               5     3      2    1505
                                              0 BANK0      5     3      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              9 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDpos                                               3     2      1    1393
                                              0 BANK0      3     2      1
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              9 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              9 COMMON     1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           5     4      1     788
                                              4 COMMON     5     4      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              4 COMMON     2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDbusy                                              2     0      2     178
                                              0 BANK0      2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (2) _LCDrecv                                              5     5      0     178
                                              4 COMMON     5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             3     1      2      22
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     240
                                NULL *
       _TMR1_DefaultInterruptHandler *
                           _TMR1_IRQ *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_IRQ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCDbusy
     _LCDrecv
       _ReadI2C
       _WriteI2C
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
   _LCDpos
     _LCDcmd
   _LCDstr
     _LCDchar
       _LCDsend2x4
   _OpenI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR1_SetInterruptHandler
   _alarm_handler
   _readTC74
     _ReadI2C
     _WriteI2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_IRQ *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      3A       7       72.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Dec  1 13:19:36 2023

                                      l23 0D5A                                        l32 0E4B  
                                      l41 07D4                                        l28 0E45  
                                      l36 07FD                                        l29 0E46  
                                      l53 07FC                                        l39 07CF  
                                      l48 07ED                                        l73 0F32  
                                      l74 0F33                                        l92 0F67  
                                      l87 0F62                                        l88 0F63  
                                      l98 01B3                                        l99 01B4  
                            ___awdiv@sign 0021                       ___wmul@multiplicand 0074  
                                     l130 0229                                       l114 01F5  
                                     l115 01F6                                       l211 051F  
                                     l116 01F8                                       l220 0556  
                                     l150 026F                                       l134 022D  
                                     l151 0270                                       l135 022E  
                                     l152 0272                                       l224 0569  
                                     l232 069F                                       l129 0227  
                                     l225 056A                                       l170 02A7  
                                     l402 0D3A                                       l171 02A8  
                                     l235 0D2A                                       l244 0E18  
                                     l165 02A1                                       l229 0572  
                                     l253 0DD2                                       l166 02A3  
                                     l238 0D32                                       l184 02D8  
                                     l248 0DBD                                       l185 02D9  
                                     l195 04DB                                       l196 04DC  
                                     l189 02E9                                       l396 0E31  
                                     l485 0FAF                                       l910 0D8F  
                                     l399 0D43                                       l913 0D98  
                                     l593 0D4D                                       l898 0DFF  
                                     _PR2 028D                           _timer1ReloadVal 007A  
                                     _abs 0D99                                       _pad 0EE6  
                            ___awmod@sign 0078                           _TMR2_Initialize 0D68  
                                     wreg 0009                      _I2C1_DO_RX_NACK_STOP 0000  
                             ?_LCDsend2x4 0074                           __end_of_LCDchar 0D33  
                                    l1010 0E84                                      l1040 0D17  
                                    l2010 041F                                      l2003 06FF  
                                    ?_abs 0020                                      l1124 0D1B  
                                    l2012 0429                                      l1133 02F6  
                                    l1126 0D1D                                      l1214 03EC  
                                    l1206 03DB                                      l1134 02F7  
                                    l1215 03ED                                      l1207 03DD  
                                    l2031 0DAA                                      l2024 0E67  
                                    l1161 0356                                      l1129 02EA  
                                    l1225 004E                                      l1170 0368  
                                    l1162 0358                                      l2018 04C0  
                                    l1219 03F2                                      l1147 0326  
                                    l2043 0FFF                                      l2051 0EE5  
                                    l1148 0327                                      l1173 036C  
                                    l2054 07FF                                      l1247 017B  
                                    l4000 02DD                                      l1336 0D67  
                                    l1192 03AB                                      l1193 03AC  
                                    l1169 0367                                      l1178 037B  
                                    l1179 037C                                      l4004 0D25  
                                    l4020 0D49                                      l4100 0E73  
                                    l1285 0D75                                      l4006 0D2C  
                                    l4022 0D4A                                      l4030 0F70  
                                    l4102 0E78                                      l4024 0D4C  
                                    l4040 0F7B                                      l4032 0F72  
                                    l4016 0D33                                      l4104 0E7A  
                                    l5000 0732                                      l4018 0D44  
                                    l4050 0F89                                      l4042 0F7D  
                                    l4034 0F74                                      l4026 0F68  
                                    l4106 0E81                                      l5002 0741  
                                    l5010 0751                                      l1491 0EAC  
                                    l4300 0D8E                                      l4140 0D56  
                                    l4060 0D3B                                      l4052 0F8A  
                                    l4044 0F7F                                      l4036 0F76  
                                    l4028 0F6E                                      l1644 075F  
                                    l5012 0756                                      l5004 0745  
                                    l5020 0EEC                                      l1493 0EC0  
                                    l4302 0D94                                      l4150 0630  
                                    l4142 0D57                                      l4134 0D4E  
                                    l4062 0D3E                                      l4054 0F8B  
                                    l4046 0F81                                      l4038 0F78  
                                    l4070 0D62                                      l5014 075B  
                                    l5006 0746                                      l5030 0F0B  
                                    l5022 0EF2                                      l5110 0458  
                                    l5102 042C                                      l4160 0658  
                                    l4152 0638                                      l4144 0D59  
                                    l4136 0D53                                      l4072 0DE9  
                                    l4064 0D3F                                      l4056 0F8C  
                                    l4048 0F87                                      l4080 0D6B  
                                    l4320 0306                                      l5008 074B  
                                    l5032 0F1E                                      l5024 0EF7  
                                    l5120 047C                                      l5112 045A  
                                    l5104 0444                                      l5200 0057  
                                    l1657 07B2                                      l4170 0678  
                                    l4162 065C                                      l4154 063C  
                                    l4146 0624                                      l4138 0D54  
                                    l4074 0DFC                                      l4066 0D42  
                                    l4058 0F8D                                      l4090 0E68  
                                    l4082 0D6C                                      l4250 0E22  
                                    l4314 0D18                                      l4330 0336  
                                    l4322 030A                                      l5034 0D99  
                                    l5026 0EFC                                      l5018 0EE8  
                                    l5050 058F                                      l5042 0575  
                                    l3610 0EB6                                      l3602 0EA2  
                                    l5122 0488                                      l5114 0460  
                                    l5106 0449                                      l5210 009E  
                                    l5202 005B                                      l4172 0684  
                                    l4164 0664                                      l4156 064C  
                                    l4148 062C                                      l4076 0DFE  
                                    l4068 0D5B                                      l4092 0E6B  
                                    l4084 0D6F                                      l4252 0E25  
                                    l4244 0E19                                      l4340 0370  
                                    l4332 033A                                      l4324 0316  
                                    l4316 02EA                                      l5036 0D9E  
                                    l5028 0F06                                      l5060 05AA  
                                    l5052 0594                                      l5044 0577  
                                    l3612 0EBC                                      l3604 0EA4  
                                    l5124 0495                                      l5116 0468  
                                    l5108 0454                                      l5132 04A8  
                                    l5220 00C8                                      l5212 00A4  
                                    l5204 0085                                      l4174 0689  
                                    l4166 0668                                      l4158 0650  
                                    l4094 0E6D                                      l4086 0D70  
                                    l4078 0D68                                      l4254 0E28  
                                    l4246 0E1C                                      l4350 039F  
                                    l4342 0380                                      l4334 0346  
                                    l4326 031A                                      l4318 02FB  
                                    l5038 0D9F                                      l5070 05E9  
                                    l5062 05C6                                      l5054 0599  
                                    l5046 0586                                      l3606 0EA8  
                                    l5118 0472                                      l5142 0E4E  
                                    l5230 00FE                                      l5222 00D2  
                                    l5214 00A9                                      l5206 008D  
                                    l5160 0DB4                                      l4176 068E  
                                    l4168 0674                                      l5152 0E00  
                                    l4096 0E6F                                      l4088 0D72  
                                    l4256 0E2B                                      l4248 0E1F  
                                    l4360 03CF                                      l4352 03B0  
                                    l4344 038B                                      l4336 034A  
                                    l4328 032B                                      l5080 060D  
                                    l5072 05F0                                      l5064 05C7  
                                    l5056 05A3                                      l5048 058B  
                                    l3608 0EB1                                      l3800 06A4  
                                    l5128 049E                                      l5312 043F  
                                    l5144 0E53                                      l5240 011D  
                                    l5232 0105                                      l5224 00D9  
                                    l5216 00B0                                      l5208 0099  
                                    l3730 07BC                                      l3722 07B4  
                                    l4178 0693                                      l5170 0DC5  
                                    l5154 0E01                                      l4098 0E71  
                                    l4258 0E2E                                      l4362 03E1  
                                    l4354 03BB                                      l4346 038F  
                                    l4338 035C                                      l5082 0611  
                                    l5074 05F5                                      l5066 05CB  
                                    l5058 05A6                                      l3802 06B5  
                                    l3810 06E7                                      l5090 0406  
                                    l5146 0E5B                                      l1954 0EA1  
                                    l5242 0123                                      l5250 0137  
                                    l5226 00E0                                      l5218 00B4  
                                    l5234 0107                                      l4292 0D88  
                                    l3820 0E4A                                      l3732 07C5  
                                    l3724 07B7                                      l5164 0DBA  
                                    l5172 0DC8                                      l5156 0E05  
                                    l4364 03F1                                      l4356 03BF  
                                    l4348 039B                                      l3660 0760  
                                    l3580 0FB5                                      l5084 0618  
                                    l5076 0602                                      l5068 05DB  
                                    l3812 06FB                                      l3804 06BD  
                                    l5092 040E                                      l5148 0E65  
                                    l5180 0E8B                                      l5260 0151  
                                    l5252 013E                                      l5244 0128  
                                    l5236 010E                                      l5228 00F4  
                                    l4294 0D8B                                      l3734 07CE  
                                    l3742 07DB                           __end_of_LCDbusy 0DBE  
                                    l5158 0DAB                                      l3830 04E0  
                                    l5174 0DCA                                      l4358 03CB  
                                    l3670 0770                                      l3662 0761  
                                    l3590 0FF6                                      l3582 0FBA  
                                    l1974 0EF9                                      l5078 0607  
                                    l1982 059F                                      l3806 06CA  
                                    l5094 0417                                      l5182 0E8D  
                                    l5270 016B                                      l5262 0158  
                                    l5254 0145                                      l5246 012D  
                                    l5238 0116                                      l5190 003D  
                                    ?_pad 0027                                      l4296 0D8C  
                                    l3816 0E32                                      l3744 07E4  
                                    l3736 07D9                                      l3840 050D  
                                    l3832 04EB                                      l3824 04C2  
                                    l5176 0DCE                                      l5168 0DC0  
                                    l3680 0787                                      l3672 0775  
                                    l3664 0765                                      l3584 0FBF  
                                    l3808 06DF                                      l5096 041C  
                                    l5088 03F5                                      l5184 0E8F  
                                    l5280 018D                                      l5272 0170  
                                    l5264 015F                                      l5256 014C  
                                    l5248 0134                                      l5192 0040  
                         __end_of_LCDinit 06A0                                      l1977 0F19  
                                    l4298 0D8D                                      l3818 0E3C  
                                    l3746 07F1                                      l3930 0F42  
                                    l3850 0538                                      l3842 0513  
                                    l3834 04EF                                      l3826 04C5  
                                    l3682 078B                                      l3674 077B  
                                    l3690 07A4                                      l3666 076A  
                                    l3586 0FC9                                      l3578 0FB0  
                                    l1986 059D                                      l5098 0420  
                                    l5186 0E99                                      l5178 0E87  
                                    l5282 018E                                      l5290 01A2  
                                    l5274 017D                                      l5266 0166  
                                    l5258 014E                                      l5194 0041  
                                    l1979 0F24                                      l1995 0623  
                                    l3940 01A7                                      l3932 0F46  
                                    l3924 0F26                                      l3860 056E  
                                    l3852 0544                                      l3844 0520  
                                    l3836 04FB                                      l3828 04CF  
                                    l3692 07A9                                      l3684 0795  
                                    l3676 077E                                      l3668 076C  
                                    l3588 0FE7                                      l5284 0194  
                                    l5276 017F                                      l5268 0168  
                                    l5196 004C                                      l3950 01D8  
                                    l3942 01B8                                      l3934 0F52  
                                    l3926 0F26                                      l3854 054A  
                                    l3846 0526                                      l3838 0501  
                                    l3694 07AE                                      l3686 0799  
                                    l3678 0783                                      l5286 019B  
                                    l5278 0186                                      l5198 0051  
                                    l3960 020B                                      l3952 01E4  
                                    l3944 01C3                                      l3936 0F56  
                                    l3928 0F37                                      l3856 0557  
                                    l3848 0532                                      l3688 079E  
                                    l5288 019C                                      l3970 0241  
                                    l3962 0217                                      l3954 01E9  
                                    l3946 01C7                                      l3938 01A7  
                                    l3858 055D                                      l3980 0276  
                                    l3972 024D                                      l3964 021B  
                                    l3956 01FC                                      l3948 01D3  
                                    l3868 0D12                                      l3990 02AC  
                                    l3982 0281                                      l3974 0252  
                                    l3966 0232                                      l3958 0207  
                                    l3798 06A2                                      l3992 02B7  
                                    l3984 0285                                      l3976 025E  
                                    l3968 023D                                      l3994 02BB  
                                    l3986 0291                                      l3978 0263  
                                    l4970 0ED2                                      l3996 02C7  
                                    l3988 0295                                      l4980 070B  
                                    l4972 0ED7                                      l3998 02CC  
                                    l4990 071C                                      l4982 070D  
                                    l4974 0700                                      l4966 0EC3  
                                    l4992 0722                                      l4984 0711  
                                    l4976 0702                                      l4968 0EC6  
                                    l4994 0725                                      l4986 0716  
                                    l4978 0706                           __end_of_LCDrecv 02EA  
                                    l4996 072A                                      l4988 071A  
                                    l4998 072E                           __end_of_LCDsend 0F68  
                                    STR_1 1020                                      STR_2 102F  
                                    STR_3 1037                                      STR_4 103B  
                                    STR_5 103D                                      STR_6 1041  
                                    STR_7 103F                                      u2100 077B  
                                    u2101 077A                                      u2120 078B  
                                    u2121 078A                                      u2130 0795  
                                    u2131 0794                                      u2115 077F  
                                    u2300 07FC                                      u2220 07BB  
                                    u3100 0316                                      u2301 07FB  
                                    u2221 07BA                                      u3101 0315  
                                    _LATA 0016                                      u2230 07C5  
                                    u3110 0326                                      u2150 07A4  
                                    _LATB 0017                                      u2231 07C4  
                                    u3111 0325                                      u2151 07A3  
                                    u2135 0791                                      _LATC 0018  
                                    u2240 07CE                                      u3200 037B  
                                    u3120 032B                                      u2160 07A9  
                                    u2080 0765                                      u4000 060D  
                                    _LATD 0019                                      u2241 07CD  
                                    u3201 037A                                      u3121 032A  
                                    u2161 07A8                                      u2145 079A  
                                    u2081 0764                                      u4001 060C  
                                    _LATE 001A                                      u3050 0D94  
                                    u2250 07D4                                      u3210 0380  
                                    u3130 0336                                      u2090 0770  
                                    u2410 06B5                                      u4010 0406  
                                    u3051 0D93                                      u2251 07D3  
                                    u3211 037F                                      u3131 0335  
                                    u2091 076F                                      u2411 06B4  
                                    u4011 0405                                      u2260 07D9  
                                    u2500 04FB                                      u3300 03EC  
                                    u3220 038B                                      u3140 0346  
                                    u2420 06FB                                      u4020 0449  
                                    u4100 0057                                      u2261 07D8  
                                    u2501 04FA                                      u3301 03EB  
                                    u3221 038A                                      u3141 0345  
                                    u2421 06FA                                      u4021 0448  
                                    u4101 0056                                      u2430 0E3C  
                                    u2270 07E4                                      u2510 050D  
                                    u3310 03F1                                      u3230 039B  
                                    u3150 0356                                      u3070 02F6  
                                    u4030 0458                                      u4110 0097  
                                    u2431 0E3B                                      u2271 07E3  
                                    u2511 050C                                      u3311 03F0  
                                    u3231 039A                                      u3151 0355  
                                    u3071 02F5                                      u4031 0457  
                                    u4111 0094                                      u2440 0E45  
                                    u2280 07ED                                      u2520 051F  
                                    u3240 03AB                                      u3160 035C  
                                    u3080 02FB                                      u4040 0472  
                                    u4200 015F                                      u2441 0E44  
                                    u2281 07EC                                      u2521 051E  
                                    u3241 03AA                                      u3161 035B  
                                    u3081 02FA                                      u4041 0471  
                                    u4201 015E                                      u2450 0E4A  
                                    u2290 07F1                                      u2530 0532  
                                    u3250 03B0                                      u3170 0367  
                                    u3090 0306                                      u4050 047C  
                                    u4210 0170                                      u4130 00A4  
                                    _T2PR 028D                                      u2451 0E49  
                                    u2291 07F0                                      u2531 0531  
                                    u3251 03AF                                      u3171 0366  
                                    u3091 0305                                      u4051 047B  
                                    u4211 016F                                      u4131 00A3  
                                    u2700 01B3                                      u2540 0544  
                                    u3260 03BB                                      u3180 036C  
                                    u1900 0FBA                                      u4060 0E65  
                                    u4220 017B                                      u4140 00D2  
                                    u4124 0099                                      u2701 01B2  
                                    u2541 0543                                      u3261 03BA  
                                    u3181 036B                                      u1901 0FB9  
                                    u4061 0E64                                      u4221 017A  
                                    u4141 00D1                                      u2710 01B8  
                                    u2550 0556                                      u2470 04DB  
                                    u4070 0E18                                      u3270 03CB  
                                    u3190 0370                                      u1910 0FC9  
                                    u4230 0186                                      u4150 00FE  
                                    u2711 01B7                                      u2551 0555  
                                    u2471 04DA                                      u4071 0E17  
                                    u3271 03CA                                      u3191 036F  
                                    u1911 0FC8                                      u4231 0185  
                                    u4151 00FD                                      u2800 022D  
                                    u2720 01C3                                      u4080 0DB4  
                                    u2640 0F32                                      u2560 0569  
                                    u2480 04E0                                      u3280 03DB  
                                    u1920 0FE7                                      u4240 0194  
                                    u4160 0123                                      u2801 022C  
                                    u2721 01C2                                      u4081 0DB3  
                                    u2641 0F31                                      u2561 0568  
                                    u2481 04DF                                      u2465 04C8  
                                    u3281 03DA                                      u1921 0FE6  
                                    u4241 0193                                      u4161 0122  
                                    u2810 0232                                      u2730 01D3  
                                    u2650 0F37                                      u2570 056E  
                                    u2490 04EB                                      u4090 0DC5  
                                    u3290 03E1                                      u4170 0128  
                                    u2811 0231                                      u2731 01D2  
                                    u2651 0F36                                      u2571 056D  
                                    u2491 04EA                                      u4307 0661  
                                    u4091 0DC4                                      u3291 03E0  
                                    u4171 0127                                      u2900 02A7  
                                    u2820 023D                                      u2740 01E4  
                                    u2660 0F42                                      u1940 0EA8  
                                    u4180 012D                                      u2901 02A6  
                                    u2821 023C                                      u2741 01E3  
                                    u2661 0F41                                      u4317 0669  
                                    u1925 0FE3                                      u1941 0EA7  
                                    u4181 012C                                      u2910 02AC  
                                    u2830 024D                                      u2750 01F5  
                                    u2670 0F52                                      u4190 0145  
                                    u2911 02AB                                      u2831 024C  
                                    u2751 01F4                                      u2671 0F51  
                                    u4327 0675                                      u4191 0144  
                                    u2920 02B7                                      u2840 025E  
                                    u2760 01FC                                      u2680 0F62  
                                    u3800 0732                                      u2921 02B6  
                                    u2841 025D                                      u2761 01FB  
                                    u2681 0F61                                      u4337 067F  
                                    u4257 0627                                      u3801 0731  
                                    u2930 02C7                                      u2850 026F  
                                    u2770 0207                                      u2690 0F67  
                                    u1890 0FB5                                      u1970 0EBC  
                                    u2931 02C6                                      u2851 026E  
                                    u2771 0206                                      u2691 0F66  
                                    u4347 069B                                      u4267 0635  
                                    u1891 0FB4                                      u1971 0EBB  
                                    u1955 0EAD                                      u2940 02D8  
                                    u2860 0276                                      u2780 0217  
                                    u3820 0741                                      u3900 0D9E  
                                    _PMD0 0796                                      u2941 02D7  
                                    u2861 0275                                      u2781 0216  
                                    u4357 056F                                      u4277 063F  
                                    u3821 0740                                      u3901 0D9D  
                                    u1965 0EB2                                      _PMD1 0797  
                                    u2950 02DD                                      u2870 0281  
                                    u2790 0227                                      u3750 0EE5  
                                    u3910 057C                                      _PMD2 0798  
                                    u2951 02DC                                      u2871 0280  
                                    u2791 0226                                      u4287 064D  
                                    u3815 0733                                      u3751 0EE4  
                                    u3911 057A                                      _PMD3 0799  
                                    u2880 0291                                      u3840 0751  
                                    u3760 0706                                      u3920 057D  
                                    _PMD4 079A                                      u2881 0290  
                                    u4297 0655                                      u3841 0750  
                                    u3825 073D                                      u3761 0705  
                                    _PMD5 079B                                      u2890 02A1  
                                    u3850 0756                                      u3770 0711  
                                    u3930 058B                                      u2891 02A0  
                                    u3851 0755                                      u3835 0747  
                                    u3771 0710                                      u3931 058A  
                                    u3780 0722                                      u3860 0EEC  
                                    u3940 0594                                      u2965 02E0  
                                    u3781 0721                                      u3861 0EEB  
                                    u3941 0593                                      u3870 0EF7  
                                    u3950 05E9                                      u3871 0EF6  
                                    u3951 05E8                                      u3880 0F19  
                                    u3960 05F0                                      u3881 0F18  
                                    u3961 05EF                                      u3890 0F1E  
                                    u3970 05F5                                      u3795 0726  
                                    u3891 0F1D                                      u3971 05F4  
                                    u3955 05E5                                      u3980 0602  
                                    u3885 0F15                                      u3981 0601  
                                    u3990 0607                                      u3991 0606  
                                    u3985 05FE                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                                      abs@a 0020  
                                    _dbuf 0120                                      _main 003D  
                                    _dtoa 0573                                      _prec 00BF  
                                    pad@i 002B                                      pad@p 0028  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 0018  
              ??_TMR1_SetInterruptHandler 0074                           __end_of_ReadI2C 0E4C  
                         __end_of_OpenI2C 0D5B                                     ??_abs 0022  
                                   ??_pad 002A             __end_of_OSCILLATOR_Initialize 0D44  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_main 0070  
                                   ?_dtoa 002E                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                           __end_of___awdiv 0760  
                                   _ADPRE 009C                           __end_of___awmod 07B3  
                                   _ADRPT 010D                                     _T1CLK 0211  
                         ___awdiv@divisor 0072                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
                                   _T2TMR 028C                                     _T2RST 0291  
                         ___awdiv@counter 0020                __end_of_i2c1_fsmStateTable 1020  
                                   _OSCEN 0891                              vfpfcnvrt@fmt 003A  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                           _PWM6_Initialize 0D5B  
                       ??_I2C1_Initialize 0072                          __end_of_TMR1_IRQ 0D12  
                        __end_of_TMR1_ISR 0DE9                                     _alarm 00C1  
                                   _flags 0065                     __end_of_alarm_handler 0D1E  
                                   _count 00D9                       read_prec_or_width@c 0023  
                     read_prec_or_width@n 0024                                     _fputc 0FB0  
                                   _fputs 0EC1                                     _hours 0068  
                                   pad@fp 002D                                     _width 00BD  
                                   _putch 07FF                                     dtoa@d 002E  
                                   dtoa@i 0038                                     dtoa@p 0034  
                                   dtoa@s 0037                                     dtoa@w 0035  
                 __end_of_TMR1_Initialize 0E85                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0EA2                           _TMR1_WriteTimer 0D76  
                         __initialization 001A                              __end_of_main 01A6  
                            __end_of_dtoa 0624                   __end_of_TMR2_Initialize 0D76  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00D1  
                                  ??_dtoa 0030                                 ??_LCDchar 0079  
                               ??_LCDbusy 0079                                 ??_LCDinit 0079  
              __end_of_read_prec_or_width 0700                                 ??_LCDrecv 0074  
                               ??_LCDsend 0074                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    ?_fputc 0072  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  ?_fputs 0020                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                          ___awdiv@dividend 0074  
                                  _ADUTHL 0110                          __end_of_WriteI2C 07FE  
                                  _ANSELA 0F38                                    ?_putch 0070  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1024 0D86                                    i1l1121 0D11  
                 TMR1_WriteTimer@timerVal 0070                                    i1l1043 0003  
                                  _RC4PPS 0F24                                    i1l1060 0016  
                                  i1l1037 0DE8                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l4110 0D7B                                    i1l4120 0D84  
                                  i1l4112 0D7C                                    i1l4122 0D0E  
                                  i1l4114 0D7E                                    i1l4116 0D80  
                                  i1l4108 0D76                                    i1l4118 0D82  
                                  i1l4310 0DDC                                    i1l4312 0DE3  
                                  i1l4306 0DD3                                    i1l4308 0DD5  
                                  i1l4840 000F                                    i1l4842 0013  
                                  i1l4836 0006                                    i1l4838 000A  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    _LCDcmd 0D24  
                                  u306_20 0DE3                                    u306_21 0DE2  
                                  _LCDpos 0DBE                                    _LCDstr 0E00  
                                  u357_20 000A                                    u357_21 0009  
                                  u358_20 000F                                    u358_21 000E  
                                  u359_20 0013                                    u359_21 0012  
                                  u298_20 0D7B                                    u298_21 0D7A  
                                  _OSCFRQ 0893                             vfpfcnvrt@done 0044  
                               ??_ReadI2C 0072                               LCDsend2x4@c 0076  
                             LCDrecv@mode 0078                                 ??_OpenI2C 0072  
                        _I2C1_DO_TX_EMPTY 0000      __end_of_TMR1_DefaultInterruptHandler 0004  
            _TMR1_DefaultInterruptHandler 0003                              _CCPTMRS1bits 021F  
                            vfprintf@cfmt 004D                                    ___wmul 0EA2  
                               ??___awdiv 0076                                 ??___awmod 0076  
                        __end_of_readTC74 03F3                      read_prec_or_width@ap 0078  
                 __end_of_PWM6_Initialize 0D68                          ___awdiv@quotient 0022  
                         ___awmod@divisor 0072                           ___awmod@counter 0077  
                                  pad@buf 0027                                    dtoa@fp 0031  
                         _ADCC_Initialize 0DE9                     _I2C1_DO_SEND_ADR_READ 0000  
                                  fputc@c 0072                            _PMD_Initialize 0D33  
                                  fputs@c 0023                                    fputs@i 0024  
                                  fputs@s 0026                                    putch@c 0070  
                        __end_of_vfprintf 0E68                 ?_ADCC_GetSingleConversion 0072  
TMR1_SetInterruptHandler@InterruptHandler 0072                                 ??_sprintf 0057  
                 __end_of_TMR1_WriteTimer 0D87                   _I2C1_DO_RX_NACK_RESTART 0000  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0E19  
                 __end_of__initialization 0039                        ?_SYSTEM_Initialize 0070  
                 _rdBlkRegCompleteHandler 0000                            __pcstackCOMMON 0070  
                            __pidataBANK1 07FE                       ??_SYSTEM_Initialize 0074  
                               ?_TMR1_IRQ 0070                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_fputc 1000  
                           __end_of_fputs 0EE6                             __end_of_putch 0800  
                        ?_TMR2_Initialize 0070                    __end_of_PMD_Initialize 0D3B  
                               LCDrecv@hc 0076                                 LCDrecv@lc 0077  
                            ??_LCDsend2x4 0075                                   ??_fputc 0075  
               __end_of_SYSTEM_Initialize 0E32                                   ??_fputs 0021  
                                 ??_putch 0072                                __pbssBANK0 0065  
                              __pbssBANK1 00A0                                __pbssBANK2 0120  
                                 ?_LCDcmd 0070                                   ?_LCDpos 0020  
                                 ?_LCDstr 0020                                   LCDcmd@c 0079  
                                 LCDpos@c 0020                                   LCDpos@l 0021  
                                 LCDpos@p 0022                     _rd1RegCompleteHandler 0000  
                                 LCDstr@c 0024                                   LCDstr@p 0020  
                       _I2C1_DO_SEND_STOP 0000                     _wr1RegCompleteHandler 0000  
                              __pmaintext 003D                                   ?___wmul 0072  
                              ??_TMR1_IRQ 0070                                ??_TMR1_ISR 0072  
                 __end_of_ADCC_Initialize 0E00                                __pintentry 0004  
                         _I2C1_Initialize 0D44                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                        __end_of_LCDsend2x4 0573  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                                   _LCDchar 0D2B  
                                 _LCDbusy 0DAB                                   _LCDinit 0624  
                                 _LCDrecv 01A6                                   _LCDsend 0F25  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                                 _OSCTUNE 0892                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                          ?_TMR1_WriteTimer 0070  
                            LCDsend2x4@hc 0077                              LCDsend2x4@lc 0078  
                               ?_readTC74 0070                        _i2c1_fsmStateTable 1000  
                                 _ReadI2C 0E32                                   _OpenI2C 0D4E  
                                 ___awdiv 0700                                   ___awmod 0760  
                               ?_vfprintf 0048                                ??_WriteI2C 0072  
                                 __ptext1 0E85                                   __ptext2 0E4C  
                                 __ptext3 03F3                                   __ptext4 06A0  
                                 __ptext5 0EA2                                   __ptext6 0573  
                                 __ptext7 0EE6                                   __ptext8 0EC1  
                                 __ptext9 0FB0            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0D3B  
                               _T2CONbits 028E                     read_prec_or_width@fmt 0026  
                        ___awmod@dividend 0074                                   _minutes 0067  
                ??_PIN_MANAGER_Initialize 0072                                   _seconds 0066  
               ?_TMR1_SetInterruptHandler 0072                                 _T2HLTbits 028F  
                                 _sprintf 0E85                                   clrloop0 0D1F  
                    end_of_initialization 0039                                 _T2RSTbits 0291  
                              ??_readTC74 0074                                   fputc@fp 0074  
                                 fputs@fp 0020                    _I2C1_DO_SEND_ADR_WRITE 0000  
                      _read_prec_or_width 06A0                            _measure_buffer 00CB  
                 __end_of_I2C1_Initialize 0D4E                               _I2C1_Status 00A0  
                       __end_of_vfpfcnvrt 04C1                       ?_read_prec_or_width 0078  
                        vfpfcnvrt@convarg 0040                          ?_ADCC_Initialize 0070  
                              _luminosity 0069                                ??_vfprintf 004B  
        __end_of_ADCC_GetSingleConversion 0D99                _I2C1_DO_SEND_RESTART_WRITE 0000  
                               _PORTAbits 000C                                 _TRISCbits 0013  
                    ??_read_prec_or_width 0020                             readTC74@value 0075  
                          __end_of_LCDcmd 0D2B                            __end_of_LCDpos 0DD3  
                          __end_of_LCDstr 0E19                            LCDsend2x4@mode 0074  
                             vfpfcnvrt@ap 003B                               vfpfcnvrt@cp 0046  
                             vfpfcnvrt@fp 0045                            __end_of___wmul 0EC1  
                          _I2C1_DO_RX_ACK 0000                    ?_OSCILLATOR_Initialize 0070  
                     start_initialization 001A                               __end_of_abs 0DAB  
                             __end_of_pad 0F25                          WriteI2C@data_out 0073  
                           _alarm_handler 0D18                                  ??_LCDcmd 0079  
                                ??_LCDpos 007A                                  ??_LCDstr 0022  
                        ?_I2C1_Initialize 0070                               vfprintf@fmt 0048  
                        ??_PMD_Initialize 0072                                  ??___wmul 0076  
                             __pdataBANK1 00D9                  _ADCC_GetSingleConversion 0D87  
                                ?_LCDchar 0070                               __pbssCOMMON 007A  
                                ?_LCDbusy 0020                                  ?_LCDinit 0070  
                    _I2C1_DO_SEND_RESTART 0000                                  ?_LCDrecv 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00D1  
                          ?_alarm_handler 0070                                  LCDchar@c 0079  
                                LCDsend@c 0075                                  ?_ReadI2C 0070  
                               __pnvBANK1 00D7                     _rd2RegCompleteHandler 0000  
                                ?_OpenI2C 0070                    _PIN_MANAGER_Initialize 0F68  
                   _wr2RegCompleteHandler 0000                                 _dtoa$2988 0032  
        __end_of_TMR1_SetInterruptHandler 0D18           ADCC_GetSingleConversion@channel 0074  
                                ?___awdiv 0072                                  ?___awmod 0072  
            ??_INTERRUPT_InterruptManager 0072                                  ?_sprintf 004F  
                                _T2CLKCON 0290                            ___wmul@product 0076  
                                _LATAbits 0016                                _I2C1_DO_RX 0000  
                              _I2C1_DO_TX 0000                                 clear_ram0 0D1E  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                                _PIR3bits 070F                                  _PIR4bits 0710  
               _I2C1_DO_SEND_RESTART_READ 0000                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_IRQ 0D0E  
                                _TMR1_ISR 0DD3                                  _SSP1STAT 018F  
                               _vfpfcnvrt 03F3                         ??_TMR1_Initialize 0074  
                               _pwm_count 00C2                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                         ___wmul@multiplier 0072  
                         ??_alarm_handler 0072                             _I2C1_DO_RESET 0000  
                       ??_TMR2_Initialize 0072                                _ADSTATbits 0097  
                              vfprintf@ap 004A                                vfprintf@fp 004C  
                 ??_OSCILLATOR_Initialize 0072                                ?_vfpfcnvrt 003A  
                                _WriteI2C 07B3                  _TMR1_SetInterruptHandler 0D12  
                   _TMR1_InterruptHandler 00D7                                sprintf@fmt 004F  
                           _TMR1_overflow 006B                                  __ptext10 07FF  
                                __ptext11 0D99                                  __ptext20 0D5B  
                                __ptext12 0760                                  __ptext21 0D33  
                                __ptext13 0700                                _T1GCONbits 020F  
                                __ptext30 0D24                                  __ptext22 0F68  
                                __ptext14 02EA                                  __ptext31 0624  
                                __ptext23 0D3B                                  __ptext15 0D18  
                                __ptext40 0DD3                                  __ptext32 04C1  
                                __ptext24 0D44                                  __ptext16 0E19  
                                __ptext41 0D76                                  __ptext33 0F25  
                                __ptext25 0DE9                                  __ptext17 0D68  
                                __ptext42 0003                                  __ptext34 0DAB  
                                __ptext26 0D4E                                  __ptext18 0E68  
                                __ptext43 0D0E                                  __ptext35 01A6  
                                __ptext27 0E00                                  __ptext19 0D12  
                                __ptext36 07B3                                  __ptext28 0D2B  
                                __ptext37 0E32                                  __ptext29 0DBE  
                                __ptext38 0D87                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                                  _readTC74 02EA  
                _I2C1_CallbackReturnReset 0000                         ??_PWM6_Initialize 0072  
              ??_ADCC_GetSingleConversion 0074                                  int$flags 007E  
                                _vfprintf 0E4C        __end_of_INTERRUPT_InterruptManager 0018  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                              _I2C1_DO_IDLE 0000  
                            _I2C1_DO_RCEN 0000                                _INTCONbits 000B  
                              _LCDsend2x4 04C1                                  intlevel1 0000  
                               sprintf@ap 0058                   ?_PIN_MANAGER_Initialize 0070  
                 _I2C1_CallbackReturnStop 0000                      _I2C1_DO_ADDRESS_NACK 0000  
                             ??_vfpfcnvrt 003C                             __pstringtext1 1000  
                           __pstringtext2 1020                             __pstringtext3 102F  
                           __pstringtext4 1037                             __pstringtext5 103B  
                           __pstringtext6 103D                             __pstringtext7 103F  
                           __pstringtext8 1041                             __pstringtext9 0000  
                             _time_buffer 00C3                               _temperature 006A  
                                sprintf@f 005A                                  sprintf@s 0059  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
          __end_of_PIN_MANAGER_Initialize 0FB0                         ??_ADCC_Initialize 0072  
                         _TMR1_Initialize 0E68  
