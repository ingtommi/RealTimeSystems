

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Nov 25 23:59:31 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	dabs	1,0x7E,2
    58     0000                     
    59                           ; Version 2.35
    60                           ; Generated 13/04/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F18875 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94     0000                     	;# 
    95     0001                     	;# 
    96     0002                     	;# 
    97     0003                     	;# 
    98     0004                     	;# 
    99     0005                     	;# 
   100     0006                     	;# 
   101     0007                     	;# 
   102     0008                     	;# 
   103     0009                     	;# 
   104     000A                     	;# 
   105     000B                     	;# 
   106     000C                     	;# 
   107     000D                     	;# 
   108     000E                     	;# 
   109     000F                     	;# 
   110     0010                     	;# 
   111     0011                     	;# 
   112     0012                     	;# 
   113     0013                     	;# 
   114     0014                     	;# 
   115     0015                     	;# 
   116     0016                     	;# 
   117     0017                     	;# 
   118     0018                     	;# 
   119     0019                     	;# 
   120     001A                     	;# 
   121     001C                     	;# 
   122     001C                     	;# 
   123     001D                     	;# 
   124     001D                     	;# 
   125     001E                     	;# 
   126     001F                     	;# 
   127     008C                     	;# 
   128     008C                     	;# 
   129     008D                     	;# 
   130     008E                     	;# 
   131     008E                     	;# 
   132     008F                     	;# 
   133     0090                     	;# 
   134     0090                     	;# 
   135     0091                     	;# 
   136     0093                     	;# 
   137     0094                     	;# 
   138     0095                     	;# 
   139     0096                     	;# 
   140     0097                     	;# 
   141     0098                     	;# 
   142     0099                     	;# 
   143     009A                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     010E                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     0110                     	;# 
   154     0110                     	;# 
   155     0111                     	;# 
   156     0112                     	;# 
   157     0112                     	;# 
   158     0113                     	;# 
   159     0114                     	;# 
   160     0114                     	;# 
   161     0115                     	;# 
   162     0116                     	;# 
   163     0116                     	;# 
   164     0117                     	;# 
   165     0119                     	;# 
   166     0119                     	;# 
   167     0119                     	;# 
   168     011A                     	;# 
   169     011A                     	;# 
   170     011A                     	;# 
   171     011B                     	;# 
   172     011B                     	;# 
   173     011B                     	;# 
   174     011B                     	;# 
   175     011B                     	;# 
   176     011C                     	;# 
   177     011C                     	;# 
   178     011C                     	;# 
   179     011D                     	;# 
   180     011D                     	;# 
   181     011D                     	;# 
   182     011E                     	;# 
   183     011E                     	;# 
   184     011E                     	;# 
   185     011F                     	;# 
   186     011F                     	;# 
   187     011F                     	;# 
   188     011F                     	;# 
   189     011F                     	;# 
   190     018C                     	;# 
   191     018D                     	;# 
   192     018E                     	;# 
   193     018F                     	;# 
   194     0190                     	;# 
   195     0191                     	;# 
   196     0192                     	;# 
   197     0196                     	;# 
   198     0197                     	;# 
   199     0198                     	;# 
   200     0199                     	;# 
   201     019A                     	;# 
   202     019B                     	;# 
   203     019C                     	;# 
   204     020C                     	;# 
   205     020C                     	;# 
   206     020D                     	;# 
   207     020E                     	;# 
   208     020F                     	;# 
   209     020F                     	;# 
   210     0210                     	;# 
   211     0210                     	;# 
   212     0211                     	;# 
   213     0211                     	;# 
   214     0212                     	;# 
   215     0212                     	;# 
   216     0213                     	;# 
   217     0214                     	;# 
   218     0215                     	;# 
   219     0215                     	;# 
   220     0216                     	;# 
   221     0216                     	;# 
   222     0217                     	;# 
   223     0217                     	;# 
   224     0218                     	;# 
   225     0218                     	;# 
   226     0219                     	;# 
   227     021A                     	;# 
   228     021B                     	;# 
   229     021B                     	;# 
   230     021C                     	;# 
   231     021C                     	;# 
   232     021D                     	;# 
   233     021D                     	;# 
   234     021E                     	;# 
   235     021F                     	;# 
   236     028C                     	;# 
   237     028C                     	;# 
   238     028D                     	;# 
   239     028D                     	;# 
   240     028E                     	;# 
   241     028F                     	;# 
   242     0290                     	;# 
   243     0290                     	;# 
   244     0291                     	;# 
   245     0292                     	;# 
   246     0292                     	;# 
   247     0293                     	;# 
   248     0293                     	;# 
   249     0294                     	;# 
   250     0295                     	;# 
   251     0296                     	;# 
   252     0296                     	;# 
   253     0297                     	;# 
   254     0298                     	;# 
   255     0298                     	;# 
   256     0299                     	;# 
   257     0299                     	;# 
   258     029A                     	;# 
   259     029B                     	;# 
   260     029C                     	;# 
   261     029C                     	;# 
   262     029D                     	;# 
   263     030C                     	;# 
   264     030C                     	;# 
   265     030D                     	;# 
   266     030E                     	;# 
   267     030F                     	;# 
   268     0310                     	;# 
   269     0310                     	;# 
   270     0311                     	;# 
   271     0312                     	;# 
   272     0313                     	;# 
   273     0314                     	;# 
   274     0314                     	;# 
   275     0315                     	;# 
   276     0316                     	;# 
   277     0317                     	;# 
   278     0318                     	;# 
   279     0318                     	;# 
   280     0319                     	;# 
   281     031A                     	;# 
   282     031B                     	;# 
   283     031C                     	;# 
   284     031C                     	;# 
   285     031D                     	;# 
   286     031E                     	;# 
   287     031F                     	;# 
   288     038C                     	;# 
   289     038C                     	;# 
   290     038D                     	;# 
   291     038E                     	;# 
   292     0390                     	;# 
   293     0390                     	;# 
   294     0391                     	;# 
   295     0392                     	;# 
   296     040C                     	;# 
   297     040D                     	;# 
   298     040E                     	;# 
   299     040F                     	;# 
   300     0410                     	;# 
   301     0411                     	;# 
   302     0416                     	;# 
   303     0416                     	;# 
   304     0417                     	;# 
   305     0418                     	;# 
   306     0418                     	;# 
   307     0419                     	;# 
   308     041A                     	;# 
   309     041A                     	;# 
   310     041B                     	;# 
   311     041C                     	;# 
   312     041C                     	;# 
   313     041D                     	;# 
   314     041E                     	;# 
   315     041F                     	;# 
   316     048C                     	;# 
   317     048C                     	;# 
   318     048D                     	;# 
   319     048E                     	;# 
   320     048F                     	;# 
   321     048F                     	;# 
   322     0490                     	;# 
   323     0491                     	;# 
   324     0492                     	;# 
   325     0492                     	;# 
   326     0493                     	;# 
   327     0494                     	;# 
   328     0495                     	;# 
   329     0495                     	;# 
   330     0496                     	;# 
   331     0497                     	;# 
   332     0498                     	;# 
   333     0499                     	;# 
   334     049A                     	;# 
   335     049B                     	;# 
   336     049C                     	;# 
   337     049D                     	;# 
   338     050C                     	;# 
   339     050C                     	;# 
   340     050D                     	;# 
   341     050E                     	;# 
   342     050F                     	;# 
   343     050F                     	;# 
   344     0510                     	;# 
   345     0511                     	;# 
   346     0512                     	;# 
   347     0512                     	;# 
   348     0513                     	;# 
   349     0514                     	;# 
   350     0515                     	;# 
   351     0515                     	;# 
   352     0516                     	;# 
   353     0517                     	;# 
   354     0518                     	;# 
   355     0519                     	;# 
   356     051A                     	;# 
   357     051B                     	;# 
   358     051C                     	;# 
   359     051D                     	;# 
   360     058C                     	;# 
   361     058C                     	;# 
   362     058D                     	;# 
   363     058E                     	;# 
   364     058F                     	;# 
   365     058F                     	;# 
   366     0590                     	;# 
   367     0591                     	;# 
   368     0592                     	;# 
   369     0593                     	;# 
   370     060C                     	;# 
   371     060D                     	;# 
   372     060E                     	;# 
   373     060F                     	;# 
   374     0610                     	;# 
   375     0611                     	;# 
   376     0612                     	;# 
   377     0613                     	;# 
   378     0614                     	;# 
   379     0616                     	;# 
   380     0617                     	;# 
   381     0618                     	;# 
   382     0619                     	;# 
   383     061A                     	;# 
   384     061B                     	;# 
   385     061C                     	;# 
   386     061D                     	;# 
   387     061E                     	;# 
   388     068C                     	;# 
   389     068D                     	;# 
   390     068E                     	;# 
   391     068F                     	;# 
   392     0690                     	;# 
   393     0691                     	;# 
   394     0692                     	;# 
   395     0693                     	;# 
   396     0694                     	;# 
   397     070C                     	;# 
   398     070D                     	;# 
   399     070E                     	;# 
   400     070F                     	;# 
   401     0710                     	;# 
   402     0711                     	;# 
   403     0712                     	;# 
   404     0713                     	;# 
   405     0714                     	;# 
   406     0716                     	;# 
   407     0717                     	;# 
   408     0718                     	;# 
   409     0719                     	;# 
   410     071A                     	;# 
   411     071B                     	;# 
   412     071C                     	;# 
   413     071D                     	;# 
   414     071E                     	;# 
   415     0796                     	;# 
   416     0797                     	;# 
   417     0798                     	;# 
   418     0799                     	;# 
   419     079A                     	;# 
   420     079B                     	;# 
   421     080C                     	;# 
   422     080D                     	;# 
   423     080E                     	;# 
   424     080F                     	;# 
   425     0810                     	;# 
   426     0811                     	;# 
   427     0812                     	;# 
   428     0813                     	;# 
   429     0814                     	;# 
   430     081A                     	;# 
   431     081B                     	;# 
   432     081C                     	;# 
   433     081D                     	;# 
   434     081E                     	;# 
   435     081F                     	;# 
   436     088C                     	;# 
   437     088D                     	;# 
   438     088E                     	;# 
   439     088F                     	;# 
   440     0890                     	;# 
   441     0891                     	;# 
   442     0892                     	;# 
   443     0893                     	;# 
   444     0895                     	;# 
   445     0896                     	;# 
   446     0897                     	;# 
   447     0898                     	;# 
   448     0899                     	;# 
   449     089A                     	;# 
   450     089B                     	;# 
   451     090C                     	;# 
   452     090E                     	;# 
   453     090F                     	;# 
   454     091F                     	;# 
   455     091F                     	;# 
   456     098F                     	;# 
   457     098F                     	;# 
   458     0990                     	;# 
   459     0991                     	;# 
   460     0992                     	;# 
   461     0993                     	;# 
   462     0994                     	;# 
   463     0995                     	;# 
   464     0996                     	;# 
   465     0997                     	;# 
   466     0E0F                     	;# 
   467     0E10                     	;# 
   468     0E11                     	;# 
   469     0E12                     	;# 
   470     0E13                     	;# 
   471     0E14                     	;# 
   472     0E15                     	;# 
   473     0E16                     	;# 
   474     0E17                     	;# 
   475     0E18                     	;# 
   476     0E19                     	;# 
   477     0E1A                     	;# 
   478     0E1B                     	;# 
   479     0E1C                     	;# 
   480     0E1D                     	;# 
   481     0E1E                     	;# 
   482     0E1F                     	;# 
   483     0E20                     	;# 
   484     0E21                     	;# 
   485     0E22                     	;# 
   486     0E23                     	;# 
   487     0E24                     	;# 
   488     0E25                     	;# 
   489     0E26                     	;# 
   490     0E27                     	;# 
   491     0E28                     	;# 
   492     0E29                     	;# 
   493     0E2A                     	;# 
   494     0E2B                     	;# 
   495     0E2C                     	;# 
   496     0E2D                     	;# 
   497     0E2E                     	;# 
   498     0E2F                     	;# 
   499     0E30                     	;# 
   500     0E31                     	;# 
   501     0E32                     	;# 
   502     0E33                     	;# 
   503     0E34                     	;# 
   504     0E35                     	;# 
   505     0E36                     	;# 
   506     0E37                     	;# 
   507     0E8F                     	;# 
   508     0E90                     	;# 
   509     0E91                     	;# 
   510     0E92                     	;# 
   511     0E93                     	;# 
   512     0E94                     	;# 
   513     0E95                     	;# 
   514     0E96                     	;# 
   515     0E97                     	;# 
   516     0E9C                     	;# 
   517     0E9D                     	;# 
   518     0E9E                     	;# 
   519     0EA1                     	;# 
   520     0EA2                     	;# 
   521     0EA3                     	;# 
   522     0EA4                     	;# 
   523     0EA5                     	;# 
   524     0EA9                     	;# 
   525     0EAA                     	;# 
   526     0EAB                     	;# 
   527     0EAC                     	;# 
   528     0EB1                     	;# 
   529     0EB2                     	;# 
   530     0EB3                     	;# 
   531     0EB8                     	;# 
   532     0EB9                     	;# 
   533     0EBA                     	;# 
   534     0EBB                     	;# 
   535     0EBC                     	;# 
   536     0EBD                     	;# 
   537     0EBE                     	;# 
   538     0EC3                     	;# 
   539     0EC5                     	;# 
   540     0EC6                     	;# 
   541     0EC7                     	;# 
   542     0EC8                     	;# 
   543     0EC9                     	;# 
   544     0ECA                     	;# 
   545     0ECB                     	;# 
   546     0ECC                     	;# 
   547     0F10                     	;# 
   548     0F11                     	;# 
   549     0F12                     	;# 
   550     0F13                     	;# 
   551     0F14                     	;# 
   552     0F15                     	;# 
   553     0F16                     	;# 
   554     0F17                     	;# 
   555     0F18                     	;# 
   556     0F19                     	;# 
   557     0F1A                     	;# 
   558     0F1B                     	;# 
   559     0F1C                     	;# 
   560     0F1D                     	;# 
   561     0F1E                     	;# 
   562     0F1F                     	;# 
   563     0F20                     	;# 
   564     0F21                     	;# 
   565     0F22                     	;# 
   566     0F23                     	;# 
   567     0F24                     	;# 
   568     0F25                     	;# 
   569     0F26                     	;# 
   570     0F27                     	;# 
   571     0F28                     	;# 
   572     0F29                     	;# 
   573     0F2A                     	;# 
   574     0F2B                     	;# 
   575     0F2C                     	;# 
   576     0F2D                     	;# 
   577     0F2E                     	;# 
   578     0F2F                     	;# 
   579     0F30                     	;# 
   580     0F31                     	;# 
   581     0F32                     	;# 
   582     0F38                     	;# 
   583     0F39                     	;# 
   584     0F3A                     	;# 
   585     0F3B                     	;# 
   586     0F3C                     	;# 
   587     0F3D                     	;# 
   588     0F3E                     	;# 
   589     0F3F                     	;# 
   590     0F40                     	;# 
   591     0F41                     	;# 
   592     0F43                     	;# 
   593     0F44                     	;# 
   594     0F45                     	;# 
   595     0F46                     	;# 
   596     0F47                     	;# 
   597     0F48                     	;# 
   598     0F49                     	;# 
   599     0F4A                     	;# 
   600     0F4B                     	;# 
   601     0F4C                     	;# 
   602     0F4E                     	;# 
   603     0F4F                     	;# 
   604     0F50                     	;# 
   605     0F51                     	;# 
   606     0F52                     	;# 
   607     0F53                     	;# 
   608     0F54                     	;# 
   609     0F55                     	;# 
   610     0F56                     	;# 
   611     0F57                     	;# 
   612     0F59                     	;# 
   613     0F5A                     	;# 
   614     0F5B                     	;# 
   615     0F5C                     	;# 
   616     0F5D                     	;# 
   617     0F61                     	;# 
   618     0F62                     	;# 
   619     0F64                     	;# 
   620     0F65                     	;# 
   621     0F66                     	;# 
   622     0F67                     	;# 
   623     0F68                     	;# 
   624     0F69                     	;# 
   625     0F6A                     	;# 
   626     0F6B                     	;# 
   627     0F6C                     	;# 
   628     0F6D                     	;# 
   629     0FE4                     	;# 
   630     0FE5                     	;# 
   631     0FE6                     	;# 
   632     0FE7                     	;# 
   633     0FE8                     	;# 
   634     0FE9                     	;# 
   635     0FEA                     	;# 
   636     0FEB                     	;# 
   637     0FED                     	;# 
   638     0FEE                     	;# 
   639     0FEF                     	;# 
   640     0000                     	;# 
   641     0001                     	;# 
   642     0002                     	;# 
   643     0003                     	;# 
   644     0004                     	;# 
   645     0005                     	;# 
   646     0006                     	;# 
   647     0007                     	;# 
   648     0008                     	;# 
   649     0009                     	;# 
   650     000A                     	;# 
   651     000B                     	;# 
   652     000C                     	;# 
   653     000D                     	;# 
   654     000E                     	;# 
   655     000F                     	;# 
   656     0010                     	;# 
   657     0011                     	;# 
   658     0012                     	;# 
   659     0013                     	;# 
   660     0014                     	;# 
   661     0015                     	;# 
   662     0016                     	;# 
   663     0017                     	;# 
   664     0018                     	;# 
   665     0019                     	;# 
   666     001A                     	;# 
   667     001C                     	;# 
   668     001C                     	;# 
   669     001D                     	;# 
   670     001D                     	;# 
   671     001E                     	;# 
   672     001F                     	;# 
   673     008C                     	;# 
   674     008C                     	;# 
   675     008D                     	;# 
   676     008E                     	;# 
   677     008E                     	;# 
   678     008F                     	;# 
   679     0090                     	;# 
   680     0090                     	;# 
   681     0091                     	;# 
   682     0093                     	;# 
   683     0094                     	;# 
   684     0095                     	;# 
   685     0096                     	;# 
   686     0097                     	;# 
   687     0098                     	;# 
   688     0099                     	;# 
   689     009A                     	;# 
   690     009B                     	;# 
   691     009C                     	;# 
   692     009D                     	;# 
   693     009E                     	;# 
   694     010C                     	;# 
   695     010D                     	;# 
   696     010E                     	;# 
   697     010E                     	;# 
   698     010F                     	;# 
   699     0110                     	;# 
   700     0110                     	;# 
   701     0111                     	;# 
   702     0112                     	;# 
   703     0112                     	;# 
   704     0113                     	;# 
   705     0114                     	;# 
   706     0114                     	;# 
   707     0115                     	;# 
   708     0116                     	;# 
   709     0116                     	;# 
   710     0117                     	;# 
   711     0119                     	;# 
   712     0119                     	;# 
   713     0119                     	;# 
   714     011A                     	;# 
   715     011A                     	;# 
   716     011A                     	;# 
   717     011B                     	;# 
   718     011B                     	;# 
   719     011B                     	;# 
   720     011B                     	;# 
   721     011B                     	;# 
   722     011C                     	;# 
   723     011C                     	;# 
   724     011C                     	;# 
   725     011D                     	;# 
   726     011D                     	;# 
   727     011D                     	;# 
   728     011E                     	;# 
   729     011E                     	;# 
   730     011E                     	;# 
   731     011F                     	;# 
   732     011F                     	;# 
   733     011F                     	;# 
   734     011F                     	;# 
   735     011F                     	;# 
   736     018C                     	;# 
   737     018D                     	;# 
   738     018E                     	;# 
   739     018F                     	;# 
   740     0190                     	;# 
   741     0191                     	;# 
   742     0192                     	;# 
   743     0196                     	;# 
   744     0197                     	;# 
   745     0198                     	;# 
   746     0199                     	;# 
   747     019A                     	;# 
   748     019B                     	;# 
   749     019C                     	;# 
   750     020C                     	;# 
   751     020C                     	;# 
   752     020D                     	;# 
   753     020E                     	;# 
   754     020F                     	;# 
   755     020F                     	;# 
   756     0210                     	;# 
   757     0210                     	;# 
   758     0211                     	;# 
   759     0211                     	;# 
   760     0212                     	;# 
   761     0212                     	;# 
   762     0213                     	;# 
   763     0214                     	;# 
   764     0215                     	;# 
   765     0215                     	;# 
   766     0216                     	;# 
   767     0216                     	;# 
   768     0217                     	;# 
   769     0217                     	;# 
   770     0218                     	;# 
   771     0218                     	;# 
   772     0219                     	;# 
   773     021A                     	;# 
   774     021B                     	;# 
   775     021B                     	;# 
   776     021C                     	;# 
   777     021C                     	;# 
   778     021D                     	;# 
   779     021D                     	;# 
   780     021E                     	;# 
   781     021F                     	;# 
   782     028C                     	;# 
   783     028C                     	;# 
   784     028D                     	;# 
   785     028D                     	;# 
   786     028E                     	;# 
   787     028F                     	;# 
   788     0290                     	;# 
   789     0290                     	;# 
   790     0291                     	;# 
   791     0292                     	;# 
   792     0292                     	;# 
   793     0293                     	;# 
   794     0293                     	;# 
   795     0294                     	;# 
   796     0295                     	;# 
   797     0296                     	;# 
   798     0296                     	;# 
   799     0297                     	;# 
   800     0298                     	;# 
   801     0298                     	;# 
   802     0299                     	;# 
   803     0299                     	;# 
   804     029A                     	;# 
   805     029B                     	;# 
   806     029C                     	;# 
   807     029C                     	;# 
   808     029D                     	;# 
   809     030C                     	;# 
   810     030C                     	;# 
   811     030D                     	;# 
   812     030E                     	;# 
   813     030F                     	;# 
   814     0310                     	;# 
   815     0310                     	;# 
   816     0311                     	;# 
   817     0312                     	;# 
   818     0313                     	;# 
   819     0314                     	;# 
   820     0314                     	;# 
   821     0315                     	;# 
   822     0316                     	;# 
   823     0317                     	;# 
   824     0318                     	;# 
   825     0318                     	;# 
   826     0319                     	;# 
   827     031A                     	;# 
   828     031B                     	;# 
   829     031C                     	;# 
   830     031C                     	;# 
   831     031D                     	;# 
   832     031E                     	;# 
   833     031F                     	;# 
   834     038C                     	;# 
   835     038C                     	;# 
   836     038D                     	;# 
   837     038E                     	;# 
   838     0390                     	;# 
   839     0390                     	;# 
   840     0391                     	;# 
   841     0392                     	;# 
   842     040C                     	;# 
   843     040D                     	;# 
   844     040E                     	;# 
   845     040F                     	;# 
   846     0410                     	;# 
   847     0411                     	;# 
   848     0416                     	;# 
   849     0416                     	;# 
   850     0417                     	;# 
   851     0418                     	;# 
   852     0418                     	;# 
   853     0419                     	;# 
   854     041A                     	;# 
   855     041A                     	;# 
   856     041B                     	;# 
   857     041C                     	;# 
   858     041C                     	;# 
   859     041D                     	;# 
   860     041E                     	;# 
   861     041F                     	;# 
   862     048C                     	;# 
   863     048C                     	;# 
   864     048D                     	;# 
   865     048E                     	;# 
   866     048F                     	;# 
   867     048F                     	;# 
   868     0490                     	;# 
   869     0491                     	;# 
   870     0492                     	;# 
   871     0492                     	;# 
   872     0493                     	;# 
   873     0494                     	;# 
   874     0495                     	;# 
   875     0495                     	;# 
   876     0496                     	;# 
   877     0497                     	;# 
   878     0498                     	;# 
   879     0499                     	;# 
   880     049A                     	;# 
   881     049B                     	;# 
   882     049C                     	;# 
   883     049D                     	;# 
   884     050C                     	;# 
   885     050C                     	;# 
   886     050D                     	;# 
   887     050E                     	;# 
   888     050F                     	;# 
   889     050F                     	;# 
   890     0510                     	;# 
   891     0511                     	;# 
   892     0512                     	;# 
   893     0512                     	;# 
   894     0513                     	;# 
   895     0514                     	;# 
   896     0515                     	;# 
   897     0515                     	;# 
   898     0516                     	;# 
   899     0517                     	;# 
   900     0518                     	;# 
   901     0519                     	;# 
   902     051A                     	;# 
   903     051B                     	;# 
   904     051C                     	;# 
   905     051D                     	;# 
   906     058C                     	;# 
   907     058C                     	;# 
   908     058D                     	;# 
   909     058E                     	;# 
   910     058F                     	;# 
   911     058F                     	;# 
   912     0590                     	;# 
   913     0591                     	;# 
   914     0592                     	;# 
   915     0593                     	;# 
   916     060C                     	;# 
   917     060D                     	;# 
   918     060E                     	;# 
   919     060F                     	;# 
   920     0610                     	;# 
   921     0611                     	;# 
   922     0612                     	;# 
   923     0613                     	;# 
   924     0614                     	;# 
   925     0616                     	;# 
   926     0617                     	;# 
   927     0618                     	;# 
   928     0619                     	;# 
   929     061A                     	;# 
   930     061B                     	;# 
   931     061C                     	;# 
   932     061D                     	;# 
   933     061E                     	;# 
   934     068C                     	;# 
   935     068D                     	;# 
   936     068E                     	;# 
   937     068F                     	;# 
   938     0690                     	;# 
   939     0691                     	;# 
   940     0692                     	;# 
   941     0693                     	;# 
   942     0694                     	;# 
   943     070C                     	;# 
   944     070D                     	;# 
   945     070E                     	;# 
   946     070F                     	;# 
   947     0710                     	;# 
   948     0711                     	;# 
   949     0712                     	;# 
   950     0713                     	;# 
   951     0714                     	;# 
   952     0716                     	;# 
   953     0717                     	;# 
   954     0718                     	;# 
   955     0719                     	;# 
   956     071A                     	;# 
   957     071B                     	;# 
   958     071C                     	;# 
   959     071D                     	;# 
   960     071E                     	;# 
   961     0796                     	;# 
   962     0797                     	;# 
   963     0798                     	;# 
   964     0799                     	;# 
   965     079A                     	;# 
   966     079B                     	;# 
   967     080C                     	;# 
   968     080D                     	;# 
   969     080E                     	;# 
   970     080F                     	;# 
   971     0810                     	;# 
   972     0811                     	;# 
   973     0812                     	;# 
   974     0813                     	;# 
   975     0814                     	;# 
   976     081A                     	;# 
   977     081B                     	;# 
   978     081C                     	;# 
   979     081D                     	;# 
   980     081E                     	;# 
   981     081F                     	;# 
   982     088C                     	;# 
   983     088D                     	;# 
   984     088E                     	;# 
   985     088F                     	;# 
   986     0890                     	;# 
   987     0891                     	;# 
   988     0892                     	;# 
   989     0893                     	;# 
   990     0895                     	;# 
   991     0896                     	;# 
   992     0897                     	;# 
   993     0898                     	;# 
   994     0899                     	;# 
   995     089A                     	;# 
   996     089B                     	;# 
   997     090C                     	;# 
   998     090E                     	;# 
   999     090F                     	;# 
  1000     091F                     	;# 
  1001     091F                     	;# 
  1002     098F                     	;# 
  1003     098F                     	;# 
  1004     0990                     	;# 
  1005     0991                     	;# 
  1006     0992                     	;# 
  1007     0993                     	;# 
  1008     0994                     	;# 
  1009     0995                     	;# 
  1010     0996                     	;# 
  1011     0997                     	;# 
  1012     0E0F                     	;# 
  1013     0E10                     	;# 
  1014     0E11                     	;# 
  1015     0E12                     	;# 
  1016     0E13                     	;# 
  1017     0E14                     	;# 
  1018     0E15                     	;# 
  1019     0E16                     	;# 
  1020     0E17                     	;# 
  1021     0E18                     	;# 
  1022     0E19                     	;# 
  1023     0E1A                     	;# 
  1024     0E1B                     	;# 
  1025     0E1C                     	;# 
  1026     0E1D                     	;# 
  1027     0E1E                     	;# 
  1028     0E1F                     	;# 
  1029     0E20                     	;# 
  1030     0E21                     	;# 
  1031     0E22                     	;# 
  1032     0E23                     	;# 
  1033     0E24                     	;# 
  1034     0E25                     	;# 
  1035     0E26                     	;# 
  1036     0E27                     	;# 
  1037     0E28                     	;# 
  1038     0E29                     	;# 
  1039     0E2A                     	;# 
  1040     0E2B                     	;# 
  1041     0E2C                     	;# 
  1042     0E2D                     	;# 
  1043     0E2E                     	;# 
  1044     0E2F                     	;# 
  1045     0E30                     	;# 
  1046     0E31                     	;# 
  1047     0E32                     	;# 
  1048     0E33                     	;# 
  1049     0E34                     	;# 
  1050     0E35                     	;# 
  1051     0E36                     	;# 
  1052     0E37                     	;# 
  1053     0E8F                     	;# 
  1054     0E90                     	;# 
  1055     0E91                     	;# 
  1056     0E92                     	;# 
  1057     0E93                     	;# 
  1058     0E94                     	;# 
  1059     0E95                     	;# 
  1060     0E96                     	;# 
  1061     0E97                     	;# 
  1062     0E9C                     	;# 
  1063     0E9D                     	;# 
  1064     0E9E                     	;# 
  1065     0EA1                     	;# 
  1066     0EA2                     	;# 
  1067     0EA3                     	;# 
  1068     0EA4                     	;# 
  1069     0EA5                     	;# 
  1070     0EA9                     	;# 
  1071     0EAA                     	;# 
  1072     0EAB                     	;# 
  1073     0EAC                     	;# 
  1074     0EB1                     	;# 
  1075     0EB2                     	;# 
  1076     0EB3                     	;# 
  1077     0EB8                     	;# 
  1078     0EB9                     	;# 
  1079     0EBA                     	;# 
  1080     0EBB                     	;# 
  1081     0EBC                     	;# 
  1082     0EBD                     	;# 
  1083     0EBE                     	;# 
  1084     0EC3                     	;# 
  1085     0EC5                     	;# 
  1086     0EC6                     	;# 
  1087     0EC7                     	;# 
  1088     0EC8                     	;# 
  1089     0EC9                     	;# 
  1090     0ECA                     	;# 
  1091     0ECB                     	;# 
  1092     0ECC                     	;# 
  1093     0F10                     	;# 
  1094     0F11                     	;# 
  1095     0F12                     	;# 
  1096     0F13                     	;# 
  1097     0F14                     	;# 
  1098     0F15                     	;# 
  1099     0F16                     	;# 
  1100     0F17                     	;# 
  1101     0F18                     	;# 
  1102     0F19                     	;# 
  1103     0F1A                     	;# 
  1104     0F1B                     	;# 
  1105     0F1C                     	;# 
  1106     0F1D                     	;# 
  1107     0F1E                     	;# 
  1108     0F1F                     	;# 
  1109     0F20                     	;# 
  1110     0F21                     	;# 
  1111     0F22                     	;# 
  1112     0F23                     	;# 
  1113     0F24                     	;# 
  1114     0F25                     	;# 
  1115     0F26                     	;# 
  1116     0F27                     	;# 
  1117     0F28                     	;# 
  1118     0F29                     	;# 
  1119     0F2A                     	;# 
  1120     0F2B                     	;# 
  1121     0F2C                     	;# 
  1122     0F2D                     	;# 
  1123     0F2E                     	;# 
  1124     0F2F                     	;# 
  1125     0F30                     	;# 
  1126     0F31                     	;# 
  1127     0F32                     	;# 
  1128     0F38                     	;# 
  1129     0F39                     	;# 
  1130     0F3A                     	;# 
  1131     0F3B                     	;# 
  1132     0F3C                     	;# 
  1133     0F3D                     	;# 
  1134     0F3E                     	;# 
  1135     0F3F                     	;# 
  1136     0F40                     	;# 
  1137     0F41                     	;# 
  1138     0F43                     	;# 
  1139     0F44                     	;# 
  1140     0F45                     	;# 
  1141     0F46                     	;# 
  1142     0F47                     	;# 
  1143     0F48                     	;# 
  1144     0F49                     	;# 
  1145     0F4A                     	;# 
  1146     0F4B                     	;# 
  1147     0F4C                     	;# 
  1148     0F4E                     	;# 
  1149     0F4F                     	;# 
  1150     0F50                     	;# 
  1151     0F51                     	;# 
  1152     0F52                     	;# 
  1153     0F53                     	;# 
  1154     0F54                     	;# 
  1155     0F55                     	;# 
  1156     0F56                     	;# 
  1157     0F57                     	;# 
  1158     0F59                     	;# 
  1159     0F5A                     	;# 
  1160     0F5B                     	;# 
  1161     0F5C                     	;# 
  1162     0F5D                     	;# 
  1163     0F61                     	;# 
  1164     0F62                     	;# 
  1165     0F64                     	;# 
  1166     0F65                     	;# 
  1167     0F66                     	;# 
  1168     0F67                     	;# 
  1169     0F68                     	;# 
  1170     0F69                     	;# 
  1171     0F6A                     	;# 
  1172     0F6B                     	;# 
  1173     0F6C                     	;# 
  1174     0F6D                     	;# 
  1175     0FE4                     	;# 
  1176     0FE5                     	;# 
  1177     0FE6                     	;# 
  1178     0FE7                     	;# 
  1179     0FE8                     	;# 
  1180     0FE9                     	;# 
  1181     0FEA                     	;# 
  1182     0FEB                     	;# 
  1183     0FED                     	;# 
  1184     0FEE                     	;# 
  1185     0FEF                     	;# 
  1186     0000                     	;# 
  1187     0001                     	;# 
  1188     0002                     	;# 
  1189     0003                     	;# 
  1190     0004                     	;# 
  1191     0005                     	;# 
  1192     0006                     	;# 
  1193     0007                     	;# 
  1194     0008                     	;# 
  1195     0009                     	;# 
  1196     000A                     	;# 
  1197     000B                     	;# 
  1198     000C                     	;# 
  1199     000D                     	;# 
  1200     000E                     	;# 
  1201     000F                     	;# 
  1202     0010                     	;# 
  1203     0011                     	;# 
  1204     0012                     	;# 
  1205     0013                     	;# 
  1206     0014                     	;# 
  1207     0015                     	;# 
  1208     0016                     	;# 
  1209     0017                     	;# 
  1210     0018                     	;# 
  1211     0019                     	;# 
  1212     001A                     	;# 
  1213     001C                     	;# 
  1214     001C                     	;# 
  1215     001D                     	;# 
  1216     001D                     	;# 
  1217     001E                     	;# 
  1218     001F                     	;# 
  1219     008C                     	;# 
  1220     008C                     	;# 
  1221     008D                     	;# 
  1222     008E                     	;# 
  1223     008E                     	;# 
  1224     008F                     	;# 
  1225     0090                     	;# 
  1226     0090                     	;# 
  1227     0091                     	;# 
  1228     0093                     	;# 
  1229     0094                     	;# 
  1230     0095                     	;# 
  1231     0096                     	;# 
  1232     0097                     	;# 
  1233     0098                     	;# 
  1234     0099                     	;# 
  1235     009A                     	;# 
  1236     009B                     	;# 
  1237     009C                     	;# 
  1238     009D                     	;# 
  1239     009E                     	;# 
  1240     010C                     	;# 
  1241     010D                     	;# 
  1242     010E                     	;# 
  1243     010E                     	;# 
  1244     010F                     	;# 
  1245     0110                     	;# 
  1246     0110                     	;# 
  1247     0111                     	;# 
  1248     0112                     	;# 
  1249     0112                     	;# 
  1250     0113                     	;# 
  1251     0114                     	;# 
  1252     0114                     	;# 
  1253     0115                     	;# 
  1254     0116                     	;# 
  1255     0116                     	;# 
  1256     0117                     	;# 
  1257     0119                     	;# 
  1258     0119                     	;# 
  1259     0119                     	;# 
  1260     011A                     	;# 
  1261     011A                     	;# 
  1262     011A                     	;# 
  1263     011B                     	;# 
  1264     011B                     	;# 
  1265     011B                     	;# 
  1266     011B                     	;# 
  1267     011B                     	;# 
  1268     011C                     	;# 
  1269     011C                     	;# 
  1270     011C                     	;# 
  1271     011D                     	;# 
  1272     011D                     	;# 
  1273     011D                     	;# 
  1274     011E                     	;# 
  1275     011E                     	;# 
  1276     011E                     	;# 
  1277     011F                     	;# 
  1278     011F                     	;# 
  1279     011F                     	;# 
  1280     011F                     	;# 
  1281     011F                     	;# 
  1282     018C                     	;# 
  1283     018D                     	;# 
  1284     018E                     	;# 
  1285     018F                     	;# 
  1286     0190                     	;# 
  1287     0191                     	;# 
  1288     0192                     	;# 
  1289     0196                     	;# 
  1290     0197                     	;# 
  1291     0198                     	;# 
  1292     0199                     	;# 
  1293     019A                     	;# 
  1294     019B                     	;# 
  1295     019C                     	;# 
  1296     020C                     	;# 
  1297     020C                     	;# 
  1298     020D                     	;# 
  1299     020E                     	;# 
  1300     020F                     	;# 
  1301     020F                     	;# 
  1302     0210                     	;# 
  1303     0210                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0214                     	;# 
  1310     0215                     	;# 
  1311     0215                     	;# 
  1312     0216                     	;# 
  1313     0216                     	;# 
  1314     0217                     	;# 
  1315     0217                     	;# 
  1316     0218                     	;# 
  1317     0218                     	;# 
  1318     0219                     	;# 
  1319     021A                     	;# 
  1320     021B                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021C                     	;# 
  1324     021D                     	;# 
  1325     021D                     	;# 
  1326     021E                     	;# 
  1327     021F                     	;# 
  1328     028C                     	;# 
  1329     028C                     	;# 
  1330     028D                     	;# 
  1331     028D                     	;# 
  1332     028E                     	;# 
  1333     028F                     	;# 
  1334     0290                     	;# 
  1335     0290                     	;# 
  1336     0291                     	;# 
  1337     0292                     	;# 
  1338     0292                     	;# 
  1339     0293                     	;# 
  1340     0293                     	;# 
  1341     0294                     	;# 
  1342     0295                     	;# 
  1343     0296                     	;# 
  1344     0296                     	;# 
  1345     0297                     	;# 
  1346     0298                     	;# 
  1347     0298                     	;# 
  1348     0299                     	;# 
  1349     0299                     	;# 
  1350     029A                     	;# 
  1351     029B                     	;# 
  1352     029C                     	;# 
  1353     029C                     	;# 
  1354     029D                     	;# 
  1355     030C                     	;# 
  1356     030C                     	;# 
  1357     030D                     	;# 
  1358     030E                     	;# 
  1359     030F                     	;# 
  1360     0310                     	;# 
  1361     0310                     	;# 
  1362     0311                     	;# 
  1363     0312                     	;# 
  1364     0313                     	;# 
  1365     0314                     	;# 
  1366     0314                     	;# 
  1367     0315                     	;# 
  1368     0316                     	;# 
  1369     0317                     	;# 
  1370     0318                     	;# 
  1371     0318                     	;# 
  1372     0319                     	;# 
  1373     031A                     	;# 
  1374     031B                     	;# 
  1375     031C                     	;# 
  1376     031C                     	;# 
  1377     031D                     	;# 
  1378     031E                     	;# 
  1379     031F                     	;# 
  1380     038C                     	;# 
  1381     038C                     	;# 
  1382     038D                     	;# 
  1383     038E                     	;# 
  1384     0390                     	;# 
  1385     0390                     	;# 
  1386     0391                     	;# 
  1387     0392                     	;# 
  1388     040C                     	;# 
  1389     040D                     	;# 
  1390     040E                     	;# 
  1391     040F                     	;# 
  1392     0410                     	;# 
  1393     0411                     	;# 
  1394     0416                     	;# 
  1395     0416                     	;# 
  1396     0417                     	;# 
  1397     0418                     	;# 
  1398     0418                     	;# 
  1399     0419                     	;# 
  1400     041A                     	;# 
  1401     041A                     	;# 
  1402     041B                     	;# 
  1403     041C                     	;# 
  1404     041C                     	;# 
  1405     041D                     	;# 
  1406     041E                     	;# 
  1407     041F                     	;# 
  1408     048C                     	;# 
  1409     048C                     	;# 
  1410     048D                     	;# 
  1411     048E                     	;# 
  1412     048F                     	;# 
  1413     048F                     	;# 
  1414     0490                     	;# 
  1415     0491                     	;# 
  1416     0492                     	;# 
  1417     0492                     	;# 
  1418     0493                     	;# 
  1419     0494                     	;# 
  1420     0495                     	;# 
  1421     0495                     	;# 
  1422     0496                     	;# 
  1423     0497                     	;# 
  1424     0498                     	;# 
  1425     0499                     	;# 
  1426     049A                     	;# 
  1427     049B                     	;# 
  1428     049C                     	;# 
  1429     049D                     	;# 
  1430     050C                     	;# 
  1431     050C                     	;# 
  1432     050D                     	;# 
  1433     050E                     	;# 
  1434     050F                     	;# 
  1435     050F                     	;# 
  1436     0510                     	;# 
  1437     0511                     	;# 
  1438     0512                     	;# 
  1439     0512                     	;# 
  1440     0513                     	;# 
  1441     0514                     	;# 
  1442     0515                     	;# 
  1443     0515                     	;# 
  1444     0516                     	;# 
  1445     0517                     	;# 
  1446     0518                     	;# 
  1447     0519                     	;# 
  1448     051A                     	;# 
  1449     051B                     	;# 
  1450     051C                     	;# 
  1451     051D                     	;# 
  1452     058C                     	;# 
  1453     058C                     	;# 
  1454     058D                     	;# 
  1455     058E                     	;# 
  1456     058F                     	;# 
  1457     058F                     	;# 
  1458     0590                     	;# 
  1459     0591                     	;# 
  1460     0592                     	;# 
  1461     0593                     	;# 
  1462     060C                     	;# 
  1463     060D                     	;# 
  1464     060E                     	;# 
  1465     060F                     	;# 
  1466     0610                     	;# 
  1467     0611                     	;# 
  1468     0612                     	;# 
  1469     0613                     	;# 
  1470     0614                     	;# 
  1471     0616                     	;# 
  1472     0617                     	;# 
  1473     0618                     	;# 
  1474     0619                     	;# 
  1475     061A                     	;# 
  1476     061B                     	;# 
  1477     061C                     	;# 
  1478     061D                     	;# 
  1479     061E                     	;# 
  1480     068C                     	;# 
  1481     068D                     	;# 
  1482     068E                     	;# 
  1483     068F                     	;# 
  1484     0690                     	;# 
  1485     0691                     	;# 
  1486     0692                     	;# 
  1487     0693                     	;# 
  1488     0694                     	;# 
  1489     070C                     	;# 
  1490     070D                     	;# 
  1491     070E                     	;# 
  1492     070F                     	;# 
  1493     0710                     	;# 
  1494     0711                     	;# 
  1495     0712                     	;# 
  1496     0713                     	;# 
  1497     0714                     	;# 
  1498     0716                     	;# 
  1499     0717                     	;# 
  1500     0718                     	;# 
  1501     0719                     	;# 
  1502     071A                     	;# 
  1503     071B                     	;# 
  1504     071C                     	;# 
  1505     071D                     	;# 
  1506     071E                     	;# 
  1507     0796                     	;# 
  1508     0797                     	;# 
  1509     0798                     	;# 
  1510     0799                     	;# 
  1511     079A                     	;# 
  1512     079B                     	;# 
  1513     080C                     	;# 
  1514     080D                     	;# 
  1515     080E                     	;# 
  1516     080F                     	;# 
  1517     0810                     	;# 
  1518     0811                     	;# 
  1519     0812                     	;# 
  1520     0813                     	;# 
  1521     0814                     	;# 
  1522     081A                     	;# 
  1523     081B                     	;# 
  1524     081C                     	;# 
  1525     081D                     	;# 
  1526     081E                     	;# 
  1527     081F                     	;# 
  1528     088C                     	;# 
  1529     088D                     	;# 
  1530     088E                     	;# 
  1531     088F                     	;# 
  1532     0890                     	;# 
  1533     0891                     	;# 
  1534     0892                     	;# 
  1535     0893                     	;# 
  1536     0895                     	;# 
  1537     0896                     	;# 
  1538     0897                     	;# 
  1539     0898                     	;# 
  1540     0899                     	;# 
  1541     089A                     	;# 
  1542     089B                     	;# 
  1543     090C                     	;# 
  1544     090E                     	;# 
  1545     090F                     	;# 
  1546     091F                     	;# 
  1547     091F                     	;# 
  1548     098F                     	;# 
  1549     098F                     	;# 
  1550     0990                     	;# 
  1551     0991                     	;# 
  1552     0992                     	;# 
  1553     0993                     	;# 
  1554     0994                     	;# 
  1555     0995                     	;# 
  1556     0996                     	;# 
  1557     0997                     	;# 
  1558     0E0F                     	;# 
  1559     0E10                     	;# 
  1560     0E11                     	;# 
  1561     0E12                     	;# 
  1562     0E13                     	;# 
  1563     0E14                     	;# 
  1564     0E15                     	;# 
  1565     0E16                     	;# 
  1566     0E17                     	;# 
  1567     0E18                     	;# 
  1568     0E19                     	;# 
  1569     0E1A                     	;# 
  1570     0E1B                     	;# 
  1571     0E1C                     	;# 
  1572     0E1D                     	;# 
  1573     0E1E                     	;# 
  1574     0E1F                     	;# 
  1575     0E20                     	;# 
  1576     0E21                     	;# 
  1577     0E22                     	;# 
  1578     0E23                     	;# 
  1579     0E24                     	;# 
  1580     0E25                     	;# 
  1581     0E26                     	;# 
  1582     0E27                     	;# 
  1583     0E28                     	;# 
  1584     0E29                     	;# 
  1585     0E2A                     	;# 
  1586     0E2B                     	;# 
  1587     0E2C                     	;# 
  1588     0E2D                     	;# 
  1589     0E2E                     	;# 
  1590     0E2F                     	;# 
  1591     0E30                     	;# 
  1592     0E31                     	;# 
  1593     0E32                     	;# 
  1594     0E33                     	;# 
  1595     0E34                     	;# 
  1596     0E35                     	;# 
  1597     0E36                     	;# 
  1598     0E37                     	;# 
  1599     0E8F                     	;# 
  1600     0E90                     	;# 
  1601     0E91                     	;# 
  1602     0E92                     	;# 
  1603     0E93                     	;# 
  1604     0E94                     	;# 
  1605     0E95                     	;# 
  1606     0E96                     	;# 
  1607     0E97                     	;# 
  1608     0E9C                     	;# 
  1609     0E9D                     	;# 
  1610     0E9E                     	;# 
  1611     0EA1                     	;# 
  1612     0EA2                     	;# 
  1613     0EA3                     	;# 
  1614     0EA4                     	;# 
  1615     0EA5                     	;# 
  1616     0EA9                     	;# 
  1617     0EAA                     	;# 
  1618     0EAB                     	;# 
  1619     0EAC                     	;# 
  1620     0EB1                     	;# 
  1621     0EB2                     	;# 
  1622     0EB3                     	;# 
  1623     0EB8                     	;# 
  1624     0EB9                     	;# 
  1625     0EBA                     	;# 
  1626     0EBB                     	;# 
  1627     0EBC                     	;# 
  1628     0EBD                     	;# 
  1629     0EBE                     	;# 
  1630     0EC3                     	;# 
  1631     0EC5                     	;# 
  1632     0EC6                     	;# 
  1633     0EC7                     	;# 
  1634     0EC8                     	;# 
  1635     0EC9                     	;# 
  1636     0ECA                     	;# 
  1637     0ECB                     	;# 
  1638     0ECC                     	;# 
  1639     0F10                     	;# 
  1640     0F11                     	;# 
  1641     0F12                     	;# 
  1642     0F13                     	;# 
  1643     0F14                     	;# 
  1644     0F15                     	;# 
  1645     0F16                     	;# 
  1646     0F17                     	;# 
  1647     0F18                     	;# 
  1648     0F19                     	;# 
  1649     0F1A                     	;# 
  1650     0F1B                     	;# 
  1651     0F1C                     	;# 
  1652     0F1D                     	;# 
  1653     0F1E                     	;# 
  1654     0F1F                     	;# 
  1655     0F20                     	;# 
  1656     0F21                     	;# 
  1657     0F22                     	;# 
  1658     0F23                     	;# 
  1659     0F24                     	;# 
  1660     0F25                     	;# 
  1661     0F26                     	;# 
  1662     0F27                     	;# 
  1663     0F28                     	;# 
  1664     0F29                     	;# 
  1665     0F2A                     	;# 
  1666     0F2B                     	;# 
  1667     0F2C                     	;# 
  1668     0F2D                     	;# 
  1669     0F2E                     	;# 
  1670     0F2F                     	;# 
  1671     0F30                     	;# 
  1672     0F31                     	;# 
  1673     0F32                     	;# 
  1674     0F38                     	;# 
  1675     0F39                     	;# 
  1676     0F3A                     	;# 
  1677     0F3B                     	;# 
  1678     0F3C                     	;# 
  1679     0F3D                     	;# 
  1680     0F3E                     	;# 
  1681     0F3F                     	;# 
  1682     0F40                     	;# 
  1683     0F41                     	;# 
  1684     0F43                     	;# 
  1685     0F44                     	;# 
  1686     0F45                     	;# 
  1687     0F46                     	;# 
  1688     0F47                     	;# 
  1689     0F48                     	;# 
  1690     0F49                     	;# 
  1691     0F4A                     	;# 
  1692     0F4B                     	;# 
  1693     0F4C                     	;# 
  1694     0F4E                     	;# 
  1695     0F4F                     	;# 
  1696     0F50                     	;# 
  1697     0F51                     	;# 
  1698     0F52                     	;# 
  1699     0F53                     	;# 
  1700     0F54                     	;# 
  1701     0F55                     	;# 
  1702     0F56                     	;# 
  1703     0F57                     	;# 
  1704     0F59                     	;# 
  1705     0F5A                     	;# 
  1706     0F5B                     	;# 
  1707     0F5C                     	;# 
  1708     0F5D                     	;# 
  1709     0F61                     	;# 
  1710     0F62                     	;# 
  1711     0F64                     	;# 
  1712     0F65                     	;# 
  1713     0F66                     	;# 
  1714     0F67                     	;# 
  1715     0F68                     	;# 
  1716     0F69                     	;# 
  1717     0F6A                     	;# 
  1718     0F6B                     	;# 
  1719     0F6C                     	;# 
  1720     0F6D                     	;# 
  1721     0FE4                     	;# 
  1722     0FE5                     	;# 
  1723     0FE6                     	;# 
  1724     0FE7                     	;# 
  1725     0FE8                     	;# 
  1726     0FE9                     	;# 
  1727     0FEA                     	;# 
  1728     0FEB                     	;# 
  1729     0FED                     	;# 
  1730     0FEE                     	;# 
  1731     0FEF                     	;# 
  1732     0000                     	;# 
  1733     0001                     	;# 
  1734     0002                     	;# 
  1735     0003                     	;# 
  1736     0004                     	;# 
  1737     0005                     	;# 
  1738     0006                     	;# 
  1739     0007                     	;# 
  1740     0008                     	;# 
  1741     0009                     	;# 
  1742     000A                     	;# 
  1743     000B                     	;# 
  1744     000C                     	;# 
  1745     000D                     	;# 
  1746     000E                     	;# 
  1747     000F                     	;# 
  1748     0010                     	;# 
  1749     0011                     	;# 
  1750     0012                     	;# 
  1751     0013                     	;# 
  1752     0014                     	;# 
  1753     0015                     	;# 
  1754     0016                     	;# 
  1755     0017                     	;# 
  1756     0018                     	;# 
  1757     0019                     	;# 
  1758     001A                     	;# 
  1759     001C                     	;# 
  1760     001C                     	;# 
  1761     001D                     	;# 
  1762     001D                     	;# 
  1763     001E                     	;# 
  1764     001F                     	;# 
  1765     008C                     	;# 
  1766     008C                     	;# 
  1767     008D                     	;# 
  1768     008E                     	;# 
  1769     008E                     	;# 
  1770     008F                     	;# 
  1771     0090                     	;# 
  1772     0090                     	;# 
  1773     0091                     	;# 
  1774     0093                     	;# 
  1775     0094                     	;# 
  1776     0095                     	;# 
  1777     0096                     	;# 
  1778     0097                     	;# 
  1779     0098                     	;# 
  1780     0099                     	;# 
  1781     009A                     	;# 
  1782     009B                     	;# 
  1783     009C                     	;# 
  1784     009D                     	;# 
  1785     009E                     	;# 
  1786     010C                     	;# 
  1787     010D                     	;# 
  1788     010E                     	;# 
  1789     010E                     	;# 
  1790     010F                     	;# 
  1791     0110                     	;# 
  1792     0110                     	;# 
  1793     0111                     	;# 
  1794     0112                     	;# 
  1795     0112                     	;# 
  1796     0113                     	;# 
  1797     0114                     	;# 
  1798     0114                     	;# 
  1799     0115                     	;# 
  1800     0116                     	;# 
  1801     0116                     	;# 
  1802     0117                     	;# 
  1803     0119                     	;# 
  1804     0119                     	;# 
  1805     0119                     	;# 
  1806     011A                     	;# 
  1807     011A                     	;# 
  1808     011A                     	;# 
  1809     011B                     	;# 
  1810     011B                     	;# 
  1811     011B                     	;# 
  1812     011B                     	;# 
  1813     011B                     	;# 
  1814     011C                     	;# 
  1815     011C                     	;# 
  1816     011C                     	;# 
  1817     011D                     	;# 
  1818     011D                     	;# 
  1819     011D                     	;# 
  1820     011E                     	;# 
  1821     011E                     	;# 
  1822     011E                     	;# 
  1823     011F                     	;# 
  1824     011F                     	;# 
  1825     011F                     	;# 
  1826     011F                     	;# 
  1827     011F                     	;# 
  1828     018C                     	;# 
  1829     018D                     	;# 
  1830     018E                     	;# 
  1831     018F                     	;# 
  1832     0190                     	;# 
  1833     0191                     	;# 
  1834     0192                     	;# 
  1835     0196                     	;# 
  1836     0197                     	;# 
  1837     0198                     	;# 
  1838     0199                     	;# 
  1839     019A                     	;# 
  1840     019B                     	;# 
  1841     019C                     	;# 
  1842     020C                     	;# 
  1843     020C                     	;# 
  1844     020D                     	;# 
  1845     020E                     	;# 
  1846     020F                     	;# 
  1847     020F                     	;# 
  1848     0210                     	;# 
  1849     0210                     	;# 
  1850     0211                     	;# 
  1851     0211                     	;# 
  1852     0212                     	;# 
  1853     0212                     	;# 
  1854     0213                     	;# 
  1855     0214                     	;# 
  1856     0215                     	;# 
  1857     0215                     	;# 
  1858     0216                     	;# 
  1859     0216                     	;# 
  1860     0217                     	;# 
  1861     0217                     	;# 
  1862     0218                     	;# 
  1863     0218                     	;# 
  1864     0219                     	;# 
  1865     021A                     	;# 
  1866     021B                     	;# 
  1867     021B                     	;# 
  1868     021C                     	;# 
  1869     021C                     	;# 
  1870     021D                     	;# 
  1871     021D                     	;# 
  1872     021E                     	;# 
  1873     021F                     	;# 
  1874     028C                     	;# 
  1875     028C                     	;# 
  1876     028D                     	;# 
  1877     028D                     	;# 
  1878     028E                     	;# 
  1879     028F                     	;# 
  1880     0290                     	;# 
  1881     0290                     	;# 
  1882     0291                     	;# 
  1883     0292                     	;# 
  1884     0292                     	;# 
  1885     0293                     	;# 
  1886     0293                     	;# 
  1887     0294                     	;# 
  1888     0295                     	;# 
  1889     0296                     	;# 
  1890     0296                     	;# 
  1891     0297                     	;# 
  1892     0298                     	;# 
  1893     0298                     	;# 
  1894     0299                     	;# 
  1895     0299                     	;# 
  1896     029A                     	;# 
  1897     029B                     	;# 
  1898     029C                     	;# 
  1899     029C                     	;# 
  1900     029D                     	;# 
  1901     030C                     	;# 
  1902     030C                     	;# 
  1903     030D                     	;# 
  1904     030E                     	;# 
  1905     030F                     	;# 
  1906     0310                     	;# 
  1907     0310                     	;# 
  1908     0311                     	;# 
  1909     0312                     	;# 
  1910     0313                     	;# 
  1911     0314                     	;# 
  1912     0314                     	;# 
  1913     0315                     	;# 
  1914     0316                     	;# 
  1915     0317                     	;# 
  1916     0318                     	;# 
  1917     0318                     	;# 
  1918     0319                     	;# 
  1919     031A                     	;# 
  1920     031B                     	;# 
  1921     031C                     	;# 
  1922     031C                     	;# 
  1923     031D                     	;# 
  1924     031E                     	;# 
  1925     031F                     	;# 
  1926     038C                     	;# 
  1927     038C                     	;# 
  1928     038D                     	;# 
  1929     038E                     	;# 
  1930     0390                     	;# 
  1931     0390                     	;# 
  1932     0391                     	;# 
  1933     0392                     	;# 
  1934     040C                     	;# 
  1935     040D                     	;# 
  1936     040E                     	;# 
  1937     040F                     	;# 
  1938     0410                     	;# 
  1939     0411                     	;# 
  1940     0416                     	;# 
  1941     0416                     	;# 
  1942     0417                     	;# 
  1943     0418                     	;# 
  1944     0418                     	;# 
  1945     0419                     	;# 
  1946     041A                     	;# 
  1947     041A                     	;# 
  1948     041B                     	;# 
  1949     041C                     	;# 
  1950     041C                     	;# 
  1951     041D                     	;# 
  1952     041E                     	;# 
  1953     041F                     	;# 
  1954     048C                     	;# 
  1955     048C                     	;# 
  1956     048D                     	;# 
  1957     048E                     	;# 
  1958     048F                     	;# 
  1959     048F                     	;# 
  1960     0490                     	;# 
  1961     0491                     	;# 
  1962     0492                     	;# 
  1963     0492                     	;# 
  1964     0493                     	;# 
  1965     0494                     	;# 
  1966     0495                     	;# 
  1967     0495                     	;# 
  1968     0496                     	;# 
  1969     0497                     	;# 
  1970     0498                     	;# 
  1971     0499                     	;# 
  1972     049A                     	;# 
  1973     049B                     	;# 
  1974     049C                     	;# 
  1975     049D                     	;# 
  1976     050C                     	;# 
  1977     050C                     	;# 
  1978     050D                     	;# 
  1979     050E                     	;# 
  1980     050F                     	;# 
  1981     050F                     	;# 
  1982     0510                     	;# 
  1983     0511                     	;# 
  1984     0512                     	;# 
  1985     0512                     	;# 
  1986     0513                     	;# 
  1987     0514                     	;# 
  1988     0515                     	;# 
  1989     0515                     	;# 
  1990     0516                     	;# 
  1991     0517                     	;# 
  1992     0518                     	;# 
  1993     0519                     	;# 
  1994     051A                     	;# 
  1995     051B                     	;# 
  1996     051C                     	;# 
  1997     051D                     	;# 
  1998     058C                     	;# 
  1999     058C                     	;# 
  2000     058D                     	;# 
  2001     058E                     	;# 
  2002     058F                     	;# 
  2003     058F                     	;# 
  2004     0590                     	;# 
  2005     0591                     	;# 
  2006     0592                     	;# 
  2007     0593                     	;# 
  2008     060C                     	;# 
  2009     060D                     	;# 
  2010     060E                     	;# 
  2011     060F                     	;# 
  2012     0610                     	;# 
  2013     0611                     	;# 
  2014     0612                     	;# 
  2015     0613                     	;# 
  2016     0614                     	;# 
  2017     0616                     	;# 
  2018     0617                     	;# 
  2019     0618                     	;# 
  2020     0619                     	;# 
  2021     061A                     	;# 
  2022     061B                     	;# 
  2023     061C                     	;# 
  2024     061D                     	;# 
  2025     061E                     	;# 
  2026     068C                     	;# 
  2027     068D                     	;# 
  2028     068E                     	;# 
  2029     068F                     	;# 
  2030     0690                     	;# 
  2031     0691                     	;# 
  2032     0692                     	;# 
  2033     0693                     	;# 
  2034     0694                     	;# 
  2035     070C                     	;# 
  2036     070D                     	;# 
  2037     070E                     	;# 
  2038     070F                     	;# 
  2039     0710                     	;# 
  2040     0711                     	;# 
  2041     0712                     	;# 
  2042     0713                     	;# 
  2043     0714                     	;# 
  2044     0716                     	;# 
  2045     0717                     	;# 
  2046     0718                     	;# 
  2047     0719                     	;# 
  2048     071A                     	;# 
  2049     071B                     	;# 
  2050     071C                     	;# 
  2051     071D                     	;# 
  2052     071E                     	;# 
  2053     0796                     	;# 
  2054     0797                     	;# 
  2055     0798                     	;# 
  2056     0799                     	;# 
  2057     079A                     	;# 
  2058     079B                     	;# 
  2059     080C                     	;# 
  2060     080D                     	;# 
  2061     080E                     	;# 
  2062     080F                     	;# 
  2063     0810                     	;# 
  2064     0811                     	;# 
  2065     0812                     	;# 
  2066     0813                     	;# 
  2067     0814                     	;# 
  2068     081A                     	;# 
  2069     081B                     	;# 
  2070     081C                     	;# 
  2071     081D                     	;# 
  2072     081E                     	;# 
  2073     081F                     	;# 
  2074     088C                     	;# 
  2075     088D                     	;# 
  2076     088E                     	;# 
  2077     088F                     	;# 
  2078     0890                     	;# 
  2079     0891                     	;# 
  2080     0892                     	;# 
  2081     0893                     	;# 
  2082     0895                     	;# 
  2083     0896                     	;# 
  2084     0897                     	;# 
  2085     0898                     	;# 
  2086     0899                     	;# 
  2087     089A                     	;# 
  2088     089B                     	;# 
  2089     090C                     	;# 
  2090     090E                     	;# 
  2091     090F                     	;# 
  2092     091F                     	;# 
  2093     091F                     	;# 
  2094     098F                     	;# 
  2095     098F                     	;# 
  2096     0990                     	;# 
  2097     0991                     	;# 
  2098     0992                     	;# 
  2099     0993                     	;# 
  2100     0994                     	;# 
  2101     0995                     	;# 
  2102     0996                     	;# 
  2103     0997                     	;# 
  2104     0E0F                     	;# 
  2105     0E10                     	;# 
  2106     0E11                     	;# 
  2107     0E12                     	;# 
  2108     0E13                     	;# 
  2109     0E14                     	;# 
  2110     0E15                     	;# 
  2111     0E16                     	;# 
  2112     0E17                     	;# 
  2113     0E18                     	;# 
  2114     0E19                     	;# 
  2115     0E1A                     	;# 
  2116     0E1B                     	;# 
  2117     0E1C                     	;# 
  2118     0E1D                     	;# 
  2119     0E1E                     	;# 
  2120     0E1F                     	;# 
  2121     0E20                     	;# 
  2122     0E21                     	;# 
  2123     0E22                     	;# 
  2124     0E23                     	;# 
  2125     0E24                     	;# 
  2126     0E25                     	;# 
  2127     0E26                     	;# 
  2128     0E27                     	;# 
  2129     0E28                     	;# 
  2130     0E29                     	;# 
  2131     0E2A                     	;# 
  2132     0E2B                     	;# 
  2133     0E2C                     	;# 
  2134     0E2D                     	;# 
  2135     0E2E                     	;# 
  2136     0E2F                     	;# 
  2137     0E30                     	;# 
  2138     0E31                     	;# 
  2139     0E32                     	;# 
  2140     0E33                     	;# 
  2141     0E34                     	;# 
  2142     0E35                     	;# 
  2143     0E36                     	;# 
  2144     0E37                     	;# 
  2145     0E8F                     	;# 
  2146     0E90                     	;# 
  2147     0E91                     	;# 
  2148     0E92                     	;# 
  2149     0E93                     	;# 
  2150     0E94                     	;# 
  2151     0E95                     	;# 
  2152     0E96                     	;# 
  2153     0E97                     	;# 
  2154     0E9C                     	;# 
  2155     0E9D                     	;# 
  2156     0E9E                     	;# 
  2157     0EA1                     	;# 
  2158     0EA2                     	;# 
  2159     0EA3                     	;# 
  2160     0EA4                     	;# 
  2161     0EA5                     	;# 
  2162     0EA9                     	;# 
  2163     0EAA                     	;# 
  2164     0EAB                     	;# 
  2165     0EAC                     	;# 
  2166     0EB1                     	;# 
  2167     0EB2                     	;# 
  2168     0EB3                     	;# 
  2169     0EB8                     	;# 
  2170     0EB9                     	;# 
  2171     0EBA                     	;# 
  2172     0EBB                     	;# 
  2173     0EBC                     	;# 
  2174     0EBD                     	;# 
  2175     0EBE                     	;# 
  2176     0EC3                     	;# 
  2177     0EC5                     	;# 
  2178     0EC6                     	;# 
  2179     0EC7                     	;# 
  2180     0EC8                     	;# 
  2181     0EC9                     	;# 
  2182     0ECA                     	;# 
  2183     0ECB                     	;# 
  2184     0ECC                     	;# 
  2185     0F10                     	;# 
  2186     0F11                     	;# 
  2187     0F12                     	;# 
  2188     0F13                     	;# 
  2189     0F14                     	;# 
  2190     0F15                     	;# 
  2191     0F16                     	;# 
  2192     0F17                     	;# 
  2193     0F18                     	;# 
  2194     0F19                     	;# 
  2195     0F1A                     	;# 
  2196     0F1B                     	;# 
  2197     0F1C                     	;# 
  2198     0F1D                     	;# 
  2199     0F1E                     	;# 
  2200     0F1F                     	;# 
  2201     0F20                     	;# 
  2202     0F21                     	;# 
  2203     0F22                     	;# 
  2204     0F23                     	;# 
  2205     0F24                     	;# 
  2206     0F25                     	;# 
  2207     0F26                     	;# 
  2208     0F27                     	;# 
  2209     0F28                     	;# 
  2210     0F29                     	;# 
  2211     0F2A                     	;# 
  2212     0F2B                     	;# 
  2213     0F2C                     	;# 
  2214     0F2D                     	;# 
  2215     0F2E                     	;# 
  2216     0F2F                     	;# 
  2217     0F30                     	;# 
  2218     0F31                     	;# 
  2219     0F32                     	;# 
  2220     0F38                     	;# 
  2221     0F39                     	;# 
  2222     0F3A                     	;# 
  2223     0F3B                     	;# 
  2224     0F3C                     	;# 
  2225     0F3D                     	;# 
  2226     0F3E                     	;# 
  2227     0F3F                     	;# 
  2228     0F40                     	;# 
  2229     0F41                     	;# 
  2230     0F43                     	;# 
  2231     0F44                     	;# 
  2232     0F45                     	;# 
  2233     0F46                     	;# 
  2234     0F47                     	;# 
  2235     0F48                     	;# 
  2236     0F49                     	;# 
  2237     0F4A                     	;# 
  2238     0F4B                     	;# 
  2239     0F4C                     	;# 
  2240     0F4E                     	;# 
  2241     0F4F                     	;# 
  2242     0F50                     	;# 
  2243     0F51                     	;# 
  2244     0F52                     	;# 
  2245     0F53                     	;# 
  2246     0F54                     	;# 
  2247     0F55                     	;# 
  2248     0F56                     	;# 
  2249     0F57                     	;# 
  2250     0F59                     	;# 
  2251     0F5A                     	;# 
  2252     0F5B                     	;# 
  2253     0F5C                     	;# 
  2254     0F5D                     	;# 
  2255     0F61                     	;# 
  2256     0F62                     	;# 
  2257     0F64                     	;# 
  2258     0F65                     	;# 
  2259     0F66                     	;# 
  2260     0F67                     	;# 
  2261     0F68                     	;# 
  2262     0F69                     	;# 
  2263     0F6A                     	;# 
  2264     0F6B                     	;# 
  2265     0F6C                     	;# 
  2266     0F6D                     	;# 
  2267     0FE4                     	;# 
  2268     0FE5                     	;# 
  2269     0FE6                     	;# 
  2270     0FE7                     	;# 
  2271     0FE8                     	;# 
  2272     0FE9                     	;# 
  2273     0FEA                     	;# 
  2274     0FEB                     	;# 
  2275     0FED                     	;# 
  2276     0FEE                     	;# 
  2277     0FEF                     	;# 
  2278     0000                     	;# 
  2279     0001                     	;# 
  2280     0002                     	;# 
  2281     0003                     	;# 
  2282     0004                     	;# 
  2283     0005                     	;# 
  2284     0006                     	;# 
  2285     0007                     	;# 
  2286     0008                     	;# 
  2287     0009                     	;# 
  2288     000A                     	;# 
  2289     000B                     	;# 
  2290     000C                     	;# 
  2291     000D                     	;# 
  2292     000E                     	;# 
  2293     000F                     	;# 
  2294     0010                     	;# 
  2295     0011                     	;# 
  2296     0012                     	;# 
  2297     0013                     	;# 
  2298     0014                     	;# 
  2299     0015                     	;# 
  2300     0016                     	;# 
  2301     0017                     	;# 
  2302     0018                     	;# 
  2303     0019                     	;# 
  2304     001A                     	;# 
  2305     001C                     	;# 
  2306     001C                     	;# 
  2307     001D                     	;# 
  2308     001D                     	;# 
  2309     001E                     	;# 
  2310     001F                     	;# 
  2311     008C                     	;# 
  2312     008C                     	;# 
  2313     008D                     	;# 
  2314     008E                     	;# 
  2315     008E                     	;# 
  2316     008F                     	;# 
  2317     0090                     	;# 
  2318     0090                     	;# 
  2319     0091                     	;# 
  2320     0093                     	;# 
  2321     0094                     	;# 
  2322     0095                     	;# 
  2323     0096                     	;# 
  2324     0097                     	;# 
  2325     0098                     	;# 
  2326     0099                     	;# 
  2327     009A                     	;# 
  2328     009B                     	;# 
  2329     009C                     	;# 
  2330     009D                     	;# 
  2331     009E                     	;# 
  2332     010C                     	;# 
  2333     010D                     	;# 
  2334     010E                     	;# 
  2335     010E                     	;# 
  2336     010F                     	;# 
  2337     0110                     	;# 
  2338     0110                     	;# 
  2339     0111                     	;# 
  2340     0112                     	;# 
  2341     0112                     	;# 
  2342     0113                     	;# 
  2343     0114                     	;# 
  2344     0114                     	;# 
  2345     0115                     	;# 
  2346     0116                     	;# 
  2347     0116                     	;# 
  2348     0117                     	;# 
  2349     0119                     	;# 
  2350     0119                     	;# 
  2351     0119                     	;# 
  2352     011A                     	;# 
  2353     011A                     	;# 
  2354     011A                     	;# 
  2355     011B                     	;# 
  2356     011B                     	;# 
  2357     011B                     	;# 
  2358     011B                     	;# 
  2359     011B                     	;# 
  2360     011C                     	;# 
  2361     011C                     	;# 
  2362     011C                     	;# 
  2363     011D                     	;# 
  2364     011D                     	;# 
  2365     011D                     	;# 
  2366     011E                     	;# 
  2367     011E                     	;# 
  2368     011E                     	;# 
  2369     011F                     	;# 
  2370     011F                     	;# 
  2371     011F                     	;# 
  2372     011F                     	;# 
  2373     011F                     	;# 
  2374     018C                     	;# 
  2375     018D                     	;# 
  2376     018E                     	;# 
  2377     018F                     	;# 
  2378     0190                     	;# 
  2379     0191                     	;# 
  2380     0192                     	;# 
  2381     0196                     	;# 
  2382     0197                     	;# 
  2383     0198                     	;# 
  2384     0199                     	;# 
  2385     019A                     	;# 
  2386     019B                     	;# 
  2387     019C                     	;# 
  2388     020C                     	;# 
  2389     020C                     	;# 
  2390     020D                     	;# 
  2391     020E                     	;# 
  2392     020F                     	;# 
  2393     020F                     	;# 
  2394     0210                     	;# 
  2395     0210                     	;# 
  2396     0211                     	;# 
  2397     0211                     	;# 
  2398     0212                     	;# 
  2399     0212                     	;# 
  2400     0213                     	;# 
  2401     0214                     	;# 
  2402     0215                     	;# 
  2403     0215                     	;# 
  2404     0216                     	;# 
  2405     0216                     	;# 
  2406     0217                     	;# 
  2407     0217                     	;# 
  2408     0218                     	;# 
  2409     0218                     	;# 
  2410     0219                     	;# 
  2411     021A                     	;# 
  2412     021B                     	;# 
  2413     021B                     	;# 
  2414     021C                     	;# 
  2415     021C                     	;# 
  2416     021D                     	;# 
  2417     021D                     	;# 
  2418     021E                     	;# 
  2419     021F                     	;# 
  2420     028C                     	;# 
  2421     028C                     	;# 
  2422     028D                     	;# 
  2423     028D                     	;# 
  2424     028E                     	;# 
  2425     028F                     	;# 
  2426     0290                     	;# 
  2427     0290                     	;# 
  2428     0291                     	;# 
  2429     0292                     	;# 
  2430     0292                     	;# 
  2431     0293                     	;# 
  2432     0293                     	;# 
  2433     0294                     	;# 
  2434     0295                     	;# 
  2435     0296                     	;# 
  2436     0296                     	;# 
  2437     0297                     	;# 
  2438     0298                     	;# 
  2439     0298                     	;# 
  2440     0299                     	;# 
  2441     0299                     	;# 
  2442     029A                     	;# 
  2443     029B                     	;# 
  2444     029C                     	;# 
  2445     029C                     	;# 
  2446     029D                     	;# 
  2447     030C                     	;# 
  2448     030C                     	;# 
  2449     030D                     	;# 
  2450     030E                     	;# 
  2451     030F                     	;# 
  2452     0310                     	;# 
  2453     0310                     	;# 
  2454     0311                     	;# 
  2455     0312                     	;# 
  2456     0313                     	;# 
  2457     0314                     	;# 
  2458     0314                     	;# 
  2459     0315                     	;# 
  2460     0316                     	;# 
  2461     0317                     	;# 
  2462     0318                     	;# 
  2463     0318                     	;# 
  2464     0319                     	;# 
  2465     031A                     	;# 
  2466     031B                     	;# 
  2467     031C                     	;# 
  2468     031C                     	;# 
  2469     031D                     	;# 
  2470     031E                     	;# 
  2471     031F                     	;# 
  2472     038C                     	;# 
  2473     038C                     	;# 
  2474     038D                     	;# 
  2475     038E                     	;# 
  2476     0390                     	;# 
  2477     0390                     	;# 
  2478     0391                     	;# 
  2479     0392                     	;# 
  2480     040C                     	;# 
  2481     040D                     	;# 
  2482     040E                     	;# 
  2483     040F                     	;# 
  2484     0410                     	;# 
  2485     0411                     	;# 
  2486     0416                     	;# 
  2487     0416                     	;# 
  2488     0417                     	;# 
  2489     0418                     	;# 
  2490     0418                     	;# 
  2491     0419                     	;# 
  2492     041A                     	;# 
  2493     041A                     	;# 
  2494     041B                     	;# 
  2495     041C                     	;# 
  2496     041C                     	;# 
  2497     041D                     	;# 
  2498     041E                     	;# 
  2499     041F                     	;# 
  2500     048C                     	;# 
  2501     048C                     	;# 
  2502     048D                     	;# 
  2503     048E                     	;# 
  2504     048F                     	;# 
  2505     048F                     	;# 
  2506     0490                     	;# 
  2507     0491                     	;# 
  2508     0492                     	;# 
  2509     0492                     	;# 
  2510     0493                     	;# 
  2511     0494                     	;# 
  2512     0495                     	;# 
  2513     0495                     	;# 
  2514     0496                     	;# 
  2515     0497                     	;# 
  2516     0498                     	;# 
  2517     0499                     	;# 
  2518     049A                     	;# 
  2519     049B                     	;# 
  2520     049C                     	;# 
  2521     049D                     	;# 
  2522     050C                     	;# 
  2523     050C                     	;# 
  2524     050D                     	;# 
  2525     050E                     	;# 
  2526     050F                     	;# 
  2527     050F                     	;# 
  2528     0510                     	;# 
  2529     0511                     	;# 
  2530     0512                     	;# 
  2531     0512                     	;# 
  2532     0513                     	;# 
  2533     0514                     	;# 
  2534     0515                     	;# 
  2535     0515                     	;# 
  2536     0516                     	;# 
  2537     0517                     	;# 
  2538     0518                     	;# 
  2539     0519                     	;# 
  2540     051A                     	;# 
  2541     051B                     	;# 
  2542     051C                     	;# 
  2543     051D                     	;# 
  2544     058C                     	;# 
  2545     058C                     	;# 
  2546     058D                     	;# 
  2547     058E                     	;# 
  2548     058F                     	;# 
  2549     058F                     	;# 
  2550     0590                     	;# 
  2551     0591                     	;# 
  2552     0592                     	;# 
  2553     0593                     	;# 
  2554     060C                     	;# 
  2555     060D                     	;# 
  2556     060E                     	;# 
  2557     060F                     	;# 
  2558     0610                     	;# 
  2559     0611                     	;# 
  2560     0612                     	;# 
  2561     0613                     	;# 
  2562     0614                     	;# 
  2563     0616                     	;# 
  2564     0617                     	;# 
  2565     0618                     	;# 
  2566     0619                     	;# 
  2567     061A                     	;# 
  2568     061B                     	;# 
  2569     061C                     	;# 
  2570     061D                     	;# 
  2571     061E                     	;# 
  2572     068C                     	;# 
  2573     068D                     	;# 
  2574     068E                     	;# 
  2575     068F                     	;# 
  2576     0690                     	;# 
  2577     0691                     	;# 
  2578     0692                     	;# 
  2579     0693                     	;# 
  2580     0694                     	;# 
  2581     070C                     	;# 
  2582     070D                     	;# 
  2583     070E                     	;# 
  2584     070F                     	;# 
  2585     0710                     	;# 
  2586     0711                     	;# 
  2587     0712                     	;# 
  2588     0713                     	;# 
  2589     0714                     	;# 
  2590     0716                     	;# 
  2591     0717                     	;# 
  2592     0718                     	;# 
  2593     0719                     	;# 
  2594     071A                     	;# 
  2595     071B                     	;# 
  2596     071C                     	;# 
  2597     071D                     	;# 
  2598     071E                     	;# 
  2599     0796                     	;# 
  2600     0797                     	;# 
  2601     0798                     	;# 
  2602     0799                     	;# 
  2603     079A                     	;# 
  2604     079B                     	;# 
  2605     080C                     	;# 
  2606     080D                     	;# 
  2607     080E                     	;# 
  2608     080F                     	;# 
  2609     0810                     	;# 
  2610     0811                     	;# 
  2611     0812                     	;# 
  2612     0813                     	;# 
  2613     0814                     	;# 
  2614     081A                     	;# 
  2615     081B                     	;# 
  2616     081C                     	;# 
  2617     081D                     	;# 
  2618     081E                     	;# 
  2619     081F                     	;# 
  2620     088C                     	;# 
  2621     088D                     	;# 
  2622     088E                     	;# 
  2623     088F                     	;# 
  2624     0890                     	;# 
  2625     0891                     	;# 
  2626     0892                     	;# 
  2627     0893                     	;# 
  2628     0895                     	;# 
  2629     0896                     	;# 
  2630     0897                     	;# 
  2631     0898                     	;# 
  2632     0899                     	;# 
  2633     089A                     	;# 
  2634     089B                     	;# 
  2635     090C                     	;# 
  2636     090E                     	;# 
  2637     090F                     	;# 
  2638     091F                     	;# 
  2639     091F                     	;# 
  2640     098F                     	;# 
  2641     098F                     	;# 
  2642     0990                     	;# 
  2643     0991                     	;# 
  2644     0992                     	;# 
  2645     0993                     	;# 
  2646     0994                     	;# 
  2647     0995                     	;# 
  2648     0996                     	;# 
  2649     0997                     	;# 
  2650     0E0F                     	;# 
  2651     0E10                     	;# 
  2652     0E11                     	;# 
  2653     0E12                     	;# 
  2654     0E13                     	;# 
  2655     0E14                     	;# 
  2656     0E15                     	;# 
  2657     0E16                     	;# 
  2658     0E17                     	;# 
  2659     0E18                     	;# 
  2660     0E19                     	;# 
  2661     0E1A                     	;# 
  2662     0E1B                     	;# 
  2663     0E1C                     	;# 
  2664     0E1D                     	;# 
  2665     0E1E                     	;# 
  2666     0E1F                     	;# 
  2667     0E20                     	;# 
  2668     0E21                     	;# 
  2669     0E22                     	;# 
  2670     0E23                     	;# 
  2671     0E24                     	;# 
  2672     0E25                     	;# 
  2673     0E26                     	;# 
  2674     0E27                     	;# 
  2675     0E28                     	;# 
  2676     0E29                     	;# 
  2677     0E2A                     	;# 
  2678     0E2B                     	;# 
  2679     0E2C                     	;# 
  2680     0E2D                     	;# 
  2681     0E2E                     	;# 
  2682     0E2F                     	;# 
  2683     0E30                     	;# 
  2684     0E31                     	;# 
  2685     0E32                     	;# 
  2686     0E33                     	;# 
  2687     0E34                     	;# 
  2688     0E35                     	;# 
  2689     0E36                     	;# 
  2690     0E37                     	;# 
  2691     0E8F                     	;# 
  2692     0E90                     	;# 
  2693     0E91                     	;# 
  2694     0E92                     	;# 
  2695     0E93                     	;# 
  2696     0E94                     	;# 
  2697     0E95                     	;# 
  2698     0E96                     	;# 
  2699     0E97                     	;# 
  2700     0E9C                     	;# 
  2701     0E9D                     	;# 
  2702     0E9E                     	;# 
  2703     0EA1                     	;# 
  2704     0EA2                     	;# 
  2705     0EA3                     	;# 
  2706     0EA4                     	;# 
  2707     0EA5                     	;# 
  2708     0EA9                     	;# 
  2709     0EAA                     	;# 
  2710     0EAB                     	;# 
  2711     0EAC                     	;# 
  2712     0EB1                     	;# 
  2713     0EB2                     	;# 
  2714     0EB3                     	;# 
  2715     0EB8                     	;# 
  2716     0EB9                     	;# 
  2717     0EBA                     	;# 
  2718     0EBB                     	;# 
  2719     0EBC                     	;# 
  2720     0EBD                     	;# 
  2721     0EBE                     	;# 
  2722     0EC3                     	;# 
  2723     0EC5                     	;# 
  2724     0EC6                     	;# 
  2725     0EC7                     	;# 
  2726     0EC8                     	;# 
  2727     0EC9                     	;# 
  2728     0ECA                     	;# 
  2729     0ECB                     	;# 
  2730     0ECC                     	;# 
  2731     0F10                     	;# 
  2732     0F11                     	;# 
  2733     0F12                     	;# 
  2734     0F13                     	;# 
  2735     0F14                     	;# 
  2736     0F15                     	;# 
  2737     0F16                     	;# 
  2738     0F17                     	;# 
  2739     0F18                     	;# 
  2740     0F19                     	;# 
  2741     0F1A                     	;# 
  2742     0F1B                     	;# 
  2743     0F1C                     	;# 
  2744     0F1D                     	;# 
  2745     0F1E                     	;# 
  2746     0F1F                     	;# 
  2747     0F20                     	;# 
  2748     0F21                     	;# 
  2749     0F22                     	;# 
  2750     0F23                     	;# 
  2751     0F24                     	;# 
  2752     0F25                     	;# 
  2753     0F26                     	;# 
  2754     0F27                     	;# 
  2755     0F28                     	;# 
  2756     0F29                     	;# 
  2757     0F2A                     	;# 
  2758     0F2B                     	;# 
  2759     0F2C                     	;# 
  2760     0F2D                     	;# 
  2761     0F2E                     	;# 
  2762     0F2F                     	;# 
  2763     0F30                     	;# 
  2764     0F31                     	;# 
  2765     0F32                     	;# 
  2766     0F38                     	;# 
  2767     0F39                     	;# 
  2768     0F3A                     	;# 
  2769     0F3B                     	;# 
  2770     0F3C                     	;# 
  2771     0F3D                     	;# 
  2772     0F3E                     	;# 
  2773     0F3F                     	;# 
  2774     0F40                     	;# 
  2775     0F41                     	;# 
  2776     0F43                     	;# 
  2777     0F44                     	;# 
  2778     0F45                     	;# 
  2779     0F46                     	;# 
  2780     0F47                     	;# 
  2781     0F48                     	;# 
  2782     0F49                     	;# 
  2783     0F4A                     	;# 
  2784     0F4B                     	;# 
  2785     0F4C                     	;# 
  2786     0F4E                     	;# 
  2787     0F4F                     	;# 
  2788     0F50                     	;# 
  2789     0F51                     	;# 
  2790     0F52                     	;# 
  2791     0F53                     	;# 
  2792     0F54                     	;# 
  2793     0F55                     	;# 
  2794     0F56                     	;# 
  2795     0F57                     	;# 
  2796     0F59                     	;# 
  2797     0F5A                     	;# 
  2798     0F5B                     	;# 
  2799     0F5C                     	;# 
  2800     0F5D                     	;# 
  2801     0F61                     	;# 
  2802     0F62                     	;# 
  2803     0F64                     	;# 
  2804     0F65                     	;# 
  2805     0F66                     	;# 
  2806     0F67                     	;# 
  2807     0F68                     	;# 
  2808     0F69                     	;# 
  2809     0F6A                     	;# 
  2810     0F6B                     	;# 
  2811     0F6C                     	;# 
  2812     0F6D                     	;# 
  2813     0FE4                     	;# 
  2814     0FE5                     	;# 
  2815     0FE6                     	;# 
  2816     0FE7                     	;# 
  2817     0FE8                     	;# 
  2818     0FE9                     	;# 
  2819     0FEA                     	;# 
  2820     0FEB                     	;# 
  2821     0FED                     	;# 
  2822     0FEE                     	;# 
  2823     0FEF                     	;# 
  2824     0000                     	;# 
  2825     0001                     	;# 
  2826     0002                     	;# 
  2827     0003                     	;# 
  2828     0004                     	;# 
  2829     0005                     	;# 
  2830     0006                     	;# 
  2831     0007                     	;# 
  2832     0008                     	;# 
  2833     0009                     	;# 
  2834     000A                     	;# 
  2835     000B                     	;# 
  2836     000C                     	;# 
  2837     000D                     	;# 
  2838     000E                     	;# 
  2839     000F                     	;# 
  2840     0010                     	;# 
  2841     0011                     	;# 
  2842     0012                     	;# 
  2843     0013                     	;# 
  2844     0014                     	;# 
  2845     0015                     	;# 
  2846     0016                     	;# 
  2847     0017                     	;# 
  2848     0018                     	;# 
  2849     0019                     	;# 
  2850     001A                     	;# 
  2851     001C                     	;# 
  2852     001C                     	;# 
  2853     001D                     	;# 
  2854     001D                     	;# 
  2855     001E                     	;# 
  2856     001F                     	;# 
  2857     008C                     	;# 
  2858     008C                     	;# 
  2859     008D                     	;# 
  2860     008E                     	;# 
  2861     008E                     	;# 
  2862     008F                     	;# 
  2863     0090                     	;# 
  2864     0090                     	;# 
  2865     0091                     	;# 
  2866     0093                     	;# 
  2867     0094                     	;# 
  2868     0095                     	;# 
  2869     0096                     	;# 
  2870     0097                     	;# 
  2871     0098                     	;# 
  2872     0099                     	;# 
  2873     009A                     	;# 
  2874     009B                     	;# 
  2875     009C                     	;# 
  2876     009D                     	;# 
  2877     009E                     	;# 
  2878     010C                     	;# 
  2879     010D                     	;# 
  2880     010E                     	;# 
  2881     010E                     	;# 
  2882     010F                     	;# 
  2883     0110                     	;# 
  2884     0110                     	;# 
  2885     0111                     	;# 
  2886     0112                     	;# 
  2887     0112                     	;# 
  2888     0113                     	;# 
  2889     0114                     	;# 
  2890     0114                     	;# 
  2891     0115                     	;# 
  2892     0116                     	;# 
  2893     0116                     	;# 
  2894     0117                     	;# 
  2895     0119                     	;# 
  2896     0119                     	;# 
  2897     0119                     	;# 
  2898     011A                     	;# 
  2899     011A                     	;# 
  2900     011A                     	;# 
  2901     011B                     	;# 
  2902     011B                     	;# 
  2903     011B                     	;# 
  2904     011B                     	;# 
  2905     011B                     	;# 
  2906     011C                     	;# 
  2907     011C                     	;# 
  2908     011C                     	;# 
  2909     011D                     	;# 
  2910     011D                     	;# 
  2911     011D                     	;# 
  2912     011E                     	;# 
  2913     011E                     	;# 
  2914     011E                     	;# 
  2915     011F                     	;# 
  2916     011F                     	;# 
  2917     011F                     	;# 
  2918     011F                     	;# 
  2919     011F                     	;# 
  2920     018C                     	;# 
  2921     018D                     	;# 
  2922     018E                     	;# 
  2923     018F                     	;# 
  2924     0190                     	;# 
  2925     0191                     	;# 
  2926     0192                     	;# 
  2927     0196                     	;# 
  2928     0197                     	;# 
  2929     0198                     	;# 
  2930     0199                     	;# 
  2931     019A                     	;# 
  2932     019B                     	;# 
  2933     019C                     	;# 
  2934     020C                     	;# 
  2935     020C                     	;# 
  2936     020D                     	;# 
  2937     020E                     	;# 
  2938     020F                     	;# 
  2939     020F                     	;# 
  2940     0210                     	;# 
  2941     0210                     	;# 
  2942     0211                     	;# 
  2943     0211                     	;# 
  2944     0212                     	;# 
  2945     0212                     	;# 
  2946     0213                     	;# 
  2947     0214                     	;# 
  2948     0215                     	;# 
  2949     0215                     	;# 
  2950     0216                     	;# 
  2951     0216                     	;# 
  2952     0217                     	;# 
  2953     0217                     	;# 
  2954     0218                     	;# 
  2955     0218                     	;# 
  2956     0219                     	;# 
  2957     021A                     	;# 
  2958     021B                     	;# 
  2959     021B                     	;# 
  2960     021C                     	;# 
  2961     021C                     	;# 
  2962     021D                     	;# 
  2963     021D                     	;# 
  2964     021E                     	;# 
  2965     021F                     	;# 
  2966     028C                     	;# 
  2967     028C                     	;# 
  2968     028D                     	;# 
  2969     028D                     	;# 
  2970     028E                     	;# 
  2971     028F                     	;# 
  2972     0290                     	;# 
  2973     0290                     	;# 
  2974     0291                     	;# 
  2975     0292                     	;# 
  2976     0292                     	;# 
  2977     0293                     	;# 
  2978     0293                     	;# 
  2979     0294                     	;# 
  2980     0295                     	;# 
  2981     0296                     	;# 
  2982     0296                     	;# 
  2983     0297                     	;# 
  2984     0298                     	;# 
  2985     0298                     	;# 
  2986     0299                     	;# 
  2987     0299                     	;# 
  2988     029A                     	;# 
  2989     029B                     	;# 
  2990     029C                     	;# 
  2991     029C                     	;# 
  2992     029D                     	;# 
  2993     030C                     	;# 
  2994     030C                     	;# 
  2995     030D                     	;# 
  2996     030E                     	;# 
  2997     030F                     	;# 
  2998     0310                     	;# 
  2999     0310                     	;# 
  3000     0311                     	;# 
  3001     0312                     	;# 
  3002     0313                     	;# 
  3003     0314                     	;# 
  3004     0314                     	;# 
  3005     0315                     	;# 
  3006     0316                     	;# 
  3007     0317                     	;# 
  3008     0318                     	;# 
  3009     0318                     	;# 
  3010     0319                     	;# 
  3011     031A                     	;# 
  3012     031B                     	;# 
  3013     031C                     	;# 
  3014     031C                     	;# 
  3015     031D                     	;# 
  3016     031E                     	;# 
  3017     031F                     	;# 
  3018     038C                     	;# 
  3019     038C                     	;# 
  3020     038D                     	;# 
  3021     038E                     	;# 
  3022     0390                     	;# 
  3023     0390                     	;# 
  3024     0391                     	;# 
  3025     0392                     	;# 
  3026     040C                     	;# 
  3027     040D                     	;# 
  3028     040E                     	;# 
  3029     040F                     	;# 
  3030     0410                     	;# 
  3031     0411                     	;# 
  3032     0416                     	;# 
  3033     0416                     	;# 
  3034     0417                     	;# 
  3035     0418                     	;# 
  3036     0418                     	;# 
  3037     0419                     	;# 
  3038     041A                     	;# 
  3039     041A                     	;# 
  3040     041B                     	;# 
  3041     041C                     	;# 
  3042     041C                     	;# 
  3043     041D                     	;# 
  3044     041E                     	;# 
  3045     041F                     	;# 
  3046     048C                     	;# 
  3047     048C                     	;# 
  3048     048D                     	;# 
  3049     048E                     	;# 
  3050     048F                     	;# 
  3051     048F                     	;# 
  3052     0490                     	;# 
  3053     0491                     	;# 
  3054     0492                     	;# 
  3055     0492                     	;# 
  3056     0493                     	;# 
  3057     0494                     	;# 
  3058     0495                     	;# 
  3059     0495                     	;# 
  3060     0496                     	;# 
  3061     0497                     	;# 
  3062     0498                     	;# 
  3063     0499                     	;# 
  3064     049A                     	;# 
  3065     049B                     	;# 
  3066     049C                     	;# 
  3067     049D                     	;# 
  3068     050C                     	;# 
  3069     050C                     	;# 
  3070     050D                     	;# 
  3071     050E                     	;# 
  3072     050F                     	;# 
  3073     050F                     	;# 
  3074     0510                     	;# 
  3075     0511                     	;# 
  3076     0512                     	;# 
  3077     0512                     	;# 
  3078     0513                     	;# 
  3079     0514                     	;# 
  3080     0515                     	;# 
  3081     0515                     	;# 
  3082     0516                     	;# 
  3083     0517                     	;# 
  3084     0518                     	;# 
  3085     0519                     	;# 
  3086     051A                     	;# 
  3087     051B                     	;# 
  3088     051C                     	;# 
  3089     051D                     	;# 
  3090     058C                     	;# 
  3091     058C                     	;# 
  3092     058D                     	;# 
  3093     058E                     	;# 
  3094     058F                     	;# 
  3095     058F                     	;# 
  3096     0590                     	;# 
  3097     0591                     	;# 
  3098     0592                     	;# 
  3099     0593                     	;# 
  3100     060C                     	;# 
  3101     060D                     	;# 
  3102     060E                     	;# 
  3103     060F                     	;# 
  3104     0610                     	;# 
  3105     0611                     	;# 
  3106     0612                     	;# 
  3107     0613                     	;# 
  3108     0614                     	;# 
  3109     0616                     	;# 
  3110     0617                     	;# 
  3111     0618                     	;# 
  3112     0619                     	;# 
  3113     061A                     	;# 
  3114     061B                     	;# 
  3115     061C                     	;# 
  3116     061D                     	;# 
  3117     061E                     	;# 
  3118     068C                     	;# 
  3119     068D                     	;# 
  3120     068E                     	;# 
  3121     068F                     	;# 
  3122     0690                     	;# 
  3123     0691                     	;# 
  3124     0692                     	;# 
  3125     0693                     	;# 
  3126     0694                     	;# 
  3127     070C                     	;# 
  3128     070D                     	;# 
  3129     070E                     	;# 
  3130     070F                     	;# 
  3131     0710                     	;# 
  3132     0711                     	;# 
  3133     0712                     	;# 
  3134     0713                     	;# 
  3135     0714                     	;# 
  3136     0716                     	;# 
  3137     0717                     	;# 
  3138     0718                     	;# 
  3139     0719                     	;# 
  3140     071A                     	;# 
  3141     071B                     	;# 
  3142     071C                     	;# 
  3143     071D                     	;# 
  3144     071E                     	;# 
  3145     0796                     	;# 
  3146     0797                     	;# 
  3147     0798                     	;# 
  3148     0799                     	;# 
  3149     079A                     	;# 
  3150     079B                     	;# 
  3151     080C                     	;# 
  3152     080D                     	;# 
  3153     080E                     	;# 
  3154     080F                     	;# 
  3155     0810                     	;# 
  3156     0811                     	;# 
  3157     0812                     	;# 
  3158     0813                     	;# 
  3159     0814                     	;# 
  3160     081A                     	;# 
  3161     081B                     	;# 
  3162     081C                     	;# 
  3163     081D                     	;# 
  3164     081E                     	;# 
  3165     081F                     	;# 
  3166     088C                     	;# 
  3167     088D                     	;# 
  3168     088E                     	;# 
  3169     088F                     	;# 
  3170     0890                     	;# 
  3171     0891                     	;# 
  3172     0892                     	;# 
  3173     0893                     	;# 
  3174     0895                     	;# 
  3175     0896                     	;# 
  3176     0897                     	;# 
  3177     0898                     	;# 
  3178     0899                     	;# 
  3179     089A                     	;# 
  3180     089B                     	;# 
  3181     090C                     	;# 
  3182     090E                     	;# 
  3183     090F                     	;# 
  3184     091F                     	;# 
  3185     091F                     	;# 
  3186     098F                     	;# 
  3187     098F                     	;# 
  3188     0990                     	;# 
  3189     0991                     	;# 
  3190     0992                     	;# 
  3191     0993                     	;# 
  3192     0994                     	;# 
  3193     0995                     	;# 
  3194     0996                     	;# 
  3195     0997                     	;# 
  3196     0E0F                     	;# 
  3197     0E10                     	;# 
  3198     0E11                     	;# 
  3199     0E12                     	;# 
  3200     0E13                     	;# 
  3201     0E14                     	;# 
  3202     0E15                     	;# 
  3203     0E16                     	;# 
  3204     0E17                     	;# 
  3205     0E18                     	;# 
  3206     0E19                     	;# 
  3207     0E1A                     	;# 
  3208     0E1B                     	;# 
  3209     0E1C                     	;# 
  3210     0E1D                     	;# 
  3211     0E1E                     	;# 
  3212     0E1F                     	;# 
  3213     0E20                     	;# 
  3214     0E21                     	;# 
  3215     0E22                     	;# 
  3216     0E23                     	;# 
  3217     0E24                     	;# 
  3218     0E25                     	;# 
  3219     0E26                     	;# 
  3220     0E27                     	;# 
  3221     0E28                     	;# 
  3222     0E29                     	;# 
  3223     0E2A                     	;# 
  3224     0E2B                     	;# 
  3225     0E2C                     	;# 
  3226     0E2D                     	;# 
  3227     0E2E                     	;# 
  3228     0E2F                     	;# 
  3229     0E30                     	;# 
  3230     0E31                     	;# 
  3231     0E32                     	;# 
  3232     0E33                     	;# 
  3233     0E34                     	;# 
  3234     0E35                     	;# 
  3235     0E36                     	;# 
  3236     0E37                     	;# 
  3237     0E8F                     	;# 
  3238     0E90                     	;# 
  3239     0E91                     	;# 
  3240     0E92                     	;# 
  3241     0E93                     	;# 
  3242     0E94                     	;# 
  3243     0E95                     	;# 
  3244     0E96                     	;# 
  3245     0E97                     	;# 
  3246     0E9C                     	;# 
  3247     0E9D                     	;# 
  3248     0E9E                     	;# 
  3249     0EA1                     	;# 
  3250     0EA2                     	;# 
  3251     0EA3                     	;# 
  3252     0EA4                     	;# 
  3253     0EA5                     	;# 
  3254     0EA9                     	;# 
  3255     0EAA                     	;# 
  3256     0EAB                     	;# 
  3257     0EAC                     	;# 
  3258     0EB1                     	;# 
  3259     0EB2                     	;# 
  3260     0EB3                     	;# 
  3261     0EB8                     	;# 
  3262     0EB9                     	;# 
  3263     0EBA                     	;# 
  3264     0EBB                     	;# 
  3265     0EBC                     	;# 
  3266     0EBD                     	;# 
  3267     0EBE                     	;# 
  3268     0EC3                     	;# 
  3269     0EC5                     	;# 
  3270     0EC6                     	;# 
  3271     0EC7                     	;# 
  3272     0EC8                     	;# 
  3273     0EC9                     	;# 
  3274     0ECA                     	;# 
  3275     0ECB                     	;# 
  3276     0ECC                     	;# 
  3277     0F10                     	;# 
  3278     0F11                     	;# 
  3279     0F12                     	;# 
  3280     0F13                     	;# 
  3281     0F14                     	;# 
  3282     0F15                     	;# 
  3283     0F16                     	;# 
  3284     0F17                     	;# 
  3285     0F18                     	;# 
  3286     0F19                     	;# 
  3287     0F1A                     	;# 
  3288     0F1B                     	;# 
  3289     0F1C                     	;# 
  3290     0F1D                     	;# 
  3291     0F1E                     	;# 
  3292     0F1F                     	;# 
  3293     0F20                     	;# 
  3294     0F21                     	;# 
  3295     0F22                     	;# 
  3296     0F23                     	;# 
  3297     0F24                     	;# 
  3298     0F25                     	;# 
  3299     0F26                     	;# 
  3300     0F27                     	;# 
  3301     0F28                     	;# 
  3302     0F29                     	;# 
  3303     0F2A                     	;# 
  3304     0F2B                     	;# 
  3305     0F2C                     	;# 
  3306     0F2D                     	;# 
  3307     0F2E                     	;# 
  3308     0F2F                     	;# 
  3309     0F30                     	;# 
  3310     0F31                     	;# 
  3311     0F32                     	;# 
  3312     0F38                     	;# 
  3313     0F39                     	;# 
  3314     0F3A                     	;# 
  3315     0F3B                     	;# 
  3316     0F3C                     	;# 
  3317     0F3D                     	;# 
  3318     0F3E                     	;# 
  3319     0F3F                     	;# 
  3320     0F40                     	;# 
  3321     0F41                     	;# 
  3322     0F43                     	;# 
  3323     0F44                     	;# 
  3324     0F45                     	;# 
  3325     0F46                     	;# 
  3326     0F47                     	;# 
  3327     0F48                     	;# 
  3328     0F49                     	;# 
  3329     0F4A                     	;# 
  3330     0F4B                     	;# 
  3331     0F4C                     	;# 
  3332     0F4E                     	;# 
  3333     0F4F                     	;# 
  3334     0F50                     	;# 
  3335     0F51                     	;# 
  3336     0F52                     	;# 
  3337     0F53                     	;# 
  3338     0F54                     	;# 
  3339     0F55                     	;# 
  3340     0F56                     	;# 
  3341     0F57                     	;# 
  3342     0F59                     	;# 
  3343     0F5A                     	;# 
  3344     0F5B                     	;# 
  3345     0F5C                     	;# 
  3346     0F5D                     	;# 
  3347     0F61                     	;# 
  3348     0F62                     	;# 
  3349     0F64                     	;# 
  3350     0F65                     	;# 
  3351     0F66                     	;# 
  3352     0F67                     	;# 
  3353     0F68                     	;# 
  3354     0F69                     	;# 
  3355     0F6A                     	;# 
  3356     0F6B                     	;# 
  3357     0F6C                     	;# 
  3358     0F6D                     	;# 
  3359     0FE4                     	;# 
  3360     0FE5                     	;# 
  3361     0FE6                     	;# 
  3362     0FE7                     	;# 
  3363     0FE8                     	;# 
  3364     0FE9                     	;# 
  3365     0FEA                     	;# 
  3366     0FEB                     	;# 
  3367     0FED                     	;# 
  3368     0FEE                     	;# 
  3369     0FEF                     	;# 
  3370     0000                     	;# 
  3371     0001                     	;# 
  3372     0002                     	;# 
  3373     0003                     	;# 
  3374     0004                     	;# 
  3375     0005                     	;# 
  3376     0006                     	;# 
  3377     0007                     	;# 
  3378     0008                     	;# 
  3379     0009                     	;# 
  3380     000A                     	;# 
  3381     000B                     	;# 
  3382     000C                     	;# 
  3383     000D                     	;# 
  3384     000E                     	;# 
  3385     000F                     	;# 
  3386     0010                     	;# 
  3387     0011                     	;# 
  3388     0012                     	;# 
  3389     0013                     	;# 
  3390     0014                     	;# 
  3391     0015                     	;# 
  3392     0016                     	;# 
  3393     0017                     	;# 
  3394     0018                     	;# 
  3395     0019                     	;# 
  3396     001A                     	;# 
  3397     001C                     	;# 
  3398     001C                     	;# 
  3399     001D                     	;# 
  3400     001D                     	;# 
  3401     001E                     	;# 
  3402     001F                     	;# 
  3403     008C                     	;# 
  3404     008C                     	;# 
  3405     008D                     	;# 
  3406     008E                     	;# 
  3407     008E                     	;# 
  3408     008F                     	;# 
  3409     0090                     	;# 
  3410     0090                     	;# 
  3411     0091                     	;# 
  3412     0093                     	;# 
  3413     0094                     	;# 
  3414     0095                     	;# 
  3415     0096                     	;# 
  3416     0097                     	;# 
  3417     0098                     	;# 
  3418     0099                     	;# 
  3419     009A                     	;# 
  3420     009B                     	;# 
  3421     009C                     	;# 
  3422     009D                     	;# 
  3423     009E                     	;# 
  3424     010C                     	;# 
  3425     010D                     	;# 
  3426     010E                     	;# 
  3427     010E                     	;# 
  3428     010F                     	;# 
  3429     0110                     	;# 
  3430     0110                     	;# 
  3431     0111                     	;# 
  3432     0112                     	;# 
  3433     0112                     	;# 
  3434     0113                     	;# 
  3435     0114                     	;# 
  3436     0114                     	;# 
  3437     0115                     	;# 
  3438     0116                     	;# 
  3439     0116                     	;# 
  3440     0117                     	;# 
  3441     0119                     	;# 
  3442     0119                     	;# 
  3443     0119                     	;# 
  3444     011A                     	;# 
  3445     011A                     	;# 
  3446     011A                     	;# 
  3447     011B                     	;# 
  3448     011B                     	;# 
  3449     011B                     	;# 
  3450     011B                     	;# 
  3451     011B                     	;# 
  3452     011C                     	;# 
  3453     011C                     	;# 
  3454     011C                     	;# 
  3455     011D                     	;# 
  3456     011D                     	;# 
  3457     011D                     	;# 
  3458     011E                     	;# 
  3459     011E                     	;# 
  3460     011E                     	;# 
  3461     011F                     	;# 
  3462     011F                     	;# 
  3463     011F                     	;# 
  3464     011F                     	;# 
  3465     011F                     	;# 
  3466     018C                     	;# 
  3467     018D                     	;# 
  3468     018E                     	;# 
  3469     018F                     	;# 
  3470     0190                     	;# 
  3471     0191                     	;# 
  3472     0192                     	;# 
  3473     0196                     	;# 
  3474     0197                     	;# 
  3475     0198                     	;# 
  3476     0199                     	;# 
  3477     019A                     	;# 
  3478     019B                     	;# 
  3479     019C                     	;# 
  3480     020C                     	;# 
  3481     020C                     	;# 
  3482     020D                     	;# 
  3483     020E                     	;# 
  3484     020F                     	;# 
  3485     020F                     	;# 
  3486     0210                     	;# 
  3487     0210                     	;# 
  3488     0211                     	;# 
  3489     0211                     	;# 
  3490     0212                     	;# 
  3491     0212                     	;# 
  3492     0213                     	;# 
  3493     0214                     	;# 
  3494     0215                     	;# 
  3495     0215                     	;# 
  3496     0216                     	;# 
  3497     0216                     	;# 
  3498     0217                     	;# 
  3499     0217                     	;# 
  3500     0218                     	;# 
  3501     0218                     	;# 
  3502     0219                     	;# 
  3503     021A                     	;# 
  3504     021B                     	;# 
  3505     021B                     	;# 
  3506     021C                     	;# 
  3507     021C                     	;# 
  3508     021D                     	;# 
  3509     021D                     	;# 
  3510     021E                     	;# 
  3511     021F                     	;# 
  3512     028C                     	;# 
  3513     028C                     	;# 
  3514     028D                     	;# 
  3515     028D                     	;# 
  3516     028E                     	;# 
  3517     028F                     	;# 
  3518     0290                     	;# 
  3519     0290                     	;# 
  3520     0291                     	;# 
  3521     0292                     	;# 
  3522     0292                     	;# 
  3523     0293                     	;# 
  3524     0293                     	;# 
  3525     0294                     	;# 
  3526     0295                     	;# 
  3527     0296                     	;# 
  3528     0296                     	;# 
  3529     0297                     	;# 
  3530     0298                     	;# 
  3531     0298                     	;# 
  3532     0299                     	;# 
  3533     0299                     	;# 
  3534     029A                     	;# 
  3535     029B                     	;# 
  3536     029C                     	;# 
  3537     029C                     	;# 
  3538     029D                     	;# 
  3539     030C                     	;# 
  3540     030C                     	;# 
  3541     030D                     	;# 
  3542     030E                     	;# 
  3543     030F                     	;# 
  3544     0310                     	;# 
  3545     0310                     	;# 
  3546     0311                     	;# 
  3547     0312                     	;# 
  3548     0313                     	;# 
  3549     0314                     	;# 
  3550     0314                     	;# 
  3551     0315                     	;# 
  3552     0316                     	;# 
  3553     0317                     	;# 
  3554     0318                     	;# 
  3555     0318                     	;# 
  3556     0319                     	;# 
  3557     031A                     	;# 
  3558     031B                     	;# 
  3559     031C                     	;# 
  3560     031C                     	;# 
  3561     031D                     	;# 
  3562     031E                     	;# 
  3563     031F                     	;# 
  3564     038C                     	;# 
  3565     038C                     	;# 
  3566     038D                     	;# 
  3567     038E                     	;# 
  3568     0390                     	;# 
  3569     0390                     	;# 
  3570     0391                     	;# 
  3571     0392                     	;# 
  3572     040C                     	;# 
  3573     040D                     	;# 
  3574     040E                     	;# 
  3575     040F                     	;# 
  3576     0410                     	;# 
  3577     0411                     	;# 
  3578     0416                     	;# 
  3579     0416                     	;# 
  3580     0417                     	;# 
  3581     0418                     	;# 
  3582     0418                     	;# 
  3583     0419                     	;# 
  3584     041A                     	;# 
  3585     041A                     	;# 
  3586     041B                     	;# 
  3587     041C                     	;# 
  3588     041C                     	;# 
  3589     041D                     	;# 
  3590     041E                     	;# 
  3591     041F                     	;# 
  3592     048C                     	;# 
  3593     048C                     	;# 
  3594     048D                     	;# 
  3595     048E                     	;# 
  3596     048F                     	;# 
  3597     048F                     	;# 
  3598     0490                     	;# 
  3599     0491                     	;# 
  3600     0492                     	;# 
  3601     0492                     	;# 
  3602     0493                     	;# 
  3603     0494                     	;# 
  3604     0495                     	;# 
  3605     0495                     	;# 
  3606     0496                     	;# 
  3607     0497                     	;# 
  3608     0498                     	;# 
  3609     0499                     	;# 
  3610     049A                     	;# 
  3611     049B                     	;# 
  3612     049C                     	;# 
  3613     049D                     	;# 
  3614     050C                     	;# 
  3615     050C                     	;# 
  3616     050D                     	;# 
  3617     050E                     	;# 
  3618     050F                     	;# 
  3619     050F                     	;# 
  3620     0510                     	;# 
  3621     0511                     	;# 
  3622     0512                     	;# 
  3623     0512                     	;# 
  3624     0513                     	;# 
  3625     0514                     	;# 
  3626     0515                     	;# 
  3627     0515                     	;# 
  3628     0516                     	;# 
  3629     0517                     	;# 
  3630     0518                     	;# 
  3631     0519                     	;# 
  3632     051A                     	;# 
  3633     051B                     	;# 
  3634     051C                     	;# 
  3635     051D                     	;# 
  3636     058C                     	;# 
  3637     058C                     	;# 
  3638     058D                     	;# 
  3639     058E                     	;# 
  3640     058F                     	;# 
  3641     058F                     	;# 
  3642     0590                     	;# 
  3643     0591                     	;# 
  3644     0592                     	;# 
  3645     0593                     	;# 
  3646     060C                     	;# 
  3647     060D                     	;# 
  3648     060E                     	;# 
  3649     060F                     	;# 
  3650     0610                     	;# 
  3651     0611                     	;# 
  3652     0612                     	;# 
  3653     0613                     	;# 
  3654     0614                     	;# 
  3655     0616                     	;# 
  3656     0617                     	;# 
  3657     0618                     	;# 
  3658     0619                     	;# 
  3659     061A                     	;# 
  3660     061B                     	;# 
  3661     061C                     	;# 
  3662     061D                     	;# 
  3663     061E                     	;# 
  3664     068C                     	;# 
  3665     068D                     	;# 
  3666     068E                     	;# 
  3667     068F                     	;# 
  3668     0690                     	;# 
  3669     0691                     	;# 
  3670     0692                     	;# 
  3671     0693                     	;# 
  3672     0694                     	;# 
  3673     070C                     	;# 
  3674     070D                     	;# 
  3675     070E                     	;# 
  3676     070F                     	;# 
  3677     0710                     	;# 
  3678     0711                     	;# 
  3679     0712                     	;# 
  3680     0713                     	;# 
  3681     0714                     	;# 
  3682     0716                     	;# 
  3683     0717                     	;# 
  3684     0718                     	;# 
  3685     0719                     	;# 
  3686     071A                     	;# 
  3687     071B                     	;# 
  3688     071C                     	;# 
  3689     071D                     	;# 
  3690     071E                     	;# 
  3691     0796                     	;# 
  3692     0797                     	;# 
  3693     0798                     	;# 
  3694     0799                     	;# 
  3695     079A                     	;# 
  3696     079B                     	;# 
  3697     080C                     	;# 
  3698     080D                     	;# 
  3699     080E                     	;# 
  3700     080F                     	;# 
  3701     0810                     	;# 
  3702     0811                     	;# 
  3703     0812                     	;# 
  3704     0813                     	;# 
  3705     0814                     	;# 
  3706     081A                     	;# 
  3707     081B                     	;# 
  3708     081C                     	;# 
  3709     081D                     	;# 
  3710     081E                     	;# 
  3711     081F                     	;# 
  3712     088C                     	;# 
  3713     088D                     	;# 
  3714     088E                     	;# 
  3715     088F                     	;# 
  3716     0890                     	;# 
  3717     0891                     	;# 
  3718     0892                     	;# 
  3719     0893                     	;# 
  3720     0895                     	;# 
  3721     0896                     	;# 
  3722     0897                     	;# 
  3723     0898                     	;# 
  3724     0899                     	;# 
  3725     089A                     	;# 
  3726     089B                     	;# 
  3727     090C                     	;# 
  3728     090E                     	;# 
  3729     090F                     	;# 
  3730     091F                     	;# 
  3731     091F                     	;# 
  3732     098F                     	;# 
  3733     098F                     	;# 
  3734     0990                     	;# 
  3735     0991                     	;# 
  3736     0992                     	;# 
  3737     0993                     	;# 
  3738     0994                     	;# 
  3739     0995                     	;# 
  3740     0996                     	;# 
  3741     0997                     	;# 
  3742     0E0F                     	;# 
  3743     0E10                     	;# 
  3744     0E11                     	;# 
  3745     0E12                     	;# 
  3746     0E13                     	;# 
  3747     0E14                     	;# 
  3748     0E15                     	;# 
  3749     0E16                     	;# 
  3750     0E17                     	;# 
  3751     0E18                     	;# 
  3752     0E19                     	;# 
  3753     0E1A                     	;# 
  3754     0E1B                     	;# 
  3755     0E1C                     	;# 
  3756     0E1D                     	;# 
  3757     0E1E                     	;# 
  3758     0E1F                     	;# 
  3759     0E20                     	;# 
  3760     0E21                     	;# 
  3761     0E22                     	;# 
  3762     0E23                     	;# 
  3763     0E24                     	;# 
  3764     0E25                     	;# 
  3765     0E26                     	;# 
  3766     0E27                     	;# 
  3767     0E28                     	;# 
  3768     0E29                     	;# 
  3769     0E2A                     	;# 
  3770     0E2B                     	;# 
  3771     0E2C                     	;# 
  3772     0E2D                     	;# 
  3773     0E2E                     	;# 
  3774     0E2F                     	;# 
  3775     0E30                     	;# 
  3776     0E31                     	;# 
  3777     0E32                     	;# 
  3778     0E33                     	;# 
  3779     0E34                     	;# 
  3780     0E35                     	;# 
  3781     0E36                     	;# 
  3782     0E37                     	;# 
  3783     0E8F                     	;# 
  3784     0E90                     	;# 
  3785     0E91                     	;# 
  3786     0E92                     	;# 
  3787     0E93                     	;# 
  3788     0E94                     	;# 
  3789     0E95                     	;# 
  3790     0E96                     	;# 
  3791     0E97                     	;# 
  3792     0E9C                     	;# 
  3793     0E9D                     	;# 
  3794     0E9E                     	;# 
  3795     0EA1                     	;# 
  3796     0EA2                     	;# 
  3797     0EA3                     	;# 
  3798     0EA4                     	;# 
  3799     0EA5                     	;# 
  3800     0EA9                     	;# 
  3801     0EAA                     	;# 
  3802     0EAB                     	;# 
  3803     0EAC                     	;# 
  3804     0EB1                     	;# 
  3805     0EB2                     	;# 
  3806     0EB3                     	;# 
  3807     0EB8                     	;# 
  3808     0EB9                     	;# 
  3809     0EBA                     	;# 
  3810     0EBB                     	;# 
  3811     0EBC                     	;# 
  3812     0EBD                     	;# 
  3813     0EBE                     	;# 
  3814     0EC3                     	;# 
  3815     0EC5                     	;# 
  3816     0EC6                     	;# 
  3817     0EC7                     	;# 
  3818     0EC8                     	;# 
  3819     0EC9                     	;# 
  3820     0ECA                     	;# 
  3821     0ECB                     	;# 
  3822     0ECC                     	;# 
  3823     0F10                     	;# 
  3824     0F11                     	;# 
  3825     0F12                     	;# 
  3826     0F13                     	;# 
  3827     0F14                     	;# 
  3828     0F15                     	;# 
  3829     0F16                     	;# 
  3830     0F17                     	;# 
  3831     0F18                     	;# 
  3832     0F19                     	;# 
  3833     0F1A                     	;# 
  3834     0F1B                     	;# 
  3835     0F1C                     	;# 
  3836     0F1D                     	;# 
  3837     0F1E                     	;# 
  3838     0F1F                     	;# 
  3839     0F20                     	;# 
  3840     0F21                     	;# 
  3841     0F22                     	;# 
  3842     0F23                     	;# 
  3843     0F24                     	;# 
  3844     0F25                     	;# 
  3845     0F26                     	;# 
  3846     0F27                     	;# 
  3847     0F28                     	;# 
  3848     0F29                     	;# 
  3849     0F2A                     	;# 
  3850     0F2B                     	;# 
  3851     0F2C                     	;# 
  3852     0F2D                     	;# 
  3853     0F2E                     	;# 
  3854     0F2F                     	;# 
  3855     0F30                     	;# 
  3856     0F31                     	;# 
  3857     0F32                     	;# 
  3858     0F38                     	;# 
  3859     0F39                     	;# 
  3860     0F3A                     	;# 
  3861     0F3B                     	;# 
  3862     0F3C                     	;# 
  3863     0F3D                     	;# 
  3864     0F3E                     	;# 
  3865     0F3F                     	;# 
  3866     0F40                     	;# 
  3867     0F41                     	;# 
  3868     0F43                     	;# 
  3869     0F44                     	;# 
  3870     0F45                     	;# 
  3871     0F46                     	;# 
  3872     0F47                     	;# 
  3873     0F48                     	;# 
  3874     0F49                     	;# 
  3875     0F4A                     	;# 
  3876     0F4B                     	;# 
  3877     0F4C                     	;# 
  3878     0F4E                     	;# 
  3879     0F4F                     	;# 
  3880     0F50                     	;# 
  3881     0F51                     	;# 
  3882     0F52                     	;# 
  3883     0F53                     	;# 
  3884     0F54                     	;# 
  3885     0F55                     	;# 
  3886     0F56                     	;# 
  3887     0F57                     	;# 
  3888     0F59                     	;# 
  3889     0F5A                     	;# 
  3890     0F5B                     	;# 
  3891     0F5C                     	;# 
  3892     0F5D                     	;# 
  3893     0F61                     	;# 
  3894     0F62                     	;# 
  3895     0F64                     	;# 
  3896     0F65                     	;# 
  3897     0F66                     	;# 
  3898     0F67                     	;# 
  3899     0F68                     	;# 
  3900     0F69                     	;# 
  3901     0F6A                     	;# 
  3902     0F6B                     	;# 
  3903     0F6C                     	;# 
  3904     0F6D                     	;# 
  3905     0FE4                     	;# 
  3906     0FE5                     	;# 
  3907     0FE6                     	;# 
  3908     0FE7                     	;# 
  3909     0FE8                     	;# 
  3910     0FE9                     	;# 
  3911     0FEA                     	;# 
  3912     0FEB                     	;# 
  3913     0FED                     	;# 
  3914     0FEE                     	;# 
  3915     0FEF                     	;# 
  3916     0000                     	;# 
  3917     0001                     	;# 
  3918     0002                     	;# 
  3919     0003                     	;# 
  3920     0004                     	;# 
  3921     0005                     	;# 
  3922     0006                     	;# 
  3923     0007                     	;# 
  3924     0008                     	;# 
  3925     0009                     	;# 
  3926     000A                     	;# 
  3927     000B                     	;# 
  3928     000C                     	;# 
  3929     000D                     	;# 
  3930     000E                     	;# 
  3931     000F                     	;# 
  3932     0010                     	;# 
  3933     0011                     	;# 
  3934     0012                     	;# 
  3935     0013                     	;# 
  3936     0014                     	;# 
  3937     0015                     	;# 
  3938     0016                     	;# 
  3939     0017                     	;# 
  3940     0018                     	;# 
  3941     0019                     	;# 
  3942     001A                     	;# 
  3943     001C                     	;# 
  3944     001C                     	;# 
  3945     001D                     	;# 
  3946     001D                     	;# 
  3947     001E                     	;# 
  3948     001F                     	;# 
  3949     008C                     	;# 
  3950     008C                     	;# 
  3951     008D                     	;# 
  3952     008E                     	;# 
  3953     008E                     	;# 
  3954     008F                     	;# 
  3955     0090                     	;# 
  3956     0090                     	;# 
  3957     0091                     	;# 
  3958     0093                     	;# 
  3959     0094                     	;# 
  3960     0095                     	;# 
  3961     0096                     	;# 
  3962     0097                     	;# 
  3963     0098                     	;# 
  3964     0099                     	;# 
  3965     009A                     	;# 
  3966     009B                     	;# 
  3967     009C                     	;# 
  3968     009D                     	;# 
  3969     009E                     	;# 
  3970     010C                     	;# 
  3971     010D                     	;# 
  3972     010E                     	;# 
  3973     010E                     	;# 
  3974     010F                     	;# 
  3975     0110                     	;# 
  3976     0110                     	;# 
  3977     0111                     	;# 
  3978     0112                     	;# 
  3979     0112                     	;# 
  3980     0113                     	;# 
  3981     0114                     	;# 
  3982     0114                     	;# 
  3983     0115                     	;# 
  3984     0116                     	;# 
  3985     0116                     	;# 
  3986     0117                     	;# 
  3987     0119                     	;# 
  3988     0119                     	;# 
  3989     0119                     	;# 
  3990     011A                     	;# 
  3991     011A                     	;# 
  3992     011A                     	;# 
  3993     011B                     	;# 
  3994     011B                     	;# 
  3995     011B                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011C                     	;# 
  3999     011C                     	;# 
  4000     011C                     	;# 
  4001     011D                     	;# 
  4002     011D                     	;# 
  4003     011D                     	;# 
  4004     011E                     	;# 
  4005     011E                     	;# 
  4006     011E                     	;# 
  4007     011F                     	;# 
  4008     011F                     	;# 
  4009     011F                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     018C                     	;# 
  4013     018D                     	;# 
  4014     018E                     	;# 
  4015     018F                     	;# 
  4016     0190                     	;# 
  4017     0191                     	;# 
  4018     0192                     	;# 
  4019     0196                     	;# 
  4020     0197                     	;# 
  4021     0198                     	;# 
  4022     0199                     	;# 
  4023     019A                     	;# 
  4024     019B                     	;# 
  4025     019C                     	;# 
  4026     020C                     	;# 
  4027     020C                     	;# 
  4028     020D                     	;# 
  4029     020E                     	;# 
  4030     020F                     	;# 
  4031     020F                     	;# 
  4032     0210                     	;# 
  4033     0210                     	;# 
  4034     0211                     	;# 
  4035     0211                     	;# 
  4036     0212                     	;# 
  4037     0212                     	;# 
  4038     0213                     	;# 
  4039     0214                     	;# 
  4040     0215                     	;# 
  4041     0215                     	;# 
  4042     0216                     	;# 
  4043     0216                     	;# 
  4044     0217                     	;# 
  4045     0217                     	;# 
  4046     0218                     	;# 
  4047     0218                     	;# 
  4048     0219                     	;# 
  4049     021A                     	;# 
  4050     021B                     	;# 
  4051     021B                     	;# 
  4052     021C                     	;# 
  4053     021C                     	;# 
  4054     021D                     	;# 
  4055     021D                     	;# 
  4056     021E                     	;# 
  4057     021F                     	;# 
  4058     028C                     	;# 
  4059     028C                     	;# 
  4060     028D                     	;# 
  4061     028D                     	;# 
  4062     028E                     	;# 
  4063     028F                     	;# 
  4064     0290                     	;# 
  4065     0290                     	;# 
  4066     0291                     	;# 
  4067     0292                     	;# 
  4068     0292                     	;# 
  4069     0293                     	;# 
  4070     0293                     	;# 
  4071     0294                     	;# 
  4072     0295                     	;# 
  4073     0296                     	;# 
  4074     0296                     	;# 
  4075     0297                     	;# 
  4076     0298                     	;# 
  4077     0298                     	;# 
  4078     0299                     	;# 
  4079     0299                     	;# 
  4080     029A                     	;# 
  4081     029B                     	;# 
  4082     029C                     	;# 
  4083     029C                     	;# 
  4084     029D                     	;# 
  4085     030C                     	;# 
  4086     030C                     	;# 
  4087     030D                     	;# 
  4088     030E                     	;# 
  4089     030F                     	;# 
  4090     0310                     	;# 
  4091     0310                     	;# 
  4092     0311                     	;# 
  4093     0312                     	;# 
  4094     0313                     	;# 
  4095     0314                     	;# 
  4096     0314                     	;# 
  4097     0315                     	;# 
  4098     0316                     	;# 
  4099     0317                     	;# 
  4100     0318                     	;# 
  4101     0318                     	;# 
  4102     0319                     	;# 
  4103     031A                     	;# 
  4104     031B                     	;# 
  4105     031C                     	;# 
  4106     031C                     	;# 
  4107     031D                     	;# 
  4108     031E                     	;# 
  4109     031F                     	;# 
  4110     038C                     	;# 
  4111     038C                     	;# 
  4112     038D                     	;# 
  4113     038E                     	;# 
  4114     0390                     	;# 
  4115     0390                     	;# 
  4116     0391                     	;# 
  4117     0392                     	;# 
  4118     040C                     	;# 
  4119     040D                     	;# 
  4120     040E                     	;# 
  4121     040F                     	;# 
  4122     0410                     	;# 
  4123     0411                     	;# 
  4124     0416                     	;# 
  4125     0416                     	;# 
  4126     0417                     	;# 
  4127     0418                     	;# 
  4128     0418                     	;# 
  4129     0419                     	;# 
  4130     041A                     	;# 
  4131     041A                     	;# 
  4132     041B                     	;# 
  4133     041C                     	;# 
  4134     041C                     	;# 
  4135     041D                     	;# 
  4136     041E                     	;# 
  4137     041F                     	;# 
  4138     048C                     	;# 
  4139     048C                     	;# 
  4140     048D                     	;# 
  4141     048E                     	;# 
  4142     048F                     	;# 
  4143     048F                     	;# 
  4144     0490                     	;# 
  4145     0491                     	;# 
  4146     0492                     	;# 
  4147     0492                     	;# 
  4148     0493                     	;# 
  4149     0494                     	;# 
  4150     0495                     	;# 
  4151     0495                     	;# 
  4152     0496                     	;# 
  4153     0497                     	;# 
  4154     0498                     	;# 
  4155     0499                     	;# 
  4156     049A                     	;# 
  4157     049B                     	;# 
  4158     049C                     	;# 
  4159     049D                     	;# 
  4160     050C                     	;# 
  4161     050C                     	;# 
  4162     050D                     	;# 
  4163     050E                     	;# 
  4164     050F                     	;# 
  4165     050F                     	;# 
  4166     0510                     	;# 
  4167     0511                     	;# 
  4168     0512                     	;# 
  4169     0512                     	;# 
  4170     0513                     	;# 
  4171     0514                     	;# 
  4172     0515                     	;# 
  4173     0515                     	;# 
  4174     0516                     	;# 
  4175     0517                     	;# 
  4176     0518                     	;# 
  4177     0519                     	;# 
  4178     051A                     	;# 
  4179     051B                     	;# 
  4180     051C                     	;# 
  4181     051D                     	;# 
  4182     058C                     	;# 
  4183     058C                     	;# 
  4184     058D                     	;# 
  4185     058E                     	;# 
  4186     058F                     	;# 
  4187     058F                     	;# 
  4188     0590                     	;# 
  4189     0591                     	;# 
  4190     0592                     	;# 
  4191     0593                     	;# 
  4192     060C                     	;# 
  4193     060D                     	;# 
  4194     060E                     	;# 
  4195     060F                     	;# 
  4196     0610                     	;# 
  4197     0611                     	;# 
  4198     0612                     	;# 
  4199     0613                     	;# 
  4200     0614                     	;# 
  4201     0616                     	;# 
  4202     0617                     	;# 
  4203     0618                     	;# 
  4204     0619                     	;# 
  4205     061A                     	;# 
  4206     061B                     	;# 
  4207     061C                     	;# 
  4208     061D                     	;# 
  4209     061E                     	;# 
  4210     068C                     	;# 
  4211     068D                     	;# 
  4212     068E                     	;# 
  4213     068F                     	;# 
  4214     0690                     	;# 
  4215     0691                     	;# 
  4216     0692                     	;# 
  4217     0693                     	;# 
  4218     0694                     	;# 
  4219     070C                     	;# 
  4220     070D                     	;# 
  4221     070E                     	;# 
  4222     070F                     	;# 
  4223     0710                     	;# 
  4224     0711                     	;# 
  4225     0712                     	;# 
  4226     0713                     	;# 
  4227     0714                     	;# 
  4228     0716                     	;# 
  4229     0717                     	;# 
  4230     0718                     	;# 
  4231     0719                     	;# 
  4232     071A                     	;# 
  4233     071B                     	;# 
  4234     071C                     	;# 
  4235     071D                     	;# 
  4236     071E                     	;# 
  4237     0796                     	;# 
  4238     0797                     	;# 
  4239     0798                     	;# 
  4240     0799                     	;# 
  4241     079A                     	;# 
  4242     079B                     	;# 
  4243     080C                     	;# 
  4244     080D                     	;# 
  4245     080E                     	;# 
  4246     080F                     	;# 
  4247     0810                     	;# 
  4248     0811                     	;# 
  4249     0812                     	;# 
  4250     0813                     	;# 
  4251     0814                     	;# 
  4252     081A                     	;# 
  4253     081B                     	;# 
  4254     081C                     	;# 
  4255     081D                     	;# 
  4256     081E                     	;# 
  4257     081F                     	;# 
  4258     088C                     	;# 
  4259     088D                     	;# 
  4260     088E                     	;# 
  4261     088F                     	;# 
  4262     0890                     	;# 
  4263     0891                     	;# 
  4264     0892                     	;# 
  4265     0893                     	;# 
  4266     0895                     	;# 
  4267     0896                     	;# 
  4268     0897                     	;# 
  4269     0898                     	;# 
  4270     0899                     	;# 
  4271     089A                     	;# 
  4272     089B                     	;# 
  4273     090C                     	;# 
  4274     090E                     	;# 
  4275     090F                     	;# 
  4276     091F                     	;# 
  4277     091F                     	;# 
  4278     098F                     	;# 
  4279     098F                     	;# 
  4280     0990                     	;# 
  4281     0991                     	;# 
  4282     0992                     	;# 
  4283     0993                     	;# 
  4284     0994                     	;# 
  4285     0995                     	;# 
  4286     0996                     	;# 
  4287     0997                     	;# 
  4288     0E0F                     	;# 
  4289     0E10                     	;# 
  4290     0E11                     	;# 
  4291     0E12                     	;# 
  4292     0E13                     	;# 
  4293     0E14                     	;# 
  4294     0E15                     	;# 
  4295     0E16                     	;# 
  4296     0E17                     	;# 
  4297     0E18                     	;# 
  4298     0E19                     	;# 
  4299     0E1A                     	;# 
  4300     0E1B                     	;# 
  4301     0E1C                     	;# 
  4302     0E1D                     	;# 
  4303     0E1E                     	;# 
  4304     0E1F                     	;# 
  4305     0E20                     	;# 
  4306     0E21                     	;# 
  4307     0E22                     	;# 
  4308     0E23                     	;# 
  4309     0E24                     	;# 
  4310     0E25                     	;# 
  4311     0E26                     	;# 
  4312     0E27                     	;# 
  4313     0E28                     	;# 
  4314     0E29                     	;# 
  4315     0E2A                     	;# 
  4316     0E2B                     	;# 
  4317     0E2C                     	;# 
  4318     0E2D                     	;# 
  4319     0E2E                     	;# 
  4320     0E2F                     	;# 
  4321     0E30                     	;# 
  4322     0E31                     	;# 
  4323     0E32                     	;# 
  4324     0E33                     	;# 
  4325     0E34                     	;# 
  4326     0E35                     	;# 
  4327     0E36                     	;# 
  4328     0E37                     	;# 
  4329     0E8F                     	;# 
  4330     0E90                     	;# 
  4331     0E91                     	;# 
  4332     0E92                     	;# 
  4333     0E93                     	;# 
  4334     0E94                     	;# 
  4335     0E95                     	;# 
  4336     0E96                     	;# 
  4337     0E97                     	;# 
  4338     0E9C                     	;# 
  4339     0E9D                     	;# 
  4340     0E9E                     	;# 
  4341     0EA1                     	;# 
  4342     0EA2                     	;# 
  4343     0EA3                     	;# 
  4344     0EA4                     	;# 
  4345     0EA5                     	;# 
  4346     0EA9                     	;# 
  4347     0EAA                     	;# 
  4348     0EAB                     	;# 
  4349     0EAC                     	;# 
  4350     0EB1                     	;# 
  4351     0EB2                     	;# 
  4352     0EB3                     	;# 
  4353     0EB8                     	;# 
  4354     0EB9                     	;# 
  4355     0EBA                     	;# 
  4356     0EBB                     	;# 
  4357     0EBC                     	;# 
  4358     0EBD                     	;# 
  4359     0EBE                     	;# 
  4360     0EC3                     	;# 
  4361     0EC5                     	;# 
  4362     0EC6                     	;# 
  4363     0EC7                     	;# 
  4364     0EC8                     	;# 
  4365     0EC9                     	;# 
  4366     0ECA                     	;# 
  4367     0ECB                     	;# 
  4368     0ECC                     	;# 
  4369     0F10                     	;# 
  4370     0F11                     	;# 
  4371     0F12                     	;# 
  4372     0F13                     	;# 
  4373     0F14                     	;# 
  4374     0F15                     	;# 
  4375     0F16                     	;# 
  4376     0F17                     	;# 
  4377     0F18                     	;# 
  4378     0F19                     	;# 
  4379     0F1A                     	;# 
  4380     0F1B                     	;# 
  4381     0F1C                     	;# 
  4382     0F1D                     	;# 
  4383     0F1E                     	;# 
  4384     0F1F                     	;# 
  4385     0F20                     	;# 
  4386     0F21                     	;# 
  4387     0F22                     	;# 
  4388     0F23                     	;# 
  4389     0F24                     	;# 
  4390     0F25                     	;# 
  4391     0F26                     	;# 
  4392     0F27                     	;# 
  4393     0F28                     	;# 
  4394     0F29                     	;# 
  4395     0F2A                     	;# 
  4396     0F2B                     	;# 
  4397     0F2C                     	;# 
  4398     0F2D                     	;# 
  4399     0F2E                     	;# 
  4400     0F2F                     	;# 
  4401     0F30                     	;# 
  4402     0F31                     	;# 
  4403     0F32                     	;# 
  4404     0F38                     	;# 
  4405     0F39                     	;# 
  4406     0F3A                     	;# 
  4407     0F3B                     	;# 
  4408     0F3C                     	;# 
  4409     0F3D                     	;# 
  4410     0F3E                     	;# 
  4411     0F3F                     	;# 
  4412     0F40                     	;# 
  4413     0F41                     	;# 
  4414     0F43                     	;# 
  4415     0F44                     	;# 
  4416     0F45                     	;# 
  4417     0F46                     	;# 
  4418     0F47                     	;# 
  4419     0F48                     	;# 
  4420     0F49                     	;# 
  4421     0F4A                     	;# 
  4422     0F4B                     	;# 
  4423     0F4C                     	;# 
  4424     0F4E                     	;# 
  4425     0F4F                     	;# 
  4426     0F50                     	;# 
  4427     0F51                     	;# 
  4428     0F52                     	;# 
  4429     0F53                     	;# 
  4430     0F54                     	;# 
  4431     0F55                     	;# 
  4432     0F56                     	;# 
  4433     0F57                     	;# 
  4434     0F59                     	;# 
  4435     0F5A                     	;# 
  4436     0F5B                     	;# 
  4437     0F5C                     	;# 
  4438     0F5D                     	;# 
  4439     0F61                     	;# 
  4440     0F62                     	;# 
  4441     0F64                     	;# 
  4442     0F65                     	;# 
  4443     0F66                     	;# 
  4444     0F67                     	;# 
  4445     0F68                     	;# 
  4446     0F69                     	;# 
  4447     0F6A                     	;# 
  4448     0F6B                     	;# 
  4449     0F6C                     	;# 
  4450     0F6D                     	;# 
  4451     0FE4                     	;# 
  4452     0FE5                     	;# 
  4453     0FE6                     	;# 
  4454     0FE7                     	;# 
  4455     0FE8                     	;# 
  4456     0FE9                     	;# 
  4457     0FEA                     	;# 
  4458     0FEB                     	;# 
  4459     0FED                     	;# 
  4460     0FEE                     	;# 
  4461     0FEF                     	;# 
  4462     0000                     	;# 
  4463     0001                     	;# 
  4464     0002                     	;# 
  4465     0003                     	;# 
  4466     0004                     	;# 
  4467     0005                     	;# 
  4468     0006                     	;# 
  4469     0007                     	;# 
  4470     0008                     	;# 
  4471     0009                     	;# 
  4472     000A                     	;# 
  4473     000B                     	;# 
  4474     000C                     	;# 
  4475     000D                     	;# 
  4476     000E                     	;# 
  4477     000F                     	;# 
  4478     0010                     	;# 
  4479     0011                     	;# 
  4480     0012                     	;# 
  4481     0013                     	;# 
  4482     0014                     	;# 
  4483     0015                     	;# 
  4484     0016                     	;# 
  4485     0017                     	;# 
  4486     0018                     	;# 
  4487     0019                     	;# 
  4488     001A                     	;# 
  4489     001C                     	;# 
  4490     001C                     	;# 
  4491     001D                     	;# 
  4492     001D                     	;# 
  4493     001E                     	;# 
  4494     001F                     	;# 
  4495     008C                     	;# 
  4496     008C                     	;# 
  4497     008D                     	;# 
  4498     008E                     	;# 
  4499     008E                     	;# 
  4500     008F                     	;# 
  4501     0090                     	;# 
  4502     0090                     	;# 
  4503     0091                     	;# 
  4504     0093                     	;# 
  4505     0094                     	;# 
  4506     0095                     	;# 
  4507     0096                     	;# 
  4508     0097                     	;# 
  4509     0098                     	;# 
  4510     0099                     	;# 
  4511     009A                     	;# 
  4512     009B                     	;# 
  4513     009C                     	;# 
  4514     009D                     	;# 
  4515     009E                     	;# 
  4516     010C                     	;# 
  4517     010D                     	;# 
  4518     010E                     	;# 
  4519     010E                     	;# 
  4520     010F                     	;# 
  4521     0110                     	;# 
  4522     0110                     	;# 
  4523     0111                     	;# 
  4524     0112                     	;# 
  4525     0112                     	;# 
  4526     0113                     	;# 
  4527     0114                     	;# 
  4528     0114                     	;# 
  4529     0115                     	;# 
  4530     0116                     	;# 
  4531     0116                     	;# 
  4532     0117                     	;# 
  4533     0119                     	;# 
  4534     0119                     	;# 
  4535     0119                     	;# 
  4536     011A                     	;# 
  4537     011A                     	;# 
  4538     011A                     	;# 
  4539     011B                     	;# 
  4540     011B                     	;# 
  4541     011B                     	;# 
  4542     011B                     	;# 
  4543     011B                     	;# 
  4544     011C                     	;# 
  4545     011C                     	;# 
  4546     011C                     	;# 
  4547     011D                     	;# 
  4548     011D                     	;# 
  4549     011D                     	;# 
  4550     011E                     	;# 
  4551     011E                     	;# 
  4552     011E                     	;# 
  4553     011F                     	;# 
  4554     011F                     	;# 
  4555     011F                     	;# 
  4556     011F                     	;# 
  4557     011F                     	;# 
  4558     018C                     	;# 
  4559     018D                     	;# 
  4560     018E                     	;# 
  4561     018F                     	;# 
  4562     0190                     	;# 
  4563     0191                     	;# 
  4564     0192                     	;# 
  4565     0196                     	;# 
  4566     0197                     	;# 
  4567     0198                     	;# 
  4568     0199                     	;# 
  4569     019A                     	;# 
  4570     019B                     	;# 
  4571     019C                     	;# 
  4572     020C                     	;# 
  4573     020C                     	;# 
  4574     020D                     	;# 
  4575     020E                     	;# 
  4576     020F                     	;# 
  4577     020F                     	;# 
  4578     0210                     	;# 
  4579     0210                     	;# 
  4580     0211                     	;# 
  4581     0211                     	;# 
  4582     0212                     	;# 
  4583     0212                     	;# 
  4584     0213                     	;# 
  4585     0214                     	;# 
  4586     0215                     	;# 
  4587     0215                     	;# 
  4588     0216                     	;# 
  4589     0216                     	;# 
  4590     0217                     	;# 
  4591     0217                     	;# 
  4592     0218                     	;# 
  4593     0218                     	;# 
  4594     0219                     	;# 
  4595     021A                     	;# 
  4596     021B                     	;# 
  4597     021B                     	;# 
  4598     021C                     	;# 
  4599     021C                     	;# 
  4600     021D                     	;# 
  4601     021D                     	;# 
  4602     021E                     	;# 
  4603     021F                     	;# 
  4604     028C                     	;# 
  4605     028C                     	;# 
  4606     028D                     	;# 
  4607     028D                     	;# 
  4608     028E                     	;# 
  4609     028F                     	;# 
  4610     0290                     	;# 
  4611     0290                     	;# 
  4612     0291                     	;# 
  4613     0292                     	;# 
  4614     0292                     	;# 
  4615     0293                     	;# 
  4616     0293                     	;# 
  4617     0294                     	;# 
  4618     0295                     	;# 
  4619     0296                     	;# 
  4620     0296                     	;# 
  4621     0297                     	;# 
  4622     0298                     	;# 
  4623     0298                     	;# 
  4624     0299                     	;# 
  4625     0299                     	;# 
  4626     029A                     	;# 
  4627     029B                     	;# 
  4628     029C                     	;# 
  4629     029C                     	;# 
  4630     029D                     	;# 
  4631     030C                     	;# 
  4632     030C                     	;# 
  4633     030D                     	;# 
  4634     030E                     	;# 
  4635     030F                     	;# 
  4636     0310                     	;# 
  4637     0310                     	;# 
  4638     0311                     	;# 
  4639     0312                     	;# 
  4640     0313                     	;# 
  4641     0314                     	;# 
  4642     0314                     	;# 
  4643     0315                     	;# 
  4644     0316                     	;# 
  4645     0317                     	;# 
  4646     0318                     	;# 
  4647     0318                     	;# 
  4648     0319                     	;# 
  4649     031A                     	;# 
  4650     031B                     	;# 
  4651     031C                     	;# 
  4652     031C                     	;# 
  4653     031D                     	;# 
  4654     031E                     	;# 
  4655     031F                     	;# 
  4656     038C                     	;# 
  4657     038C                     	;# 
  4658     038D                     	;# 
  4659     038E                     	;# 
  4660     0390                     	;# 
  4661     0390                     	;# 
  4662     0391                     	;# 
  4663     0392                     	;# 
  4664     040C                     	;# 
  4665     040D                     	;# 
  4666     040E                     	;# 
  4667     040F                     	;# 
  4668     0410                     	;# 
  4669     0411                     	;# 
  4670     0416                     	;# 
  4671     0416                     	;# 
  4672     0417                     	;# 
  4673     0418                     	;# 
  4674     0418                     	;# 
  4675     0419                     	;# 
  4676     041A                     	;# 
  4677     041A                     	;# 
  4678     041B                     	;# 
  4679     041C                     	;# 
  4680     041C                     	;# 
  4681     041D                     	;# 
  4682     041E                     	;# 
  4683     041F                     	;# 
  4684     048C                     	;# 
  4685     048C                     	;# 
  4686     048D                     	;# 
  4687     048E                     	;# 
  4688     048F                     	;# 
  4689     048F                     	;# 
  4690     0490                     	;# 
  4691     0491                     	;# 
  4692     0492                     	;# 
  4693     0492                     	;# 
  4694     0493                     	;# 
  4695     0494                     	;# 
  4696     0495                     	;# 
  4697     0495                     	;# 
  4698     0496                     	;# 
  4699     0497                     	;# 
  4700     0498                     	;# 
  4701     0499                     	;# 
  4702     049A                     	;# 
  4703     049B                     	;# 
  4704     049C                     	;# 
  4705     049D                     	;# 
  4706     050C                     	;# 
  4707     050C                     	;# 
  4708     050D                     	;# 
  4709     050E                     	;# 
  4710     050F                     	;# 
  4711     050F                     	;# 
  4712     0510                     	;# 
  4713     0511                     	;# 
  4714     0512                     	;# 
  4715     0512                     	;# 
  4716     0513                     	;# 
  4717     0514                     	;# 
  4718     0515                     	;# 
  4719     0515                     	;# 
  4720     0516                     	;# 
  4721     0517                     	;# 
  4722     0518                     	;# 
  4723     0519                     	;# 
  4724     051A                     	;# 
  4725     051B                     	;# 
  4726     051C                     	;# 
  4727     051D                     	;# 
  4728     058C                     	;# 
  4729     058C                     	;# 
  4730     058D                     	;# 
  4731     058E                     	;# 
  4732     058F                     	;# 
  4733     058F                     	;# 
  4734     0590                     	;# 
  4735     0591                     	;# 
  4736     0592                     	;# 
  4737     0593                     	;# 
  4738     060C                     	;# 
  4739     060D                     	;# 
  4740     060E                     	;# 
  4741     060F                     	;# 
  4742     0610                     	;# 
  4743     0611                     	;# 
  4744     0612                     	;# 
  4745     0613                     	;# 
  4746     0614                     	;# 
  4747     0616                     	;# 
  4748     0617                     	;# 
  4749     0618                     	;# 
  4750     0619                     	;# 
  4751     061A                     	;# 
  4752     061B                     	;# 
  4753     061C                     	;# 
  4754     061D                     	;# 
  4755     061E                     	;# 
  4756     068C                     	;# 
  4757     068D                     	;# 
  4758     068E                     	;# 
  4759     068F                     	;# 
  4760     0690                     	;# 
  4761     0691                     	;# 
  4762     0692                     	;# 
  4763     0693                     	;# 
  4764     0694                     	;# 
  4765     070C                     	;# 
  4766     070D                     	;# 
  4767     070E                     	;# 
  4768     070F                     	;# 
  4769     0710                     	;# 
  4770     0711                     	;# 
  4771     0712                     	;# 
  4772     0713                     	;# 
  4773     0714                     	;# 
  4774     0716                     	;# 
  4775     0717                     	;# 
  4776     0718                     	;# 
  4777     0719                     	;# 
  4778     071A                     	;# 
  4779     071B                     	;# 
  4780     071C                     	;# 
  4781     071D                     	;# 
  4782     071E                     	;# 
  4783     0796                     	;# 
  4784     0797                     	;# 
  4785     0798                     	;# 
  4786     0799                     	;# 
  4787     079A                     	;# 
  4788     079B                     	;# 
  4789     080C                     	;# 
  4790     080D                     	;# 
  4791     080E                     	;# 
  4792     080F                     	;# 
  4793     0810                     	;# 
  4794     0811                     	;# 
  4795     0812                     	;# 
  4796     0813                     	;# 
  4797     0814                     	;# 
  4798     081A                     	;# 
  4799     081B                     	;# 
  4800     081C                     	;# 
  4801     081D                     	;# 
  4802     081E                     	;# 
  4803     081F                     	;# 
  4804     088C                     	;# 
  4805     088D                     	;# 
  4806     088E                     	;# 
  4807     088F                     	;# 
  4808     0890                     	;# 
  4809     0891                     	;# 
  4810     0892                     	;# 
  4811     0893                     	;# 
  4812     0895                     	;# 
  4813     0896                     	;# 
  4814     0897                     	;# 
  4815     0898                     	;# 
  4816     0899                     	;# 
  4817     089A                     	;# 
  4818     089B                     	;# 
  4819     090C                     	;# 
  4820     090E                     	;# 
  4821     090F                     	;# 
  4822     091F                     	;# 
  4823     091F                     	;# 
  4824     098F                     	;# 
  4825     098F                     	;# 
  4826     0990                     	;# 
  4827     0991                     	;# 
  4828     0992                     	;# 
  4829     0993                     	;# 
  4830     0994                     	;# 
  4831     0995                     	;# 
  4832     0996                     	;# 
  4833     0997                     	;# 
  4834     0E0F                     	;# 
  4835     0E10                     	;# 
  4836     0E11                     	;# 
  4837     0E12                     	;# 
  4838     0E13                     	;# 
  4839     0E14                     	;# 
  4840     0E15                     	;# 
  4841     0E16                     	;# 
  4842     0E17                     	;# 
  4843     0E18                     	;# 
  4844     0E19                     	;# 
  4845     0E1A                     	;# 
  4846     0E1B                     	;# 
  4847     0E1C                     	;# 
  4848     0E1D                     	;# 
  4849     0E1E                     	;# 
  4850     0E1F                     	;# 
  4851     0E20                     	;# 
  4852     0E21                     	;# 
  4853     0E22                     	;# 
  4854     0E23                     	;# 
  4855     0E24                     	;# 
  4856     0E25                     	;# 
  4857     0E26                     	;# 
  4858     0E27                     	;# 
  4859     0E28                     	;# 
  4860     0E29                     	;# 
  4861     0E2A                     	;# 
  4862     0E2B                     	;# 
  4863     0E2C                     	;# 
  4864     0E2D                     	;# 
  4865     0E2E                     	;# 
  4866     0E2F                     	;# 
  4867     0E30                     	;# 
  4868     0E31                     	;# 
  4869     0E32                     	;# 
  4870     0E33                     	;# 
  4871     0E34                     	;# 
  4872     0E35                     	;# 
  4873     0E36                     	;# 
  4874     0E37                     	;# 
  4875     0E8F                     	;# 
  4876     0E90                     	;# 
  4877     0E91                     	;# 
  4878     0E92                     	;# 
  4879     0E93                     	;# 
  4880     0E94                     	;# 
  4881     0E95                     	;# 
  4882     0E96                     	;# 
  4883     0E97                     	;# 
  4884     0E9C                     	;# 
  4885     0E9D                     	;# 
  4886     0E9E                     	;# 
  4887     0EA1                     	;# 
  4888     0EA2                     	;# 
  4889     0EA3                     	;# 
  4890     0EA4                     	;# 
  4891     0EA5                     	;# 
  4892     0EA9                     	;# 
  4893     0EAA                     	;# 
  4894     0EAB                     	;# 
  4895     0EAC                     	;# 
  4896     0EB1                     	;# 
  4897     0EB2                     	;# 
  4898     0EB3                     	;# 
  4899     0EB8                     	;# 
  4900     0EB9                     	;# 
  4901     0EBA                     	;# 
  4902     0EBB                     	;# 
  4903     0EBC                     	;# 
  4904     0EBD                     	;# 
  4905     0EBE                     	;# 
  4906     0EC3                     	;# 
  4907     0EC5                     	;# 
  4908     0EC6                     	;# 
  4909     0EC7                     	;# 
  4910     0EC8                     	;# 
  4911     0EC9                     	;# 
  4912     0ECA                     	;# 
  4913     0ECB                     	;# 
  4914     0ECC                     	;# 
  4915     0F10                     	;# 
  4916     0F11                     	;# 
  4917     0F12                     	;# 
  4918     0F13                     	;# 
  4919     0F14                     	;# 
  4920     0F15                     	;# 
  4921     0F16                     	;# 
  4922     0F17                     	;# 
  4923     0F18                     	;# 
  4924     0F19                     	;# 
  4925     0F1A                     	;# 
  4926     0F1B                     	;# 
  4927     0F1C                     	;# 
  4928     0F1D                     	;# 
  4929     0F1E                     	;# 
  4930     0F1F                     	;# 
  4931     0F20                     	;# 
  4932     0F21                     	;# 
  4933     0F22                     	;# 
  4934     0F23                     	;# 
  4935     0F24                     	;# 
  4936     0F25                     	;# 
  4937     0F26                     	;# 
  4938     0F27                     	;# 
  4939     0F28                     	;# 
  4940     0F29                     	;# 
  4941     0F2A                     	;# 
  4942     0F2B                     	;# 
  4943     0F2C                     	;# 
  4944     0F2D                     	;# 
  4945     0F2E                     	;# 
  4946     0F2F                     	;# 
  4947     0F30                     	;# 
  4948     0F31                     	;# 
  4949     0F32                     	;# 
  4950     0F38                     	;# 
  4951     0F39                     	;# 
  4952     0F3A                     	;# 
  4953     0F3B                     	;# 
  4954     0F3C                     	;# 
  4955     0F3D                     	;# 
  4956     0F3E                     	;# 
  4957     0F3F                     	;# 
  4958     0F40                     	;# 
  4959     0F41                     	;# 
  4960     0F43                     	;# 
  4961     0F44                     	;# 
  4962     0F45                     	;# 
  4963     0F46                     	;# 
  4964     0F47                     	;# 
  4965     0F48                     	;# 
  4966     0F49                     	;# 
  4967     0F4A                     	;# 
  4968     0F4B                     	;# 
  4969     0F4C                     	;# 
  4970     0F4E                     	;# 
  4971     0F4F                     	;# 
  4972     0F50                     	;# 
  4973     0F51                     	;# 
  4974     0F52                     	;# 
  4975     0F53                     	;# 
  4976     0F54                     	;# 
  4977     0F55                     	;# 
  4978     0F56                     	;# 
  4979     0F57                     	;# 
  4980     0F59                     	;# 
  4981     0F5A                     	;# 
  4982     0F5B                     	;# 
  4983     0F5C                     	;# 
  4984     0F5D                     	;# 
  4985     0F61                     	;# 
  4986     0F62                     	;# 
  4987     0F64                     	;# 
  4988     0F65                     	;# 
  4989     0F66                     	;# 
  4990     0F67                     	;# 
  4991     0F68                     	;# 
  4992     0F69                     	;# 
  4993     0F6A                     	;# 
  4994     0F6B                     	;# 
  4995     0F6C                     	;# 
  4996     0F6D                     	;# 
  4997     0FE4                     	;# 
  4998     0FE5                     	;# 
  4999     0FE6                     	;# 
  5000     0FE7                     	;# 
  5001     0FE8                     	;# 
  5002     0FE9                     	;# 
  5003     0FEA                     	;# 
  5004     0FEB                     	;# 
  5005     0FED                     	;# 
  5006     0FEE                     	;# 
  5007     0FEF                     	;# 
  5008                           
  5009 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  5010     0000                     
  5011 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  5012     0000                     
  5013 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  5014     0000                     
  5015 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  5016     0000                     
  5017 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  5018     0000                     
  5019 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  5020     0000                     
  5021 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  5022     0000                     
  5023 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  5024     0000                     
  5025 ;; Function _I2C1_DO_TX is unused but had its address taken
  5026     0000                     
  5027 ;; Function _I2C1_DO_RX is unused but had its address taken
  5028     0000                     
  5029 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  5030     0000                     
  5031 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  5032     0000                     
  5033 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  5034     0000                     
  5035 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  5036     0000                     
  5037 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  5038     0000                     
  5039 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  5040     0000                     
  5041 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  5042     0000                     
  5043 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  5044     0000                     
  5045 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  5046     0000                     
  5047 ;; Function _I2C1_DO_RESET is unused but had its address taken
  5048     0000                     
  5049 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  5050     0000                     
  5051 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  5052     0000                     
  5053 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  5054     0000                     
  5055                           	psect	stringtext1
  5056     1000                     __pstringtext1:
  5057     1000                     _i2c1_fsmStateTable:
  5058     1000  3400               	retlw	0
  5059     1001  3400               	retlw	0
  5060     1002  3400               	retlw	0
  5061     1003  3400               	retlw	0
  5062     1004  3400               	retlw	0
  5063     1005  3400               	retlw	0
  5064     1006  3400               	retlw	0
  5065     1007  3400               	retlw	0
  5066     1008  3400               	retlw	0
  5067     1009  3400               	retlw	0
  5068     100A  3400               	retlw	0
  5069     100B  3400               	retlw	0
  5070     100C  3400               	retlw	0
  5071     100D  3400               	retlw	0
  5072     100E  3400               	retlw	0
  5073     100F  3400               	retlw	0
  5074     1010  3400               	retlw	0
  5075     1011  3400               	retlw	0
  5076     1012  3400               	retlw	0
  5077     1013  3400               	retlw	0
  5078     1014  3400               	retlw	0
  5079     1015  3400               	retlw	0
  5080     1016  3400               	retlw	0
  5081     1017  3400               	retlw	0
  5082     1018  3400               	retlw	0
  5083     1019  3400               	retlw	0
  5084     101A  3400               	retlw	0
  5085     101B  3400               	retlw	0
  5086     101C  3400               	retlw	0
  5087     101D  3400               	retlw	0
  5088     101E  3400               	retlw	0
  5089     101F  3400               	retlw	0
  5090     1020                     __end_of_i2c1_fsmStateTable:
  5091     0014                     _TRISD	set	20
  5092     0013                     _TRISC	set	19
  5093     0012                     _TRISB	set	18
  5094     0011                     _TRISA	set	17
  5095     0015                     _TRISE	set	21
  5096     0018                     _LATC	set	24
  5097     0017                     _LATB	set	23
  5098     0016                     _LATA	set	22
  5099     0019                     _LATD	set	25
  5100     001A                     _LATE	set	26
  5101     0013                     _TRISCbits	set	19
  5102     0094                     _ADCON1bits	set	148
  5103     008E                     _ADPREVL	set	142
  5104     008F                     _ADPREVH	set	143
  5105     0097                     _ADSTATbits	set	151
  5106     0090                     _ADACCL	set	144
  5107     0091                     _ADACCH	set	145
  5108     0095                     _ADCON2bits	set	149
  5109     0096                     _ADCON3bits	set	150
  5110     008C                     _ADRESL	set	140
  5111     008D                     _ADRESH	set	141
  5112     0093                     _ADCON0bits	set	147
  5113     009D                     _ADACQ	set	157
  5114     0093                     _ADCON0	set	147
  5115     0098                     _ADCLK	set	152
  5116     0099                     _ADACT	set	153
  5117     009A                     _ADREF	set	154
  5118     0097                     _ADSTAT	set	151
  5119     0096                     _ADCON3	set	150
  5120     0095                     _ADCON2	set	149
  5121     0094                     _ADCON1	set	148
  5122     009C                     _ADPRE	set	156
  5123     009B                     _ADCAP	set	155
  5124     009E                     _ADPCH	set	158
  5125     0116                     _ADERRL	set	278
  5126     0117                     _ADERRH	set	279
  5127     0114                     _ADFLTRL	set	276
  5128     0115                     _ADFLTRH	set	277
  5129     010C                     _ADCNT	set	268
  5130     010D                     _ADRPT	set	269
  5131     0113                     _ADSTPTH	set	275
  5132     0112                     _ADSTPTL	set	274
  5133     0111                     _ADUTHH	set	273
  5134     0110                     _ADUTHL	set	272
  5135     010F                     _ADLTHH	set	271
  5136     010E                     _ADLTHL	set	270
  5137     018C                     _SSP1BUF	set	396
  5138     018F                     _SSP1STATbits	set	399
  5139     0191                     _SSP1CON2bits	set	401
  5140     0190                     _SSP1CON1bits	set	400
  5141     018D                     _SSP1ADD	set	397
  5142     0191                     _SSP1CON2	set	401
  5143     0190                     _SSP1CON1	set	400
  5144     018F                     _SSP1STAT	set	399
  5145     020F                     _T1GCONbits	set	527
  5146     020E                     _T1CONbits	set	526
  5147     020E                     _T1CON	set	526
  5148     020C                     _TMR1L	set	524
  5149     020D                     _TMR1H	set	525
  5150     0211                     _T1CLK	set	529
  5151     0210                     _T1GATE	set	528
  5152     020F                     _T1GCON	set	527
  5153     0710                     _PIR4bits	set	1808
  5154     0719                     _PIE3bits	set	1817
  5155     070F                     _PIR3bits	set	1807
  5156     079B                     _PMD5	set	1947
  5157     079A                     _PMD4	set	1946
  5158     0799                     _PMD3	set	1945
  5159     0798                     _PMD2	set	1944
  5160     0797                     _PMD1	set	1943
  5161     0796                     _PMD0	set	1942
  5162     0892                     _OSCTUNE	set	2194
  5163     0893                     _OSCFRQ	set	2195
  5164     0891                     _OSCEN	set	2193
  5165     088F                     _OSCCON3	set	2191
  5166     088D                     _OSCCON1	set	2189
  5167     0EC6                     _SSP1DATPPS	set	3782
  5168     0EC5                     _SSP1CLKPPS	set	3781
  5169     0E92                     _T1CKIPPS	set	3730
  5170     0F24                     _RC4PPS	set	3876
  5171     0F23                     _RC3PPS	set	3875
  5172     0F68                     _INLVLE	set	3944
  5173     0F5D                     _INLVLD	set	3933
  5174     0F52                     _INLVLC	set	3922
  5175     0F47                     _INLVLB	set	3911
  5176     0F3C                     _INLVLA	set	3900
  5177     0F67                     _SLRCONE	set	3943
  5178     0F5C                     _SLRCOND	set	3932
  5179     0F51                     _SLRCONC	set	3921
  5180     0F46                     _SLRCONB	set	3910
  5181     0F3B                     _SLRCONA	set	3899
  5182     0F5B                     _ODCOND	set	3931
  5183     0F50                     _ODCONC	set	3920
  5184     0F45                     _ODCONB	set	3909
  5185     0F3A                     _ODCONA	set	3898
  5186     0F66                     _ODCONE	set	3942
  5187     0F4F                     _WPUC	set	3919
  5188     0F39                     _WPUA	set	3897
  5189     0F44                     _WPUB	set	3908
  5190     0F65                     _WPUE	set	3941
  5191     0F5A                     _WPUD	set	3930
  5192     0F38                     _ANSELA	set	3896
  5193     0F64                     _ANSELE	set	3940
  5194     0F43                     _ANSELB	set	3907
  5195     0F4E                     _ANSELC	set	3918
  5196     0F59                     _ANSELD	set	3929
  5197     1020                     STR_1:
  5198     1020  3425               	retlw	37	;'%'
  5199     1021  3430               	retlw	48	;'0'
  5200     1022  3432               	retlw	50	;'2'
  5201     1023  3464               	retlw	100	;'d'
  5202     1024  343A               	retlw	58	;':'
  5203     1025  3425               	retlw	37	;'%'
  5204     1026  3430               	retlw	48	;'0'
  5205     1027  3432               	retlw	50	;'2'
  5206     1028  3464               	retlw	100	;'d'
  5207     1029  343A               	retlw	58	;':'
  5208     102A  3425               	retlw	37	;'%'
  5209     102B  3430               	retlw	48	;'0'
  5210     102C  3432               	retlw	50	;'2'
  5211     102D  3464               	retlw	100	;'d'
  5212     102E  3400               	retlw	0
  5213                           
  5214                           	psect	stringtext2
  5215     102F                     __pstringtext2:
  5216     102F                     STR_2:
  5217     102F  3425               	retlw	37	;'%'
  5218     1030  3430               	retlw	48	;'0'
  5219     1031  3432               	retlw	50	;'2'
  5220     1032  3464               	retlw	100	;'d'
  5221     1033  3420               	retlw	32	;' '
  5222     1034  3443               	retlw	67	;'C'
  5223     1035  3420               	retlw	32	;' '
  5224     1036  3400               	retlw	0
  5225                           
  5226                           	psect	stringtext3
  5227     1037                     __pstringtext3:
  5228     1037                     STR_3:
  5229     1037  344C               	retlw	76	;'L'
  5230     1038  3425               	retlw	37	;'%'
  5231     1039  3464               	retlw	100	;'d'
  5232     103A  3400               	retlw	0
  5233                           
  5234                           	psect	stringtext4
  5235     103B                     __pstringtext4:
  5236     103B                     STR_4:
  5237     103B  3441               	retlw	65	;'A'
  5238     103C  3400               	retlw	0
  5239                           
  5240                           	psect	stringtext5
  5241     103D                     __pstringtext5:
  5242     103D                     STR_5:
  5243     103D  3443               	retlw	67	;'C'
  5244     103E  3400               	retlw	0
  5245                           
  5246                           	psect	stringtext6
  5247     103F                     __pstringtext6:
  5248     103F                     STR_8:
  5249     103F  344C               	retlw	76	;'L'
  5250     1040  3400               	retlw	0
  5251                           
  5252                           	psect	stringtext7
  5253     1041                     __pstringtext7:
  5254     1041                     STR_6:
  5255     1041  3454               	retlw	84	;'T'
  5256     1042  3400               	retlw	0
  5257                           
  5258                           	psect	stringtext8
  5259     0000                     __pstringtext8:
  5260     1035                     
  5261                           	psect	cinit
  5262     07E5                     start_initialization:	
  5263                           ; #config settings
  5264                           
  5265     07E5                     __initialization:
  5266                           
  5267                           ; Clear objects allocated to BANK0
  5268     07E5  3061               	movlw	low __pbssBANK0
  5269     07E6  0084               	movwf	4
  5270     07E7  3000               	movlw	high __pbssBANK0
  5271     07E8  0085               	movwf	5
  5272     07E9  3007               	movlw	7
  5273     07EA  318D  2570  3187   	fcall	clear_ram0
  5274                           
  5275                           ; Clear objects allocated to BANK1
  5276     07ED  30C8               	movlw	low __pbssBANK1
  5277     07EE  0084               	movwf	4
  5278     07EF  3000               	movlw	high __pbssBANK1
  5279     07F0  0085               	movwf	5
  5280     07F1  301D               	movlw	29
  5281     07F2  318D  2570  3187   	fcall	clear_ram0
  5282                           
  5283                           ; Clear objects allocated to BANK2
  5284     07F5  3020               	movlw	low __pbssBANK2
  5285     07F6  0084               	movwf	4
  5286     07F7  3001               	movlw	high __pbssBANK2
  5287     07F8  0085               	movwf	5
  5288     07F9  3020               	movlw	32
  5289     07FA  318D  2570  3187   	fcall	clear_ram0
  5290     07FD                     end_of_initialization:	
  5291                           ;End of C runtime variable initialization code
  5292                           
  5293     07FD                     __end_of__initialization:
  5294     07FD  0020               	movlb	0
  5295     07FE  3186  2E4D         	ljmp	_main	;jump to C main() function
  5296                           
  5297                           	psect	bssBANK0
  5298     0061                     __pbssBANK0:
  5299     0061                     _width:
  5300     0061                     	ds	2
  5301     0063                     _prec:
  5302     0063                     	ds	2
  5303     0065                     _timer1ReloadVal:
  5304     0065                     	ds	2
  5305     0067                     _flags:
  5306     0067                     	ds	1
  5307                           
  5308                           	psect	bssBANK1
  5309     00C8                     __pbssBANK1:
  5310     00C8                     _I2C1_Status:
  5311     00C8                     	ds	29
  5312                           
  5313                           	psect	bssBANK2
  5314     0120                     __pbssBANK2:
  5315     0120                     _dbuf:
  5316     0120                     	ds	32
  5317                           
  5318                           	psect	clrtext
  5319     0D70                     clear_ram0:	
  5320                           ;	Called with FSR0 containing the base address, and
  5321                           ;	WREG with the size to clear
  5322                           
  5323     0D70  0064               	clrwdt	;clear the watchdog before getting into this loop
  5324     0D71                     clrloop0:
  5325     0D71  0180               	clrf	0	;clear RAM location pointed to by FSR
  5326     0D72  3101               	addfsr 0,1
  5327     0D73  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5328     0D74  2D71               	goto	clrloop0	;have we reached the end yet?
  5329     0D75  3400               	retlw	0	;all done for this memory range, return
  5330                           
  5331                           	psect	cstackBANK1
  5332     00A0                     __pcstackBANK1:
  5333     00A0                     main@time_buffer:
  5334                           
  5335                           ; 8 bytes @ 0x0
  5336     00A0                     	ds	8
  5337     00A8                     main@measure_buffer:
  5338                           
  5339                           ; 6 bytes @ 0x8
  5340     00A8                     	ds	6
  5341     00AE                     main@CLKM:
  5342                           
  5343                           ; 2 bytes @ 0xE
  5344     00AE                     	ds	2
  5345     00B0                     main@ALAF:
  5346                           
  5347                           ; 2 bytes @ 0x10
  5348     00B0                     	ds	2
  5349     00B2                     main@ALAH:
  5350                           
  5351                           ; 2 bytes @ 0x12
  5352     00B2                     	ds	2
  5353     00B4                     main@ALAM:
  5354                           
  5355                           ; 2 bytes @ 0x14
  5356     00B4                     	ds	2
  5357     00B6                     main@ALAS:
  5358                           
  5359                           ; 2 bytes @ 0x16
  5360     00B6                     	ds	2
  5361     00B8                     main@ALAT:
  5362                           
  5363                           ; 2 bytes @ 0x18
  5364     00B8                     	ds	2
  5365     00BA                     main@ALAL:
  5366                           
  5367                           ; 2 bytes @ 0x1A
  5368     00BA                     	ds	2
  5369     00BC                     main@count:
  5370                           
  5371                           ; 2 bytes @ 0x1C
  5372     00BC                     	ds	2
  5373     00BE                     main@PMON:
  5374                           
  5375                           ; 2 bytes @ 0x1E
  5376     00BE                     	ds	2
  5377     00C0                     main@hours:
  5378                           
  5379                           ; 2 bytes @ 0x20
  5380     00C0                     	ds	2
  5381     00C2                     main@temperature:
  5382                           
  5383                           ; 1 bytes @ 0x22
  5384     00C2                     	ds	1
  5385     00C3                     main@luminosity:
  5386                           
  5387                           ; 1 bytes @ 0x23
  5388     00C3                     	ds	1
  5389     00C4                     main@minutes:
  5390                           
  5391                           ; 2 bytes @ 0x24
  5392     00C4                     	ds	2
  5393     00C6                     main@seconds:
  5394                           
  5395                           ; 2 bytes @ 0x26
  5396     00C6                     	ds	2
  5397                           
  5398                           	psect	cstackCOMMON
  5399     0070                     __pcstackCOMMON:
  5400     0070                     ?_PMD_Initialize:
  5401     0070                     ??_PMD_Initialize:	
  5402                           ; 1 bytes @ 0x0
  5403                           
  5404     0070                     ?_I2C1_Initialize:	
  5405                           ; 1 bytes @ 0x0
  5406                           
  5407     0070                     ??_I2C1_Initialize:	
  5408                           ; 1 bytes @ 0x0
  5409                           
  5410     0070                     ?_PIN_MANAGER_Initialize:	
  5411                           ; 1 bytes @ 0x0
  5412                           
  5413     0070                     ??_PIN_MANAGER_Initialize:	
  5414                           ; 1 bytes @ 0x0
  5415                           
  5416     0070                     ?_OSCILLATOR_Initialize:	
  5417                           ; 1 bytes @ 0x0
  5418                           
  5419     0070                     ??_OSCILLATOR_Initialize:	
  5420                           ; 1 bytes @ 0x0
  5421                           
  5422     0070                     ?_ADCC_Initialize:	
  5423                           ; 1 bytes @ 0x0
  5424                           
  5425     0070                     ??_ADCC_Initialize:	
  5426                           ; 1 bytes @ 0x0
  5427                           
  5428     0070                     ?_TMR1_Initialize:	
  5429                           ; 1 bytes @ 0x0
  5430                           
  5431     0070                     ??_TMR1_Initialize:	
  5432                           ; 1 bytes @ 0x0
  5433                           
  5434     0070                     ?_putch:	
  5435                           ; 1 bytes @ 0x0
  5436                           
  5437     0070                     ??_putch:	
  5438                           ; 1 bytes @ 0x0
  5439                           
  5440     0070                     ?_OpenI2C:	
  5441                           ; 1 bytes @ 0x0
  5442                           
  5443     0070                     ??_OpenI2C:	
  5444                           ; 1 bytes @ 0x0
  5445                           
  5446     0070                     ?_ReadI2C:	
  5447                           ; 1 bytes @ 0x0
  5448                           
  5449     0070                     ??_ReadI2C:	
  5450                           ; 1 bytes @ 0x0
  5451                           
  5452     0070                     ?_WriteI2C:	
  5453                           ; 1 bytes @ 0x0
  5454                           
  5455     0070                     ??_WriteI2C:	
  5456                           ; 1 bytes @ 0x0
  5457                           
  5458     0070                     ?_LCDsend:	
  5459                           ; 1 bytes @ 0x0
  5460                           
  5461     0070                     ?_LCDrecv:	
  5462                           ; 1 bytes @ 0x0
  5463                           
  5464     0070                     ?_LCDinit:	
  5465                           ; 1 bytes @ 0x0
  5466                           
  5467     0070                     ?_LCDcmd:	
  5468                           ; 1 bytes @ 0x0
  5469                           
  5470     0070                     ?_LCDchar:	
  5471                           ; 1 bytes @ 0x0
  5472                           
  5473     0070                     ?_SYSTEM_Initialize:	
  5474                           ; 1 bytes @ 0x0
  5475                           
  5476     0070                     ??_SYSTEM_Initialize:	
  5477                           ; 1 bytes @ 0x0
  5478                           
  5479     0070                     ?_readTC74:	
  5480                           ; 1 bytes @ 0x0
  5481                           
  5482     0070                     ?_main:	
  5483                           ; 1 bytes @ 0x0
  5484                           
  5485     0070                     ?_fputc:	
  5486                           ; 1 bytes @ 0x0
  5487                           
  5488     0070                     ?_ADCC_GetSingleConversion:	
  5489                           ; 2 bytes @ 0x0
  5490                           
  5491     0070                     ?___wmul:	
  5492                           ; 2 bytes @ 0x0
  5493                           
  5494     0070                     ?___awdiv:	
  5495                           ; 2 bytes @ 0x0
  5496                           
  5497     0070                     ?___awmod:	
  5498                           ; 2 bytes @ 0x0
  5499                           
  5500     0070                     putch@c:	
  5501                           ; 2 bytes @ 0x0
  5502                           
  5503     0070                     ___wmul@multiplier:	
  5504                           ; 1 bytes @ 0x0
  5505                           
  5506     0070                     ___awdiv@divisor:	
  5507                           ; 2 bytes @ 0x0
  5508                           
  5509     0070                     ___awmod@divisor:	
  5510                           ; 2 bytes @ 0x0
  5511                           
  5512     0070                     fputc@c:	
  5513                           ; 2 bytes @ 0x0
  5514                           
  5515                           
  5516                           ; 2 bytes @ 0x0
  5517     0070                     	ds	1
  5518     0071                     WriteI2C@data_out:
  5519                           
  5520                           ; 1 bytes @ 0x1
  5521     0071                     	ds	1
  5522     0072                     ??_LCDsend:
  5523     0072                     ??_LCDrecv:	
  5524                           ; 1 bytes @ 0x2
  5525                           
  5526     0072                     ?_LCDsend2x4:	
  5527                           ; 1 bytes @ 0x2
  5528                           
  5529     0072                     ??_ADCC_GetSingleConversion:	
  5530                           ; 1 bytes @ 0x2
  5531                           
  5532     0072                     ??_readTC74:	
  5533                           ; 1 bytes @ 0x2
  5534                           
  5535     0072                     LCDsend2x4@mode:	
  5536                           ; 1 bytes @ 0x2
  5537                           
  5538     0072                     ADCC_GetSingleConversion@channel:	
  5539                           ; 1 bytes @ 0x2
  5540                           
  5541     0072                     fputc@fp:	
  5542                           ; 1 bytes @ 0x2
  5543                           
  5544     0072                     ___wmul@multiplicand:	
  5545                           ; 1 bytes @ 0x2
  5546                           
  5547     0072                     ___awdiv@dividend:	
  5548                           ; 2 bytes @ 0x2
  5549                           
  5550     0072                     ___awmod@dividend:	
  5551                           ; 2 bytes @ 0x2
  5552                           
  5553                           
  5554                           ; 2 bytes @ 0x2
  5555     0072                     	ds	1
  5556     0073                     ??_fputc:
  5557     0073                     ??_LCDsend2x4:	
  5558                           ; 1 bytes @ 0x3
  5559                           
  5560     0073                     LCDsend@c:	
  5561                           ; 1 bytes @ 0x3
  5562                           
  5563     0073                     readTC74@value:	
  5564                           ; 1 bytes @ 0x3
  5565                           
  5566                           
  5567                           ; 1 bytes @ 0x3
  5568     0073                     	ds	1
  5569     0074                     ??___wmul:
  5570     0074                     ??___awdiv:	
  5571                           ; 1 bytes @ 0x4
  5572                           
  5573     0074                     ??___awmod:	
  5574                           ; 1 bytes @ 0x4
  5575                           
  5576     0074                     LCDrecv@hc:	
  5577                           ; 1 bytes @ 0x4
  5578                           
  5579     0074                     LCDsend2x4@c:	
  5580                           ; 1 bytes @ 0x4
  5581                           
  5582     0074                     ___wmul@product:	
  5583                           ; 1 bytes @ 0x4
  5584                           
  5585                           
  5586                           ; 2 bytes @ 0x4
  5587     0074                     	ds	1
  5588     0075                     LCDrecv@lc:
  5589     0075                     LCDsend2x4@hc:	
  5590                           ; 1 bytes @ 0x5
  5591                           
  5592     0075                     ___awdiv@counter:	
  5593                           ; 1 bytes @ 0x5
  5594                           
  5595     0075                     ___awmod@counter:	
  5596                           ; 1 bytes @ 0x5
  5597                           
  5598                           
  5599                           ; 1 bytes @ 0x5
  5600     0075                     	ds	1
  5601     0076                     ?_read_prec_or_width:
  5602     0076                     LCDrecv@mode:	
  5603                           ; 2 bytes @ 0x6
  5604                           
  5605     0076                     LCDsend2x4@lc:	
  5606                           ; 1 bytes @ 0x6
  5607                           
  5608     0076                     ___awdiv@sign:	
  5609                           ; 1 bytes @ 0x6
  5610                           
  5611     0076                     ___awmod@sign:	
  5612                           ; 1 bytes @ 0x6
  5613                           
  5614     0076                     read_prec_or_width@ap:	
  5615                           ; 1 bytes @ 0x6
  5616                           
  5617                           
  5618                           ; 1 bytes @ 0x6
  5619     0076                     	ds	1
  5620     0077                     ??_LCDinit:
  5621     0077                     ??_LCDcmd:	
  5622                           ; 1 bytes @ 0x7
  5623                           
  5624     0077                     ??_LCDchar:	
  5625                           ; 1 bytes @ 0x7
  5626                           
  5627     0077                     ?_abs:	
  5628                           ; 1 bytes @ 0x7
  5629                           
  5630     0077                     ?_LCDbusy:	
  5631                           ; 2 bytes @ 0x7
  5632                           
  5633     0077                     LCDcmd@c:	
  5634                           ; 2 bytes @ 0x7
  5635                           
  5636     0077                     LCDchar@c:	
  5637                           ; 1 bytes @ 0x7
  5638                           
  5639     0077                     ___awdiv@quotient:	
  5640                           ; 1 bytes @ 0x7
  5641                           
  5642     0077                     abs@a:	
  5643                           ; 2 bytes @ 0x7
  5644                           
  5645                           
  5646                           ; 2 bytes @ 0x7
  5647     0077                     	ds	1
  5648     0078                     ?_LCDstr:
  5649     0078                     ?_LCDpos:	
  5650                           ; 1 bytes @ 0x8
  5651                           
  5652     0078                     ??_read_prec_or_width:	
  5653                           ; 1 bytes @ 0x8
  5654                           
  5655     0078                     ?_fputs:	
  5656                           ; 1 bytes @ 0x8
  5657                           
  5658     0078                     LCDpos@c:	
  5659                           ; 2 bytes @ 0x8
  5660                           
  5661     0078                     fputs@fp:	
  5662                           ; 1 bytes @ 0x8
  5663                           
  5664     0078                     LCDstr@p:	
  5665                           ; 1 bytes @ 0x8
  5666                           
  5667                           
  5668                           ; 2 bytes @ 0x8
  5669     0078                     	ds	1
  5670     0079                     ??_fputs:
  5671     0079                     ??_abs:	
  5672                           ; 1 bytes @ 0x9
  5673                           
  5674     0079                     ??_LCDbusy:	
  5675                           ; 1 bytes @ 0x9
  5676                           
  5677     0079                     ??_LCDpos:	
  5678                           ; 1 bytes @ 0x9
  5679                           
  5680     0079                     LCDpos@l:	
  5681                           ; 1 bytes @ 0x9
  5682                           
  5683                           
  5684                           ; 1 bytes @ 0x9
  5685     0079                     	ds	1
  5686     007A                     ??_LCDstr:
  5687     007A                     LCDpos@p:	
  5688                           ; 1 bytes @ 0xA
  5689                           
  5690                           
  5691                           ; 1 bytes @ 0xA
  5692     007A                     	ds	1
  5693     007B                     ?_pad:
  5694     007B                     pad@buf:	
  5695                           ; 1 bytes @ 0xB
  5696                           
  5697                           
  5698                           ; 1 bytes @ 0xB
  5699     007B                     	ds	1
  5700     007C                     LCDstr@c:
  5701     007C                     pad@p:	
  5702                           ; 1 bytes @ 0xC
  5703                           
  5704                           
  5705                           ; 2 bytes @ 0xC
  5706     007C                     	ds	2
  5707                           
  5708                           	psect	cstackBANK0
  5709     0020                     __pcstackBANK0:
  5710     0020                     read_prec_or_width@c:
  5711     0020                     fputs@c:	
  5712                           ; 1 bytes @ 0x0
  5713                           
  5714                           
  5715                           ; 1 bytes @ 0x0
  5716     0020                     	ds	1
  5717     0021                     read_prec_or_width@n:
  5718     0021                     fputs@i:	
  5719                           ; 2 bytes @ 0x1
  5720                           
  5721                           
  5722                           ; 2 bytes @ 0x1
  5723     0021                     	ds	2
  5724     0023                     read_prec_or_width@fmt:
  5725     0023                     fputs@s:	
  5726                           ; 1 bytes @ 0x3
  5727                           
  5728                           
  5729                           ; 1 bytes @ 0x3
  5730     0023                     	ds	1
  5731     0024                     ??_pad:
  5732                           
  5733                           ; 1 bytes @ 0x4
  5734     0024                     	ds	1
  5735     0025                     pad@i:
  5736                           
  5737                           ; 2 bytes @ 0x5
  5738     0025                     	ds	2
  5739     0027                     pad@fp:
  5740                           
  5741                           ; 1 bytes @ 0x7
  5742     0027                     	ds	1
  5743     0028                     ?_dtoa:
  5744     0028                     dtoa@d:	
  5745                           ; 1 bytes @ 0x8
  5746                           
  5747                           
  5748                           ; 2 bytes @ 0x8
  5749     0028                     	ds	2
  5750     002A                     ??_dtoa:
  5751                           
  5752                           ; 1 bytes @ 0xA
  5753     002A                     	ds	1
  5754     002B                     _dtoa$2565:
  5755                           
  5756                           ; 2 bytes @ 0xB
  5757     002B                     	ds	2
  5758     002D                     dtoa@fp:
  5759                           
  5760                           ; 1 bytes @ 0xD
  5761     002D                     	ds	1
  5762     002E                     dtoa@p:
  5763                           
  5764                           ; 1 bytes @ 0xE
  5765     002E                     	ds	1
  5766     002F                     dtoa@w:
  5767                           
  5768                           ; 2 bytes @ 0xF
  5769     002F                     	ds	2
  5770     0031                     dtoa@s:
  5771                           
  5772                           ; 1 bytes @ 0x11
  5773     0031                     	ds	1
  5774     0032                     dtoa@i:
  5775                           
  5776                           ; 2 bytes @ 0x12
  5777     0032                     	ds	2
  5778     0034                     ?_vfpfcnvrt:
  5779     0034                     vfpfcnvrt@fmt:	
  5780                           ; 1 bytes @ 0x14
  5781                           
  5782                           
  5783                           ; 1 bytes @ 0x14
  5784     0034                     	ds	1
  5785     0035                     vfpfcnvrt@ap:
  5786                           
  5787                           ; 1 bytes @ 0x15
  5788     0035                     	ds	1
  5789     0036                     ??_vfpfcnvrt:
  5790                           
  5791                           ; 1 bytes @ 0x16
  5792     0036                     	ds	4
  5793     003A                     vfpfcnvrt@convarg:
  5794                           
  5795                           ; 4 bytes @ 0x1A
  5796     003A                     	ds	4
  5797     003E                     vfpfcnvrt@done:
  5798                           
  5799                           ; 1 bytes @ 0x1E
  5800     003E                     	ds	1
  5801     003F                     vfpfcnvrt@fp:
  5802                           
  5803                           ; 1 bytes @ 0x1F
  5804     003F                     	ds	1
  5805     0040                     vfpfcnvrt@cp:
  5806                           
  5807                           ; 2 bytes @ 0x20
  5808     0040                     	ds	2
  5809     0042                     ?_vfprintf:
  5810     0042                     vfprintf@fmt:	
  5811                           ; 2 bytes @ 0x22
  5812                           
  5813                           
  5814                           ; 2 bytes @ 0x22
  5815     0042                     	ds	2
  5816     0044                     vfprintf@ap:
  5817                           
  5818                           ; 1 bytes @ 0x24
  5819     0044                     	ds	1
  5820     0045                     ??_vfprintf:
  5821                           
  5822                           ; 1 bytes @ 0x25
  5823     0045                     	ds	1
  5824     0046                     vfprintf@fp:
  5825                           
  5826                           ; 1 bytes @ 0x26
  5827     0046                     	ds	1
  5828     0047                     vfprintf@cfmt:
  5829                           
  5830                           ; 2 bytes @ 0x27
  5831     0047                     	ds	2
  5832     0049                     ?_sprintf:
  5833     0049                     sprintf@fmt:	
  5834                           ; 2 bytes @ 0x29
  5835                           
  5836                           
  5837                           ; 2 bytes @ 0x29
  5838     0049                     	ds	8
  5839     0051                     ??_sprintf:
  5840                           
  5841                           ; 1 bytes @ 0x31
  5842     0051                     	ds	1
  5843     0052                     sprintf@ap:
  5844                           
  5845                           ; 1 bytes @ 0x32
  5846     0052                     	ds	1
  5847     0053                     sprintf@s:
  5848                           
  5849                           ; 1 bytes @ 0x33
  5850     0053                     	ds	1
  5851     0054                     sprintf@f:
  5852                           
  5853                           ; 11 bytes @ 0x34
  5854     0054                     	ds	11
  5855     005F                     ??_main:
  5856                           
  5857                           ; 1 bytes @ 0x3F
  5858     005F                     	ds	2
  5859                           
  5860                           	psect	maintext
  5861     064D                     __pmaintext:	
  5862 ;;
  5863 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5864 ;;
  5865 ;; *************** function _main *****************
  5866 ;; Defined at:
  5867 ;;		line 89 in file "main.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  time_buffer     8    0[BANK1 ] unsigned char [8]
  5872 ;;  measure_buff    6    8[BANK1 ] unsigned char [6]
  5873 ;;  seconds         2   38[BANK1 ] int 
  5874 ;;  minutes         2   36[BANK1 ] int 
  5875 ;;  hours           2   32[BANK1 ] int 
  5876 ;;  PMON            2   30[BANK1 ] int 
  5877 ;;  count           2   28[BANK1 ] int 
  5878 ;;  ALAL            2   26[BANK1 ] int 
  5879 ;;  ALAT            2   24[BANK1 ] int 
  5880 ;;  ALAS            2   22[BANK1 ] int 
  5881 ;;  ALAM            2   20[BANK1 ] int 
  5882 ;;  ALAH            2   18[BANK1 ] int 
  5883 ;;  ALAF            2   16[BANK1 ] int 
  5884 ;;  CLKM            2   14[BANK1 ] int 
  5885 ;;  CLKH            2    0        int 
  5886 ;;  TALA            2    0        int 
  5887 ;;  luminosity      1   35[BANK1 ] unsigned char 
  5888 ;;  temperature     1   34[BANK1 ] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : B1F/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5899 ;;      Locals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;      Totals:         0       2      40       0       0       0       0       0       0       0       0       0       
      +0       0
  5902 ;;Total ram usage:       42 bytes
  5903 ;; Hardware stack levels required when called: 8
  5904 ;; This function calls:
  5905 ;;		_ADCC_GetSingleConversion
  5906 ;;		_LCDbusy
  5907 ;;		_LCDcmd
  5908 ;;		_LCDinit
  5909 ;;		_LCDpos
  5910 ;;		_LCDstr
  5911 ;;		_OpenI2C
  5912 ;;		_SYSTEM_Initialize
  5913 ;;		_readTC74
  5914 ;;		_sprintf
  5915 ;; This function is called by:
  5916 ;;		Startup code after reset
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920     064D                     _main:	
  5921                           ;psect for function _main
  5922                           
  5923     064D                     l4549:	
  5924                           ;incstack = 0
  5925                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5926                           
  5927     064D  0021               	movlb	1	; select bank1
  5928     064E  01AE               	clrf	main@CLKM^(0+128)
  5929     064F  01AF               	clrf	(main@CLKM+1)^(0+128)
  5930     0650                     l4551:
  5931                           
  5932                           ;main.c: 99:     int hours = CLKH, minutes = CLKM, seconds = 0;
  5933     0650  01C0               	clrf	main@hours^(0+128)
  5934     0651  01C1               	clrf	(main@hours+1)^(0+128)
  5935     0652                     l4553:
  5936     0652  01C4               	clrf	main@minutes^(0+128)
  5937     0653  01C5               	clrf	(main@minutes+1)^(0+128)
  5938     0654  01C6               	clrf	main@seconds^(0+128)
  5939     0655  01C7               	clrf	(main@seconds+1)^(0+128)
  5940     0656                     l4555:
  5941                           
  5942                           ;main.c: 102:     int PMON = 3;
  5943     0656  3003               	movlw	3
  5944     0657  00BE               	movwf	main@PMON^(0+128)
  5945     0658  3000               	movlw	0
  5946     0659  00BF               	movwf	(main@PMON^(0+128)+1)
  5947     065A                     l4557:
  5948                           
  5949                           ;main.c: 103:     int count = PMON-1;
  5950     065A  3002               	movlw	2
  5951     065B  00BC               	movwf	main@count^(0+128)
  5952     065C  3000               	movlw	0
  5953     065D  00BD               	movwf	(main@count^(0+128)+1)
  5954     065E                     l4559:
  5955                           
  5956                           ;main.c: 106:     int ALAF = 1;
  5957     065E  3001               	movlw	1
  5958     065F  00B0               	movwf	main@ALAF^(0+128)
  5959     0660  3000               	movlw	0
  5960     0661  00B1               	movwf	(main@ALAF^(0+128)+1)
  5961     0662                     l4561:
  5962                           
  5963                           ;main.c: 107:     int ALAH = -1, ALAM = -1, ALAS = -1;
  5964     0662  30FF               	movlw	255
  5965     0663  00B2               	movwf	main@ALAH^(0+128)
  5966     0664  30FF               	movlw	255
  5967     0665  00B3               	movwf	(main@ALAH^(0+128)+1)
  5968     0666                     l4563:
  5969     0666  30FF               	movlw	255
  5970     0667  00B4               	movwf	main@ALAM^(0+128)
  5971     0668  30FF               	movlw	255
  5972     0669  00B5               	movwf	(main@ALAM^(0+128)+1)
  5973     066A                     l4565:
  5974     066A  30FF               	movlw	255
  5975     066B  00B6               	movwf	main@ALAS^(0+128)
  5976     066C  30FF               	movlw	255
  5977     066D  00B7               	movwf	(main@ALAS^(0+128)+1)
  5978     066E                     l4567:
  5979                           
  5980                           ;main.c: 108:     int ALAT = 20, ALAL = 2;
  5981     066E  3014               	movlw	20
  5982     066F  00B8               	movwf	main@ALAT^(0+128)
  5983     0670  3000               	movlw	0
  5984     0671  00B9               	movwf	(main@ALAT^(0+128)+1)
  5985     0672                     l4569:
  5986     0672  3002               	movlw	2
  5987     0673  00BA               	movwf	main@ALAL^(0+128)
  5988     0674  3000               	movlw	0
  5989     0675  00BB               	movwf	(main@ALAL^(0+128)+1)
  5990     0676                     l4571:
  5991     0676                     l4573:
  5992                           
  5993                           ;main.c: 113:     SYSTEM_Initialize();
  5994     0676  318D  25E1  3186   	fcall	_SYSTEM_Initialize
  5995     0679                     l4575:
  5996                           
  5997                           ;main.c: 130:     OpenI2C();
  5998     0679  318D  25A0  3186   	fcall	_OpenI2C
  5999     067C                     l4577:
  6000                           
  6001                           ;main.c: 136:     LCDinit();
  6002     067C  3181  215F  3186   	fcall	_LCDinit
  6003     067F                     l4579:
  6004                           
  6005                           ;main.c: 141:     {;main.c: 143:         LCDcmd(0x80);
  6006     067F  3080               	movlw	128
  6007     0680  318D  2576  3186   	fcall	_LCDcmd
  6008     0683                     l4581:
  6009                           
  6010                           ;main.c: 145:         sprintf(time_buffer, "%02d:%02d:%02d", hours, minutes, seconds);
  6011     0683  3020               	movlw	low (STR_1| (0+32768))
  6012     0684  0020               	movlb	0	; select bank0
  6013     0685  00C9               	movwf	sprintf@fmt
  6014     0686  3090               	movlw	high (STR_1| (0+32768))
  6015     0687  00CA               	movwf	sprintf@fmt+1
  6016     0688  0021               	movlb	1	; select bank1
  6017     0689  0841               	movf	(main@hours+1)^(0+128),w
  6018     068A  0020               	movlb	0	; select bank0
  6019     068B  00CC               	movwf	?_sprintf+3
  6020     068C  0021               	movlb	1	; select bank1
  6021     068D  0840               	movf	main@hours^(0+128),w
  6022     068E  0020               	movlb	0	; select bank0
  6023     068F  00CB               	movwf	?_sprintf+2
  6024     0690  0021               	movlb	1	; select bank1
  6025     0691  0845               	movf	(main@minutes+1)^(0+128),w
  6026     0692  0020               	movlb	0	; select bank0
  6027     0693  00CE               	movwf	?_sprintf+5
  6028     0694  0021               	movlb	1	; select bank1
  6029     0695  0844               	movf	main@minutes^(0+128),w
  6030     0696  0020               	movlb	0	; select bank0
  6031     0697  00CD               	movwf	?_sprintf+4
  6032     0698  0021               	movlb	1	; select bank1
  6033     0699  0847               	movf	(main@seconds+1)^(0+128),w
  6034     069A  0020               	movlb	0	; select bank0
  6035     069B  00D0               	movwf	?_sprintf+7
  6036     069C  0021               	movlb	1	; select bank1
  6037     069D  0846               	movf	main@seconds^(0+128),w
  6038     069E  0020               	movlb	0	; select bank0
  6039     069F  00CF               	movwf	?_sprintf+6
  6040     06A0  30A0               	movlw	(low (main@time_buffer| 0))& (0+255)
  6041     06A1  318E  2682  3186   	fcall	_sprintf
  6042     06A4                     l4583:
  6043                           
  6044                           ;main.c: 147:         LCDstr(time_buffer);
  6045     06A4  30A0               	movlw	low main@time_buffer
  6046     06A5  00F8               	movwf	LCDstr@p
  6047     06A6  3000               	movlw	high main@time_buffer
  6048     06A7  00F9               	movwf	LCDstr@p+1
  6049     06A8  318E  2634  3186   	fcall	_LCDstr
  6050     06AB                     l4585:
  6051                           
  6052                           ;main.c: 149:         count++;
  6053     06AB  3001               	movlw	1
  6054     06AC  0021               	movlb	1	; select bank1
  6055     06AD  07BC               	addwf	main@count^(0+128),f
  6056     06AE  3000               	movlw	0
  6057     06AF  3DBD               	addwfc	(main@count+1)^(0+128),f
  6058     06B0                     l4587:
  6059                           
  6060                           ;main.c: 151:         if(count == PMON){
  6061     06B0  083F               	movf	(main@PMON+1)^(0+128),w
  6062     06B1  063D               	xorwf	(main@count+1)^(0+128),w
  6063     06B2  1D03               	skipz
  6064     06B3  2EB6               	goto	u3465
  6065     06B4  083E               	movf	main@PMON^(0+128),w
  6066     06B5  063C               	xorwf	main@count^(0+128),w
  6067     06B6                     u3465:
  6068     06B6  1D03               	skipz
  6069     06B7  2EB9               	goto	u3461
  6070     06B8  2EBA               	goto	u3460
  6071     06B9                     u3461:
  6072     06B9  2F17               	goto	l4611
  6073     06BA                     u3460:
  6074     06BA                     l4589:
  6075                           
  6076                           ;main.c: 153:             temperature = readTC74();
  6077     06BA  3184  2400  3186   	fcall	_readTC74
  6078     06BD  0021               	movlb	1	; select bank1
  6079     06BE  00C2               	movwf	main@temperature^(0+128)
  6080     06BF                     l4591:
  6081                           
  6082                           ;main.c: 154:             luminosity = ADCC_GetSingleConversion(0x0) >> 8;
  6083     06BF  3000               	movlw	0
  6084     06C0  318D  25CF  3186   	fcall	_ADCC_GetSingleConversion
  6085     06C3  0871               	movf	?_ADCC_GetSingleConversion+1,w
  6086     06C4  0021               	movlb	1	; select bank1
  6087     06C5  00C3               	movwf	main@luminosity^(0+128)
  6088     06C6                     l4593:
  6089                           
  6090                           ;main.c: 157:             LCDcmd(0xc0);
  6091     06C6  30C0               	movlw	192
  6092     06C7  318D  2576  3186   	fcall	_LCDcmd
  6093     06CA                     l4595:
  6094                           
  6095                           ;main.c: 158:             sprintf(measure_buffer, "%02d C ", temperature);
  6096     06CA  302F               	movlw	low (STR_2| (0+32768))
  6097     06CB  0020               	movlb	0	; select bank0
  6098     06CC  00C9               	movwf	sprintf@fmt
  6099     06CD  3090               	movlw	high (STR_2| (0+32768))
  6100     06CE  00CA               	movwf	sprintf@fmt+1
  6101     06CF  0021               	movlb	1	; select bank1
  6102     06D0  0842               	movf	main@temperature^(0+128),w
  6103     06D1  0020               	movlb	0	; select bank0
  6104     06D2  00DF               	movwf	??_main
  6105     06D3  01E0               	clrf	??_main+1
  6106     06D4  085F               	movf	??_main,w
  6107     06D5  00CB               	movwf	?_sprintf+2
  6108     06D6  0860               	movf	??_main+1,w
  6109     06D7  00CC               	movwf	?_sprintf+3
  6110     06D8  30A8               	movlw	(low (main@measure_buffer| 0))& (0+255)
  6111     06D9  318E  2682  3186   	fcall	_sprintf
  6112     06DC                     l4597:	
  6113                           ;main.c: 159:             while (LCDbusy());
  6114                           
  6115     06DC  318D  25AD  3186   	fcall	_LCDbusy
  6116     06DF  0877               	movf	?_LCDbusy,w
  6117     06E0  0478               	iorwf	?_LCDbusy+1,w
  6118     06E1  1D03               	btfss	3,2
  6119     06E2  2EE4               	goto	u3471
  6120     06E3  2EE5               	goto	u3470
  6121     06E4                     u3471:
  6122     06E4  2EDC               	goto	l4597
  6123     06E5                     u3470:
  6124     06E5                     l4599:
  6125                           
  6126                           ;main.c: 160:             LCDstr(measure_buffer);
  6127     06E5  30A8               	movlw	low main@measure_buffer
  6128     06E6  00F8               	movwf	LCDstr@p
  6129     06E7  3000               	movlw	high main@measure_buffer
  6130     06E8  00F9               	movwf	LCDstr@p+1
  6131     06E9  318E  2634  3186   	fcall	_LCDstr
  6132     06EC                     l4601:
  6133                           
  6134                           ;main.c: 163:             LCDpos(1,14);
  6135     06EC  300E               	movlw	14
  6136     06ED  00F8               	movwf	LCDpos@c
  6137     06EE  3001               	movlw	1
  6138     06EF  318D  25F4  3186   	fcall	_LCDpos
  6139     06F2                     l4603:
  6140                           
  6141                           ;main.c: 164:             sprintf(measure_buffer, "L%d", luminosity);
  6142     06F2  3037               	movlw	low (STR_3| (0+32768))
  6143     06F3  0020               	movlb	0	; select bank0
  6144     06F4  00C9               	movwf	sprintf@fmt
  6145     06F5  3090               	movlw	high (STR_3| (0+32768))
  6146     06F6  00CA               	movwf	sprintf@fmt+1
  6147     06F7  0021               	movlb	1	; select bank1
  6148     06F8  0843               	movf	main@luminosity^(0+128),w
  6149     06F9  0020               	movlb	0	; select bank0
  6150     06FA  00DF               	movwf	??_main
  6151     06FB  01E0               	clrf	??_main+1
  6152     06FC  085F               	movf	??_main,w
  6153     06FD  00CB               	movwf	?_sprintf+2
  6154     06FE  0860               	movf	??_main+1,w
  6155     06FF  00CC               	movwf	?_sprintf+3
  6156     0700  30A8               	movlw	(low (main@measure_buffer| 0))& (0+255)
  6157     0701  318E  2682  3186   	fcall	_sprintf
  6158     0704                     l4605:	
  6159                           ;main.c: 165:             while (LCDbusy());
  6160                           
  6161     0704  318D  25AD  3186   	fcall	_LCDbusy
  6162     0707  0877               	movf	?_LCDbusy,w
  6163     0708  0478               	iorwf	?_LCDbusy+1,w
  6164     0709  1D03               	btfss	3,2
  6165     070A  2F0C               	goto	u3481
  6166     070B  2F0D               	goto	u3480
  6167     070C                     u3481:
  6168     070C  2F04               	goto	l4605
  6169     070D                     u3480:
  6170     070D                     l4607:
  6171                           
  6172                           ;main.c: 166:             LCDstr(measure_buffer);
  6173     070D  30A8               	movlw	low main@measure_buffer
  6174     070E  00F8               	movwf	LCDstr@p
  6175     070F  3000               	movlw	high main@measure_buffer
  6176     0710  00F9               	movwf	LCDstr@p+1
  6177     0711  318E  2634  3186   	fcall	_LCDstr
  6178     0714                     l4609:
  6179                           
  6180                           ;main.c: 169:             count = 0;
  6181     0714  0021               	movlb	1	; select bank1
  6182     0715  01BC               	clrf	main@count^(0+128)
  6183     0716  01BD               	clrf	(main@count+1)^(0+128)
  6184     0717                     l4611:
  6185                           
  6186                           ;main.c: 172:         if(ALAF) {
  6187     0717  0830               	movf	main@ALAF^(0+128),w
  6188     0718  0431               	iorwf	(main@ALAF+1)^(0+128),w
  6189     0719  1903               	btfsc	3,2
  6190     071A  2F1C               	goto	u3491
  6191     071B  2F1D               	goto	u3490
  6192     071C                     u3491:
  6193     071C  2FA0               	goto	l4643
  6194     071D                     u3490:
  6195     071D                     l4613:
  6196                           
  6197                           ;main.c: 174:             LCDpos(0,15);
  6198     071D  300F               	movlw	15
  6199     071E  00F8               	movwf	LCDpos@c
  6200     071F  3000               	movlw	0
  6201     0720  318D  25F4  3186   	fcall	_LCDpos
  6202     0723                     l4615:
  6203                           
  6204                           ;main.c: 175:             LCDstr("A");
  6205     0723  303B               	movlw	low (STR_4| (0+32768))
  6206     0724  00F8               	movwf	LCDstr@p
  6207     0725  3090               	movlw	high (STR_4| (0+32768))
  6208     0726  00F9               	movwf	LCDstr@p+1
  6209     0727  318E  2634  3186   	fcall	_LCDstr
  6210     072A                     l4617:
  6211                           
  6212                           ;main.c: 177:             LCDpos(0,11);
  6213     072A  300B               	movlw	11
  6214     072B  00F8               	movwf	LCDpos@c
  6215     072C  3000               	movlw	0
  6216     072D  318D  25F4  3186   	fcall	_LCDpos
  6217     0730                     l4619:
  6218                           
  6219                           ;main.c: 178:             if(hours == ALAH && minutes == ALAM && seconds == ALAS)
  6220     0730  0021               	movlb	1	; select bank1
  6221     0731  0833               	movf	(main@ALAH+1)^(0+128),w
  6222     0732  0641               	xorwf	(main@hours+1)^(0+128),w
  6223     0733  1D03               	skipz
  6224     0734  2F37               	goto	u3505
  6225     0735  0832               	movf	main@ALAH^(0+128),w
  6226     0736  0640               	xorwf	main@hours^(0+128),w
  6227     0737                     u3505:
  6228     0737  1D03               	skipz
  6229     0738  2F3A               	goto	u3501
  6230     0739  2F3B               	goto	u3500
  6231     073A                     u3501:
  6232     073A  2F56               	goto	l4627
  6233     073B                     u3500:
  6234     073B                     l4621:
  6235     073B  0835               	movf	(main@ALAM+1)^(0+128),w
  6236     073C  0645               	xorwf	(main@minutes+1)^(0+128),w
  6237     073D  1D03               	skipz
  6238     073E  2F41               	goto	u3515
  6239     073F  0834               	movf	main@ALAM^(0+128),w
  6240     0740  0644               	xorwf	main@minutes^(0+128),w
  6241     0741                     u3515:
  6242     0741  1D03               	skipz
  6243     0742  2F44               	goto	u3511
  6244     0743  2F45               	goto	u3510
  6245     0744                     u3511:
  6246     0744  2F56               	goto	l4627
  6247     0745                     u3510:
  6248     0745                     l4623:
  6249     0745  0837               	movf	(main@ALAS+1)^(0+128),w
  6250     0746  0647               	xorwf	(main@seconds+1)^(0+128),w
  6251     0747  1D03               	skipz
  6252     0748  2F4B               	goto	u3525
  6253     0749  0836               	movf	main@ALAS^(0+128),w
  6254     074A  0646               	xorwf	main@seconds^(0+128),w
  6255     074B                     u3525:
  6256     074B  1D03               	skipz
  6257     074C  2F4E               	goto	u3521
  6258     074D  2F4F               	goto	u3520
  6259     074E                     u3521:
  6260     074E  2F56               	goto	l4627
  6261     074F                     u3520:
  6262     074F                     l4625:
  6263                           
  6264                           ;main.c: 179:                 LCDstr("C");
  6265     074F  303D               	movlw	low (STR_5| (0+32768))
  6266     0750  00F8               	movwf	LCDstr@p
  6267     0751  3090               	movlw	high (STR_5| (0+32768))
  6268     0752  00F9               	movwf	LCDstr@p+1
  6269     0753  318E  2634  3186   	fcall	_LCDstr
  6270     0756                     l4627:
  6271                           
  6272                           ;main.c: 181:             LCDpos(0,12);
  6273     0756  300C               	movlw	12
  6274     0757  00F8               	movwf	LCDpos@c
  6275     0758  3000               	movlw	0
  6276     0759  318D  25F4  3186   	fcall	_LCDpos
  6277     075C                     l4629:
  6278                           
  6279                           ;main.c: 182:             if(temperature > ALAT)
  6280     075C  0021               	movlb	1	; select bank1
  6281     075D  0839               	movf	(main@ALAT+1)^(0+128),w
  6282     075E  3A80               	xorlw	128
  6283     075F  0020               	movlb	0	; select bank0
  6284     0760  00DF               	movwf	??_main
  6285     0761  3080               	movlw	128
  6286     0762  025F               	subwf	??_main,w
  6287     0763  1D03               	skipz
  6288     0764  2F68               	goto	u3535
  6289     0765  0021               	movlb	1	; select bank1
  6290     0766  0842               	movf	main@temperature^(0+128),w
  6291     0767  0238               	subwf	main@ALAT^(0+128),w
  6292     0768                     u3535:
  6293     0768  1803               	skipnc
  6294     0769  2F6B               	goto	u3531
  6295     076A  2F6C               	goto	u3530
  6296     076B                     u3531:
  6297     076B  2F74               	goto	l4633
  6298     076C                     u3530:
  6299     076C                     l4631:
  6300                           
  6301                           ;main.c: 183:                 LCDstr("T");
  6302     076C  3041               	movlw	low (STR_6| (0+32768))
  6303     076D  00F8               	movwf	LCDstr@p
  6304     076E  3090               	movlw	high (STR_6| (0+32768))
  6305     076F  00F9               	movwf	LCDstr@p+1
  6306     0770  318E  2634  3186   	fcall	_LCDstr
  6307     0773  2F7B               	goto	l4635
  6308     0774                     l4633:
  6309                           
  6310                           ;main.c: 185:                 LCDstr(" ");
  6311     0774  3035               	movlw	low ((STR_2+6)| (0+32768))
  6312     0775  00F8               	movwf	LCDstr@p
  6313     0776  3090               	movlw	high ((STR_2+6)| (0+32768))
  6314     0777  00F9               	movwf	LCDstr@p+1
  6315     0778  318E  2634  3186   	fcall	_LCDstr
  6316     077B                     l4635:
  6317                           
  6318                           ;main.c: 187:             LCDpos(0,13);
  6319     077B  300D               	movlw	13
  6320     077C  00F8               	movwf	LCDpos@c
  6321     077D  3000               	movlw	0
  6322     077E  318D  25F4  3186   	fcall	_LCDpos
  6323     0781                     l4637:
  6324                           
  6325                           ;main.c: 188:             if(luminosity > ALAL)
  6326     0781  0021               	movlb	1	; select bank1
  6327     0782  083B               	movf	(main@ALAL+1)^(0+128),w
  6328     0783  3A80               	xorlw	128
  6329     0784  0020               	movlb	0	; select bank0
  6330     0785  00DF               	movwf	??_main
  6331     0786  3080               	movlw	128
  6332     0787  025F               	subwf	??_main,w
  6333     0788  1D03               	skipz
  6334     0789  2F8D               	goto	u3545
  6335     078A  0021               	movlb	1	; select bank1
  6336     078B  0843               	movf	main@luminosity^(0+128),w
  6337     078C  023A               	subwf	main@ALAL^(0+128),w
  6338     078D                     u3545:
  6339     078D  1803               	skipnc
  6340     078E  2F90               	goto	u3541
  6341     078F  2F91               	goto	u3540
  6342     0790                     u3541:
  6343     0790  2F99               	goto	l4641
  6344     0791                     u3540:
  6345     0791                     l4639:
  6346                           
  6347                           ;main.c: 189:                 LCDstr("L");
  6348     0791  303F               	movlw	low (STR_8| (0+32768))
  6349     0792  00F8               	movwf	LCDstr@p
  6350     0793  3090               	movlw	high (STR_8| (0+32768))
  6351     0794  00F9               	movwf	LCDstr@p+1
  6352     0795  318E  2634  3186   	fcall	_LCDstr
  6353     0798  2FA0               	goto	l4643
  6354     0799                     l4641:
  6355                           
  6356                           ;main.c: 191:                 LCDstr(" ");
  6357     0799  3035               	movlw	low ((STR_2+6)| (0+32768))
  6358     079A  00F8               	movwf	LCDstr@p
  6359     079B  3090               	movlw	high ((STR_2+6)| (0+32768))
  6360     079C  00F9               	movwf	LCDstr@p+1
  6361     079D  318E  2634  3186   	fcall	_LCDstr
  6362     07A0                     l4643:
  6363                           
  6364                           ;main.c: 196:         _delay((unsigned long)((1000)*(1000000/4000.0)));
  6365     07A0  3002               	movlw	2
  6366     07A1  0020               	movlb	0	; select bank0
  6367     07A2  00E0               	movwf	??_main+1
  6368     07A3  3045               	movlw	69
  6369     07A4  00DF               	movwf	??_main
  6370     07A5  30A9               	movlw	169
  6371     07A6                     u3577:
  6372     07A6  0B89               	decfsz	9,f
  6373     07A7  2FA6               	goto	u3577
  6374     07A8  0BDF               	decfsz	??_main,f
  6375     07A9  2FA6               	goto	u3577
  6376     07AA  0BE0               	decfsz	??_main+1,f
  6377     07AB  2FA6               	goto	u3577
  6378     07AC  3200               	nop2
  6379     07AD                     l4645:
  6380                           
  6381                           ;main.c: 198:         if(seconds < 59)
  6382     07AD  0021               	movlb	1	; select bank1
  6383     07AE  0847               	movf	(main@seconds+1)^(0+128),w
  6384     07AF  3A80               	xorlw	128
  6385     07B0  0020               	movlb	0	; select bank0
  6386     07B1  00DF               	movwf	??_main
  6387     07B2  3080               	movlw	128
  6388     07B3  025F               	subwf	??_main,w
  6389     07B4  1D03               	skipz
  6390     07B5  2FB9               	goto	u3555
  6391     07B6  303B               	movlw	59
  6392     07B7  0021               	movlb	1	; select bank1
  6393     07B8  0246               	subwf	main@seconds^(0+128),w
  6394     07B9                     u3555:
  6395     07B9  1803               	skipnc
  6396     07BA  2FBC               	goto	u3551
  6397     07BB  2FBD               	goto	u3550
  6398     07BC                     u3551:
  6399     07BC  2FC3               	goto	l4649
  6400     07BD                     u3550:
  6401     07BD                     l4647:
  6402                           
  6403                           ;main.c: 199:             seconds++;
  6404     07BD  3001               	movlw	1
  6405     07BE  0021               	movlb	1	; select bank1
  6406     07BF  07C6               	addwf	main@seconds^(0+128),f
  6407     07C0  3000               	movlw	0
  6408     07C1  3DC7               	addwfc	(main@seconds+1)^(0+128),f
  6409     07C2  2E7F               	goto	l4579
  6410     07C3                     l4649:
  6411                           
  6412                           ;main.c: 201:             seconds=0;
  6413     07C3  0021               	movlb	1	; select bank1
  6414     07C4  01C6               	clrf	main@seconds^(0+128)
  6415     07C5  01C7               	clrf	(main@seconds+1)^(0+128)
  6416     07C6                     l4651:
  6417                           
  6418                           ;main.c: 202:             if(minutes < 59)
  6419     07C6  0845               	movf	(main@minutes+1)^(0+128),w
  6420     07C7  3A80               	xorlw	128
  6421     07C8  0020               	movlb	0	; select bank0
  6422     07C9  00DF               	movwf	??_main
  6423     07CA  3080               	movlw	128
  6424     07CB  025F               	subwf	??_main,w
  6425     07CC  1D03               	skipz
  6426     07CD  2FD1               	goto	u3565
  6427     07CE  303B               	movlw	59
  6428     07CF  0021               	movlb	1	; select bank1
  6429     07D0  0244               	subwf	main@minutes^(0+128),w
  6430     07D1                     u3565:
  6431     07D1  1803               	skipnc
  6432     07D2  2FD4               	goto	u3561
  6433     07D3  2FD5               	goto	u3560
  6434     07D4                     u3561:
  6435     07D4  2FDB               	goto	l4655
  6436     07D5                     u3560:
  6437     07D5                     l4653:
  6438                           
  6439                           ;main.c: 203:                 minutes++;
  6440     07D5  3001               	movlw	1
  6441     07D6  0021               	movlb	1	; select bank1
  6442     07D7  07C4               	addwf	main@minutes^(0+128),f
  6443     07D8  3000               	movlw	0
  6444     07D9  3DC5               	addwfc	(main@minutes+1)^(0+128),f
  6445     07DA  2E7F               	goto	l4579
  6446     07DB                     l4655:
  6447                           
  6448                           ;main.c: 205:                 minutes=0;
  6449     07DB  0021               	movlb	1	; select bank1
  6450     07DC  01C4               	clrf	main@minutes^(0+128)
  6451     07DD  01C5               	clrf	(main@minutes+1)^(0+128)
  6452     07DE                     l4657:
  6453                           
  6454                           ;main.c: 206:                 hours++;
  6455     07DE  3001               	movlw	1
  6456     07DF  07C0               	addwf	main@hours^(0+128),f
  6457     07E0  3000               	movlw	0
  6458     07E1  3DC1               	addwfc	(main@hours+1)^(0+128),f
  6459     07E2  2E7F               	goto	l4579
  6460     07E3  3180  2802         	ljmp	start
  6461     07E5                     __end_of_main:
  6462                           
  6463                           	psect	text1
  6464     0E82                     __ptext1:	
  6465 ;; *************** function _sprintf *****************
  6466 ;; Defined at:
  6467 ;;		line 9 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_sprintf.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  s               1    wreg     PTR unsigned char 
  6470 ;;		 -> main@measure_buffer(6), main@time_buffer(8), 
  6471 ;;  fmt             2   41[BANK0 ] PTR const unsigned char 
  6472 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  s               1   51[BANK0 ] PTR unsigned char 
  6475 ;;		 -> main@measure_buffer(6), main@time_buffer(8), 
  6476 ;;  f              11   52[BANK0 ] struct _IO_FILE
  6477 ;;  ret             2    0        int 
  6478 ;;  ap              1   50[BANK0 ] PTR void [1]
  6479 ;;		 -> ?_sprintf(2), 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  2   41[BANK0 ] int 
  6482 ;; Registers used:
  6483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6489 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;Total ram usage:       22 bytes
  6494 ;; Hardware stack levels used: 1
  6495 ;; Hardware stack levels required when called: 7
  6496 ;; This function calls:
  6497 ;;		_vfprintf
  6498 ;; This function is called by:
  6499 ;;		_main
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503     0E82                     _sprintf:	
  6504                           ;psect for function _sprintf
  6505                           
  6506                           
  6507                           ;incstack = 0
  6508                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6509                           ;sprintf@s stored from wreg
  6510     0E82  0020               	movlb	0	; select bank0
  6511     0E83  00D3               	movwf	sprintf@s
  6512     0E84                     l4081:
  6513     0E84  304B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6514     0E85  00D2               	movwf	sprintf@ap
  6515     0E86  0853               	movf	sprintf@s,w
  6516     0E87  00D4               	movwf	sprintf@f
  6517     0E88                     l4083:
  6518     0E88  01D6               	clrf	sprintf@f+2
  6519     0E89  01D7               	clrf	sprintf@f+3
  6520     0E8A                     l4085:
  6521     0E8A  01DD               	clrf	sprintf@f+9
  6522     0E8B  01DE               	clrf	sprintf@f+10
  6523     0E8C                     l4087:
  6524     0E8C  084A               	movf	sprintf@fmt+1,w
  6525     0E8D  00C3               	movwf	vfprintf@fmt+1
  6526     0E8E  0849               	movf	sprintf@fmt,w
  6527     0E8F  00C2               	movwf	vfprintf@fmt
  6528     0E90  3052               	movlw	(low (sprintf@ap| 0))& (0+255)
  6529     0E91  00C4               	movwf	vfprintf@ap
  6530     0E92  3054               	movlw	(low (sprintf@f| 0))& (0+255)
  6531     0E93  318E  2666  318E   	fcall	_vfprintf
  6532     0E96                     l4089:
  6533     0E96  0020               	movlb	0	; select bank0
  6534     0E97  0856               	movf	sprintf@f+2,w
  6535     0E98  0753               	addwf	sprintf@s,w
  6536     0E99  00D1               	movwf	??_sprintf
  6537     0E9A  0851               	movf	??_sprintf,w
  6538     0E9B  0086               	movwf	6
  6539     0E9C  0187               	clrf	7
  6540     0E9D  0181               	clrf	1
  6541     0E9E                     l1787:
  6542     0E9E  0008               	return
  6543     0E9F                     __end_of_sprintf:
  6544                           
  6545                           	psect	text2
  6546     0E66                     __ptext2:	
  6547 ;; *************** function _vfprintf *****************
  6548 ;; Defined at:
  6549 ;;		line 1817 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  fp              1    wreg     PTR struct _IO_FILE
  6552 ;;		 -> sprintf@f(11), 
  6553 ;;  fmt             2   34[BANK0 ] PTR const unsigned char 
  6554 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  6555 ;;  ap              1   36[BANK0 ] PTR PTR void 
  6556 ;;		 -> sprintf@ap(1), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  6559 ;;		 -> sprintf@f(11), 
  6560 ;;  cfmt            2   39[BANK0 ] PTR unsigned char 
  6561 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  2   34[BANK0 ] int 
  6564 ;; Registers used:
  6565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6571 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;Total ram usage:        7 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 6
  6578 ;; This function calls:
  6579 ;;		_vfpfcnvrt
  6580 ;; This function is called by:
  6581 ;;		_sprintf
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585     0E66                     _vfprintf:	
  6586                           ;psect for function _vfprintf
  6587                           
  6588                           
  6589                           ;incstack = 0
  6590                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6591                           ;vfprintf@fp stored from wreg
  6592     0E66  0020               	movlb	0	; select bank0
  6593     0E67  00C6               	movwf	vfprintf@fp
  6594     0E68                     l3837:
  6595                           
  6596                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
  6597     0E68  0843               	movf	vfprintf@fmt+1,w
  6598     0E69  00C8               	movwf	vfprintf@cfmt+1
  6599     0E6A  0842               	movf	vfprintf@fmt,w
  6600     0E6B  00C7               	movwf	vfprintf@cfmt
  6601                           
  6602                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  6603     0E6C  2E75               	goto	l3841
  6604     0E6D                     l3839:
  6605                           
  6606                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  6607     0E6D  3047               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6608     0E6E  00B4               	movwf	vfpfcnvrt@fmt
  6609     0E6F  0844               	movf	vfprintf@ap,w
  6610     0E70  00B5               	movwf	vfpfcnvrt@ap
  6611     0E71  0846               	movf	vfprintf@fp,w
  6612     0E72  3183  2339  318E   	fcall	_vfpfcnvrt
  6613     0E75                     l3841:
  6614                           
  6615                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  6616     0E75  0020               	movlb	0	; select bank0
  6617     0E76  0847               	movf	vfprintf@cfmt,w
  6618     0E77  0084               	movwf	4
  6619     0E78  0848               	movf	vfprintf@cfmt+1,w
  6620     0E79  0085               	movwf	5
  6621     0E7A  0012               	moviw fsr0++
  6622     0E7B  1D03               	btfss	3,2
  6623     0E7C  2E7E               	goto	u2881
  6624     0E7D  2E7F               	goto	u2880
  6625     0E7E                     u2881:
  6626     0E7E  2E6D               	goto	l3839
  6627     0E7F                     u2880:
  6628     0E7F                     l3843:
  6629                           
  6630                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  6631     0E7F  01C2               	clrf	?_vfprintf
  6632     0E80  01C3               	clrf	?_vfprintf+1
  6633     0E81                     l1857:
  6634     0E81  0008               	return
  6635     0E82                     __end_of_vfprintf:
  6636                           
  6637                           	psect	text3
  6638     0339                     __ptext3:	
  6639 ;; *************** function _vfpfcnvrt *****************
  6640 ;; Defined at:
  6641 ;;		line 1177 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  fp              1    wreg     PTR struct _IO_FILE
  6644 ;;		 -> sprintf@f(11), 
  6645 ;;  fmt             1   20[BANK0 ] PTR PTR unsigned char 
  6646 ;;		 -> vfprintf@cfmt(2), 
  6647 ;;  ap              1   21[BANK0 ] PTR PTR void 
  6648 ;;		 -> sprintf@ap(1), 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  6651 ;;		 -> sprintf@f(11), 
  6652 ;;  convarg         4   26[BANK0 ] struct .
  6653 ;;  cp              2   32[BANK0 ] PTR unsigned char 
  6654 ;;		 -> STR_3(4), STR_2(8), STR_1(15), 
  6655 ;;  done            1   30[BANK0 ] _Bool 
  6656 ;;  c               1    0        unsigned char 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6666 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;Total ram usage:       14 bytes
  6671 ;; Hardware stack levels used: 1
  6672 ;; Hardware stack levels required when called: 5
  6673 ;; This function calls:
  6674 ;;		_dtoa
  6675 ;;		_fputc
  6676 ;;		_read_prec_or_width
  6677 ;; This function is called by:
  6678 ;;		_vfprintf
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682     0339                     _vfpfcnvrt:	
  6683                           ;psect for function _vfpfcnvrt
  6684                           
  6685                           
  6686                           ;incstack = 0
  6687                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6688                           ;vfpfcnvrt@fp stored from wreg
  6689     0339  0020               	movlb	0	; select bank0
  6690     033A  00BF               	movwf	vfpfcnvrt@fp
  6691     033B                     l3625:
  6692                           
  6693                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.45/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6694     033B  0834               	movf	vfpfcnvrt@fmt,w
  6695     033C  0086               	movwf	6
  6696     033D  0187               	clrf	7
  6697     033E  3F40               	moviw [0]fsr1
  6698     033F  00B6               	movwf	??_vfpfcnvrt
  6699     0340  3F41               	moviw [1]fsr1
  6700     0341  00B7               	movwf	??_vfpfcnvrt+1
  6701     0342  0836               	movf	??_vfpfcnvrt,w
  6702     0343  0084               	movwf	4
  6703     0344  0837               	movf	??_vfpfcnvrt+1,w
  6704     0345  0085               	movwf	5
  6705     0346  0012               	moviw fsr0++
  6706     0347  3A25               	xorlw	37
  6707     0348  1D03               	btfss	3,2
  6708     0349  2B4B               	goto	u2491
  6709     034A  2B4C               	goto	u2490
  6710     034B                     u2491:
  6711     034B  2BE7               	goto	l3669
  6712     034C                     u2490:
  6713     034C                     l3627:
  6714                           
  6715                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
  6716     034C  0834               	movf	vfpfcnvrt@fmt,w
  6717     034D  0086               	movwf	6
  6718     034E  0187               	clrf	7
  6719     034F  3001               	movlw	1
  6720     0350  0781               	addwf	1,f
  6721     0351  3141               	addfsr 1,1
  6722     0352  1803               	skipnc
  6723     0353  0A81               	incf	1,f
  6724     0354                     l3629:
  6725                           
  6726                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
  6727     0354  01E1               	clrf	_width
  6728     0355  01E2               	clrf	_width+1
  6729     0356  1003               	clrc
  6730     0357  3000               	movlw	0
  6731     0358  1803               	btfsc	3,0
  6732     0359  3001               	movlw	1
  6733     035A  00E7               	movwf	_flags
  6734     035B                     l3631:
  6735                           
  6736                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
  6737     035B  30FF               	movlw	255
  6738     035C  00E3               	movwf	_prec
  6739     035D  30FF               	movlw	255
  6740     035E  00E4               	movwf	_prec+1
  6741     035F                     l3633:
  6742                           
  6743                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1209:         done = 0;
  6744     035F  01BE               	clrf	vfpfcnvrt@done
  6745                           
  6746                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
  6747     0360  2B86               	goto	l3641
  6748     0361                     l1843:	
  6749                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1219:                 case '0
      +                          ' :
  6750                           
  6751                           
  6752                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1220:                     fla
      +                          gs |= (1 << 1);
  6753     0361  14E7               	bsf	_flags,1
  6754     0362                     l3635:
  6755                           
  6756                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1221:                     ++*
      +                          fmt;
  6757     0362  0834               	movf	vfpfcnvrt@fmt,w
  6758     0363  0086               	movwf	6
  6759     0364  0187               	clrf	7
  6760     0365  3001               	movlw	1
  6761     0366  0781               	addwf	1,f
  6762     0367  3141               	addfsr 1,1
  6763     0368  1803               	skipnc
  6764     0369  0A81               	incf	1,f
  6765                           
  6766                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1222:                     bre
      +                          ak;
  6767     036A  2B86               	goto	l3641
  6768     036B                     l1845:	
  6769                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1242:                 default
      +                          :
  6770                           
  6771                           
  6772                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1243:                     don
      +                          e = 1;
  6773     036B  01BE               	clrf	vfpfcnvrt@done
  6774     036C  0ABE               	incf	vfpfcnvrt@done,f
  6775                           
  6776                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1244:                     bre
      +                          ak;
  6777     036D  2B86               	goto	l3641
  6778     036E                     l3639:
  6779     036E  0834               	movf	vfpfcnvrt@fmt,w
  6780     036F  0086               	movwf	6
  6781     0370  0187               	clrf	7
  6782     0371  3F40               	moviw [0]fsr1
  6783     0372  00B6               	movwf	??_vfpfcnvrt
  6784     0373  3F41               	moviw [1]fsr1
  6785     0374  00B7               	movwf	??_vfpfcnvrt+1
  6786     0375  0836               	movf	??_vfpfcnvrt,w
  6787     0376  0084               	movwf	4
  6788     0377  0837               	movf	??_vfpfcnvrt+1,w
  6789     0378  0085               	movwf	5
  6790     0379  0800               	movf	0,w	;code access
  6791     037A  00B8               	movwf	??_vfpfcnvrt+2
  6792     037B  01B9               	clrf	??_vfpfcnvrt+3
  6793                           
  6794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6795                           ; Switch size 1, requested type "simple"
  6796                           ; Number of cases is 1, Range of values is 0 to 0
  6797                           ; switch strategies available:
  6798                           ; Name         Instructions Cycles
  6799                           ; simple_byte            4     3 (average)
  6800                           ; direct_byte            8     6 (fixed)
  6801                           ; jumptable            260     6 (fixed)
  6802                           ;	Chosen strategy is simple_byte
  6803     037C  0839               	movf	??_vfpfcnvrt+3,w
  6804     037D  3A00               	xorlw	0	; case 0
  6805     037E  1903               	skipnz
  6806     037F  2B81               	goto	l4679
  6807     0380  2B6B               	goto	l1845
  6808     0381                     l4679:
  6809                           
  6810                           ; Switch size 1, requested type "simple"
  6811                           ; Number of cases is 1, Range of values is 48 to 48
  6812                           ; switch strategies available:
  6813                           ; Name         Instructions Cycles
  6814                           ; simple_byte            4     3 (average)
  6815                           ; direct_byte           11     9 (fixed)
  6816                           ; jumptable            263     9 (fixed)
  6817                           ;	Chosen strategy is simple_byte
  6818     0381  0838               	movf	??_vfpfcnvrt+2,w
  6819     0382  3A30               	xorlw	48	; case 48
  6820     0383  1903               	skipnz
  6821     0384  2B61               	goto	l1843
  6822     0385  2B6B               	goto	l1845
  6823     0386                     l3641:
  6824                           
  6825                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
  6826     0386  083E               	movf	vfpfcnvrt@done,w
  6827     0387  1903               	btfsc	3,2
  6828     0388  2B8A               	goto	u2501
  6829     0389  2B8B               	goto	u2500
  6830     038A                     u2501:
  6831     038A  2B6E               	goto	l3639
  6832     038B                     u2500:
  6833     038B                     l3643:
  6834                           
  6835                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1256:   width = read_prec_or_
      +                          width(fmt, ap);
  6836     038B  0835               	movf	vfpfcnvrt@ap,w
  6837     038C  00F6               	movwf	read_prec_or_width@ap
  6838     038D  0834               	movf	vfpfcnvrt@fmt,w
  6839     038E  3180  20FF  3183   	fcall	_read_prec_or_width
  6840     0391  0877               	movf	?_read_prec_or_width+1,w
  6841     0392  0020               	movlb	0	; select bank0
  6842     0393  00E2               	movwf	_width+1
  6843     0394  0876               	movf	?_read_prec_or_width,w
  6844     0395  00E1               	movwf	_width
  6845     0396                     l3645:
  6846                           
  6847                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1257:   if (width < 0) {
  6848     0396  1FE2               	btfss	_width+1,7
  6849     0397  2B99               	goto	u2511
  6850     0398  2B9A               	goto	u2510
  6851     0399                     u2511:
  6852     0399  2BA0               	goto	l3651
  6853     039A                     u2510:
  6854     039A                     l3647:
  6855                           
  6856                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1 << 0);
  6857     039A  1467               	bsf	_flags,0
  6858     039B                     l3649:
  6859                           
  6860                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1259:    width = -width;
  6861     039B  09E1               	comf	_width,f
  6862     039C  09E2               	comf	_width+1,f
  6863     039D  0AE1               	incf	_width,f
  6864     039E  1903               	skipnz
  6865     039F  0AE2               	incf	_width+1,f
  6866     03A0                     l3651:
  6867                           
  6868                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  6869     03A0  0834               	movf	vfpfcnvrt@fmt,w
  6870     03A1  0086               	movwf	6
  6871     03A2  0187               	clrf	7
  6872     03A3  3F40               	moviw [0]fsr1
  6873     03A4  00C0               	movwf	vfpfcnvrt@cp
  6874     03A5  3F41               	moviw [1]fsr1
  6875     03A6  00C1               	movwf	vfpfcnvrt@cp+1
  6876     03A7                     l3653:
  6877                           
  6878                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == 'd' || *cp
      +                           == 'i') {
  6879     03A7  0840               	movf	vfpfcnvrt@cp,w
  6880     03A8  0084               	movwf	4
  6881     03A9  0841               	movf	vfpfcnvrt@cp+1,w
  6882     03AA  0085               	movwf	5
  6883     03AB  0012               	moviw fsr0++
  6884     03AC  3A64               	xorlw	100
  6885     03AD  1903               	btfsc	3,2
  6886     03AE  2BB0               	goto	u2521
  6887     03AF  2BB1               	goto	u2520
  6888     03B0                     u2521:
  6889     03B0  2BBB               	goto	l3657
  6890     03B1                     u2520:
  6891     03B1                     l3655:
  6892     03B1  0840               	movf	vfpfcnvrt@cp,w
  6893     03B2  0084               	movwf	4
  6894     03B3  0841               	movf	vfpfcnvrt@cp+1,w
  6895     03B4  0085               	movwf	5
  6896     03B5  0012               	moviw fsr0++
  6897     03B6  3A69               	xorlw	105
  6898     03B7  1D03               	btfss	3,2
  6899     03B8  2BBA               	goto	u2531
  6900     03B9  2BBB               	goto	u2530
  6901     03BA                     u2531:
  6902     03BA  2BDD               	goto	l3665
  6903     03BB                     u2530:
  6904     03BB                     l3657:
  6905                           
  6906                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1404:    convarg.sint = (vfpf
      +                          _sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6907     03BB  0835               	movf	vfpfcnvrt@ap,w
  6908     03BC  0086               	movwf	6
  6909     03BD  0187               	clrf	7
  6910     03BE  0801               	movf	1,w
  6911     03BF  0084               	movwf	4
  6912     03C0  0185               	clrf	5
  6913     03C1  3002               	movlw	2
  6914     03C2  0781               	addwf	1,f
  6915     03C3  3F00               	moviw [0]fsr0
  6916     03C4  00BA               	movwf	vfpfcnvrt@convarg
  6917     03C5  3F01               	moviw [1]fsr0
  6918     03C6  00BB               	movwf	vfpfcnvrt@convarg+1
  6919     03C7                     l3659:
  6920                           
  6921                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1;
  6922     03C7  0840               	movf	vfpfcnvrt@cp,w
  6923     03C8  3E01               	addlw	1
  6924     03C9  00B6               	movwf	??_vfpfcnvrt
  6925     03CA  3000               	movlw	0
  6926     03CB  3D41               	addwfc	vfpfcnvrt@cp+1,w
  6927     03CC  00B7               	movwf	??_vfpfcnvrt+1
  6928     03CD  0834               	movf	vfpfcnvrt@fmt,w
  6929     03CE  0086               	movwf	6
  6930     03CF  0187               	clrf	7
  6931     03D0  0836               	movf	??_vfpfcnvrt,w
  6932     03D1  3FC0               	movwi [0]fsr1
  6933     03D2  0837               	movf	??_vfpfcnvrt+1,w
  6934     03D3  3FC1               	movwi [1]fsr1
  6935     03D4                     l3661:
  6936                           
  6937                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1432:    return (void) dtoa(f
      +                          p, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6938     03D4  083B               	movf	vfpfcnvrt@convarg+1,w
  6939     03D5  00A9               	movwf	dtoa@d+1
  6940     03D6  083A               	movf	vfpfcnvrt@convarg,w
  6941     03D7  00A8               	movwf	dtoa@d
  6942     03D8  083F               	movf	vfpfcnvrt@fp,w
  6943     03D9  3181  21DB  3183   	fcall	_dtoa
  6944     03DC  2BFF               	goto	l1851
  6945     03DD                     l3665:
  6946                           
  6947                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  6948     03DD  0020               	movlb	0	; select bank0
  6949     03DE  0834               	movf	vfpfcnvrt@fmt,w
  6950     03DF  0086               	movwf	6
  6951     03E0  0187               	clrf	7
  6952     03E1  3001               	movlw	1
  6953     03E2  0781               	addwf	1,f
  6954     03E3  3141               	addfsr 1,1
  6955     03E4  1803               	skipnc
  6956     03E5  0A81               	incf	1,f
  6957     03E6  2BFF               	goto	l1851
  6958     03E7                     l3669:
  6959                           
  6960                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  6961     03E7  0834               	movf	vfpfcnvrt@fmt,w
  6962     03E8  0086               	movwf	6
  6963     03E9  0187               	clrf	7
  6964     03EA  3F40               	moviw [0]fsr1
  6965     03EB  00B6               	movwf	??_vfpfcnvrt
  6966     03EC  3F41               	moviw [1]fsr1
  6967     03ED  00B7               	movwf	??_vfpfcnvrt+1
  6968     03EE  0836               	movf	??_vfpfcnvrt,w
  6969     03EF  0084               	movwf	4
  6970     03F0  0837               	movf	??_vfpfcnvrt+1,w
  6971     03F1  0085               	movwf	5
  6972     03F2  0800               	movf	0,w	;code access
  6973     03F3  00B8               	movwf	??_vfpfcnvrt+2
  6974     03F4  01B9               	clrf	??_vfpfcnvrt+3
  6975     03F5  0838               	movf	??_vfpfcnvrt+2,w
  6976     03F6  00F0               	movwf	fputc@c
  6977     03F7  0839               	movf	??_vfpfcnvrt+3,w
  6978     03F8  00F1               	movwf	fputc@c+1
  6979     03F9  083F               	movf	vfpfcnvrt@fp,w
  6980     03FA  00F2               	movwf	fputc@fp
  6981     03FB  318F  27B0  3183   	fcall	_fputc
  6982     03FE  2BDD               	goto	l3665
  6983     03FF                     l1851:
  6984     03FF  0008               	return
  6985     0400                     __end_of_vfpfcnvrt:
  6986                           
  6987                           	psect	text4
  6988     00FF                     __ptext4:	
  6989 ;; *************** function _read_prec_or_width *****************
  6990 ;; Defined at:
  6991 ;;		line 1158 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  fmt             1    wreg     PTR PTR const unsigned c
  6994 ;;		 -> vfprintf@cfmt(2), 
  6995 ;;  ap              1    6[COMMON] PTR PTR void [1]
  6996 ;;		 -> sprintf@ap(1), 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  6999 ;;		 -> vfprintf@cfmt(2), 
  7000 ;;  c               1    0[BANK0 ] unsigned char 
  7001 ;;  n               2    1[BANK0 ] int 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  2    6[COMMON] int 
  7004 ;; Registers used:
  7005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7012 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;Total ram usage:        9 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 1
  7018 ;; This function calls:
  7019 ;;		___wmul
  7020 ;; This function is called by:
  7021 ;;		_vfpfcnvrt
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025     00FF                     _read_prec_or_width:	
  7026                           ;psect for function _read_prec_or_width
  7027                           
  7028                           
  7029                           ;incstack = 0
  7030                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7031                           ;read_prec_or_width@fmt stored from wreg
  7032     00FF  0020               	movlb	0	; select bank0
  7033     0100  00A3               	movwf	read_prec_or_width@fmt
  7034     0101                     l3555:
  7035                           
  7036                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  7037     0101  01A1               	clrf	read_prec_or_width@n
  7038     0102  01A2               	clrf	read_prec_or_width@n+1
  7039     0103                     l3557:
  7040                           
  7041                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
  7042     0103  0823               	movf	read_prec_or_width@fmt,w
  7043     0104  0086               	movwf	6
  7044     0105  0187               	clrf	7
  7045     0106  3F40               	moviw [0]fsr1
  7046     0107  00F8               	movwf	??_read_prec_or_width
  7047     0108  3F41               	moviw [1]fsr1
  7048     0109  00F9               	movwf	??_read_prec_or_width+1
  7049     010A  0878               	movf	??_read_prec_or_width,w
  7050     010B  0084               	movwf	4
  7051     010C  0879               	movf	??_read_prec_or_width+1,w
  7052     010D  0085               	movwf	5
  7053     010E  0012               	moviw fsr0++
  7054     010F  3A2A               	xorlw	42
  7055     0110  1D03               	btfss	3,2
  7056     0111  2913               	goto	u2311
  7057     0112  2914               	goto	u2310
  7058     0113                     u2311:
  7059     0113  2946               	goto	l3567
  7060     0114                     u2310:
  7061     0114                     l3559:
  7062                           
  7063                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
  7064     0114  0823               	movf	read_prec_or_width@fmt,w
  7065     0115  0086               	movwf	6
  7066     0116  0187               	clrf	7
  7067     0117  3001               	movlw	1
  7068     0118  0781               	addwf	1,f
  7069     0119  3141               	addfsr 1,1
  7070     011A  1803               	skipnc
  7071     011B  0A81               	incf	1,f
  7072     011C                     l3561:
  7073                           
  7074                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
  7075     011C  0876               	movf	read_prec_or_width@ap,w
  7076     011D  0086               	movwf	6
  7077     011E  0187               	clrf	7
  7078     011F  0801               	movf	1,w
  7079     0120  0084               	movwf	4
  7080     0121  0185               	clrf	5
  7081     0122  3002               	movlw	2
  7082     0123  0781               	addwf	1,f
  7083     0124  3F00               	moviw [0]fsr0
  7084     0125  00A1               	movwf	read_prec_or_width@n
  7085     0126  3F01               	moviw [1]fsr0
  7086     0127  00A2               	movwf	read_prec_or_width@n+1
  7087                           
  7088                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1163:     } else {
  7089     0128  295A               	goto	l3569
  7090     0129                     l3563:
  7091                           
  7092                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
  7093     0129  0820               	movf	read_prec_or_width@c,w
  7094     012A  00F8               	movwf	??_read_prec_or_width
  7095     012B  01F9               	clrf	??_read_prec_or_width+1
  7096     012C  0822               	movf	read_prec_or_width@n+1,w
  7097     012D  00F1               	movwf	___wmul@multiplier+1
  7098     012E  0821               	movf	read_prec_or_width@n,w
  7099     012F  00F0               	movwf	___wmul@multiplier
  7100     0130  300A               	movlw	10
  7101     0131  00F2               	movwf	___wmul@multiplicand
  7102     0132  3000               	movlw	0
  7103     0133  00F3               	movwf	___wmul@multiplicand+1
  7104     0134  318E  269F  3180   	fcall	___wmul
  7105     0137  0878               	movf	??_read_prec_or_width,w
  7106     0138  0770               	addwf	?___wmul,w
  7107     0139  0020               	movlb	0	; select bank0
  7108     013A  00A1               	movwf	read_prec_or_width@n
  7109     013B  0879               	movf	??_read_prec_or_width+1,w
  7110     013C  3D71               	addwfc	?___wmul+1,w
  7111     013D  00A2               	movwf	read_prec_or_width@n+1
  7112     013E                     l3565:
  7113                           
  7114                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
  7115     013E  0823               	movf	read_prec_or_width@fmt,w
  7116     013F  0086               	movwf	6
  7117     0140  0187               	clrf	7
  7118     0141  3001               	movlw	1
  7119     0142  0781               	addwf	1,f
  7120     0143  3141               	addfsr 1,1
  7121     0144  1803               	skipnc
  7122     0145  0A81               	incf	1,f
  7123     0146                     l3567:
  7124                           
  7125                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
  7126     0146  0823               	movf	read_prec_or_width@fmt,w
  7127     0147  0086               	movwf	6
  7128     0148  0187               	clrf	7
  7129     0149  3F40               	moviw [0]fsr1
  7130     014A  00F8               	movwf	??_read_prec_or_width
  7131     014B  3F41               	moviw [1]fsr1
  7132     014C  00F9               	movwf	??_read_prec_or_width+1
  7133     014D  0878               	movf	??_read_prec_or_width,w
  7134     014E  0084               	movwf	4
  7135     014F  0879               	movf	??_read_prec_or_width+1,w
  7136     0150  0085               	movwf	5
  7137     0151  0800               	movf	0,w	;code access
  7138     0152  3ED0               	addlw	208
  7139     0153  00A0               	movwf	read_prec_or_width@c
  7140     0154  300A               	movlw	10
  7141     0155  0220               	subwf	read_prec_or_width@c,w
  7142     0156  1C03               	skipc
  7143     0157  2959               	goto	u2321
  7144     0158  295A               	goto	u2320
  7145     0159                     u2321:
  7146     0159  2929               	goto	l3563
  7147     015A                     u2320:
  7148     015A                     l3569:
  7149                           
  7150                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1170:     return n;
  7151     015A  0822               	movf	read_prec_or_width@n+1,w
  7152     015B  00F7               	movwf	?_read_prec_or_width+1
  7153     015C  0821               	movf	read_prec_or_width@n,w
  7154     015D  00F6               	movwf	?_read_prec_or_width
  7155     015E                     l1836:
  7156     015E  0008               	return
  7157     015F                     __end_of_read_prec_or_width:
  7158                           
  7159                           	psect	text5
  7160     0E9F                     __ptext5:	
  7161 ;; *************** function ___wmul *****************
  7162 ;; Defined at:
  7163 ;;		line 15 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  multiplier      2    0[COMMON] unsigned int 
  7166 ;;  multiplicand    2    2[COMMON] unsigned int 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  product         2    4[COMMON] unsigned int 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  2    0[COMMON] unsigned int 
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;Total ram usage:        6 bytes
  7183 ;; Hardware stack levels used: 1
  7184 ;; This function calls:
  7185 ;;		Nothing
  7186 ;; This function is called by:
  7187 ;;		_read_prec_or_width
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191     0E9F                     ___wmul:	
  7192                           ;psect for function ___wmul
  7193                           
  7194     0E9F                     l3359:	
  7195                           ;incstack = 0
  7196                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7197                           
  7198     0E9F  01F4               	clrf	___wmul@product
  7199     0EA0  01F5               	clrf	___wmul@product+1
  7200     0EA1                     l3361:
  7201     0EA1  1C70               	btfss	___wmul@multiplier,0
  7202     0EA2  2EA4               	goto	u1841
  7203     0EA3  2EA5               	goto	u1840
  7204     0EA4                     u1841:
  7205     0EA4  2EA9               	goto	l1324
  7206     0EA5                     u1840:
  7207     0EA5                     l3363:
  7208     0EA5  0872               	movf	___wmul@multiplicand,w
  7209     0EA6  07F4               	addwf	___wmul@product,f
  7210     0EA7  0873               	movf	___wmul@multiplicand+1,w
  7211     0EA8  3DF5               	addwfc	___wmul@product+1,f
  7212     0EA9                     l1324:
  7213     0EA9  3001               	movlw	1
  7214     0EAA                     u1855:
  7215     0EAA  35F2               	lslf	___wmul@multiplicand,f
  7216     0EAB  0DF3               	rlf	___wmul@multiplicand+1,f
  7217     0EAC  0B89               	decfsz	9,f
  7218     0EAD  2EAA               	goto	u1855
  7219     0EAE                     l3365:
  7220     0EAE  3001               	movlw	1
  7221     0EAF                     u1865:
  7222     0EAF  36F1               	lsrf	___wmul@multiplier+1,f
  7223     0EB0  0CF0               	rrf	___wmul@multiplier,f
  7224     0EB1  0B89               	decfsz	9,f
  7225     0EB2  2EAF               	goto	u1865
  7226     0EB3                     l3367:
  7227     0EB3  0870               	movf	___wmul@multiplier,w
  7228     0EB4  0471               	iorwf	___wmul@multiplier+1,w
  7229     0EB5  1D03               	btfss	3,2
  7230     0EB6  2EB8               	goto	u1871
  7231     0EB7  2EB9               	goto	u1870
  7232     0EB8                     u1871:
  7233     0EB8  2EA1               	goto	l3361
  7234     0EB9                     u1870:
  7235     0EB9                     l3369:
  7236     0EB9  0875               	movf	___wmul@product+1,w
  7237     0EBA  00F1               	movwf	?___wmul+1
  7238     0EBB  0874               	movf	___wmul@product,w
  7239     0EBC  00F0               	movwf	?___wmul
  7240     0EBD                     l1326:
  7241     0EBD  0008               	return
  7242     0EBE                     __end_of___wmul:
  7243                           
  7244                           	psect	text6
  7245     01DB                     __ptext6:	
  7246 ;; *************** function _dtoa *****************
  7247 ;; Defined at:
  7248 ;;		line 513 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  fp              1    wreg     PTR struct _IO_FILE
  7251 ;;		 -> sprintf@f(11), 
  7252 ;;  d               2    8[BANK0 ] int 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  7255 ;;		 -> sprintf@f(11), 
  7256 ;;  i               2   18[BANK0 ] int 
  7257 ;;  w               2   15[BANK0 ] int 
  7258 ;;  s               1   17[BANK0 ] unsigned char 
  7259 ;;  p               1   14[BANK0 ] _Bool 
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  1    wreg      void 
  7262 ;; Registers used:
  7263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7269 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;Total ram usage:       12 bytes
  7274 ;; Hardware stack levels used: 1
  7275 ;; Hardware stack levels required when called: 4
  7276 ;; This function calls:
  7277 ;;		___awdiv
  7278 ;;		___awmod
  7279 ;;		_abs
  7280 ;;		_pad
  7281 ;; This function is called by:
  7282 ;;		_vfpfcnvrt
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286     01DB                     _dtoa:	
  7287                           ;psect for function _dtoa
  7288                           
  7289                           
  7290                           ;incstack = 0
  7291                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7292                           ;dtoa@fp stored from wreg
  7293     01DB  0020               	movlb	0	; select bank0
  7294     01DC  00AD               	movwf	dtoa@fp
  7295     01DD                     l3509:
  7296                           
  7297                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 513: static void dtoa(FILE *f
      +                          p, vfpf_sint_t d);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 514: {;/opt/
      +                          microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 515:  char s;;/opt/microchip/xc8/v2
      +                          .45/pic/sources/c99/common/doprnt.c: 516:     int i, w;;/opt/microchip/xc8/v2.45/pic/sou
      +                          rces/c99/common/doprnt.c: 520:  _Bool p = 1;
  7298     01DD  01AE               	clrf	dtoa@p
  7299     01DE  0AAE               	incf	dtoa@p,f
  7300     01DF                     l3511:
  7301                           
  7302                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 524:     s = d < 0 ? 1 : 0;
  7303     01DF  1BA9               	btfsc	dtoa@d+1,7
  7304     01E0  29E2               	goto	u2211
  7305     01E1  29E4               	goto	u2210
  7306     01E2                     u2211:
  7307     01E2  3001               	movlw	1
  7308     01E3  29E5               	goto	u2220
  7309     01E4                     u2210:
  7310     01E4  3000               	movlw	0
  7311     01E5                     u2220:
  7312     01E5  00B1               	movwf	dtoa@s
  7313                           
  7314                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 535:     w = width;
  7315     01E6  0862               	movf	_width+1,w
  7316     01E7  00B0               	movwf	dtoa@w+1
  7317     01E8  0861               	movf	_width,w
  7318     01E9  00AF               	movwf	dtoa@w
  7319     01EA                     l3513:
  7320                           
  7321                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 536:     if (s
  7322     01EA  0831               	movf	dtoa@s,w
  7323     01EB  1903               	btfsc	3,2
  7324     01EC  29EE               	goto	u2231
  7325     01ED  29EF               	goto	u2230
  7326     01EE                     u2231:
  7327     01EE  2A03               	goto	l1815
  7328     01EF                     u2230:
  7329     01EF                     l3515:
  7330                           
  7331                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 540:     ) {;/opt/microchip/x
      +                          c8/v2.45/pic/sources/c99/common/doprnt.c: 541:         --w;
  7332     01EF  30FF               	movlw	255
  7333     01F0  07AF               	addwf	dtoa@w,f
  7334     01F1  30FF               	movlw	255
  7335     01F2  3DB0               	addwfc	dtoa@w+1,f
  7336     01F3                     l3517:
  7337                           
  7338                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' : '+';
  7339     01F3  0831               	movf	dtoa@s,w
  7340     01F4  1D03               	btfss	3,2
  7341     01F5  29F7               	goto	u2241
  7342     01F6  29F8               	goto	u2240
  7343     01F7                     u2241:
  7344     01F7  29FD               	goto	l3521
  7345     01F8                     u2240:
  7346     01F8                     l3519:
  7347     01F8  302B               	movlw	43
  7348     01F9  00AB               	movwf	_dtoa$2565
  7349     01FA  3000               	movlw	0
  7350     01FB  00AC               	movwf	_dtoa$2565+1
  7351     01FC  2A01               	goto	l1819
  7352     01FD                     l3521:
  7353     01FD  302D               	movlw	45
  7354     01FE  00AB               	movwf	_dtoa$2565
  7355     01FF  3000               	movlw	0
  7356     0200  00AC               	movwf	_dtoa$2565+1
  7357     0201                     l1819:
  7358     0201  082B               	movf	_dtoa$2565,w
  7359     0202  00B1               	movwf	dtoa@s
  7360     0203                     l1815:	
  7361                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 543:     }
  7362                           
  7363                           
  7364                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(dbuf) - 1
      +                          ;
  7365     0203  301F               	movlw	31
  7366     0204  00B2               	movwf	dtoa@i
  7367     0205  3000               	movlw	0
  7368     0206  00B3               	movwf	dtoa@i+1
  7369     0207                     l3523:
  7370                           
  7371                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '\0';
  7372     0207  0022               	movlb	2	; select bank2
  7373     0208  01BF               	clrf	(_dbuf^(0+256)+31)
  7374                           
  7375                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
  7376     0209  2A3E               	goto	l3535
  7377     020A                     l3525:
  7378                           
  7379                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 563:     )) {;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 564:         --i;
  7380     020A  30FF               	movlw	255
  7381     020B  07B2               	addwf	dtoa@i,f
  7382     020C  30FF               	movlw	255
  7383     020D  3DB3               	addwfc	dtoa@i+1,f
  7384     020E                     l3527:
  7385                           
  7386                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 565:         dbuf[i] = (char)
      +                          ((int)'0' + abs(d % 10));
  7387     020E  0832               	movf	dtoa@i,w
  7388     020F  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7389     0210  0086               	movwf	6
  7390     0211  3001               	movlw	1	; select bank2/3
  7391     0212  0087               	movwf	7
  7392     0213  300A               	movlw	10
  7393     0214  00F0               	movwf	___awmod@divisor
  7394     0215  3000               	movlw	0
  7395     0216  00F1               	movwf	___awmod@divisor+1
  7396     0217  0829               	movf	dtoa@d+1,w
  7397     0218  00F3               	movwf	___awmod@dividend+1
  7398     0219  0828               	movf	dtoa@d,w
  7399     021A  00F2               	movwf	___awmod@dividend
  7400     021B  3180  204D  3181   	fcall	___awmod
  7401     021E  0871               	movf	?___awmod+1,w
  7402     021F  00F8               	movwf	abs@a+1
  7403     0220  0870               	movf	?___awmod,w
  7404     0221  00F7               	movwf	abs@a
  7405     0222  318D  25BE  3181   	fcall	_abs
  7406     0225  0877               	movf	?_abs,w
  7407     0226  3E30               	addlw	48
  7408     0227  0081               	movwf	1
  7409     0228                     l3529:
  7410                           
  7411                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 569:   p = 0;
  7412     0228  0020               	movlb	0	; select bank0
  7413     0229  01AE               	clrf	dtoa@p
  7414     022A                     l3531:
  7415                           
  7416                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 571:         --w;
  7417     022A  30FF               	movlw	255
  7418     022B  07AF               	addwf	dtoa@w,f
  7419     022C  30FF               	movlw	255
  7420     022D  3DB0               	addwfc	dtoa@w+1,f
  7421     022E                     l3533:
  7422                           
  7423                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 572:         d = d / 10;
  7424     022E  300A               	movlw	10
  7425     022F  00F0               	movwf	___awdiv@divisor
  7426     0230  3000               	movlw	0
  7427     0231  00F1               	movwf	___awdiv@divisor+1
  7428     0232  0829               	movf	dtoa@d+1,w
  7429     0233  00F3               	movwf	___awdiv@dividend+1
  7430     0234  0828               	movf	dtoa@d,w
  7431     0235  00F2               	movwf	___awdiv@dividend
  7432     0236  3180  20A0  3181   	fcall	___awdiv
  7433     0239  0871               	movf	?___awdiv+1,w
  7434     023A  0020               	movlb	0	; select bank0
  7435     023B  00A9               	movwf	dtoa@d+1
  7436     023C  0870               	movf	?___awdiv,w
  7437     023D  00A8               	movwf	dtoa@d
  7438     023E                     l3535:
  7439                           
  7440                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
  7441     023E  0020               	movlb	0	; select bank0
  7442     023F  0833               	movf	dtoa@i+1,w
  7443     0240  3A80               	xorlw	128
  7444     0241  00AA               	movwf	??_dtoa
  7445     0242  3080               	movlw	128
  7446     0243  022A               	subwf	??_dtoa,w
  7447     0244  1D03               	skipz
  7448     0245  2A48               	goto	u2255
  7449     0246  3001               	movlw	1
  7450     0247  0232               	subwf	dtoa@i,w
  7451     0248                     u2255:
  7452     0248  1C03               	skipc
  7453     0249  2A4B               	goto	u2251
  7454     024A  2A4C               	goto	u2250
  7455     024B                     u2251:
  7456     024B  2A6A               	goto	l3545
  7457     024C                     u2250:
  7458     024C                     l3537:
  7459     024C  0020               	movlb	0	; select bank0
  7460     024D  0828               	movf	dtoa@d,w
  7461     024E  0429               	iorwf	dtoa@d+1,w
  7462     024F  1D03               	btfss	3,2
  7463     0250  2A52               	goto	u2261
  7464     0251  2A53               	goto	u2260
  7465     0252                     u2261:
  7466     0252  2A0A               	goto	l3525
  7467     0253                     u2260:
  7468     0253                     l3539:
  7469     0253  082E               	movf	dtoa@p,w
  7470     0254  1D03               	btfss	3,2
  7471     0255  2A57               	goto	u2271
  7472     0256  2A58               	goto	u2270
  7473     0257                     u2271:
  7474     0257  2A0A               	goto	l3525
  7475     0258                     u2270:
  7476     0258                     l3541:
  7477     0258  0830               	movf	dtoa@w+1,w
  7478     0259  3A80               	xorlw	128
  7479     025A  00AA               	movwf	??_dtoa
  7480     025B  3080               	movlw	128
  7481     025C  022A               	subwf	??_dtoa,w
  7482     025D  1D03               	skipz
  7483     025E  2A61               	goto	u2285
  7484     025F  3001               	movlw	1
  7485     0260  022F               	subwf	dtoa@w,w
  7486     0261                     u2285:
  7487     0261  1C03               	skipc
  7488     0262  2A64               	goto	u2281
  7489     0263  2A65               	goto	u2280
  7490     0264                     u2281:
  7491     0264  2A6A               	goto	l3545
  7492     0265                     u2280:
  7493     0265                     l3543:
  7494     0265  0020               	movlb	0	; select bank0
  7495     0266  18E7               	btfsc	_flags,1
  7496     0267  2A69               	goto	u2291
  7497     0268  2A6A               	goto	u2290
  7498     0269                     u2291:
  7499     0269  2A0A               	goto	l3525
  7500     026A                     u2290:
  7501     026A                     l3545:
  7502                           
  7503                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 576:     if (s != 0) {
  7504     026A  0020               	movlb	0	; select bank0
  7505     026B  0831               	movf	dtoa@s,w
  7506     026C  1903               	btfsc	3,2
  7507     026D  2A6F               	goto	u2301
  7508     026E  2A70               	goto	u2300
  7509     026F                     u2301:
  7510     026F  2A7B               	goto	l3551
  7511     0270                     u2300:
  7512     0270                     l3547:
  7513                           
  7514                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 577:         --i;
  7515     0270  30FF               	movlw	255
  7516     0271  07B2               	addwf	dtoa@i,f
  7517     0272  30FF               	movlw	255
  7518     0273  3DB3               	addwfc	dtoa@i+1,f
  7519     0274                     l3549:
  7520                           
  7521                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 578:         dbuf[i] = s;
  7522     0274  0832               	movf	dtoa@i,w
  7523     0275  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7524     0276  0086               	movwf	6
  7525     0277  3001               	movlw	1	; select bank2/3
  7526     0278  0087               	movwf	7
  7527     0279  0831               	movf	dtoa@s,w
  7528     027A  0081               	movwf	1
  7529     027B                     l3551:
  7530                           
  7531                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 582:     return (void) pad(fp
      +                          , &dbuf[i], w);
  7532     027B  0832               	movf	dtoa@i,w
  7533     027C  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7534     027D  00FB               	movwf	pad@buf
  7535     027E  0830               	movf	dtoa@w+1,w
  7536     027F  00FD               	movwf	pad@p+1
  7537     0280  082F               	movf	dtoa@w,w
  7538     0281  00FC               	movwf	pad@p
  7539     0282  082D               	movf	dtoa@fp,w
  7540     0283  318E  26E3  3181   	fcall	_pad
  7541     0286                     l1828:
  7542     0286  0008               	return
  7543     0287                     __end_of_dtoa:
  7544                           
  7545                           	psect	text7
  7546     0EE3                     __ptext7:	
  7547 ;; *************** function _pad *****************
  7548 ;; Defined at:
  7549 ;;		line 193 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;  fp              1    wreg     PTR struct _IO_FILE
  7552 ;;		 -> sprintf@f(11), 
  7553 ;;  buf             1   11[COMMON] PTR unsigned char 
  7554 ;;		 -> dbuf(32), 
  7555 ;;  p               2   12[COMMON] int 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  7558 ;;		 -> sprintf@f(11), 
  7559 ;;  i               2    5[BANK0 ] int 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7569 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;Total ram usage:        7 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; Hardware stack levels required when called: 3
  7576 ;; This function calls:
  7577 ;;		_fputc
  7578 ;;		_fputs
  7579 ;; This function is called by:
  7580 ;;		_dtoa
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584     0EE3                     _pad:	
  7585                           ;psect for function _pad
  7586                           
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7590                           ;pad@fp stored from wreg
  7591     0EE3  0020               	movlb	0	; select bank0
  7592     0EE4  00A7               	movwf	pad@fp
  7593     0EE5                     l3455:
  7594                           
  7595                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 193: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 194: {;/op
      +                          t/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc
      +                          8/v2.45/pic/sources/c99/common/doprnt.c: 199:     if (flags & (1 << 0)) {
  7596     0EE5  1C67               	btfss	_flags,0
  7597     0EE6  2EE8               	goto	u2071
  7598     0EE7  2EE9               	goto	u2070
  7599     0EE8                     u2071:
  7600     0EE8  2EEF               	goto	l3459
  7601     0EE9                     u2070:
  7602     0EE9                     l3457:
  7603                           
  7604                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 200:         fputs((const cha
      +                          r *)buf, fp);
  7605     0EE9  0827               	movf	pad@fp,w
  7606     0EEA  00F8               	movwf	fputs@fp
  7607     0EEB  087B               	movf	pad@buf,w
  7608     0EEC  318E  26BE  318E   	fcall	_fputs
  7609     0EEF                     l3459:
  7610                           
  7611                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  7612     0EEF  1FFD               	btfss	pad@p+1,7
  7613     0EF0  2EF2               	goto	u2081
  7614     0EF1  2EF3               	goto	u2080
  7615     0EF2                     u2081:
  7616     0EF2  2EF5               	goto	l1807
  7617     0EF3                     u2080:
  7618     0EF3                     l3461:
  7619                           
  7620                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  7621     0EF3  01FC               	clrf	pad@p
  7622     0EF4  01FD               	clrf	pad@p+1
  7623     0EF5                     l1807:	
  7624                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 207:  }
  7625                           
  7626                           
  7627                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  7628     0EF5  0020               	movlb	0	; select bank0
  7629     0EF6  01A5               	clrf	pad@i
  7630     0EF7  01A6               	clrf	pad@i+1
  7631                           
  7632                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  7633     0EF8  2F08               	goto	l3467
  7634     0EF9                     l3463:
  7635                           
  7636                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
  7637     0EF9  3020               	movlw	32
  7638     0EFA  00F0               	movwf	fputc@c
  7639     0EFB  3000               	movlw	0
  7640     0EFC  00F1               	movwf	fputc@c+1
  7641     0EFD  0020               	movlb	0	; select bank0
  7642     0EFE  0827               	movf	pad@fp,w
  7643     0EFF  00F2               	movwf	fputc@fp
  7644     0F00  318F  27B0  318E   	fcall	_fputc
  7645     0F03                     l3465:
  7646                           
  7647                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 211:         ++i;
  7648     0F03  3001               	movlw	1
  7649     0F04  0020               	movlb	0	; select bank0
  7650     0F05  07A5               	addwf	pad@i,f
  7651     0F06  3000               	movlw	0
  7652     0F07  3DA6               	addwfc	pad@i+1,f
  7653     0F08                     l3467:
  7654                           
  7655                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  7656     0F08  0826               	movf	pad@i+1,w
  7657     0F09  3A80               	xorlw	128
  7658     0F0A  00A4               	movwf	??_pad
  7659     0F0B  087D               	movf	pad@p+1,w
  7660     0F0C  3A80               	xorlw	128
  7661     0F0D  0224               	subwf	??_pad,w
  7662     0F0E  1D03               	skipz
  7663     0F0F  2F12               	goto	u2095
  7664     0F10  087C               	movf	pad@p,w
  7665     0F11  0225               	subwf	pad@i,w
  7666     0F12                     u2095:
  7667     0F12  1C03               	skipc
  7668     0F13  2F15               	goto	u2091
  7669     0F14  2F16               	goto	u2090
  7670     0F15                     u2091:
  7671     0F15  2EF9               	goto	l3463
  7672     0F16                     u2090:
  7673     0F16                     l1810:
  7674                           
  7675                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 216:     if (!(flags & (1 << 
      +                          0))) {
  7676     0F16  0020               	movlb	0	; select bank0
  7677     0F17  1867               	btfsc	_flags,0
  7678     0F18  2F1A               	goto	u2101
  7679     0F19  2F1B               	goto	u2100
  7680     0F1A                     u2101:
  7681     0F1A  2F21               	goto	l1812
  7682     0F1B                     u2100:
  7683     0F1B                     l3469:
  7684                           
  7685                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
  7686     0F1B  0827               	movf	pad@fp,w
  7687     0F1C  00F8               	movwf	fputs@fp
  7688     0F1D  087B               	movf	pad@buf,w
  7689     0F1E  318E  26BE  318E   	fcall	_fputs
  7690     0F21                     l1812:
  7691     0F21  0008               	return
  7692     0F22                     __end_of_pad:
  7693                           
  7694                           	psect	text8
  7695     0EBE                     __ptext8:	
  7696 ;; *************** function _fputs *****************
  7697 ;; Defined at:
  7698 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputs.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;  s               1    wreg     PTR const unsigned char 
  7701 ;;		 -> dbuf(32), 
  7702 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  7703 ;;		 -> sprintf@f(11), 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  7706 ;;		 -> dbuf(32), 
  7707 ;;  i               2    1[BANK0 ] int 
  7708 ;;  c               1    0[BANK0 ] unsigned char 
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  2    8[COMMON] int 
  7711 ;; Registers used:
  7712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7718 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;Total ram usage:        7 bytes
  7723 ;; Hardware stack levels used: 1
  7724 ;; Hardware stack levels required when called: 2
  7725 ;; This function calls:
  7726 ;;		_fputc
  7727 ;; This function is called by:
  7728 ;;		_pad
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732     0EBE                     _fputs:	
  7733                           ;psect for function _fputs
  7734                           
  7735                           
  7736                           ;incstack = 0
  7737                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7738                           ;fputs@s stored from wreg
  7739     0EBE  0020               	movlb	0	; select bank0
  7740     0EBF  00A3               	movwf	fputs@s
  7741     0EC0                     l3351:
  7742     0EC0  01A1               	clrf	fputs@i
  7743     0EC1  01A2               	clrf	fputs@i+1
  7744     0EC2  2ED4               	goto	l3357
  7745     0EC3                     l3353:
  7746     0EC3  0820               	movf	fputs@c,w
  7747     0EC4  00F9               	movwf	??_fputs
  7748     0EC5  01FA               	clrf	??_fputs+1
  7749     0EC6  0879               	movf	??_fputs,w
  7750     0EC7  00F0               	movwf	fputc@c
  7751     0EC8  087A               	movf	??_fputs+1,w
  7752     0EC9  00F1               	movwf	fputc@c+1
  7753     0ECA  0878               	movf	fputs@fp,w
  7754     0ECB  00F2               	movwf	fputc@fp
  7755     0ECC  318F  27B0  318E   	fcall	_fputc
  7756     0ECF                     l3355:
  7757     0ECF  3001               	movlw	1
  7758     0ED0  0020               	movlb	0	; select bank0
  7759     0ED1  07A1               	addwf	fputs@i,f
  7760     0ED2  3000               	movlw	0
  7761     0ED3  3DA2               	addwfc	fputs@i+1,f
  7762     0ED4                     l3357:
  7763     0ED4  0821               	movf	fputs@i,w
  7764     0ED5  0723               	addwf	fputs@s,w
  7765     0ED6  00F9               	movwf	??_fputs
  7766     0ED7  0879               	movf	??_fputs,w
  7767     0ED8  0086               	movwf	6
  7768     0ED9  3001               	movlw	1	; select bank2/3
  7769     0EDA  0087               	movwf	7
  7770     0EDB  0801               	movf	1,w
  7771     0EDC  00A0               	movwf	fputs@c
  7772     0EDD  0820               	movf	fputs@c,w
  7773     0EDE  1D03               	btfss	3,2
  7774     0EDF  2EE1               	goto	u1831
  7775     0EE0  2EE2               	goto	u1830
  7776     0EE1                     u1831:
  7777     0EE1  2EC3               	goto	l3353
  7778     0EE2                     u1830:
  7779     0EE2                     l1884:
  7780     0EE2  0008               	return
  7781     0EE3                     __end_of_fputs:
  7782                           
  7783                           	psect	text9
  7784     0FB0                     __ptext9:	
  7785 ;; *************** function _fputc *****************
  7786 ;; Defined at:
  7787 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputc.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  c               2    0[COMMON] int 
  7790 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  7791 ;;		 -> sprintf@f(11), 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;		None
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  2    0[COMMON] int 
  7796 ;; Registers used:
  7797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7803 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;Total ram usage:        8 bytes
  7808 ;; Hardware stack levels used: 1
  7809 ;; Hardware stack levels required when called: 1
  7810 ;; This function calls:
  7811 ;;		_putch
  7812 ;; This function is called by:
  7813 ;;		_pad
  7814 ;;		_vfpfcnvrt
  7815 ;;		_fputs
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819     0FB0                     _fputc:	
  7820                           ;psect for function _fputc
  7821                           
  7822     0FB0                     l3335:	
  7823                           ;incstack = 0
  7824                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7825                           
  7826     0FB0  0872               	movf	fputc@fp,w
  7827     0FB1  1903               	btfsc	3,2
  7828     0FB2  2FB4               	goto	u1791
  7829     0FB3  2FB5               	goto	u1790
  7830     0FB4                     u1791:
  7831     0FB4  2FBA               	goto	l3339
  7832     0FB5                     u1790:
  7833     0FB5                     l3337:
  7834     0FB5  0872               	movf	fputc@fp,w
  7835     0FB6  1D03               	btfss	3,2
  7836     0FB7  2FB9               	goto	u1801
  7837     0FB8  2FBA               	goto	u1800
  7838     0FB9                     u1801:
  7839     0FB9  2FBF               	goto	l3341
  7840     0FBA                     u1800:
  7841     0FBA                     l3339:
  7842     0FBA  0870               	movf	fputc@c,w
  7843     0FBB  3180  2004  318F   	fcall	_putch
  7844     0FBE  2FFF               	goto	l1876
  7845     0FBF                     l3341:
  7846     0FBF  0872               	movf	fputc@fp,w
  7847     0FC0  3E09               	addlw	9
  7848     0FC1  0086               	movwf	6
  7849     0FC2  0187               	clrf	7
  7850     0FC3  0016               	moviw fsr1++
  7851     0FC4  0401               	iorwf	1,w
  7852     0FC5  1903               	btfsc	3,2
  7853     0FC6  2FC8               	goto	u1811
  7854     0FC7  2FC9               	goto	u1810
  7855     0FC8                     u1811:
  7856     0FC8  2FE7               	goto	l3345
  7857     0FC9                     u1810:
  7858     0FC9                     l3343:
  7859     0FC9  0872               	movf	fputc@fp,w
  7860     0FCA  3E09               	addlw	9
  7861     0FCB  0086               	movwf	6
  7862     0FCC  0187               	clrf	7
  7863     0FCD  3F40               	moviw [0]fsr1
  7864     0FCE  00F3               	movwf	??_fputc
  7865     0FCF  3F41               	moviw [1]fsr1
  7866     0FD0  00F4               	movwf	??_fputc+1
  7867     0FD1  0872               	movf	fputc@fp,w
  7868     0FD2  3E02               	addlw	2
  7869     0FD3  0086               	movwf	6
  7870     0FD4  0187               	clrf	7
  7871     0FD5  3F40               	moviw [0]fsr1
  7872     0FD6  00F5               	movwf	??_fputc+2
  7873     0FD7  3F41               	moviw [1]fsr1
  7874     0FD8  00F6               	movwf	??_fputc+3
  7875     0FD9  0876               	movf	??_fputc+3,w
  7876     0FDA  3A80               	xorlw	128
  7877     0FDB  00F7               	movwf	??_fputc+4
  7878     0FDC  0874               	movf	??_fputc+1,w
  7879     0FDD  3A80               	xorlw	128
  7880     0FDE  0277               	subwf	??_fputc+4,w
  7881     0FDF  1D03               	skipz
  7882     0FE0  2FE3               	goto	u1825
  7883     0FE1  0873               	movf	??_fputc,w
  7884     0FE2  0275               	subwf	??_fputc+2,w
  7885     0FE3                     u1825:
  7886     0FE3  1803               	skipnc
  7887     0FE4  2FE6               	goto	u1821
  7888     0FE5  2FE7               	goto	u1820
  7889     0FE6                     u1821:
  7890     0FE6  2FFF               	goto	l1876
  7891     0FE7                     u1820:
  7892     0FE7                     l3345:
  7893     0FE7  0872               	movf	fputc@fp,w
  7894     0FE8  0086               	movwf	6
  7895     0FE9  0187               	clrf	7
  7896     0FEA  0872               	movf	fputc@fp,w
  7897     0FEB  3E02               	addlw	2
  7898     0FEC  0084               	movwf	4
  7899     0FED  0185               	clrf	5
  7900     0FEE  0800               	movf	0,w
  7901     0FEF  0701               	addwf	1,w
  7902     0FF0  00F3               	movwf	??_fputc
  7903     0FF1  0873               	movf	??_fputc,w
  7904     0FF2  0086               	movwf	6
  7905     0FF3  0187               	clrf	7
  7906     0FF4  0870               	movf	fputc@c,w
  7907     0FF5  0081               	movwf	1
  7908     0FF6                     l3347:
  7909     0FF6  0872               	movf	fputc@fp,w
  7910     0FF7  3E02               	addlw	2
  7911     0FF8  0086               	movwf	6
  7912     0FF9  0187               	clrf	7
  7913     0FFA  3001               	movlw	1
  7914     0FFB  0781               	addwf	1,f
  7915     0FFC  3141               	addfsr 1,1
  7916     0FFD  1803               	skipnc
  7917     0FFE  0A81               	incf	1,f
  7918     0FFF                     l1876:
  7919     0FFF  0008               	return
  7920     1000                     __end_of_fputc:
  7921                           
  7922                           	psect	text10
  7923     0004                     __ptext10:	
  7924 ;; *************** function _putch *****************
  7925 ;; Defined at:
  7926 ;;		line 7 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/putch.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  c               1    wreg     unsigned char 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  c               1    0[COMMON] unsigned char 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      void 
  7933 ;; Registers used:
  7934 ;;		wreg
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7944 ;;Total ram usage:        0 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_fputc
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953     0004                     _putch:	
  7954                           ;psect for function _putch
  7955                           
  7956     0004                     l1887:	
  7957                           ;incstack = 0
  7958                           ; Regs used in _putch: [wreg]
  7959                           
  7960     0004  0008               	return
  7961     0005                     __end_of_putch:
  7962                           
  7963                           	psect	text11
  7964     0DBE                     __ptext11:	
  7965 ;; *************** function _abs *****************
  7966 ;; Defined at:
  7967 ;;		line 1 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/abs.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;  a               2    7[COMMON] int 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  2    7[COMMON] int 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;Total ram usage:        4 bytes
  7986 ;; Hardware stack levels used: 1
  7987 ;; This function calls:
  7988 ;;		Nothing
  7989 ;; This function is called by:
  7990 ;;		_dtoa
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994     0DBE                     _abs:	
  7995                           ;psect for function _abs
  7996                           
  7997     0DBE                     l3471:	
  7998                           ;incstack = 0
  7999                           ; Regs used in _abs: [wreg+status,2+status,0]
  8000                           
  8001     0DBE  1BF8               	btfsc	abs@a+1,7
  8002     0DBF  2DC1               	goto	u2111
  8003     0DC0  2DC2               	goto	u2110
  8004     0DC1                     u2111:
  8005     0DC1  2DC3               	goto	l3475
  8006     0DC2                     u2110:
  8007     0DC2                     l3473:
  8008     0DC2  2DCE               	goto	l1864
  8009     0DC3                     l3475:
  8010     0DC3  0977               	comf	abs@a,w
  8011     0DC4  00F9               	movwf	??_abs
  8012     0DC5  0978               	comf	abs@a+1,w
  8013     0DC6  00FA               	movwf	??_abs+1
  8014     0DC7  0AF9               	incf	??_abs,f
  8015     0DC8  1903               	skipnz
  8016     0DC9  0AFA               	incf	??_abs+1,f
  8017     0DCA  0879               	movf	??_abs,w
  8018     0DCB  00F7               	movwf	?_abs
  8019     0DCC  087A               	movf	??_abs+1,w
  8020     0DCD  00F8               	movwf	?_abs+1
  8021     0DCE                     l1864:
  8022     0DCE  0008               	return
  8023     0DCF                     __end_of_abs:
  8024                           
  8025                           	psect	text12
  8026     004D                     __ptext12:	
  8027 ;; *************** function ___awmod *****************
  8028 ;; Defined at:
  8029 ;;		line 5 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/awmod.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  divisor         2    0[COMMON] int 
  8032 ;;  dividend        2    2[COMMON] int 
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;  sign            1    6[COMMON] unsigned char 
  8035 ;;  counter         1    5[COMMON] unsigned char 
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  2    0[COMMON] int 
  8038 ;; Registers used:
  8039 ;;		wreg, status,2, status,0
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8048 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;Total ram usage:        7 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; This function calls:
  8052 ;;		Nothing
  8053 ;; This function is called by:
  8054 ;;		_dtoa
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058     004D                     ___awmod:	
  8059                           ;psect for function ___awmod
  8060                           
  8061     004D                     l3417:	
  8062                           ;incstack = 0
  8063                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8064                           
  8065     004D  01F6               	clrf	___awmod@sign
  8066     004E                     l3419:
  8067     004E  1FF3               	btfss	___awmod@dividend+1,7
  8068     004F  2851               	goto	u1981
  8069     0050  2852               	goto	u1980
  8070     0051                     u1981:
  8071     0051  2859               	goto	l3425
  8072     0052                     u1980:
  8073     0052                     l3421:
  8074     0052  09F2               	comf	___awmod@dividend,f
  8075     0053  09F3               	comf	___awmod@dividend+1,f
  8076     0054  0AF2               	incf	___awmod@dividend,f
  8077     0055  1903               	skipnz
  8078     0056  0AF3               	incf	___awmod@dividend+1,f
  8079     0057                     l3423:
  8080     0057  01F6               	clrf	___awmod@sign
  8081     0058  0AF6               	incf	___awmod@sign,f
  8082     0059                     l3425:
  8083     0059  1FF1               	btfss	___awmod@divisor+1,7
  8084     005A  285C               	goto	u1991
  8085     005B  285D               	goto	u1990
  8086     005C                     u1991:
  8087     005C  2862               	goto	l3429
  8088     005D                     u1990:
  8089     005D                     l3427:
  8090     005D  09F0               	comf	___awmod@divisor,f
  8091     005E  09F1               	comf	___awmod@divisor+1,f
  8092     005F  0AF0               	incf	___awmod@divisor,f
  8093     0060  1903               	skipnz
  8094     0061  0AF1               	incf	___awmod@divisor+1,f
  8095     0062                     l3429:
  8096     0062  0870               	movf	___awmod@divisor,w
  8097     0063  0471               	iorwf	___awmod@divisor+1,w
  8098     0064  1903               	btfsc	3,2
  8099     0065  2867               	goto	u2001
  8100     0066  2868               	goto	u2000
  8101     0067                     u2001:
  8102     0067  2891               	goto	l3447
  8103     0068                     u2000:
  8104     0068                     l3431:
  8105     0068  01F5               	clrf	___awmod@counter
  8106     0069  0AF5               	incf	___awmod@counter,f
  8107     006A  2874               	goto	l3437
  8108     006B                     l3433:
  8109     006B  3001               	movlw	1
  8110     006C                     u2015:
  8111     006C  35F0               	lslf	___awmod@divisor,f
  8112     006D  0DF1               	rlf	___awmod@divisor+1,f
  8113     006E  0B89               	decfsz	9,f
  8114     006F  286C               	goto	u2015
  8115     0070                     l3435:
  8116     0070  3001               	movlw	1
  8117     0071  00F4               	movwf	??___awmod
  8118     0072  0874               	movf	??___awmod,w
  8119     0073  07F5               	addwf	___awmod@counter,f
  8120     0074                     l3437:
  8121     0074  1FF1               	btfss	___awmod@divisor+1,7
  8122     0075  2877               	goto	u2021
  8123     0076  2878               	goto	u2020
  8124     0077                     u2021:
  8125     0077  286B               	goto	l3433
  8126     0078                     u2020:
  8127     0078                     l3439:
  8128     0078  0871               	movf	___awmod@divisor+1,w
  8129     0079  0273               	subwf	___awmod@dividend+1,w
  8130     007A  1D03               	skipz
  8131     007B  287E               	goto	u2035
  8132     007C  0870               	movf	___awmod@divisor,w
  8133     007D  0272               	subwf	___awmod@dividend,w
  8134     007E                     u2035:
  8135     007E  1C03               	skipc
  8136     007F  2881               	goto	u2031
  8137     0080  2882               	goto	u2030
  8138     0081                     u2031:
  8139     0081  2886               	goto	l3443
  8140     0082                     u2030:
  8141     0082                     l3441:
  8142     0082  0870               	movf	___awmod@divisor,w
  8143     0083  02F2               	subwf	___awmod@dividend,f
  8144     0084  0871               	movf	___awmod@divisor+1,w
  8145     0085  3BF3               	subwfb	___awmod@dividend+1,f
  8146     0086                     l3443:
  8147     0086  3001               	movlw	1
  8148     0087                     u2045:
  8149     0087  36F1               	lsrf	___awmod@divisor+1,f
  8150     0088  0CF0               	rrf	___awmod@divisor,f
  8151     0089  0B89               	decfsz	9,f
  8152     008A  2887               	goto	u2045
  8153     008B                     l3445:
  8154     008B  3001               	movlw	1
  8155     008C  02F5               	subwf	___awmod@counter,f
  8156     008D  1D03               	btfss	3,2
  8157     008E  2890               	goto	u2051
  8158     008F  2891               	goto	u2050
  8159     0090                     u2051:
  8160     0090  2878               	goto	l3439
  8161     0091                     u2050:
  8162     0091                     l3447:
  8163     0091  0876               	movf	___awmod@sign,w
  8164     0092  1903               	btfsc	3,2
  8165     0093  2895               	goto	u2061
  8166     0094  2896               	goto	u2060
  8167     0095                     u2061:
  8168     0095  289B               	goto	l3451
  8169     0096                     u2060:
  8170     0096                     l3449:
  8171     0096  09F2               	comf	___awmod@dividend,f
  8172     0097  09F3               	comf	___awmod@dividend+1,f
  8173     0098  0AF2               	incf	___awmod@dividend,f
  8174     0099  1903               	skipnz
  8175     009A  0AF3               	incf	___awmod@dividend+1,f
  8176     009B                     l3451:
  8177     009B  0873               	movf	___awmod@dividend+1,w
  8178     009C  00F1               	movwf	?___awmod+1
  8179     009D  0872               	movf	___awmod@dividend,w
  8180     009E  00F0               	movwf	?___awmod
  8181     009F                     l1490:
  8182     009F  0008               	return
  8183     00A0                     __end_of___awmod:
  8184                           
  8185                           	psect	text13
  8186     00A0                     __ptext13:	
  8187 ;; *************** function ___awdiv *****************
  8188 ;; Defined at:
  8189 ;;		line 5 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/awdiv.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  divisor         2    0[COMMON] int 
  8192 ;;  dividend        2    2[COMMON] int 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  quotient        2    7[COMMON] int 
  8195 ;;  sign            1    6[COMMON] unsigned char 
  8196 ;;  counter         1    5[COMMON] unsigned char 
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  2    0[COMMON] int 
  8199 ;; Registers used:
  8200 ;;		wreg, status,2, status,0
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8207 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;Total ram usage:        9 bytes
  8211 ;; Hardware stack levels used: 1
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_dtoa
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219     00A0                     ___awdiv:	
  8220                           ;psect for function ___awdiv
  8221                           
  8222     00A0                     l3373:	
  8223                           ;incstack = 0
  8224                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8225                           
  8226     00A0  01F6               	clrf	___awdiv@sign
  8227     00A1                     l3375:
  8228     00A1  1FF1               	btfss	___awdiv@divisor+1,7
  8229     00A2  28A4               	goto	u1881
  8230     00A3  28A5               	goto	u1880
  8231     00A4                     u1881:
  8232     00A4  28AC               	goto	l3381
  8233     00A5                     u1880:
  8234     00A5                     l3377:
  8235     00A5  09F0               	comf	___awdiv@divisor,f
  8236     00A6  09F1               	comf	___awdiv@divisor+1,f
  8237     00A7  0AF0               	incf	___awdiv@divisor,f
  8238     00A8  1903               	skipnz
  8239     00A9  0AF1               	incf	___awdiv@divisor+1,f
  8240     00AA                     l3379:
  8241     00AA  01F6               	clrf	___awdiv@sign
  8242     00AB  0AF6               	incf	___awdiv@sign,f
  8243     00AC                     l3381:
  8244     00AC  1FF3               	btfss	___awdiv@dividend+1,7
  8245     00AD  28AF               	goto	u1891
  8246     00AE  28B0               	goto	u1890
  8247     00AF                     u1891:
  8248     00AF  28B9               	goto	l3387
  8249     00B0                     u1890:
  8250     00B0                     l3383:
  8251     00B0  09F2               	comf	___awdiv@dividend,f
  8252     00B1  09F3               	comf	___awdiv@dividend+1,f
  8253     00B2  0AF2               	incf	___awdiv@dividend,f
  8254     00B3  1903               	skipnz
  8255     00B4  0AF3               	incf	___awdiv@dividend+1,f
  8256     00B5                     l3385:
  8257     00B5  3001               	movlw	1
  8258     00B6  00F4               	movwf	??___awdiv
  8259     00B7  0874               	movf	??___awdiv,w
  8260     00B8  06F6               	xorwf	___awdiv@sign,f
  8261     00B9                     l3387:
  8262     00B9  01F7               	clrf	___awdiv@quotient
  8263     00BA  01F8               	clrf	___awdiv@quotient+1
  8264     00BB                     l3389:
  8265     00BB  0870               	movf	___awdiv@divisor,w
  8266     00BC  0471               	iorwf	___awdiv@divisor+1,w
  8267     00BD  1903               	btfsc	3,2
  8268     00BE  28C0               	goto	u1901
  8269     00BF  28C1               	goto	u1900
  8270     00C0                     u1901:
  8271     00C0  28F0               	goto	l3409
  8272     00C1                     u1900:
  8273     00C1                     l3391:
  8274     00C1  01F5               	clrf	___awdiv@counter
  8275     00C2  0AF5               	incf	___awdiv@counter,f
  8276     00C3  28CD               	goto	l3397
  8277     00C4                     l3393:
  8278     00C4  3001               	movlw	1
  8279     00C5                     u1915:
  8280     00C5  35F0               	lslf	___awdiv@divisor,f
  8281     00C6  0DF1               	rlf	___awdiv@divisor+1,f
  8282     00C7  0B89               	decfsz	9,f
  8283     00C8  28C5               	goto	u1915
  8284     00C9                     l3395:
  8285     00C9  3001               	movlw	1
  8286     00CA  00F4               	movwf	??___awdiv
  8287     00CB  0874               	movf	??___awdiv,w
  8288     00CC  07F5               	addwf	___awdiv@counter,f
  8289     00CD                     l3397:
  8290     00CD  1FF1               	btfss	___awdiv@divisor+1,7
  8291     00CE  28D0               	goto	u1921
  8292     00CF  28D1               	goto	u1920
  8293     00D0                     u1921:
  8294     00D0  28C4               	goto	l3393
  8295     00D1                     u1920:
  8296     00D1                     l3399:
  8297     00D1  3001               	movlw	1
  8298     00D2                     u1935:
  8299     00D2  35F7               	lslf	___awdiv@quotient,f
  8300     00D3  0DF8               	rlf	___awdiv@quotient+1,f
  8301     00D4  0B89               	decfsz	9,f
  8302     00D5  28D2               	goto	u1935
  8303     00D6  0871               	movf	___awdiv@divisor+1,w
  8304     00D7  0273               	subwf	___awdiv@dividend+1,w
  8305     00D8  1D03               	skipz
  8306     00D9  28DC               	goto	u1945
  8307     00DA  0870               	movf	___awdiv@divisor,w
  8308     00DB  0272               	subwf	___awdiv@dividend,w
  8309     00DC                     u1945:
  8310     00DC  1C03               	skipc
  8311     00DD  28DF               	goto	u1941
  8312     00DE  28E0               	goto	u1940
  8313     00DF                     u1941:
  8314     00DF  28E5               	goto	l3405
  8315     00E0                     u1940:
  8316     00E0                     l3401:
  8317     00E0  0870               	movf	___awdiv@divisor,w
  8318     00E1  02F2               	subwf	___awdiv@dividend,f
  8319     00E2  0871               	movf	___awdiv@divisor+1,w
  8320     00E3  3BF3               	subwfb	___awdiv@dividend+1,f
  8321     00E4                     l3403:
  8322     00E4  1477               	bsf	___awdiv@quotient,0
  8323     00E5                     l3405:
  8324     00E5  3001               	movlw	1
  8325     00E6                     u1955:
  8326     00E6  36F1               	lsrf	___awdiv@divisor+1,f
  8327     00E7  0CF0               	rrf	___awdiv@divisor,f
  8328     00E8  0B89               	decfsz	9,f
  8329     00E9  28E6               	goto	u1955
  8330     00EA                     l3407:
  8331     00EA  3001               	movlw	1
  8332     00EB  02F5               	subwf	___awdiv@counter,f
  8333     00EC  1D03               	btfss	3,2
  8334     00ED  28EF               	goto	u1961
  8335     00EE  28F0               	goto	u1960
  8336     00EF                     u1961:
  8337     00EF  28D1               	goto	l3399
  8338     00F0                     u1960:
  8339     00F0                     l3409:
  8340     00F0  0876               	movf	___awdiv@sign,w
  8341     00F1  1903               	btfsc	3,2
  8342     00F2  28F4               	goto	u1971
  8343     00F3  28F5               	goto	u1970
  8344     00F4                     u1971:
  8345     00F4  28FA               	goto	l3413
  8346     00F5                     u1970:
  8347     00F5                     l3411:
  8348     00F5  09F7               	comf	___awdiv@quotient,f
  8349     00F6  09F8               	comf	___awdiv@quotient+1,f
  8350     00F7  0AF7               	incf	___awdiv@quotient,f
  8351     00F8  1903               	skipnz
  8352     00F9  0AF8               	incf	___awdiv@quotient+1,f
  8353     00FA                     l3413:
  8354     00FA  0878               	movf	___awdiv@quotient+1,w
  8355     00FB  00F1               	movwf	?___awdiv+1
  8356     00FC  0877               	movf	___awdiv@quotient,w
  8357     00FD  00F0               	movwf	?___awdiv
  8358     00FE                     l1477:
  8359     00FE  0008               	return
  8360     00FF                     __end_of___awdiv:
  8361                           
  8362                           	psect	text14
  8363     0400                     __ptext14:	
  8364 ;; *************** function _readTC74 *****************
  8365 ;; Defined at:
  8366 ;;		line 60 in file "main.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;		None
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;  value           1    3[COMMON] unsigned char 
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      unsigned char 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0, pclath, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;Total ram usage:        2 bytes
  8385 ;; Hardware stack levels used: 1
  8386 ;; Hardware stack levels required when called: 1
  8387 ;; This function calls:
  8388 ;;		_ReadI2C
  8389 ;;		_WriteI2C
  8390 ;; This function is called by:
  8391 ;;		_main
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395     0400                     _readTC74:	
  8396                           ;psect for function _readTC74
  8397                           
  8398     0400                     l1057:	
  8399                           ;incstack = 0
  8400                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
  8401                           ;main.c: 62:  unsigned char value;;main.c: 63: do{
  8402                           
  8403     0400                     l4029:	
  8404                           ;main.c: 64:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8405                           
  8406     0400  0023               	movlb	3	; select bank3
  8407     0401  0C0F               	rrf	15,w	;volatile
  8408     0402  0C89               	rrf	9,f
  8409     0403  3901               	andlw	1
  8410     0404  00F2               	movwf	??_readTC74
  8411     0405  0811               	movf	17,w	;volatile
  8412     0406  391F               	andlw	31
  8413     0407  0472               	iorwf	??_readTC74,w
  8414     0408  1D03               	btfss	3,2
  8415     0409  2C0B               	goto	u2961
  8416     040A  2C0C               	goto	u2960
  8417     040B                     u2961:
  8418     040B  2C00               	goto	l4029
  8419     040C                     u2960:
  8420     040C                     l1061:	
  8421                           ;main.c: 65:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
  8422                           
  8423     040C  1411               	bsf	17,0	;volatile
  8424     040D                     l1062:
  8425     040D  1811               	btfsc	17,0	;volatile
  8426     040E  2C10               	goto	u2971
  8427     040F  2C11               	goto	u2970
  8428     0410                     u2971:
  8429     0410  2C0D               	goto	l1062
  8430     0411                     u2970:
  8431     0411                     l4031:
  8432     0411  0C0F               	rrf	15,w	;volatile
  8433     0412  0C89               	rrf	9,f
  8434     0413  3901               	andlw	1
  8435     0414  00F2               	movwf	??_readTC74
  8436     0415  0811               	movf	17,w	;volatile
  8437     0416  391F               	andlw	31
  8438     0417  0472               	iorwf	??_readTC74,w
  8439     0418  1D03               	btfss	3,2
  8440     0419  2C1B               	goto	u2981
  8441     041A  2C1C               	goto	u2980
  8442     041B                     u2981:
  8443     041B  2C11               	goto	l4031
  8444     041C                     u2980:
  8445     041C                     l4033:
  8446                           
  8447                           ;main.c: 67:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8448     041C  309A               	movlw	154
  8449     041D  318F  2765  3184   	fcall	_WriteI2C
  8450     0420                     l4035:
  8451     0420  0023               	movlb	3	; select bank3
  8452     0421  0C0F               	rrf	15,w	;volatile
  8453     0422  0C89               	rrf	9,f
  8454     0423  3901               	andlw	1
  8455     0424  00F2               	movwf	??_readTC74
  8456     0425  0811               	movf	17,w	;volatile
  8457     0426  391F               	andlw	31
  8458     0427  0472               	iorwf	??_readTC74,w
  8459     0428  1D03               	btfss	3,2
  8460     0429  2C2B               	goto	u2991
  8461     042A  2C2C               	goto	u2990
  8462     042B                     u2991:
  8463     042B  2C20               	goto	l4035
  8464     042C                     u2990:
  8465     042C                     l4037:
  8466                           
  8467                           ;main.c: 68:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8468     042C  3001               	movlw	1
  8469     042D  318F  2765  3184   	fcall	_WriteI2C
  8470     0430                     l4039:
  8471     0430  0023               	movlb	3	; select bank3
  8472     0431  0C0F               	rrf	15,w	;volatile
  8473     0432  0C89               	rrf	9,f
  8474     0433  3901               	andlw	1
  8475     0434  00F2               	movwf	??_readTC74
  8476     0435  0811               	movf	17,w	;volatile
  8477     0436  391F               	andlw	31
  8478     0437  0472               	iorwf	??_readTC74,w
  8479     0438  1D03               	btfss	3,2
  8480     0439  2C3B               	goto	u3001
  8481     043A  2C3C               	goto	u3000
  8482     043B                     u3001:
  8483     043B  2C30               	goto	l4039
  8484     043C                     u3000:
  8485     043C                     l1075:	
  8486                           ;main.c: 69:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8487                           
  8488     043C  1491               	bsf	17,1	;volatile
  8489     043D                     l1076:
  8490     043D  1891               	btfsc	17,1	;volatile
  8491     043E  2C40               	goto	u3011
  8492     043F  2C41               	goto	u3010
  8493     0440                     u3011:
  8494     0440  2C3D               	goto	l1076
  8495     0441                     u3010:
  8496     0441                     l4041:
  8497     0441  0C0F               	rrf	15,w	;volatile
  8498     0442  0C89               	rrf	9,f
  8499     0443  3901               	andlw	1
  8500     0444  00F2               	movwf	??_readTC74
  8501     0445  0811               	movf	17,w	;volatile
  8502     0446  391F               	andlw	31
  8503     0447  0472               	iorwf	??_readTC74,w
  8504     0448  1D03               	btfss	3,2
  8505     0449  2C4B               	goto	u3021
  8506     044A  2C4C               	goto	u3020
  8507     044B                     u3021:
  8508     044B  2C41               	goto	l4041
  8509     044C                     u3020:
  8510     044C                     l4043:
  8511                           
  8512                           ;main.c: 70:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8513     044C  309B               	movlw	155
  8514     044D  318F  2765  3184   	fcall	_WriteI2C
  8515     0450                     l4045:
  8516     0450  0023               	movlb	3	; select bank3
  8517     0451  0C0F               	rrf	15,w	;volatile
  8518     0452  0C89               	rrf	9,f
  8519     0453  3901               	andlw	1
  8520     0454  00F2               	movwf	??_readTC74
  8521     0455  0811               	movf	17,w	;volatile
  8522     0456  391F               	andlw	31
  8523     0457  0472               	iorwf	??_readTC74,w
  8524     0458  1D03               	btfss	3,2
  8525     0459  2C5B               	goto	u3031
  8526     045A  2C5C               	goto	u3030
  8527     045B                     u3031:
  8528     045B  2C50               	goto	l4045
  8529     045C                     u3030:
  8530     045C                     l4047:
  8531                           
  8532                           ;main.c: 71:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8533     045C  318E  264C  3184   	fcall	_ReadI2C
  8534     045F  00F3               	movwf	readTC74@value
  8535     0460                     l4049:
  8536     0460  0023               	movlb	3	; select bank3
  8537     0461  0C0F               	rrf	15,w	;volatile
  8538     0462  0C89               	rrf	9,f
  8539     0463  3901               	andlw	1
  8540     0464  00F2               	movwf	??_readTC74
  8541     0465  0811               	movf	17,w	;volatile
  8542     0466  391F               	andlw	31
  8543     0467  0472               	iorwf	??_readTC74,w
  8544     0468  1D03               	btfss	3,2
  8545     0469  2C6B               	goto	u3041
  8546     046A  2C6C               	goto	u3040
  8547     046B                     u3041:
  8548     046B  2C60               	goto	l4049
  8549     046C                     u3040:
  8550     046C                     l1089:	
  8551                           ;main.c: 72:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8552                           
  8553     046C  1691               	bsf	17,5	;volatile
  8554     046D  1611               	bsf	17,4	;volatile
  8555     046E                     l1090:
  8556     046E  1A11               	btfsc	17,4	;volatile
  8557     046F  2C71               	goto	u3051
  8558     0470  2C72               	goto	u3050
  8559     0471                     u3051:
  8560     0471  2C6E               	goto	l1090
  8561     0472                     u3050:
  8562     0472                     l4051:
  8563     0472  0C0F               	rrf	15,w	;volatile
  8564     0473  0C89               	rrf	9,f
  8565     0474  3901               	andlw	1
  8566     0475  00F2               	movwf	??_readTC74
  8567     0476  0811               	movf	17,w	;volatile
  8568     0477  391F               	andlw	31
  8569     0478  0472               	iorwf	??_readTC74,w
  8570     0479  1D03               	btfss	3,2
  8571     047A  2C7C               	goto	u3061
  8572     047B  2C7D               	goto	u3060
  8573     047C                     u3061:
  8574     047C  2C72               	goto	l4051
  8575     047D                     u3060:
  8576     047D                     l1097:	
  8577                           ;main.c: 73:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
  8578                           
  8579     047D  1511               	bsf	17,2	;volatile
  8580     047E                     l1098:
  8581     047E  1911               	btfsc	17,2	;volatile
  8582     047F  2C81               	goto	u3071
  8583     0480  2C82               	goto	u3070
  8584     0481                     u3071:
  8585     0481  2C7E               	goto	l1098
  8586     0482                     u3070:
  8587     0482                     l1101:
  8588                           
  8589                           ;main.c: 74: } while (!(value & 0x40));
  8590     0482  1F73               	btfss	readTC74@value,6
  8591     0483  2C85               	goto	u3081
  8592     0484  2C86               	goto	u3080
  8593     0485                     u3081:
  8594     0485  2C00               	goto	l1057
  8595     0486                     u3080:
  8596     0486                     l4053:
  8597     0486  0C0F               	rrf	15,w	;volatile
  8598     0487  0C89               	rrf	9,f
  8599     0488  3901               	andlw	1
  8600     0489  00F2               	movwf	??_readTC74
  8601     048A  0811               	movf	17,w	;volatile
  8602     048B  391F               	andlw	31
  8603     048C  0472               	iorwf	??_readTC74,w
  8604     048D  1D03               	btfss	3,2
  8605     048E  2C90               	goto	u3091
  8606     048F  2C91               	goto	u3090
  8607     0490                     u3091:
  8608     0490  2C86               	goto	l4053
  8609     0491                     u3090:
  8610     0491                     l1106:	
  8611                           ;main.c: 77:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
  8612                           
  8613     0491  1411               	bsf	17,0	;volatile
  8614     0492                     l1107:
  8615     0492  1811               	btfsc	17,0	;volatile
  8616     0493  2C95               	goto	u3101
  8617     0494  2C96               	goto	u3100
  8618     0495                     u3101:
  8619     0495  2C92               	goto	l1107
  8620     0496                     u3100:
  8621     0496                     l4055:
  8622     0496  0C0F               	rrf	15,w	;volatile
  8623     0497  0C89               	rrf	9,f
  8624     0498  3901               	andlw	1
  8625     0499  00F2               	movwf	??_readTC74
  8626     049A  0811               	movf	17,w	;volatile
  8627     049B  391F               	andlw	31
  8628     049C  0472               	iorwf	??_readTC74,w
  8629     049D  1D03               	btfss	3,2
  8630     049E  2CA0               	goto	u3111
  8631     049F  2CA1               	goto	u3110
  8632     04A0                     u3111:
  8633     04A0  2C96               	goto	l4055
  8634     04A1                     u3110:
  8635     04A1                     l4057:
  8636                           
  8637                           ;main.c: 78:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8638     04A1  309A               	movlw	154
  8639     04A2  318F  2765  3184   	fcall	_WriteI2C
  8640     04A5                     l4059:
  8641     04A5  0023               	movlb	3	; select bank3
  8642     04A6  0C0F               	rrf	15,w	;volatile
  8643     04A7  0C89               	rrf	9,f
  8644     04A8  3901               	andlw	1
  8645     04A9  00F2               	movwf	??_readTC74
  8646     04AA  0811               	movf	17,w	;volatile
  8647     04AB  391F               	andlw	31
  8648     04AC  0472               	iorwf	??_readTC74,w
  8649     04AD  1D03               	btfss	3,2
  8650     04AE  2CB0               	goto	u3121
  8651     04AF  2CB1               	goto	u3120
  8652     04B0                     u3121:
  8653     04B0  2CA5               	goto	l4059
  8654     04B1                     u3120:
  8655     04B1                     l4061:
  8656                           
  8657                           ;main.c: 79:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8658     04B1  3000               	movlw	0
  8659     04B2  318F  2765  3184   	fcall	_WriteI2C
  8660     04B5                     l4063:
  8661     04B5  0023               	movlb	3	; select bank3
  8662     04B6  0C0F               	rrf	15,w	;volatile
  8663     04B7  0C89               	rrf	9,f
  8664     04B8  3901               	andlw	1
  8665     04B9  00F2               	movwf	??_readTC74
  8666     04BA  0811               	movf	17,w	;volatile
  8667     04BB  391F               	andlw	31
  8668     04BC  0472               	iorwf	??_readTC74,w
  8669     04BD  1D03               	btfss	3,2
  8670     04BE  2CC0               	goto	u3131
  8671     04BF  2CC1               	goto	u3130
  8672     04C0                     u3131:
  8673     04C0  2CB5               	goto	l4063
  8674     04C1                     u3130:
  8675     04C1                     l1120:	
  8676                           ;main.c: 80:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8677                           
  8678     04C1  1491               	bsf	17,1	;volatile
  8679     04C2                     l1121:
  8680     04C2  1891               	btfsc	17,1	;volatile
  8681     04C3  2CC5               	goto	u3141
  8682     04C4  2CC6               	goto	u3140
  8683     04C5                     u3141:
  8684     04C5  2CC2               	goto	l1121
  8685     04C6                     u3140:
  8686     04C6                     l4065:
  8687     04C6  0C0F               	rrf	15,w	;volatile
  8688     04C7  0C89               	rrf	9,f
  8689     04C8  3901               	andlw	1
  8690     04C9  00F2               	movwf	??_readTC74
  8691     04CA  0811               	movf	17,w	;volatile
  8692     04CB  391F               	andlw	31
  8693     04CC  0472               	iorwf	??_readTC74,w
  8694     04CD  1D03               	btfss	3,2
  8695     04CE  2CD0               	goto	u3151
  8696     04CF  2CD1               	goto	u3150
  8697     04D0                     u3151:
  8698     04D0  2CC6               	goto	l4065
  8699     04D1                     u3150:
  8700     04D1                     l4067:
  8701                           
  8702                           ;main.c: 81:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8703     04D1  309B               	movlw	155
  8704     04D2  318F  2765  3184   	fcall	_WriteI2C
  8705     04D5                     l4069:
  8706     04D5  0023               	movlb	3	; select bank3
  8707     04D6  0C0F               	rrf	15,w	;volatile
  8708     04D7  0C89               	rrf	9,f
  8709     04D8  3901               	andlw	1
  8710     04D9  00F2               	movwf	??_readTC74
  8711     04DA  0811               	movf	17,w	;volatile
  8712     04DB  391F               	andlw	31
  8713     04DC  0472               	iorwf	??_readTC74,w
  8714     04DD  1D03               	btfss	3,2
  8715     04DE  2CE0               	goto	u3161
  8716     04DF  2CE1               	goto	u3160
  8717     04E0                     u3161:
  8718     04E0  2CD5               	goto	l4069
  8719     04E1                     u3160:
  8720     04E1                     l4071:
  8721                           
  8722                           ;main.c: 82:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8723     04E1  318E  264C  3184   	fcall	_ReadI2C
  8724     04E4  00F3               	movwf	readTC74@value
  8725     04E5                     l4073:
  8726     04E5  0023               	movlb	3	; select bank3
  8727     04E6  0C0F               	rrf	15,w	;volatile
  8728     04E7  0C89               	rrf	9,f
  8729     04E8  3901               	andlw	1
  8730     04E9  00F2               	movwf	??_readTC74
  8731     04EA  0811               	movf	17,w	;volatile
  8732     04EB  391F               	andlw	31
  8733     04EC  0472               	iorwf	??_readTC74,w
  8734     04ED  1D03               	btfss	3,2
  8735     04EE  2CF0               	goto	u3171
  8736     04EF  2CF1               	goto	u3170
  8737     04F0                     u3171:
  8738     04F0  2CE5               	goto	l4073
  8739     04F1                     u3170:
  8740     04F1                     l1134:	
  8741                           ;main.c: 83:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8742                           
  8743     04F1  1691               	bsf	17,5	;volatile
  8744     04F2  1611               	bsf	17,4	;volatile
  8745     04F3                     l1135:
  8746     04F3  1A11               	btfsc	17,4	;volatile
  8747     04F4  2CF6               	goto	u3181
  8748     04F5  2CF7               	goto	u3180
  8749     04F6                     u3181:
  8750     04F6  2CF3               	goto	l1135
  8751     04F7                     u3180:
  8752     04F7                     l4075:
  8753     04F7  0C0F               	rrf	15,w	;volatile
  8754     04F8  0C89               	rrf	9,f
  8755     04F9  3901               	andlw	1
  8756     04FA  00F2               	movwf	??_readTC74
  8757     04FB  0811               	movf	17,w	;volatile
  8758     04FC  391F               	andlw	31
  8759     04FD  0472               	iorwf	??_readTC74,w
  8760     04FE  1D03               	btfss	3,2
  8761     04FF  2D01               	goto	u3191
  8762     0500  2D02               	goto	u3190
  8763     0501                     u3191:
  8764     0501  2CF7               	goto	l4075
  8765     0502                     u3190:
  8766     0502                     l1142:	
  8767                           ;main.c: 84:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
  8768                           
  8769     0502  1511               	bsf	17,2	;volatile
  8770     0503                     l1143:
  8771     0503  1911               	btfsc	17,2	;volatile
  8772     0504  2D06               	goto	u3201
  8773     0505  2D07               	goto	u3200
  8774     0506                     u3201:
  8775     0506  2D03               	goto	l1143
  8776     0507                     u3200:
  8777     0507                     l4077:
  8778                           
  8779                           ;main.c: 86:  return value;
  8780     0507  0873               	movf	readTC74@value,w
  8781     0508                     l1147:
  8782     0508  0008               	return
  8783     0509                     __end_of_readTC74:
  8784                           
  8785                           	psect	text15
  8786     0DE1                     __ptext15:	
  8787 ;; *************** function _SYSTEM_Initialize *****************
  8788 ;; Defined at:
  8789 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;		None
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;		None
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      void 
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0, pclath, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;Total ram usage:        0 bytes
  8808 ;; Hardware stack levels used: 1
  8809 ;; Hardware stack levels required when called: 1
  8810 ;; This function calls:
  8811 ;;		_ADCC_Initialize
  8812 ;;		_I2C1_Initialize
  8813 ;;		_OSCILLATOR_Initialize
  8814 ;;		_PIN_MANAGER_Initialize
  8815 ;;		_PMD_Initialize
  8816 ;;		_TMR1_Initialize
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822     0DE1                     _SYSTEM_Initialize:	
  8823                           ;psect for function _SYSTEM_Initialize
  8824                           
  8825     0DE1                     l3957:	
  8826                           ;incstack = 0
  8827                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8828                           
  8829                           
  8830                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8831     0DE1  318D  2585  318D   	fcall	_PMD_Initialize
  8832     0DE4                     l3959:
  8833                           
  8834                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  8835     0DE4  318D  2596  318D   	fcall	_I2C1_Initialize
  8836     0DE7                     l3961:
  8837                           
  8838                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8839     0DE7  3180  2005  318D   	fcall	_PIN_MANAGER_Initialize
  8840     0DEA                     l3963:
  8841                           
  8842                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8843     0DEA  318D  258D  318D   	fcall	_OSCILLATOR_Initialize
  8844     0DED                     l3965:
  8845                           
  8846                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8847     0DED  318E  261D  318D   	fcall	_ADCC_Initialize
  8848     0DF0                     l3967:
  8849                           
  8850                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  8851     0DF0  318E  2608  318D   	fcall	_TMR1_Initialize
  8852     0DF3                     l392:
  8853     0DF3  0008               	return
  8854     0DF4                     __end_of_SYSTEM_Initialize:
  8855                           
  8856                           	psect	text16
  8857     0E08                     __ptext16:	
  8858 ;; *************** function _TMR1_Initialize *****************
  8859 ;; Defined at:
  8860 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_SYSTEM_Initialize
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887     0E08                     _TMR1_Initialize:	
  8888                           ;psect for function _TMR1_Initialize
  8889                           
  8890     0E08                     l3829:	
  8891                           ;incstack = 0
  8892                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8893                           
  8894                           
  8895                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  8896     0E08  0024               	movlb	4	; select bank4
  8897     0E09  018F               	clrf	15	;volatile
  8898                           
  8899                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
  8900     0E0A  0190               	clrf	16	;volatile
  8901                           
  8902                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x00;
  8903     0E0B  0191               	clrf	17	;volatile
  8904     0E0C                     l3831:
  8905                           
  8906                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x80;
  8907     0E0C  3080               	movlw	128
  8908     0E0D  008D               	movwf	13	;volatile
  8909     0E0E                     l3833:
  8910                           
  8911                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0x00;
  8912     0E0E  018C               	clrf	12	;volatile
  8913     0E0F                     l3835:
  8914                           
  8915                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
  8916     0E0F  002E               	movlb	14	; select bank14
  8917     0E10  1010               	bcf	16,0	;volatile
  8918                           
  8919                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8920     0E11  0024               	movlb	4	; select bank4
  8921     0E12  080D               	movf	13,w	;volatile
  8922     0E13  0020               	movlb	0	; select bank0
  8923     0E14  00E6               	movwf	_timer1ReloadVal+1	;volatile
  8924     0E15  0024               	movlb	4	; select bank4
  8925     0E16  080C               	movf	12,w	;volatile
  8926     0E17  0020               	movlb	0	; select bank0
  8927     0E18  00E5               	movwf	_timer1ReloadVal	;volatile
  8928                           
  8929                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x01;
  8930     0E19  3001               	movlw	1
  8931     0E1A  0024               	movlb	4	; select bank4
  8932     0E1B  008E               	movwf	14	;volatile
  8933     0E1C                     l998:
  8934     0E1C  0008               	return
  8935     0E1D                     __end_of_TMR1_Initialize:
  8936                           
  8937                           	psect	text17
  8938     0D85                     __ptext17:	
  8939 ;; *************** function _PMD_Initialize *****************
  8940 ;; Defined at:
  8941 ;;		line 74 in file "mcc_generated_files/mcc.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		status,2
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used: 1
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_SYSTEM_Initialize
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968     0D85                     _PMD_Initialize:	
  8969                           ;psect for function _PMD_Initialize
  8970                           
  8971     0D85                     l3771:	
  8972                           ;incstack = 0
  8973                           ; Regs used in _PMD_Initialize: [status,2]
  8974                           
  8975                           
  8976                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  8977     0D85  002F               	movlb	15	; select bank15
  8978     0D86  0196               	clrf	22	;volatile
  8979                           
  8980                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  8981     0D87  0197               	clrf	23	;volatile
  8982                           
  8983                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  8984     0D88  0198               	clrf	24	;volatile
  8985                           
  8986                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  8987     0D89  0199               	clrf	25	;volatile
  8988                           
  8989                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  8990     0D8A  019A               	clrf	26	;volatile
  8991                           
  8992                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  8993     0D8B  019B               	clrf	27	;volatile
  8994     0D8C                     l398:
  8995     0D8C  0008               	return
  8996     0D8D                     __end_of_PMD_Initialize:
  8997                           
  8998                           	psect	text18
  8999     0005                     __ptext18:	
  9000 ;; *************** function _PIN_MANAGER_Initialize *****************
  9001 ;; Defined at:
  9002 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;		None
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;		None
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      void 
  9009 ;; Registers used:
  9010 ;;		wreg, status,2
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;Total ram usage:        0 bytes
  9021 ;; Hardware stack levels used: 1
  9022 ;; This function calls:
  9023 ;;		Nothing
  9024 ;; This function is called by:
  9025 ;;		_SYSTEM_Initialize
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029     0005                     _PIN_MANAGER_Initialize:	
  9030                           ;psect for function _PIN_MANAGER_Initialize
  9031                           
  9032     0005                     l3781:	
  9033                           ;incstack = 0
  9034                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9035                           
  9036                           
  9037                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9038     0005  0020               	movlb	0	; select bank0
  9039     0006  019A               	clrf	26	;volatile
  9040                           
  9041                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9042     0007  0199               	clrf	25	;volatile
  9043                           
  9044                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  9045     0008  0196               	clrf	22	;volatile
  9046                           
  9047                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9048     0009  0197               	clrf	23	;volatile
  9049                           
  9050                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9051     000A  0198               	clrf	24	;volatile
  9052     000B                     l3783:
  9053                           
  9054                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9055     000B  3007               	movlw	7
  9056     000C  0095               	movwf	21	;volatile
  9057     000D                     l3785:
  9058                           
  9059                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  9060     000D  30FF               	movlw	255
  9061     000E  0091               	movwf	17	;volatile
  9062     000F                     l3787:
  9063                           
  9064                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  9065     000F  30FF               	movlw	255
  9066     0010  0092               	movwf	18	;volatile
  9067     0011                     l3789:
  9068                           
  9069                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9070     0011  30FF               	movlw	255
  9071     0012  0093               	movwf	19	;volatile
  9072     0013                     l3791:
  9073                           
  9074                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9075     0013  30FF               	movlw	255
  9076     0014  0094               	movwf	20	;volatile
  9077     0015                     l3793:
  9078                           
  9079                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  9080     0015  30FF               	movlw	255
  9081     0016  003E               	movlb	30	; select bank30
  9082     0017  00D9               	movwf	89	;volatile
  9083     0018                     l3795:
  9084                           
  9085                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE6;
  9086     0018  30E6               	movlw	230
  9087     0019  00CE               	movwf	78	;volatile
  9088     001A                     l3797:
  9089                           
  9090                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  9091     001A  30FF               	movlw	255
  9092     001B  00C3               	movwf	67	;volatile
  9093     001C                     l3799:
  9094                           
  9095                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9096     001C  3007               	movlw	7
  9097     001D  00E4               	movwf	100	;volatile
  9098     001E                     l3801:
  9099                           
  9100                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  9101     001E  30FF               	movlw	255
  9102     001F  00B8               	movwf	56	;volatile
  9103                           
  9104                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9105     0020  01DA               	clrf	90	;volatile
  9106                           
  9107                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9108     0021  01E5               	clrf	101	;volatile
  9109                           
  9110                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9111     0022  01C4               	clrf	68	;volatile
  9112                           
  9113                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9114     0023  01B9               	clrf	57	;volatile
  9115     0024                     l3803:
  9116                           
  9117                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x18;
  9118     0024  3018               	movlw	24
  9119     0025  00CF               	movwf	79	;volatile
  9120     0026                     l3805:
  9121                           
  9122                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  9123     0026  01E6               	clrf	102	;volatile
  9124     0027                     l3807:
  9125                           
  9126                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  9127     0027  01BA               	clrf	58	;volatile
  9128     0028                     l3809:
  9129                           
  9130                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  9131     0028  01C5               	clrf	69	;volatile
  9132     0029                     l3811:
  9133                           
  9134                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  9135     0029  01D0               	clrf	80	;volatile
  9136     002A                     l3813:
  9137                           
  9138                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  9139     002A  01DB               	clrf	91	;volatile
  9140                           
  9141                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  9142     002B  30FF               	movlw	255
  9143     002C  00BB               	movwf	59	;volatile
  9144                           
  9145                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  9146     002D  30FF               	movlw	255
  9147     002E  00C6               	movwf	70	;volatile
  9148                           
  9149                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  9150     002F  30FF               	movlw	255
  9151     0030  00D1               	movwf	81	;volatile
  9152                           
  9153                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  9154     0031  30FF               	movlw	255
  9155     0032  00DC               	movwf	92	;volatile
  9156                           
  9157                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  9158     0033  3007               	movlw	7
  9159     0034  00E7               	movwf	103	;volatile
  9160                           
  9161                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  9162     0035  30FF               	movlw	255
  9163     0036  00BC               	movwf	60	;volatile
  9164                           
  9165                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  9166     0037  30FF               	movlw	255
  9167     0038  00C7               	movwf	71	;volatile
  9168                           
  9169                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  9170     0039  30FF               	movlw	255
  9171     003A  00D2               	movwf	82	;volatile
  9172                           
  9173                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  9174     003B  30FF               	movlw	255
  9175     003C  00DD               	movwf	93	;volatile
  9176                           
  9177                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  9178     003D  3007               	movlw	7
  9179     003E  00E8               	movwf	104	;volatile
  9180                           
  9181                           ;mcc_generated_files/pin_manager.c: 127:     T1CKIPPS = 0x10;
  9182     003F  3010               	movlw	16
  9183     0040  003D               	movlb	29	; select bank29
  9184     0041  0092               	movwf	18	;volatile
  9185                           
  9186                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
  9187     0042  3013               	movlw	19
  9188     0043  00C5               	movwf	69	;volatile
  9189                           
  9190                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
  9191     0044  3014               	movlw	20
  9192     0045  003E               	movlb	30	; select bank30
  9193     0046  00A3               	movwf	35	;volatile
  9194                           
  9195                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
  9196     0047  3015               	movlw	21
  9197     0048  00A4               	movwf	36	;volatile
  9198                           
  9199                           ;mcc_generated_files/pin_manager.c: 131:     SSP1DATPPS = 0x14;
  9200     0049  3014               	movlw	20
  9201     004A  003D               	movlb	29	; select bank29
  9202     004B  00C6               	movwf	70	;volatile
  9203     004C                     l481:
  9204     004C  0008               	return
  9205     004D                     __end_of_PIN_MANAGER_Initialize:
  9206                           
  9207                           	psect	text19
  9208     0D8D                     __ptext19:	
  9209 ;; *************** function _OSCILLATOR_Initialize *****************
  9210 ;; Defined at:
  9211 ;;		line 60 in file "mcc_generated_files/mcc.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		wreg, status,2
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;Total ram usage:        0 bytes
  9230 ;; Hardware stack levels used: 1
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_SYSTEM_Initialize
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238     0D8D                     _OSCILLATOR_Initialize:	
  9239                           ;psect for function _OSCILLATOR_Initialize
  9240                           
  9241     0D8D                     l3815:	
  9242                           ;incstack = 0
  9243                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9244                           
  9245                           
  9246                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  9247     0D8D  3062               	movlw	98
  9248     0D8E  0031               	movlb	17	; select bank17
  9249     0D8F  008D               	movwf	13	;volatile
  9250     0D90                     l3817:
  9251                           
  9252                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  9253     0D90  018F               	clrf	15	;volatile
  9254     0D91                     l3819:
  9255                           
  9256                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  9257     0D91  0191               	clrf	17	;volatile
  9258                           
  9259                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  9260     0D92  3002               	movlw	2
  9261     0D93  0093               	movwf	19	;volatile
  9262     0D94                     l3821:
  9263                           
  9264                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9265     0D94  0192               	clrf	18	;volatile
  9266     0D95                     l395:
  9267     0D95  0008               	return
  9268     0D96                     __end_of_OSCILLATOR_Initialize:
  9269                           
  9270                           	psect	text20
  9271     0D96                     __ptext20:	
  9272 ;; *************** function _I2C1_Initialize *****************
  9273 ;; Defined at:
  9274 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;		None
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;		None
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		wreg, status,2
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;Total ram usage:        0 bytes
  9293 ;; Hardware stack levels used: 1
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_SYSTEM_Initialize
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301     0D96                     _I2C1_Initialize:	
  9302                           ;psect for function _I2C1_Initialize
  9303                           
  9304     0D96                     l3773:	
  9305                           ;incstack = 0
  9306                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  9307                           
  9308                           
  9309                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
  9310     0D96  3080               	movlw	128
  9311     0D97  0023               	movlb	3	; select bank3
  9312     0D98  008F               	movwf	15	;volatile
  9313                           
  9314                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  9315     0D99  3008               	movlw	8
  9316     0D9A  0090               	movwf	16	;volatile
  9317     0D9B                     l3775:
  9318                           
  9319                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  9320     0D9B  0191               	clrf	17	;volatile
  9321     0D9C                     l3777:
  9322                           
  9323                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
  9324     0D9C  3003               	movlw	3
  9325     0D9D  008D               	movwf	13	;volatile
  9326     0D9E                     l3779:
  9327                           
  9328                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  9329     0D9E  1290               	bcf	16,5	;volatile
  9330     0D9F                     l589:
  9331     0D9F  0008               	return
  9332     0DA0                     __end_of_I2C1_Initialize:
  9333                           
  9334                           	psect	text21
  9335     0E1D                     __ptext21:	
  9336 ;; *************** function _ADCC_Initialize *****************
  9337 ;; Defined at:
  9338 ;;		line 63 in file "mcc_generated_files/adcc.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9356 ;;Total ram usage:        0 bytes
  9357 ;; Hardware stack levels used: 1
  9358 ;; This function calls:
  9359 ;;		Nothing
  9360 ;; This function is called by:
  9361 ;;		_SYSTEM_Initialize
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365     0E1D                     _ADCC_Initialize:	
  9366                           ;psect for function _ADCC_Initialize
  9367                           
  9368     0E1D                     l3823:	
  9369                           ;incstack = 0
  9370                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9371                           
  9372                           
  9373                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  9374     0E1D  0022               	movlb	2	; select bank2
  9375     0E1E  018E               	clrf	14	;volatile
  9376                           
  9377                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  9378     0E1F  018F               	clrf	15	;volatile
  9379                           
  9380                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  9381     0E20  0190               	clrf	16	;volatile
  9382                           
  9383                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  9384     0E21  0191               	clrf	17	;volatile
  9385                           
  9386                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  9387     0E22  0192               	clrf	18	;volatile
  9388                           
  9389                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  9390     0E23  0193               	clrf	19	;volatile
  9391                           
  9392                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  9393     0E24  018D               	clrf	13	;volatile
  9394                           
  9395                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  9396     0E25  0021               	movlb	1	; select bank1
  9397     0E26  019E               	clrf	30	;volatile
  9398                           
  9399                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  9400     0E27  019B               	clrf	27	;volatile
  9401                           
  9402                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  9403     0E28  019C               	clrf	28	;volatile
  9404                           
  9405                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  9406     0E29  0194               	clrf	20	;volatile
  9407                           
  9408                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
  9409     0E2A  0195               	clrf	21	;volatile
  9410                           
  9411                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  9412     0E2B  0196               	clrf	22	;volatile
  9413                           
  9414                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  9415     0E2C  0197               	clrf	23	;volatile
  9416                           
  9417                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  9418     0E2D  019A               	clrf	26	;volatile
  9419                           
  9420                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
  9421     0E2E  0199               	clrf	25	;volatile
  9422                           
  9423                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
  9424     0E2F  0198               	clrf	24	;volatile
  9425     0E30                     l3825:
  9426                           
  9427                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  9428     0E30  3084               	movlw	132
  9429     0E31  0093               	movwf	19	;volatile
  9430     0E32                     l3827:
  9431                           
  9432                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
  9433     0E32  019D               	clrf	29	;volatile
  9434     0E33                     l894:
  9435     0E33  0008               	return
  9436     0E34                     __end_of_ADCC_Initialize:
  9437                           
  9438                           	psect	text22
  9439     0DA0                     __ptext22:	
  9440 ;; *************** function _OpenI2C *****************
  9441 ;; Defined at:
  9442 ;;		line 26 in file "I2C/i2c.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;		None
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;		None
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  1    wreg      void 
  9449 ;; Registers used:
  9450 ;;		wreg, status,2
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;Total ram usage:        0 bytes
  9461 ;; Hardware stack levels used: 1
  9462 ;; This function calls:
  9463 ;;		Nothing
  9464 ;; This function is called by:
  9465 ;;		_main
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469     0DA0                     _OpenI2C:	
  9470                           ;psect for function _OpenI2C
  9471                           
  9472     0DA0                     l3847:	
  9473                           ;incstack = 0
  9474                           ; Regs used in _OpenI2C: [wreg+status,2]
  9475                           
  9476                           
  9477                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
  9478     0DA0  3080               	movlw	128
  9479     0DA1  0023               	movlb	3	; select bank3
  9480     0DA2  008F               	movwf	15	;volatile
  9481                           
  9482                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
  9483     0DA3  3008               	movlw	8
  9484     0DA4  0090               	movwf	16	;volatile
  9485     0DA5                     l3849:
  9486                           
  9487                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
  9488     0DA5  0191               	clrf	17	;volatile
  9489     0DA6                     l3851:
  9490                           
  9491                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
  9492     0DA6  3003               	movlw	3
  9493     0DA7  008D               	movwf	13	;volatile
  9494     0DA8                     l3853:
  9495                           
  9496                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
  9497     0DA8  1690               	bsf	16,5	;volatile
  9498     0DA9                     l3855:
  9499                           
  9500                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
  9501     0DA9  0020               	movlb	0	; select bank0
  9502     0DAA  1593               	bsf	19,3	;volatile
  9503     0DAB                     l3857:
  9504                           
  9505                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
  9506     0DAB  1613               	bsf	19,4	;volatile
  9507     0DAC                     l23:
  9508     0DAC  0008               	return
  9509     0DAD                     __end_of_OpenI2C:
  9510                           
  9511                           	psect	text23
  9512     0E34                     __ptext23:	
  9513 ;; *************** function _LCDstr *****************
  9514 ;; Defined at:
  9515 ;;		line 112 in file "LCD/lcd.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  p               2    8[COMMON] PTR unsigned char 
  9518 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  9519 ;;		 -> STR_5(2), STR_4(2), main@measure_buffer(6), main@time_buffer(8), 
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;  c               1   12[COMMON] unsigned char 
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1    wreg      void 
  9524 ;; Registers used:
  9525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9526 ;; Tracked objects:
  9527 ;;		On entry : 0/0
  9528 ;;		On exit  : 0/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;Total ram usage:        5 bytes
  9536 ;; Hardware stack levels used: 1
  9537 ;; Hardware stack levels required when called: 3
  9538 ;; This function calls:
  9539 ;;		_LCDchar
  9540 ;; This function is called by:
  9541 ;;		_main
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545     0E34                     _LCDstr:	
  9546                           ;psect for function _LCDstr
  9547                           
  9548     0E34                     l3893:	
  9549                           ;incstack = 0
  9550                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9551                           
  9552                           
  9553                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
  9554     0E34  2E39               	goto	l3897
  9555     0E35                     l3895:
  9556     0E35  087C               	movf	LCDstr@c,w
  9557     0E36  318D  257D  318E   	fcall	_LCDchar
  9558     0E39                     l3897:
  9559     0E39  0879               	movf	LCDstr@p+1,w
  9560     0E3A  00FB               	movwf	??_LCDstr+1
  9561     0E3B  0878               	movf	LCDstr@p,w
  9562     0E3C  00FA               	movwf	??_LCDstr
  9563     0E3D  0AF8               	incf	LCDstr@p,f
  9564     0E3E  1903               	skipnz
  9565     0E3F  0AF9               	incf	LCDstr@p+1,f
  9566     0E40  087A               	movf	??_LCDstr,w
  9567     0E41  0084               	movwf	4
  9568     0E42  087B               	movf	??_LCDstr+1,w
  9569     0E43  0085               	movwf	5
  9570     0E44  0800               	movf	0,w	;code access
  9571     0E45  00FC               	movwf	LCDstr@c
  9572     0E46  087C               	movf	LCDstr@c,w
  9573     0E47  1D03               	btfss	3,2
  9574     0E48  2E4A               	goto	u2891
  9575     0E49  2E4B               	goto	u2890
  9576     0E4A                     u2891:
  9577     0E4A  2E35               	goto	l3895
  9578     0E4B                     u2890:
  9579     0E4B                     l244:
  9580     0E4B  0008               	return
  9581     0E4C                     __end_of_LCDstr:
  9582                           
  9583                           	psect	text24
  9584     0D7D                     __ptext24:	
  9585 ;; *************** function _LCDchar *****************
  9586 ;; Defined at:
  9587 ;;		line 107 in file "LCD/lcd.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  c               1    wreg     unsigned char 
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;  c               1    7[COMMON] unsigned char 
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  1    wreg      void 
  9594 ;; Registers used:
  9595 ;;		wreg, status,2, status,0, pclath, cstack
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9605 ;;Total ram usage:        1 bytes
  9606 ;; Hardware stack levels used: 1
  9607 ;; Hardware stack levels required when called: 2
  9608 ;; This function calls:
  9609 ;;		_LCDsend2x4
  9610 ;; This function is called by:
  9611 ;;		_LCDstr
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615     0D7D                     _LCDchar:	
  9616                           ;psect for function _LCDchar
  9617                           
  9618                           
  9619                           ;incstack = 0
  9620                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
  9621                           ;LCDchar@c stored from wreg
  9622     0D7D  00F7               	movwf	LCDchar@c
  9623     0D7E                     l3761:
  9624                           
  9625                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
  9626     0D7E  01F2               	clrf	LCDsend2x4@mode
  9627     0D7F  0AF2               	incf	LCDsend2x4@mode,f
  9628     0D80  0877               	movf	LCDchar@c,w
  9629     0D81  3182  2287  318D   	fcall	_LCDsend2x4
  9630     0D84                     l238:
  9631     0D84  0008               	return
  9632     0D85                     __end_of_LCDchar:
  9633                           
  9634                           	psect	text25
  9635     0DF4                     __ptext25:	
  9636 ;; *************** function _LCDpos *****************
  9637 ;; Defined at:
  9638 ;;		line 125 in file "LCD/lcd.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  l               1    wreg     unsigned char 
  9641 ;;  c               1    8[COMMON] unsigned char 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;  l               1    9[COMMON] unsigned char 
  9644 ;;  p               1   10[COMMON] unsigned char 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      void 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0, pclath, cstack
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9654 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;Total ram usage:        3 bytes
  9659 ;; Hardware stack levels used: 1
  9660 ;; Hardware stack levels required when called: 3
  9661 ;; This function calls:
  9662 ;;		_LCDcmd
  9663 ;; This function is called by:
  9664 ;;		_main
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668     0DF4                     _LCDpos:	
  9669                           ;psect for function _LCDpos
  9670                           
  9671                           
  9672                           ;incstack = 0
  9673                           ; Regs used in _LCDpos: [wreg+status,2+status,0+pclath+cstack]
  9674                           ;LCDpos@l stored from wreg
  9675     0DF4  00F9               	movwf	LCDpos@l
  9676     0DF5                     l3909:
  9677                           
  9678                           ;LCD/lcd.c: 125: void LCDpos(unsigned char l, unsigned char c);LCD/lcd.c: 126: {;LCD/lcd
      +                          .c: 127:   unsigned char p;;LCD/lcd.c: 131:   if (l>=1) p = 0xc0; else p=0x80;
  9679     0DF5  0879               	movf	LCDpos@l,w
  9680     0DF6  1903               	btfsc	3,2
  9681     0DF7  2DF9               	goto	u2911
  9682     0DF8  2DFA               	goto	u2910
  9683     0DF9                     u2911:
  9684     0DF9  2DFD               	goto	l3913
  9685     0DFA                     u2910:
  9686     0DFA                     l3911:
  9687     0DFA  30C0               	movlw	192
  9688     0DFB  00FA               	movwf	LCDpos@p
  9689     0DFC  2DFF               	goto	l3915
  9690     0DFD                     l3913:
  9691     0DFD  3080               	movlw	128
  9692     0DFE  00FA               	movwf	LCDpos@p
  9693     0DFF                     l3915:
  9694                           
  9695                           ;LCD/lcd.c: 132:   p = p | (c&0x0f);
  9696     0DFF  0878               	movf	LCDpos@c,w
  9697     0E00  390F               	andlw	15
  9698     0E01  047A               	iorwf	LCDpos@p,w
  9699     0E02  00FA               	movwf	LCDpos@p
  9700     0E03                     l3917:
  9701                           
  9702                           ;LCD/lcd.c: 133:   LCDcmd(p);
  9703     0E03  087A               	movf	LCDpos@p,w
  9704     0E04  318D  2576  318D   	fcall	_LCDcmd
  9705     0E07                     l253:
  9706     0E07  0008               	return
  9707     0E08                     __end_of_LCDpos:
  9708                           
  9709                           	psect	text26
  9710     0D76                     __ptext26:	
  9711 ;; *************** function _LCDcmd *****************
  9712 ;; Defined at:
  9713 ;;		line 102 in file "LCD/lcd.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  c               1    wreg     unsigned char 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  c               1    7[COMMON] unsigned char 
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      void 
  9720 ;; Registers used:
  9721 ;;		wreg, status,2, status,0, pclath, cstack
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;Total ram usage:        1 bytes
  9732 ;; Hardware stack levels used: 1
  9733 ;; Hardware stack levels required when called: 2
  9734 ;; This function calls:
  9735 ;;		_LCDsend2x4
  9736 ;; This function is called by:
  9737 ;;		_LCDpos
  9738 ;;		_main
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742     0D76                     _LCDcmd:	
  9743                           ;psect for function _LCDcmd
  9744                           
  9745                           
  9746                           ;incstack = 0
  9747                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
  9748                           ;LCDcmd@c stored from wreg
  9749     0D76  00F7               	movwf	LCDcmd@c
  9750     0D77                     l3759:
  9751                           
  9752                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
  9753     0D77  01F2               	clrf	LCDsend2x4@mode
  9754     0D78  0877               	movf	LCDcmd@c,w
  9755     0D79  3182  2287  318D   	fcall	_LCDsend2x4
  9756     0D7C                     l235:
  9757     0D7C  0008               	return
  9758     0D7D                     __end_of_LCDcmd:
  9759                           
  9760                           	psect	text27
  9761     015F                     __ptext27:	
  9762 ;; *************** function _LCDinit *****************
  9763 ;; Defined at:
  9764 ;;		line 79 in file "LCD/lcd.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		wreg, status,2, status,0, pclath, cstack
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9782 ;;Total ram usage:        1 bytes
  9783 ;; Hardware stack levels used: 1
  9784 ;; Hardware stack levels required when called: 2
  9785 ;; This function calls:
  9786 ;;		_LCDsend
  9787 ;;		_LCDsend2x4
  9788 ;; This function is called by:
  9789 ;;		_main
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793     015F                     _LCDinit:	
  9794                           ;psect for function _LCDinit
  9795                           
  9796     015F                     l3859:	
  9797                           ;incstack = 0
  9798                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  9799                           
  9800                           
  9801                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
  9802     015F  3041               	movlw	65
  9803     0160  00F7               	movwf	??_LCDinit
  9804     0161  30EE               	movlw	238
  9805     0162                     u3587:
  9806     0162  0B89               	decfsz	9,f
  9807     0163  2962               	goto	u3587
  9808     0164  0BF7               	decfsz	??_LCDinit,f
  9809     0165  2962               	goto	u3587
  9810     0166  3200               	nop2
  9811     0167                     l3861:
  9812                           
  9813                           ;LCD/lcd.c: 82:   LCDsend(0x30);
  9814     0167  3030               	movlw	48
  9815     0168  318F  2722  3181   	fcall	_LCDsend
  9816     016B                     l3863:
  9817                           
  9818                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
  9819     016B  3034               	movlw	52
  9820     016C  318F  2722  3181   	fcall	_LCDsend
  9821     016F  30A6               	movlw	166
  9822     0170                     u3597:
  9823     0170  0B89               	decfsz	9,f
  9824     0171  2970               	goto	u3597
  9825     0172  3200               	nop2
  9826     0173                     l3865:
  9827     0173  3030               	movlw	48
  9828     0174  318F  2722  3181   	fcall	_LCDsend
  9829     0177                     l3867:
  9830                           
  9831                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
  9832     0177  3007               	movlw	7
  9833     0178  00F7               	movwf	??_LCDinit
  9834     0179  307D               	movlw	125
  9835     017A                     u3607:
  9836     017A  0B89               	decfsz	9,f
  9837     017B  297A               	goto	u3607
  9838     017C  0BF7               	decfsz	??_LCDinit,f
  9839     017D  297A               	goto	u3607
  9840     017E  0000               	nop
  9841                           
  9842                           ;LCD/lcd.c: 85:   LCDsend(0x30);
  9843     017F  3030               	movlw	48
  9844     0180  318F  2722  3181   	fcall	_LCDsend
  9845                           
  9846                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
  9847     0183  3034               	movlw	52
  9848     0184  318F  2722  3181   	fcall	_LCDsend
  9849     0187                     l3869:
  9850     0187  30A6               	movlw	166
  9851     0188                     u3617:
  9852     0188  0B89               	decfsz	9,f
  9853     0189  2988               	goto	u3617
  9854     018A  3200               	nop2
  9855     018B                     l3871:
  9856     018B  3030               	movlw	48
  9857     018C  318F  2722  3181   	fcall	_LCDsend
  9858                           
  9859                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  9860     018F  3021               	movlw	33
  9861     0190                     u3627:
  9862     0190  0B89               	decfsz	9,f
  9863     0191  2990               	goto	u3627
  9864     0192  0000               	nop
  9865     0193                     l3873:
  9866                           
  9867                           ;LCD/lcd.c: 88:   LCDsend(0x30);
  9868     0193  3030               	movlw	48
  9869     0194  318F  2722  3181   	fcall	_LCDsend
  9870     0197                     l3875:
  9871                           
  9872                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
  9873     0197  3034               	movlw	52
  9874     0198  318F  2722  3181   	fcall	_LCDsend
  9875     019B  30A6               	movlw	166
  9876     019C                     u3637:
  9877     019C  0B89               	decfsz	9,f
  9878     019D  299C               	goto	u3637
  9879     019E  3200               	nop2
  9880     019F                     l3877:
  9881     019F  3030               	movlw	48
  9882     01A0  318F  2722  3181   	fcall	_LCDsend
  9883     01A3                     l3879:
  9884                           
  9885                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  9886     01A3  3021               	movlw	33
  9887     01A4                     u3647:
  9888     01A4  0B89               	decfsz	9,f
  9889     01A5  29A4               	goto	u3647
  9890     01A6  0000               	nop
  9891                           
  9892                           ;LCD/lcd.c: 91:   LCDsend(0x20);
  9893     01A7  3020               	movlw	32
  9894     01A8  318F  2722  3181   	fcall	_LCDsend
  9895                           
  9896                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
  9897     01AB  3024               	movlw	36
  9898     01AC  318F  2722  3181   	fcall	_LCDsend
  9899     01AF                     l3881:
  9900     01AF  30A6               	movlw	166
  9901     01B0                     u3657:
  9902     01B0  0B89               	decfsz	9,f
  9903     01B1  29B0               	goto	u3657
  9904     01B2  3200               	nop2
  9905     01B3                     l3883:
  9906     01B3  3020               	movlw	32
  9907     01B4  318F  2722  3181   	fcall	_LCDsend
  9908                           
  9909                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
  9910     01B7  3007               	movlw	7
  9911     01B8  00F7               	movwf	??_LCDinit
  9912     01B9  307D               	movlw	125
  9913     01BA                     u3667:
  9914     01BA  0B89               	decfsz	9,f
  9915     01BB  29BA               	goto	u3667
  9916     01BC  0BF7               	decfsz	??_LCDinit,f
  9917     01BD  29BA               	goto	u3667
  9918     01BE  0000               	nop
  9919     01BF                     l3885:
  9920                           
  9921                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
  9922     01BF  01F2               	clrf	LCDsend2x4@mode
  9923     01C0  3028               	movlw	40
  9924     01C1  3182  2287  3181   	fcall	_LCDsend2x4
  9925     01C4                     l3887:
  9926                           
  9927                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
  9928     01C4  01F2               	clrf	LCDsend2x4@mode
  9929     01C5  3006               	movlw	6
  9930     01C6  3182  2287  3181   	fcall	_LCDsend2x4
  9931     01C9                     l3889:
  9932                           
  9933                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
  9934     01C9  01F2               	clrf	LCDsend2x4@mode
  9935     01CA  300F               	movlw	15
  9936     01CB  3182  2287  3181   	fcall	_LCDsend2x4
  9937     01CE                     l3891:
  9938                           
  9939                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
  9940     01CE  01F2               	clrf	LCDsend2x4@mode
  9941     01CF  3001               	movlw	1
  9942     01D0  3182  2287  3181   	fcall	_LCDsend2x4
  9943                           
  9944                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
  9945     01D3  3003               	movlw	3
  9946     01D4  00F7               	movwf	??_LCDinit
  9947     01D5  3098               	movlw	152
  9948     01D6                     u3677:
  9949     01D6  0B89               	decfsz	9,f
  9950     01D7  29D6               	goto	u3677
  9951     01D8  0BF7               	decfsz	??_LCDinit,f
  9952     01D9  29D6               	goto	u3677
  9953     01DA                     l232:
  9954     01DA  0008               	return
  9955     01DB                     __end_of_LCDinit:
  9956                           
  9957                           	psect	text28
  9958     0287                     __ptext28:	
  9959 ;; *************** function _LCDsend2x4 *****************
  9960 ;; Defined at:
  9961 ;;		line 56 in file "LCD/lcd.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  c               1    wreg     unsigned char 
  9964 ;;  mode            1    2[COMMON] unsigned char 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  c               1    4[COMMON] unsigned char 
  9967 ;;  lc              1    6[COMMON] unsigned char 
  9968 ;;  hc              1    5[COMMON] unsigned char 
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  1    wreg      void 
  9971 ;; Registers used:
  9972 ;;		wreg, status,2, status,0, pclath, cstack
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9978 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;Total ram usage:        5 bytes
  9983 ;; Hardware stack levels used: 1
  9984 ;; Hardware stack levels required when called: 1
  9985 ;; This function calls:
  9986 ;;		_WriteI2C
  9987 ;; This function is called by:
  9988 ;;		_LCDinit
  9989 ;;		_LCDcmd
  9990 ;;		_LCDchar
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994     0287                     _LCDsend2x4:	
  9995                           ;psect for function _LCDsend2x4
  9996                           
  9997                           
  9998                           ;incstack = 0
  9999                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10000                           ;LCDsend2x4@c stored from wreg
 10001     0287  00F4               	movwf	LCDsend2x4@c
 10002     0288                     l3581:
 10003                           
 10004                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 10005     0288  0874               	movf	LCDsend2x4@c,w
 10006     0289  39F0               	andlw	240
 10007     028A  00F5               	movwf	LCDsend2x4@hc
 10008     028B                     l3583:
 10009                           
 10010                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 10011     028B  0874               	movf	LCDsend2x4@c,w
 10012     028C  00F3               	movwf	??_LCDsend2x4
 10013     028D  3003               	movlw	3
 10014     028E                     u2365:
 10015     028E  35F3               	lslf	??_LCDsend2x4,f
 10016     028F  3EFF               	addlw	-1
 10017     0290  1D03               	skipz
 10018     0291  2A8E               	goto	u2365
 10019     0292  3573               	lslf	??_LCDsend2x4,w
 10020     0293  39F0               	andlw	240
 10021     0294  00F6               	movwf	LCDsend2x4@lc
 10022     0295                     l3585:	
 10023                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10024                           
 10025     0295  0023               	movlb	3	; select bank3
 10026     0296  0C0F               	rrf	15,w	;volatile
 10027     0297  0C89               	rrf	9,f
 10028     0298  3901               	andlw	1
 10029     0299  00F3               	movwf	??_LCDsend2x4
 10030     029A  0811               	movf	17,w	;volatile
 10031     029B  391F               	andlw	31
 10032     029C  0473               	iorwf	??_LCDsend2x4,w
 10033     029D  1D03               	btfss	3,2
 10034     029E  2AA0               	goto	u2371
 10035     029F  2AA1               	goto	u2370
 10036     02A0                     u2371:
 10037     02A0  2A95               	goto	l3585
 10038     02A1                     u2370:
 10039     02A1                     l195:	
 10040                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10041                           
 10042     02A1  1411               	bsf	17,0	;volatile
 10043     02A2                     l196:
 10044     02A2  1811               	btfsc	17,0	;volatile
 10045     02A3  2AA5               	goto	u2381
 10046     02A4  2AA6               	goto	u2380
 10047     02A5                     u2381:
 10048     02A5  2AA2               	goto	l196
 10049     02A6                     u2380:
 10050     02A6                     l3587:
 10051     02A6  0C0F               	rrf	15,w	;volatile
 10052     02A7  0C89               	rrf	9,f
 10053     02A8  3901               	andlw	1
 10054     02A9  00F3               	movwf	??_LCDsend2x4
 10055     02AA  0811               	movf	17,w	;volatile
 10056     02AB  391F               	andlw	31
 10057     02AC  0473               	iorwf	??_LCDsend2x4,w
 10058     02AD  1D03               	btfss	3,2
 10059     02AE  2AB0               	goto	u2391
 10060     02AF  2AB1               	goto	u2390
 10061     02B0                     u2391:
 10062     02B0  2AA6               	goto	l3587
 10063     02B1                     u2390:
 10064     02B1                     l3589:
 10065                           
 10066                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10067     02B1  304E               	movlw	78
 10068     02B2  318F  2765  3182   	fcall	_WriteI2C
 10069     02B5                     l3591:
 10070     02B5  0023               	movlb	3	; select bank3
 10071     02B6  0C0F               	rrf	15,w	;volatile
 10072     02B7  0C89               	rrf	9,f
 10073     02B8  3901               	andlw	1
 10074     02B9  00F3               	movwf	??_LCDsend2x4
 10075     02BA  0811               	movf	17,w	;volatile
 10076     02BB  391F               	andlw	31
 10077     02BC  0473               	iorwf	??_LCDsend2x4,w
 10078     02BD  1D03               	btfss	3,2
 10079     02BE  2AC0               	goto	u2401
 10080     02BF  2AC1               	goto	u2400
 10081     02C0                     u2401:
 10082     02C0  2AB5               	goto	l3591
 10083     02C1                     u2400:
 10084     02C1                     l3593:
 10085                           
 10086                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10087     02C1  0875               	movf	LCDsend2x4@hc,w
 10088     02C2  0472               	iorwf	LCDsend2x4@mode,w
 10089     02C3  3808               	iorlw	8
 10090     02C4  318F  2765  3182   	fcall	_WriteI2C
 10091     02C7                     l3595:
 10092     02C7  0023               	movlb	3	; select bank3
 10093     02C8  0C0F               	rrf	15,w	;volatile
 10094     02C9  0C89               	rrf	9,f
 10095     02CA  3901               	andlw	1
 10096     02CB  00F3               	movwf	??_LCDsend2x4
 10097     02CC  0811               	movf	17,w	;volatile
 10098     02CD  391F               	andlw	31
 10099     02CE  0473               	iorwf	??_LCDsend2x4,w
 10100     02CF  1D03               	btfss	3,2
 10101     02D0  2AD2               	goto	u2411
 10102     02D1  2AD3               	goto	u2410
 10103     02D2                     u2411:
 10104     02D2  2AC7               	goto	l3595
 10105     02D3                     u2410:
 10106     02D3                     l3597:
 10107                           
 10108                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 10109     02D3  0875               	movf	LCDsend2x4@hc,w
 10110     02D4  0472               	iorwf	LCDsend2x4@mode,w
 10111     02D5  380C               	iorlw	12
 10112     02D6  318F  2765  3182   	fcall	_WriteI2C
 10113     02D9                     l3599:
 10114     02D9  0023               	movlb	3	; select bank3
 10115     02DA  0C0F               	rrf	15,w	;volatile
 10116     02DB  0C89               	rrf	9,f
 10117     02DC  3901               	andlw	1
 10118     02DD  00F3               	movwf	??_LCDsend2x4
 10119     02DE  0811               	movf	17,w	;volatile
 10120     02DF  391F               	andlw	31
 10121     02E0  0473               	iorwf	??_LCDsend2x4,w
 10122     02E1  1D03               	btfss	3,2
 10123     02E2  2AE4               	goto	u2421
 10124     02E3  2AE5               	goto	u2420
 10125     02E4                     u2421:
 10126     02E4  2AD9               	goto	l3599
 10127     02E5                     u2420:
 10128     02E5                     l211:
 10129                           
 10130                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10131     02E5  0000               	nop
 10132     02E6                     l3601:
 10133                           
 10134                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10135     02E6  0875               	movf	LCDsend2x4@hc,w
 10136     02E7  0472               	iorwf	LCDsend2x4@mode,w
 10137     02E8  3808               	iorlw	8
 10138     02E9  318F  2765  3182   	fcall	_WriteI2C
 10139     02EC                     l3603:
 10140     02EC  0023               	movlb	3	; select bank3
 10141     02ED  0C0F               	rrf	15,w	;volatile
 10142     02EE  0C89               	rrf	9,f
 10143     02EF  3901               	andlw	1
 10144     02F0  00F3               	movwf	??_LCDsend2x4
 10145     02F1  0811               	movf	17,w	;volatile
 10146     02F2  391F               	andlw	31
 10147     02F3  0473               	iorwf	??_LCDsend2x4,w
 10148     02F4  1D03               	btfss	3,2
 10149     02F5  2AF7               	goto	u2431
 10150     02F6  2AF8               	goto	u2430
 10151     02F7                     u2431:
 10152     02F7  2AEC               	goto	l3603
 10153     02F8                     u2430:
 10154     02F8                     l3605:
 10155                           
 10156                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10157     02F8  0876               	movf	LCDsend2x4@lc,w
 10158     02F9  0472               	iorwf	LCDsend2x4@mode,w
 10159     02FA  3808               	iorlw	8
 10160     02FB  318F  2765  3182   	fcall	_WriteI2C
 10161     02FE                     l3607:
 10162     02FE  0023               	movlb	3	; select bank3
 10163     02FF  0C0F               	rrf	15,w	;volatile
 10164     0300  0C89               	rrf	9,f
 10165     0301  3901               	andlw	1
 10166     0302  00F3               	movwf	??_LCDsend2x4
 10167     0303  0811               	movf	17,w	;volatile
 10168     0304  391F               	andlw	31
 10169     0305  0473               	iorwf	??_LCDsend2x4,w
 10170     0306  1D03               	btfss	3,2
 10171     0307  2B09               	goto	u2441
 10172     0308  2B0A               	goto	u2440
 10173     0309                     u2441:
 10174     0309  2AFE               	goto	l3607
 10175     030A                     u2440:
 10176     030A                     l3609:
 10177                           
 10178                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 10179     030A  0876               	movf	LCDsend2x4@lc,w
 10180     030B  0472               	iorwf	LCDsend2x4@mode,w
 10181     030C  380C               	iorlw	12
 10182     030D  318F  2765  3182   	fcall	_WriteI2C
 10183     0310                     l3611:
 10184     0310  0023               	movlb	3	; select bank3
 10185     0311  0C0F               	rrf	15,w	;volatile
 10186     0312  0C89               	rrf	9,f
 10187     0313  3901               	andlw	1
 10188     0314  00F3               	movwf	??_LCDsend2x4
 10189     0315  0811               	movf	17,w	;volatile
 10190     0316  391F               	andlw	31
 10191     0317  0473               	iorwf	??_LCDsend2x4,w
 10192     0318  1D03               	btfss	3,2
 10193     0319  2B1B               	goto	u2451
 10194     031A  2B1C               	goto	u2450
 10195     031B                     u2451:
 10196     031B  2B10               	goto	l3611
 10197     031C                     u2450:
 10198     031C                     l220:
 10199                           
 10200                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10201     031C  0000               	nop
 10202     031D                     l3613:
 10203                           
 10204                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10205     031D  0876               	movf	LCDsend2x4@lc,w
 10206     031E  0472               	iorwf	LCDsend2x4@mode,w
 10207     031F  3808               	iorlw	8
 10208     0320  318F  2765  3182   	fcall	_WriteI2C
 10209     0323                     l3615:
 10210     0323  0023               	movlb	3	; select bank3
 10211     0324  0C0F               	rrf	15,w	;volatile
 10212     0325  0C89               	rrf	9,f
 10213     0326  3901               	andlw	1
 10214     0327  00F3               	movwf	??_LCDsend2x4
 10215     0328  0811               	movf	17,w	;volatile
 10216     0329  391F               	andlw	31
 10217     032A  0473               	iorwf	??_LCDsend2x4,w
 10218     032B  1D03               	btfss	3,2
 10219     032C  2B2E               	goto	u2461
 10220     032D  2B2F               	goto	u2460
 10221     032E                     u2461:
 10222     032E  2B23               	goto	l3615
 10223     032F                     u2460:
 10224     032F                     l224:	
 10225                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10226                           
 10227     032F  1511               	bsf	17,2	;volatile
 10228     0330                     l225:
 10229     0330  1911               	btfsc	17,2	;volatile
 10230     0331  2B33               	goto	u2471
 10231     0332  2B34               	goto	u2470
 10232     0333                     u2471:
 10233     0333  2B30               	goto	l225
 10234     0334                     u2470:
 10235     0334                     l3617:
 10236                           
 10237                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 10238     0334  3010               	movlw	16
 10239     0335                     u3687:
 10240     0335  0B89               	decfsz	9,f
 10241     0336  2B35               	goto	u3687
 10242     0337  3200               	nop2
 10243     0338                     l229:
 10244     0338  0008               	return
 10245     0339                     __end_of_LCDsend2x4:
 10246                           
 10247                           	psect	text29
 10248     0F22                     __ptext29:	
 10249 ;; *************** function _LCDsend *****************
 10250 ;; Defined at:
 10251 ;;		line 17 in file "LCD/lcd.c"
 10252 ;; Parameters:    Size  Location     Type
 10253 ;;  c               1    wreg     unsigned char 
 10254 ;; Auto vars:     Size  Location     Type
 10255 ;;  c               1    3[COMMON] unsigned char 
 10256 ;; Return value:  Size  Location     Type
 10257 ;;                  1    wreg      void 
 10258 ;; Registers used:
 10259 ;;		wreg, status,2, status,0, pclath, cstack
 10260 ;; Tracked objects:
 10261 ;;		On entry : 0/0
 10262 ;;		On exit  : 0/0
 10263 ;;		Unchanged: 0/0
 10264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;Total ram usage:        2 bytes
 10270 ;; Hardware stack levels used: 1
 10271 ;; Hardware stack levels required when called: 1
 10272 ;; This function calls:
 10273 ;;		_WriteI2C
 10274 ;; This function is called by:
 10275 ;;		_LCDinit
 10276 ;; This function uses a non-reentrant model
 10277 ;;
 10278                           
 10279     0F22                     _LCDsend:	
 10280                           ;psect for function _LCDsend
 10281                           
 10282                           
 10283                           ;incstack = 0
 10284                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 10285                           ;LCDsend@c stored from wreg
 10286     0F22  00F3               	movwf	LCDsend@c
 10287     0F23                     l3679:
 10288     0F23                     l3681:	
 10289                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10290                           
 10291     0F23  0023               	movlb	3	; select bank3
 10292     0F24  0C0F               	rrf	15,w	;volatile
 10293     0F25  0C89               	rrf	9,f
 10294     0F26  3901               	andlw	1
 10295     0F27  00F2               	movwf	??_LCDsend
 10296     0F28  0811               	movf	17,w	;volatile
 10297     0F29  391F               	andlw	31
 10298     0F2A  0472               	iorwf	??_LCDsend,w
 10299     0F2B  1D03               	btfss	3,2
 10300     0F2C  2F2E               	goto	u2541
 10301     0F2D  2F2F               	goto	u2540
 10302     0F2E                     u2541:
 10303     0F2E  2F23               	goto	l3681
 10304     0F2F                     u2540:
 10305     0F2F                     l73:	
 10306                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10307                           
 10308     0F2F  1411               	bsf	17,0	;volatile
 10309     0F30                     l74:
 10310     0F30  1811               	btfsc	17,0	;volatile
 10311     0F31  2F33               	goto	u2551
 10312     0F32  2F34               	goto	u2550
 10313     0F33                     u2551:
 10314     0F33  2F30               	goto	l74
 10315     0F34                     u2550:
 10316     0F34                     l3683:
 10317     0F34  0C0F               	rrf	15,w	;volatile
 10318     0F35  0C89               	rrf	9,f
 10319     0F36  3901               	andlw	1
 10320     0F37  00F2               	movwf	??_LCDsend
 10321     0F38  0811               	movf	17,w	;volatile
 10322     0F39  391F               	andlw	31
 10323     0F3A  0472               	iorwf	??_LCDsend,w
 10324     0F3B  1D03               	btfss	3,2
 10325     0F3C  2F3E               	goto	u2561
 10326     0F3D  2F3F               	goto	u2560
 10327     0F3E                     u2561:
 10328     0F3E  2F34               	goto	l3683
 10329     0F3F                     u2560:
 10330     0F3F                     l3685:
 10331                           
 10332                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10333     0F3F  304E               	movlw	78
 10334     0F40  318F  2765  318F   	fcall	_WriteI2C
 10335     0F43                     l3687:
 10336     0F43  0023               	movlb	3	; select bank3
 10337     0F44  0C0F               	rrf	15,w	;volatile
 10338     0F45  0C89               	rrf	9,f
 10339     0F46  3901               	andlw	1
 10340     0F47  00F2               	movwf	??_LCDsend
 10341     0F48  0811               	movf	17,w	;volatile
 10342     0F49  391F               	andlw	31
 10343     0F4A  0472               	iorwf	??_LCDsend,w
 10344     0F4B  1D03               	btfss	3,2
 10345     0F4C  2F4E               	goto	u2571
 10346     0F4D  2F4F               	goto	u2570
 10347     0F4E                     u2571:
 10348     0F4E  2F43               	goto	l3687
 10349     0F4F                     u2570:
 10350     0F4F                     l3689:
 10351                           
 10352                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10353     0F4F  0873               	movf	LCDsend@c,w
 10354     0F50  318F  2765  318F   	fcall	_WriteI2C
 10355     0F53                     l3691:
 10356     0F53  0023               	movlb	3	; select bank3
 10357     0F54  0C0F               	rrf	15,w	;volatile
 10358     0F55  0C89               	rrf	9,f
 10359     0F56  3901               	andlw	1
 10360     0F57  00F2               	movwf	??_LCDsend
 10361     0F58  0811               	movf	17,w	;volatile
 10362     0F59  391F               	andlw	31
 10363     0F5A  0472               	iorwf	??_LCDsend,w
 10364     0F5B  1D03               	btfss	3,2
 10365     0F5C  2F5E               	goto	u2581
 10366     0F5D  2F5F               	goto	u2580
 10367     0F5E                     u2581:
 10368     0F5E  2F53               	goto	l3691
 10369     0F5F                     u2580:
 10370     0F5F                     l87:	
 10371                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10372                           
 10373     0F5F  1511               	bsf	17,2	;volatile
 10374     0F60                     l88:
 10375     0F60  1911               	btfsc	17,2	;volatile
 10376     0F61  2F63               	goto	u2591
 10377     0F62  2F64               	goto	u2590
 10378     0F63                     u2591:
 10379     0F63  2F60               	goto	l88
 10380     0F64                     u2590:
 10381     0F64                     l92:
 10382     0F64  0008               	return
 10383     0F65                     __end_of_LCDsend:
 10384                           
 10385                           	psect	text30
 10386     0DAD                     __ptext30:	
 10387 ;; *************** function _LCDbusy *****************
 10388 ;; Defined at:
 10389 ;;		line 119 in file "LCD/lcd.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;		None
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;		None
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  2    7[COMMON] int 
 10396 ;; Registers used:
 10397 ;;		wreg, status,2, status,0, pclath, cstack
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 0/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10407 ;;Total ram usage:        2 bytes
 10408 ;; Hardware stack levels used: 1
 10409 ;; Hardware stack levels required when called: 2
 10410 ;; This function calls:
 10411 ;;		_LCDrecv
 10412 ;; This function is called by:
 10413 ;;		_main
 10414 ;; This function uses a non-reentrant model
 10415 ;;
 10416                           
 10417     0DAD                     _LCDbusy:	
 10418                           ;psect for function _LCDbusy
 10419                           
 10420     0DAD                     l3899:	
 10421                           ;incstack = 0
 10422                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 10423                           
 10424                           
 10425                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 10426     0DAD  3000               	movlw	0
 10427     0DAE  3185  2509  318D   	fcall	_LCDrecv
 10428     0DB1  3980               	andlw	128
 10429     0DB2  1903               	btfsc	3,2
 10430     0DB3  2DB5               	goto	u2901
 10431     0DB4  2DB6               	goto	u2900
 10432     0DB5                     u2901:
 10433     0DB5  2DBB               	goto	l3905
 10434     0DB6                     u2900:
 10435     0DB6                     l3901:
 10436     0DB6  3001               	movlw	1
 10437     0DB7  00F7               	movwf	?_LCDbusy
 10438     0DB8  3000               	movlw	0
 10439     0DB9  00F8               	movwf	?_LCDbusy+1
 10440     0DBA  2DBD               	goto	l248
 10441     0DBB                     l3905:
 10442                           
 10443                           ;LCD/lcd.c: 122:   return 0;
 10444     0DBB  01F7               	clrf	?_LCDbusy
 10445     0DBC  01F8               	clrf	?_LCDbusy+1
 10446     0DBD                     l248:
 10447     0DBD  0008               	return
 10448     0DBE                     __end_of_LCDbusy:
 10449                           
 10450                           	psect	text31
 10451     0509                     __ptext31:	
 10452 ;; *************** function _LCDrecv *****************
 10453 ;; Defined at:
 10454 ;;		line 25 in file "LCD/lcd.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;  mode            1    wreg     unsigned char 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  mode            1    6[COMMON] unsigned char 
 10459 ;;  lc              1    5[COMMON] unsigned char 
 10460 ;;  hc              1    4[COMMON] unsigned char 
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      unsigned char 
 10463 ;; Registers used:
 10464 ;;		wreg, status,2, status,0, pclath, cstack
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;Total ram usage:        5 bytes
 10475 ;; Hardware stack levels used: 1
 10476 ;; Hardware stack levels required when called: 1
 10477 ;; This function calls:
 10478 ;;		_ReadI2C
 10479 ;;		_WriteI2C
 10480 ;; This function is called by:
 10481 ;;		_LCDbusy
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485     0509                     _LCDrecv:	
 10486                           ;psect for function _LCDrecv
 10487                           
 10488                           
 10489                           ;incstack = 0
 10490                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 10491                           ;LCDrecv@mode stored from wreg
 10492     0509  00F6               	movwf	LCDrecv@mode
 10493     050A                     l3693:
 10494     050A                     l3695:	
 10495                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 10496                           
 10497     050A  0023               	movlb	3	; select bank3
 10498     050B  0C0F               	rrf	15,w	;volatile
 10499     050C  0C89               	rrf	9,f
 10500     050D  3901               	andlw	1
 10501     050E  00F2               	movwf	??_LCDrecv
 10502     050F  0811               	movf	17,w	;volatile
 10503     0510  391F               	andlw	31
 10504     0511  0472               	iorwf	??_LCDrecv,w
 10505     0512  1D03               	btfss	3,2
 10506     0513  2D15               	goto	u2601
 10507     0514  2D16               	goto	u2600
 10508     0515                     u2601:
 10509     0515  2D0A               	goto	l3695
 10510     0516                     u2600:
 10511     0516                     l98:	
 10512                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10513                           
 10514     0516  1411               	bsf	17,0	;volatile
 10515     0517                     l99:
 10516     0517  1811               	btfsc	17,0	;volatile
 10517     0518  2D1A               	goto	u2611
 10518     0519  2D1B               	goto	u2610
 10519     051A                     u2611:
 10520     051A  2D17               	goto	l99
 10521     051B                     u2610:
 10522     051B                     l3697:
 10523     051B  0C0F               	rrf	15,w	;volatile
 10524     051C  0C89               	rrf	9,f
 10525     051D  3901               	andlw	1
 10526     051E  00F2               	movwf	??_LCDrecv
 10527     051F  0811               	movf	17,w	;volatile
 10528     0520  391F               	andlw	31
 10529     0521  0472               	iorwf	??_LCDrecv,w
 10530     0522  1D03               	btfss	3,2
 10531     0523  2D25               	goto	u2621
 10532     0524  2D26               	goto	u2620
 10533     0525                     u2621:
 10534     0525  2D1B               	goto	l3697
 10535     0526                     u2620:
 10536     0526                     l3699:
 10537                           
 10538                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10539     0526  304E               	movlw	78
 10540     0527  318F  2765  3185   	fcall	_WriteI2C
 10541     052A                     l3701:
 10542     052A  0023               	movlb	3	; select bank3
 10543     052B  0C0F               	rrf	15,w	;volatile
 10544     052C  0C89               	rrf	9,f
 10545     052D  3901               	andlw	1
 10546     052E  00F2               	movwf	??_LCDrecv
 10547     052F  0811               	movf	17,w	;volatile
 10548     0530  391F               	andlw	31
 10549     0531  0472               	iorwf	??_LCDrecv,w
 10550     0532  1D03               	btfss	3,2
 10551     0533  2D35               	goto	u2631
 10552     0534  2D36               	goto	u2630
 10553     0535                     u2631:
 10554     0535  2D2A               	goto	l3701
 10555     0536                     u2630:
 10556     0536                     l3703:
 10557                           
 10558                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 10559     0536  0876               	movf	LCDrecv@mode,w
 10560     0537  38FA               	iorlw	250
 10561     0538  318F  2765  3185   	fcall	_WriteI2C
 10562     053B                     l3705:
 10563     053B  0023               	movlb	3	; select bank3
 10564     053C  0C0F               	rrf	15,w	;volatile
 10565     053D  0C89               	rrf	9,f
 10566     053E  3901               	andlw	1
 10567     053F  00F2               	movwf	??_LCDrecv
 10568     0540  0811               	movf	17,w	;volatile
 10569     0541  391F               	andlw	31
 10570     0542  0472               	iorwf	??_LCDrecv,w
 10571     0543  1D03               	btfss	3,2
 10572     0544  2D46               	goto	u2641
 10573     0545  2D47               	goto	u2640
 10574     0546                     u2641:
 10575     0546  2D3B               	goto	l3705
 10576     0547                     u2640:
 10577     0547                     l3707:
 10578                           
 10579                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 10580     0547  0876               	movf	LCDrecv@mode,w
 10581     0548  38FE               	iorlw	254
 10582     0549  318F  2765  3185   	fcall	_WriteI2C
 10583     054C                     l3709:
 10584     054C  0023               	movlb	3	; select bank3
 10585     054D  0C0F               	rrf	15,w	;volatile
 10586     054E  0C89               	rrf	9,f
 10587     054F  3901               	andlw	1
 10588     0550  00F2               	movwf	??_LCDrecv
 10589     0551  0811               	movf	17,w	;volatile
 10590     0552  391F               	andlw	31
 10591     0553  0472               	iorwf	??_LCDrecv,w
 10592     0554  1D03               	btfss	3,2
 10593     0555  2D57               	goto	u2651
 10594     0556  2D58               	goto	u2650
 10595     0557                     u2651:
 10596     0557  2D4C               	goto	l3709
 10597     0558                     u2650:
 10598     0558                     l114:
 10599                           
 10600                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10601     0558  0000               	nop
 10602     0559                     l115:	
 10603                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10604                           
 10605     0559  0023               	movlb	3	; select bank3
 10606     055A  1491               	bsf	17,1	;volatile
 10607     055B                     l116:
 10608     055B  1891               	btfsc	17,1	;volatile
 10609     055C  2D5E               	goto	u2661
 10610     055D  2D5F               	goto	u2660
 10611     055E                     u2661:
 10612     055E  2D5B               	goto	l116
 10613     055F                     u2660:
 10614     055F                     l3711:
 10615     055F  0C0F               	rrf	15,w	;volatile
 10616     0560  0C89               	rrf	9,f
 10617     0561  3901               	andlw	1
 10618     0562  00F2               	movwf	??_LCDrecv
 10619     0563  0811               	movf	17,w	;volatile
 10620     0564  391F               	andlw	31
 10621     0565  0472               	iorwf	??_LCDrecv,w
 10622     0566  1D03               	btfss	3,2
 10623     0567  2D69               	goto	u2671
 10624     0568  2D6A               	goto	u2670
 10625     0569                     u2671:
 10626     0569  2D5F               	goto	l3711
 10627     056A                     u2670:
 10628     056A                     l3713:
 10629                           
 10630                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10631     056A  304F               	movlw	79
 10632     056B  318F  2765  3185   	fcall	_WriteI2C
 10633     056E                     l3715:
 10634     056E  0023               	movlb	3	; select bank3
 10635     056F  0C0F               	rrf	15,w	;volatile
 10636     0570  0C89               	rrf	9,f
 10637     0571  3901               	andlw	1
 10638     0572  00F2               	movwf	??_LCDrecv
 10639     0573  0811               	movf	17,w	;volatile
 10640     0574  391F               	andlw	31
 10641     0575  0472               	iorwf	??_LCDrecv,w
 10642     0576  1D03               	btfss	3,2
 10643     0577  2D79               	goto	u2681
 10644     0578  2D7A               	goto	u2680
 10645     0579                     u2681:
 10646     0579  2D6E               	goto	l3715
 10647     057A                     u2680:
 10648     057A                     l3717:
 10649                           
 10650                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10651     057A  318E  264C  3185   	fcall	_ReadI2C
 10652     057D  00F4               	movwf	LCDrecv@hc
 10653     057E                     l3719:
 10654     057E  0023               	movlb	3	; select bank3
 10655     057F  0C0F               	rrf	15,w	;volatile
 10656     0580  0C89               	rrf	9,f
 10657     0581  3901               	andlw	1
 10658     0582  00F2               	movwf	??_LCDrecv
 10659     0583  0811               	movf	17,w	;volatile
 10660     0584  391F               	andlw	31
 10661     0585  0472               	iorwf	??_LCDrecv,w
 10662     0586  1D03               	btfss	3,2
 10663     0587  2D89               	goto	u2691
 10664     0588  2D8A               	goto	u2690
 10665     0589                     u2691:
 10666     0589  2D7E               	goto	l3719
 10667     058A                     u2690:
 10668     058A                     l129:	
 10669                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 10670                           
 10671     058A  1691               	bsf	17,5	;volatile
 10672     058B  1611               	bsf	17,4	;volatile
 10673     058C                     l130:
 10674     058C  1A11               	btfsc	17,4	;volatile
 10675     058D  2D8F               	goto	u2701
 10676     058E  2D90               	goto	u2700
 10677     058F                     u2701:
 10678     058F  2D8C               	goto	l130
 10679     0590                     u2700:
 10680     0590                     l134:	
 10681                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10682                           
 10683     0590  1491               	bsf	17,1	;volatile
 10684     0591                     l135:
 10685     0591  1891               	btfsc	17,1	;volatile
 10686     0592  2D94               	goto	u2711
 10687     0593  2D95               	goto	u2710
 10688     0594                     u2711:
 10689     0594  2D91               	goto	l135
 10690     0595                     u2710:
 10691     0595                     l3721:
 10692     0595  0C0F               	rrf	15,w	;volatile
 10693     0596  0C89               	rrf	9,f
 10694     0597  3901               	andlw	1
 10695     0598  00F2               	movwf	??_LCDrecv
 10696     0599  0811               	movf	17,w	;volatile
 10697     059A  391F               	andlw	31
 10698     059B  0472               	iorwf	??_LCDrecv,w
 10699     059C  1D03               	btfss	3,2
 10700     059D  2D9F               	goto	u2721
 10701     059E  2DA0               	goto	u2720
 10702     059F                     u2721:
 10703     059F  2D95               	goto	l3721
 10704     05A0                     u2720:
 10705     05A0                     l3723:
 10706                           
 10707                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10708     05A0  304E               	movlw	78
 10709     05A1  318F  2765  3185   	fcall	_WriteI2C
 10710     05A4                     l3725:
 10711     05A4  0023               	movlb	3	; select bank3
 10712     05A5  0C0F               	rrf	15,w	;volatile
 10713     05A6  0C89               	rrf	9,f
 10714     05A7  3901               	andlw	1
 10715     05A8  00F2               	movwf	??_LCDrecv
 10716     05A9  0811               	movf	17,w	;volatile
 10717     05AA  391F               	andlw	31
 10718     05AB  0472               	iorwf	??_LCDrecv,w
 10719     05AC  1D03               	btfss	3,2
 10720     05AD  2DAF               	goto	u2731
 10721     05AE  2DB0               	goto	u2730
 10722     05AF                     u2731:
 10723     05AF  2DA4               	goto	l3725
 10724     05B0                     u2730:
 10725     05B0                     l3727:
 10726                           
 10727                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 10728     05B0  0876               	movf	LCDrecv@mode,w
 10729     05B1  38FA               	iorlw	250
 10730     05B2  318F  2765  3185   	fcall	_WriteI2C
 10731     05B5                     l3729:
 10732     05B5  0023               	movlb	3	; select bank3
 10733     05B6  0C0F               	rrf	15,w	;volatile
 10734     05B7  0C89               	rrf	9,f
 10735     05B8  3901               	andlw	1
 10736     05B9  00F2               	movwf	??_LCDrecv
 10737     05BA  0811               	movf	17,w	;volatile
 10738     05BB  391F               	andlw	31
 10739     05BC  0472               	iorwf	??_LCDrecv,w
 10740     05BD  1D03               	btfss	3,2
 10741     05BE  2DC0               	goto	u2741
 10742     05BF  2DC1               	goto	u2740
 10743     05C0                     u2741:
 10744     05C0  2DB5               	goto	l3729
 10745     05C1                     u2740:
 10746     05C1                     l3731:
 10747                           
 10748                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 10749     05C1  0876               	movf	LCDrecv@mode,w
 10750     05C2  38FE               	iorlw	254
 10751     05C3  318F  2765  3185   	fcall	_WriteI2C
 10752     05C6                     l3733:
 10753     05C6  0023               	movlb	3	; select bank3
 10754     05C7  0C0F               	rrf	15,w	;volatile
 10755     05C8  0C89               	rrf	9,f
 10756     05C9  3901               	andlw	1
 10757     05CA  00F2               	movwf	??_LCDrecv
 10758     05CB  0811               	movf	17,w	;volatile
 10759     05CC  391F               	andlw	31
 10760     05CD  0472               	iorwf	??_LCDrecv,w
 10761     05CE  1D03               	btfss	3,2
 10762     05CF  2DD1               	goto	u2751
 10763     05D0  2DD2               	goto	u2750
 10764     05D1                     u2751:
 10765     05D1  2DC6               	goto	l3733
 10766     05D2                     u2750:
 10767     05D2                     l150:
 10768                           
 10769                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10770     05D2  0000               	nop
 10771     05D3                     l151:	
 10772                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10773                           
 10774     05D3  0023               	movlb	3	; select bank3
 10775     05D4  1491               	bsf	17,1	;volatile
 10776     05D5                     l152:
 10777     05D5  1891               	btfsc	17,1	;volatile
 10778     05D6  2DD8               	goto	u2761
 10779     05D7  2DD9               	goto	u2760
 10780     05D8                     u2761:
 10781     05D8  2DD5               	goto	l152
 10782     05D9                     u2760:
 10783     05D9                     l3735:
 10784     05D9  0C0F               	rrf	15,w	;volatile
 10785     05DA  0C89               	rrf	9,f
 10786     05DB  3901               	andlw	1
 10787     05DC  00F2               	movwf	??_LCDrecv
 10788     05DD  0811               	movf	17,w	;volatile
 10789     05DE  391F               	andlw	31
 10790     05DF  0472               	iorwf	??_LCDrecv,w
 10791     05E0  1D03               	btfss	3,2
 10792     05E1  2DE3               	goto	u2771
 10793     05E2  2DE4               	goto	u2770
 10794     05E3                     u2771:
 10795     05E3  2DD9               	goto	l3735
 10796     05E4                     u2770:
 10797     05E4                     l3737:
 10798                           
 10799                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10800     05E4  304F               	movlw	79
 10801     05E5  318F  2765  3185   	fcall	_WriteI2C
 10802     05E8                     l3739:
 10803     05E8  0023               	movlb	3	; select bank3
 10804     05E9  0C0F               	rrf	15,w	;volatile
 10805     05EA  0C89               	rrf	9,f
 10806     05EB  3901               	andlw	1
 10807     05EC  00F2               	movwf	??_LCDrecv
 10808     05ED  0811               	movf	17,w	;volatile
 10809     05EE  391F               	andlw	31
 10810     05EF  0472               	iorwf	??_LCDrecv,w
 10811     05F0  1D03               	btfss	3,2
 10812     05F1  2DF3               	goto	u2781
 10813     05F2  2DF4               	goto	u2780
 10814     05F3                     u2781:
 10815     05F3  2DE8               	goto	l3739
 10816     05F4                     u2780:
 10817     05F4                     l3741:
 10818                           
 10819                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10820     05F4  318E  264C  3185   	fcall	_ReadI2C
 10821     05F7  00F5               	movwf	LCDrecv@lc
 10822     05F8                     l3743:
 10823     05F8  0023               	movlb	3	; select bank3
 10824     05F9  0C0F               	rrf	15,w	;volatile
 10825     05FA  0C89               	rrf	9,f
 10826     05FB  3901               	andlw	1
 10827     05FC  00F2               	movwf	??_LCDrecv
 10828     05FD  0811               	movf	17,w	;volatile
 10829     05FE  391F               	andlw	31
 10830     05FF  0472               	iorwf	??_LCDrecv,w
 10831     0600  1D03               	btfss	3,2
 10832     0601  2E03               	goto	u2791
 10833     0602  2E04               	goto	u2790
 10834     0603                     u2791:
 10835     0603  2DF8               	goto	l3743
 10836     0604                     u2790:
 10837     0604                     l165:	
 10838                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 10839                           
 10840     0604  1691               	bsf	17,5	;volatile
 10841     0605  1611               	bsf	17,4	;volatile
 10842     0606                     l166:
 10843     0606  1A11               	btfsc	17,4	;volatile
 10844     0607  2E09               	goto	u2801
 10845     0608  2E0A               	goto	u2800
 10846     0609                     u2801:
 10847     0609  2E06               	goto	l166
 10848     060A                     u2800:
 10849     060A                     l170:	
 10850                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10851                           
 10852     060A  1491               	bsf	17,1	;volatile
 10853     060B                     l171:
 10854     060B  1891               	btfsc	17,1	;volatile
 10855     060C  2E0E               	goto	u2811
 10856     060D  2E0F               	goto	u2810
 10857     060E                     u2811:
 10858     060E  2E0B               	goto	l171
 10859     060F                     u2810:
 10860     060F                     l3745:
 10861     060F  0C0F               	rrf	15,w	;volatile
 10862     0610  0C89               	rrf	9,f
 10863     0611  3901               	andlw	1
 10864     0612  00F2               	movwf	??_LCDrecv
 10865     0613  0811               	movf	17,w	;volatile
 10866     0614  391F               	andlw	31
 10867     0615  0472               	iorwf	??_LCDrecv,w
 10868     0616  1D03               	btfss	3,2
 10869     0617  2E19               	goto	u2821
 10870     0618  2E1A               	goto	u2820
 10871     0619                     u2821:
 10872     0619  2E0F               	goto	l3745
 10873     061A                     u2820:
 10874     061A                     l3747:
 10875                           
 10876                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10877     061A  304E               	movlw	78
 10878     061B  318F  2765  3185   	fcall	_WriteI2C
 10879     061E                     l3749:
 10880     061E  0023               	movlb	3	; select bank3
 10881     061F  0C0F               	rrf	15,w	;volatile
 10882     0620  0C89               	rrf	9,f
 10883     0621  3901               	andlw	1
 10884     0622  00F2               	movwf	??_LCDrecv
 10885     0623  0811               	movf	17,w	;volatile
 10886     0624  391F               	andlw	31
 10887     0625  0472               	iorwf	??_LCDrecv,w
 10888     0626  1D03               	btfss	3,2
 10889     0627  2E29               	goto	u2831
 10890     0628  2E2A               	goto	u2830
 10891     0629                     u2831:
 10892     0629  2E1E               	goto	l3749
 10893     062A                     u2830:
 10894     062A                     l3751:
 10895                           
 10896                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 10897     062A  0876               	movf	LCDrecv@mode,w
 10898     062B  38FA               	iorlw	250
 10899     062C  318F  2765  3185   	fcall	_WriteI2C
 10900     062F                     l3753:
 10901     062F  0023               	movlb	3	; select bank3
 10902     0630  0C0F               	rrf	15,w	;volatile
 10903     0631  0C89               	rrf	9,f
 10904     0632  3901               	andlw	1
 10905     0633  00F2               	movwf	??_LCDrecv
 10906     0634  0811               	movf	17,w	;volatile
 10907     0635  391F               	andlw	31
 10908     0636  0472               	iorwf	??_LCDrecv,w
 10909     0637  1D03               	btfss	3,2
 10910     0638  2E3A               	goto	u2841
 10911     0639  2E3B               	goto	u2840
 10912     063A                     u2841:
 10913     063A  2E2F               	goto	l3753
 10914     063B                     u2840:
 10915     063B                     l184:	
 10916                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10917                           
 10918     063B  1511               	bsf	17,2	;volatile
 10919     063C                     l185:
 10920     063C  1911               	btfsc	17,2	;volatile
 10921     063D  2E3F               	goto	u2851
 10922     063E  2E40               	goto	u2850
 10923     063F                     u2851:
 10924     063F  2E3C               	goto	l185
 10925     0640                     u2850:
 10926     0640                     l3755:
 10927                           
 10928                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 10929     0640  0875               	movf	LCDrecv@lc,w
 10930     0641  00F2               	movwf	??_LCDrecv
 10931     0642  3004               	movlw	4
 10932     0643                     u2865:
 10933     0643  36F2               	lsrf	??_LCDrecv,f
 10934     0644  0B89               	decfsz	9,f
 10935     0645  2E43               	goto	u2865
 10936     0646  300F               	movlw	15
 10937     0647  0572               	andwf	??_LCDrecv,w
 10938     0648  00F3               	movwf	??_LCDrecv+1
 10939     0649  0874               	movf	LCDrecv@hc,w
 10940     064A  39F0               	andlw	240
 10941     064B  0473               	iorwf	??_LCDrecv+1,w
 10942     064C                     l189:
 10943     064C  0008               	return
 10944     064D                     __end_of_LCDrecv:
 10945                           
 10946                           	psect	text32
 10947     0F65                     __ptext32:	
 10948 ;; *************** function _WriteI2C *****************
 10949 ;; Defined at:
 10950 ;;		line 59 in file "I2C/i2c.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  data_out        1    wreg     unsigned char 
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  data_out        1    1[COMMON] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      char 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;Total ram usage:        2 bytes
 10969 ;; Hardware stack levels used: 1
 10970 ;; This function calls:
 10971 ;;		Nothing
 10972 ;; This function is called by:
 10973 ;;		_LCDsend
 10974 ;;		_LCDrecv
 10975 ;;		_LCDsend2x4
 10976 ;;		_readTC74
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980     0F65                     _WriteI2C:	
 10981                           ;psect for function _WriteI2C
 10982                           
 10983                           
 10984                           ;incstack = 0
 10985                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 10986                           ;WriteI2C@data_out stored from wreg
 10987     0F65  00F1               	movwf	WriteI2C@data_out
 10988     0F66                     l3479:
 10989                           
 10990                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 10991     0F66  0871               	movf	WriteI2C@data_out,w
 10992     0F67  0023               	movlb	3	; select bank3
 10993     0F68  008C               	movwf	12	;volatile
 10994     0F69                     l3481:
 10995                           
 10996                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 10997     0F69  1F90               	btfss	16,7	;volatile
 10998     0F6A  2F6C               	goto	u2121
 10999     0F6B  2F6D               	goto	u2120
 11000     0F6C                     u2121:
 11001     0F6C  2F6E               	goto	l3487
 11002     0F6D                     u2120:
 11003     0F6D  2FAF               	goto	l36
 11004     0F6E                     l3487:
 11005                           
 11006                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11007     0F6E  300F               	movlw	15
 11008     0F6F  0510               	andwf	16,w	;volatile
 11009     0F70  00F0               	movwf	??_WriteI2C
 11010     0F71  3008               	movlw	8
 11011     0F72  0670               	xorwf	??_WriteI2C,w
 11012     0F73  1903               	btfsc	3,2
 11013     0F74  2F76               	goto	u2131
 11014     0F75  2F77               	goto	u2130
 11015     0F76                     u2131:
 11016     0F76  2F8D               	goto	l3499
 11017     0F77                     u2130:
 11018     0F77                     l3489:
 11019     0F77  300F               	movlw	15
 11020     0F78  0510               	andwf	16,w	;volatile
 11021     0F79  00F0               	movwf	??_WriteI2C
 11022     0F7A  300B               	movlw	11
 11023     0F7B  0670               	xorwf	??_WriteI2C,w
 11024     0F7C  1903               	btfsc	3,2
 11025     0F7D  2F7F               	goto	u2141
 11026     0F7E  2F80               	goto	u2140
 11027     0F7F                     u2141:
 11028     0F7F  2F8D               	goto	l3499
 11029     0F80                     u2140:
 11030     0F80                     l3491:
 11031                           
 11032                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 11033     0F80  1610               	bsf	16,4	;volatile
 11034     0F81                     l39:	
 11035                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 11036                           
 11037     0F81  002E               	movlb	14	; select bank14
 11038     0F82  1C0F               	btfss	15,0	;volatile
 11039     0F83  2F85               	goto	u2151
 11040     0F84  2F86               	goto	u2150
 11041     0F85                     u2151:
 11042     0F85  2F81               	goto	l39
 11043     0F86                     u2150:
 11044     0F86                     l41:
 11045                           
 11046                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11047     0F86  0023               	movlb	3	; select bank3
 11048     0F87  190F               	btfsc	15,2	;volatile
 11049     0F88  2F8A               	goto	u2161
 11050     0F89  2F8B               	goto	u2160
 11051     0F8A                     u2161:
 11052     0F8A  2FAF               	goto	l36
 11053     0F8B                     u2160:
 11054     0F8B                     l3493:
 11055     0F8B  080F               	movf	15,w	;volatile
 11056     0F8C  2FAF               	goto	l36
 11057     0F8D                     l3499:
 11058     0F8D  300F               	movlw	15
 11059     0F8E  0510               	andwf	16,w	;volatile
 11060     0F8F  00F0               	movwf	??_WriteI2C
 11061     0F90  3008               	movlw	8
 11062     0F91  0670               	xorwf	??_WriteI2C,w
 11063     0F92  1903               	btfsc	3,2
 11064     0F93  2F95               	goto	u2171
 11065     0F94  2F96               	goto	u2170
 11066     0F95                     u2171:
 11067     0F95  2F9F               	goto	l48
 11068     0F96                     u2170:
 11069     0F96                     l3501:
 11070     0F96  300F               	movlw	15
 11071     0F97  0510               	andwf	16,w	;volatile
 11072     0F98  00F0               	movwf	??_WriteI2C
 11073     0F99  300B               	movlw	11
 11074     0F9A  0670               	xorwf	??_WriteI2C,w
 11075     0F9B  1D03               	btfss	3,2
 11076     0F9C  2F9E               	goto	u2181
 11077     0F9D  2F9F               	goto	u2180
 11078     0F9E                     u2181:
 11079     0F9E  2FAF               	goto	l36
 11080     0F9F                     u2180:
 11081     0F9F                     l48:
 11082     0F9F  180F               	btfsc	15,0	;volatile
 11083     0FA0  2FA2               	goto	u2191
 11084     0FA1  2FA3               	goto	u2190
 11085     0FA2                     u2191:
 11086     0FA2  2F9F               	goto	l48
 11087     0FA3                     u2190:
 11088     0FA3                     l3503:
 11089     0FA3  0C0F               	rrf	15,w	;volatile
 11090     0FA4  0C89               	rrf	9,f
 11091     0FA5  3901               	andlw	1
 11092     0FA6  00F0               	movwf	??_WriteI2C
 11093     0FA7  0811               	movf	17,w	;volatile
 11094     0FA8  391F               	andlw	31
 11095     0FA9  0470               	iorwf	??_WriteI2C,w
 11096     0FAA  1D03               	btfss	3,2
 11097     0FAB  2FAD               	goto	u2201
 11098     0FAC  2FAE               	goto	u2200
 11099     0FAD                     u2201:
 11100     0FAD  2FA3               	goto	l3503
 11101     0FAE                     u2200:
 11102     0FAE                     l53:
 11103                           
 11104                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 11105     0FAE  0811               	movf	17,w	;volatile
 11106     0FAF                     l36:
 11107     0FAF  0008               	return
 11108     0FB0                     __end_of_WriteI2C:
 11109                           
 11110                           	psect	text33
 11111     0E4C                     __ptext33:	
 11112 ;; *************** function _ReadI2C *****************
 11113 ;; Defined at:
 11114 ;;		line 44 in file "I2C/i2c.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;		None
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;		None
 11119 ;; Return value:  Size  Location     Type
 11120 ;;                  1    wreg      unsigned char 
 11121 ;; Registers used:
 11122 ;;		wreg, status,2, status,0
 11123 ;; Tracked objects:
 11124 ;;		On entry : 0/0
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;Total ram usage:        1 bytes
 11133 ;; Hardware stack levels used: 1
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_LCDrecv
 11138 ;;		_readTC74
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           
 11142     0E4C                     _ReadI2C:	
 11143                           ;psect for function _ReadI2C
 11144                           
 11145     0E4C                     l3573:	
 11146                           ;incstack = 0
 11147                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11148                           
 11149                           
 11150                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11151     0E4C  300F               	movlw	15
 11152     0E4D  0023               	movlb	3	; select bank3
 11153     0E4E  0510               	andwf	16,w	;volatile
 11154     0E4F  00F0               	movwf	??_ReadI2C
 11155     0E50  3008               	movlw	8
 11156     0E51  0670               	xorwf	??_ReadI2C,w
 11157     0E52  1903               	btfsc	3,2
 11158     0E53  2E55               	goto	u2331
 11159     0E54  2E56               	goto	u2330
 11160     0E55                     u2331:
 11161     0E55  2E5F               	goto	l28
 11162     0E56                     u2330:
 11163     0E56                     l3575:
 11164     0E56  300F               	movlw	15
 11165     0E57  0510               	andwf	16,w	;volatile
 11166     0E58  00F0               	movwf	??_ReadI2C
 11167     0E59  300B               	movlw	11
 11168     0E5A  0670               	xorwf	??_ReadI2C,w
 11169     0E5B  1D03               	btfss	3,2
 11170     0E5C  2E5E               	goto	u2341
 11171     0E5D  2E5F               	goto	u2340
 11172     0E5E                     u2341:
 11173     0E5E  2E60               	goto	l29
 11174     0E5F                     u2340:
 11175     0E5F                     l28:
 11176                           
 11177                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 11178     0E5F  1591               	bsf	17,3	;volatile
 11179     0E60                     l29:
 11180     0E60  1C0F               	btfss	15,0	;volatile
 11181     0E61  2E63               	goto	u2351
 11182     0E62  2E64               	goto	u2350
 11183     0E63                     u2351:
 11184     0E63  2E60               	goto	l29
 11185     0E64                     u2350:
 11186     0E64                     l3577:
 11187                           
 11188                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 11189     0E64  080C               	movf	12,w	;volatile
 11190     0E65                     l32:
 11191     0E65  0008               	return
 11192     0E66                     __end_of_ReadI2C:
 11193                           
 11194                           	psect	text34
 11195     0DCF                     __ptext34:	
 11196 ;; *************** function _ADCC_GetSingleConversion *****************
 11197 ;; Defined at:
 11198 ;;		line 132 in file "mcc_generated_files/adcc.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;  channel         1    wreg     enum E12225
 11201 ;; Auto vars:     Size  Location     Type
 11202 ;;  channel         1    2[COMMON] enum E12225
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  2    0[COMMON] unsigned short 
 11205 ;; Registers used:
 11206 ;;		wreg
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;Total ram usage:        3 bytes
 11217 ;; Hardware stack levels used: 1
 11218 ;; This function calls:
 11219 ;;		Nothing
 11220 ;; This function is called by:
 11221 ;;		_main
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225     0DCF                     _ADCC_GetSingleConversion:	
 11226                           ;psect for function _ADCC_GetSingleConversion
 11227                           
 11228                           
 11229                           ;incstack = 0
 11230                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11231                           ;ADCC_GetSingleConversion@channel stored from wreg
 11232     0DCF  00F2               	movwf	ADCC_GetSingleConversion@channel
 11233     0DD0                     l4001:
 11234                           
 11235                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 11236     0DD0  0872               	movf	ADCC_GetSingleConversion@channel,w
 11237     0DD1  0021               	movlb	1	; select bank1
 11238     0DD2  009E               	movwf	30	;volatile
 11239     0DD3                     l4003:
 11240                           
 11241                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 11242     0DD3  1793               	bsf	19,7	;volatile
 11243     0DD4                     l4005:
 11244                           
 11245                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 11246     0DD4  1313               	bcf	19,6	;volatile
 11247     0DD5                     l4007:
 11248                           
 11249                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 11250     0DD5  1413               	bsf	19,0	;volatile
 11251     0DD6                     l4009:
 11252                           
 11253                           ;mcc_generated_files/adcc.c: 147:     __nop();
 11254     0DD6  0000               	nop
 11255     0DD7                     l906:	
 11256                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 11257                           
 11258                           
 11259                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 11260     0DD7  0021               	movlb	1	; select bank1
 11261     0DD8  1813               	btfsc	19,0	;volatile
 11262     0DD9  2DDB               	goto	u2941
 11263     0DDA  2DDC               	goto	u2940
 11264     0DDB                     u2941:
 11265     0DDB  2DD7               	goto	l906
 11266     0DDC                     u2940:
 11267     0DDC                     l4011:
 11268                           
 11269                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11270     0DDC  080D               	movf	13,w	;volatile
 11271     0DDD  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11272     0DDE  080C               	movf	12,w	;volatile
 11273     0DDF  00F0               	movwf	?_ADCC_GetSingleConversion
 11274     0DE0                     l909:
 11275     0DE0  0008               	return
 11276     0DE1                     __end_of_ADCC_GetSingleConversion:
 11277     007E                     btemp	set	126	;btemp
 11278     007E                     wtemp0	set	126
 11279                           
 11280                           	psect	idloc
 11281                           
 11282                           ;Config register IDLOC0 @ 0x8000
 11283                           ;	unspecified, using default values
 11284     8000                     	org	32768
 11285     8000  3FFF               	dw	16383
 11286                           
 11287                           ;Config register IDLOC1 @ 0x8001
 11288                           ;	unspecified, using default values
 11289     8001                     	org	32769
 11290     8001  3FFF               	dw	16383
 11291                           
 11292                           ;Config register IDLOC2 @ 0x8002
 11293                           ;	unspecified, using default values
 11294     8002                     	org	32770
 11295     8002  3FFF               	dw	16383
 11296                           
 11297                           ;Config register IDLOC3 @ 0x8003
 11298                           ;	unspecified, using default values
 11299     8003                     	org	32771
 11300     8003  3FFF               	dw	16383
 11301                           
 11302                           	psect	config
 11303                           
 11304                           ;Config register CONFIG1 @ 0x8007
 11305                           ;	External Oscillator mode selection bits
 11306                           ;	FEXTOSC = OFF, Oscillator not enabled
 11307                           ;	Power-up default value for COSC bits
 11308                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 11309                           ;	Clock Out Enable bit
 11310                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 11311                           ;	Clock Switch Enable bit
 11312                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 11313                           ;	Fail-Safe Clock Monitor Enable bit
 11314                           ;	FCMEN = ON, FSCM timer enabled
 11315     8007                     	org	32775
 11316     8007  3FEC               	dw	16364
 11317                           
 11318                           ;Config register CONFIG2 @ 0x8008
 11319                           ;	Master Clear Enable bit
 11320                           ;	MCLRE = ON, MCLR pin is Master Clear function
 11321                           ;	Power-up Timer Enable bit
 11322                           ;	PWRTE = OFF, PWRT disabled
 11323                           ;	Low-Power BOR enable bit
 11324                           ;	LPBOREN = OFF, ULPBOR disabled
 11325                           ;	Brown-out reset enable bits
 11326                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 11327                           ;	Brown-out Reset Voltage Selection
 11328                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 11329                           ;	Zero-cross detect disable
 11330                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 11331                           ;	Peripheral Pin Select one-way control
 11332                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 11333                           ;	Stack Overflow/Underflow Reset Enable bit
 11334                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 11335                           ;	Background Debugger
 11336                           ;	DEBUG = OFF, Background Debugger disabled
 11337     8008                     	org	32776
 11338     8008  3FFF               	dw	16383
 11339                           
 11340                           ;Config register CONFIG3 @ 0x8009
 11341                           ;	WDT Period Select bits
 11342                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11343                           ;	WDT operating mode
 11344                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 11345                           ;	WDT Window Select bits
 11346                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 11347                           ;	WDT input clock selector
 11348                           ;	WDTCCS = SC, Software Control
 11349     8009                     	org	32777
 11350     8009  3F9F               	dw	16287
 11351                           
 11352                           ;Config register CONFIG4 @ 0x800A
 11353                           ;	UserNVM self-write protection bits
 11354                           ;	WRT = OFF, Write protection off
 11355                           ;	Scanner Enable bit
 11356                           ;	SCANE = available, Scanner module is available for use
 11357                           ;	Low Voltage Programming Enable bit
 11358                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 11359     800A                     	org	32778
 11360     800A  3FFF               	dw	16383
 11361                           
 11362                           ;Config register CONFIG5 @ 0x800B
 11363                           ;	UserNVM Program memory code protection bit
 11364                           ;	CP = OFF, Program Memory code protection disabled
 11365                           ;	DataNVM code protection bit
 11366                           ;	CPD = OFF, Data EEPROM code protection disabled
 11367     800B                     	org	32779
 11368     800B  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    32
    Data        0
    BSS         68
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      72
    BANK1            80     40      69
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    I2C1_DO_TX$2988$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_fsmStateTable	const PTR FTN()enum E12617[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> main@measure_buffer(BANK1[6]), main@time_buffer(BANK1[8]), STR_4(CODE[2]), STR_5(CODE[2]), 
		 -> STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2486$buffer	PTR unsigned char  size(2) Largest target is 0

    S2486$source	PTR const unsigned char  size(2) Largest target is 0

    S679$data	PTR unsigned char  size(2) Largest target is 0

    S911$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S911$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S911$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S911$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 8
		 -> main@measure_buffer(BANK1[6]), main@time_buffer(BANK1[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[8]), STR_3(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _readTC74->_WriteI2C
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDpos->_LCDcmd
    _LCDcmd->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->_WriteI2C

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   12570
                                             63 BANK0      2     2      0
                                              0 BANK1     40    40      0
           _ADCC_GetSingleConversion
                            _LCDbusy
                             _LCDcmd
                            _LCDinit
                             _LCDpos
                             _LCDstr
                            _OpenI2C
                  _SYSTEM_Initialize
                           _readTC74
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8    7169
                                             41 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    6641
                                             34 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           15    13      2    6325
                                             20 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2    1433
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12    10      2    3603
                                              8 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    2043
                                             11 COMMON     3     0      3
                                              4 BANK0      4     4      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     997
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _readTC74                                             2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               5     3      2    1539
                                              8 COMMON     5     3      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              7 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDpos                                               3     2      1    1281
                                              8 COMMON     3     2      1
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              7 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              7 COMMON     1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           5     4      1     788
                                              2 COMMON     5     4      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 COMMON     2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDbusy                                              2     0      2     178
                                              7 COMMON     2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (2) _LCDrecv                                              5     5      0     178
                                              2 COMMON     5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCDbusy
     _LCDrecv
       _ReadI2C
       _WriteI2C
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
   _LCDpos
     _LCDcmd
   _LCDstr
     _LCDchar
       _LCDsend2x4
   _OpenI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
   _readTC74
     _ReadI2C
     _WriteI2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     28      45       7       86.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Nov 25 23:59:31 2023

                              l23 0DAC                                l32 0E65                                l41 0F86  
                              l28 0E5F                                l36 0FAF                                l29 0E60  
                              l53 0FAE                                l39 0F81                                l48 0F9F  
                              l73 0F2F                                l74 0F30                                l92 0F64  
                              l87 0F5F                                l88 0F60                                l98 0516  
                              l99 0517                      ___awdiv@sign 0076               ___wmul@multiplicand 0072  
                             l130 058C                               l114 0558                               l115 0559  
                             l211 02E5                               l116 055B                               l220 031C  
                             l150 05D2                               l134 0590                               l151 05D3  
                             l135 0591                               l152 05D5                               l224 032F  
                             l232 01DA                               l129 058A                               l225 0330  
                             l170 060A                               l171 060B                               l235 0D7C  
                             l244 0E4B                               l165 0604                               l229 0338  
                             l253 0E07                               l166 0606                               l238 0D84  
                             l184 063B                               l248 0DBD                               l185 063C  
                             l195 02A1                               l196 02A2                               l189 064C  
                             l392 0DF3                               l481 004C                               l395 0D95  
                             l398 0D8C                               l906 0DD7                               l909 0DE0  
                             l589 0D9F                               l894 0E33                               l998 0E1C  
                 _timer1ReloadVal 0065                               _abs 0DBE                               _pad 0EE3  
                    ___awmod@sign 0076                               wreg 0009              _I2C1_DO_RX_NACK_STOP 0000  
                     ?_LCDsend2x4 0072                   __end_of_LCDchar 0D85                              l1101 0482  
                            l1120 04C1                              l1121 04C2                              l1106 0491  
                            l1107 0492                              ?_abs 0077                              l1061 040C  
                            l1142 0502                              l1134 04F1                              l1062 040D  
                            l1143 0503                              l1135 04F3                              l1057 0400  
                            l1090 046E                              l1147 0508                              l1075 043C  
                            l1076 043D                              l1324 0EA9                              l1326 0EBD  
                            l4001 0DD0                              l1097 047D                              l1089 046C  
                            l1098 047E                              l4011 0DDC                              l4003 0DD3  
                            l4005 0DD4                              l4007 0DD5                              l4031 0411  
                            l4009 0DD6                              l4041 0441                              l4033 041C  
                            l3401 00E0                              l1490 009F                              l1810 0F16  
                            l4051 0472                              l4043 044C                              l4035 0420  
                            l3411 00F5                              l3403 00E4                              l1812 0F21  
                            l3501 0F96                              l4061 04B1                              l4053 0486  
                            l4045 0450                              l4037 042C                              l4029 0400  
                            l1477 00FE                              l3413 00FA                              l3405 00E5  
                            l3421 0052                              l3341 0FBF                              l3503 0FA3  
                            l4071 04E1                              l4063 04B5                              l4055 0496  
                            l4047 045C                              l4039 0430                              l3407 00EA  
                            l3431 0068                              l3423 0057                              l3343 0FC9  
                            l3335 0FB0                              l3351 0EC0                              l1807 0EF5  
                            l1815 0203                              l3511 01DF                              l3601 02E6  
                            l4073 04E5                              l4065 04C6                              l4057 04A1  
                            l4049 0460                              l3409 00F0                              l3441 0082  
                            l3433 006B                              l3425 0059                              l3417 004D  
                            l3345 0FE7                              l3337 0FB5                              l3353 0EC3  
                            l3521 01FD                              l3513 01EA                              l3361 0EA1  
                            l4081 0E84                              l3611 0310                              l3603 02EC  
                            l4075 04F7                              l4067 04D1                              l4059 04A5  
                            l3451 009B                              l3443 0086                              l3435 0070  
                            l3427 005D                              l3419 004E                              l3347 0FF6  
                            l3339 0FBA                              l3355 0ECF                              l3531 022A  
                            l3523 0207                              l1819 0201                              l3515 01EF  
                            l3363 0EA5                              l1851 03FF                              l1843 0361  
                            l4083 0E88                              l1828 0286                              l1836 015E  
                            l3701 052A                              l3613 031D                              l3605 02F8  
                            l4077 0507                              l4069 04D5                              l3381 00AC  
                            l3373 00A0                              l3445 008B                              l3437 0074  
                            l3429 0062                              l3357 0ED4                              l3461 0EF3  
                            l3541 0258                              l3533 022E                              l3525 020A  
                            l3517 01F3                              l3509 01DD                              l3365 0EAE  
                            l1845 036B                              l4085 0E8A                              l3711 055F  
                            l3703 0536                              l3615 0323                              l3607 02FE  
                            l3391 00C1                              l3383 00B0                              l3375 00A1  
                            l3439 0078                              l3447 0091                              l3471 0DBE  
                            l3463 0EF9                              l3455 0EE5                              l3551 027B  
                            l3543 0265                              l3527 020E                              l3535 023E  
                            l3519 01F8                              l3367 0EB3                              l3359 0E9F  
                            l3631 035B                              l4087 0E8C                              l1864 0DCE  
                            l3481 0F69                              l3721 0595                              l3713 056A  
                            l3705 053B                              l3617 0334                              l3609 030A  
                            l3801 001E                              l3393 00C4                              l3385 00B5  
                            l3377 00A5                              l3449 0096                              l3473 0DC2  
                            l3465 0F03                              l3457 0EE9                              l3537 024C  
                            l3545 026A                              l3529 0228                              l3369 0EB9  
                            l3561 011C                              l3641 0386                              l3633 035F  
                            l3625 033B                              l1857 0E81                              l4089 0E96  
                            l4601 06EC                              l3491 0F80                              l3731 05C1  
                            l3723 05A0                              l3715 056E                              l3707 0547  
                            l3811 0029                              l3803 0024                              l3395 00C9  
                            l3387 00B9                              l3379 00AA                              l3475 0DC3  
                            l3467 0F08                              l3459 0EEF                              l3547 0270  
                            l3539 0253                              l3563 0129                              l3555 0101  
                            l3651 03A0                              l3643 038B                              l3635 0362  
                            l3627 034C                              l1787 0E9E                              l4603 06F2  
                            l4611 0717                              l1876 0FFF                              l1884 0EE2  
                            l3573 0E4C                              l3493 0F8B                              l3741 05F4  
                            l3733 05C6                              l3725 05A4                              l3717 057A  
                            l3709 054C                              l3901 0DB6                              l3581 0288  
                            l3821 0D94                              l3813 002A                              l3805 0026  
                            l3397 00CD                              l3389 00BB                              l3469 0F1B  
                            l3549 0274                              l3565 013E                              l3557 0103  
                            l3661 03D4                              l3653 03A7                              l3645 0396  
                            l3629 0354                              l4621 073B                              l4613 071D  
                            l4605 0704                   __end_of_LCDbusy 0DBE                              ?_pad 007B  
                            l3575 0E56                              l3487 0F6E                              l3479 0F66  
                            l3751 062A                              l3743 05F8                              l3735 05D9  
                            l3727 05B0                              l3719 057E                              l3591 02B5  
                            l3583 028B                              l3911 0DFA                              l3823 0E1D  
                            l3815 0D8D                              l3807 0027                              l3831 0E0C  
                            l3399 00D1                              l1887 0004                              l3559 0114  
                            l3567 0146                              l3655 03B1                              l3647 039A  
                            l3639 036E                              l4631 076C                              l4623 0745  
                            l4615 0723                              l4607 070D                              l4551 0650  
                            l3577 0E64                              l3489 0F77                              l3753 062F  
                            l3745 060F                              l3737 05E4                              l3729 05B5  
                            l3905 0DBB                              l3681 0F23                              l3593 02C1  
                            l3585 0295                   __end_of_LCDinit 01DB                              l3913 0DFD  
                            l3761 0D7E                              l3825 0E30                              l3817 0D90  
                            l3809 0028                              l3833 0E0E                              l3569 015A  
                            l3665 03DD                              l3657 03BB                              l3649 039B  
                            l3841 0E75                              l4641 0799                              l4633 0774  
                            l4625 074F                              l4617 072A                              l4609 0714  
                            l4561 0662                              l4553 0652                              l3499 0F8D  
                            l3755 0640                              l3747 061A                              l3739 05E8  
                            l3691 0F53                              l3683 0F34                              l3595 02C7  
                            l3587 02A6                              l3915 0DFF                              l3851 0DA6  
                            l3827 0E32                              l3819 0D91                              l3771 0D85  
                            l3835 0E0F                              l3659 03C7                              l3843 0E7F  
                            l4651 07C6                              l4635 077B                              l4627 0756  
                            l4619 0730                              l4643 07A0                              l4571 0676  
                            l4563 0666                              l4555 0656                              l3749 061E  
                            l3693 050A                              l3685 0F3F                              l3597 02D3  
                            l3589 02B1                              l3861 0167                              l3917 0E03  
                            l3909 0DF5                              l3853 0DA8                              l3773 0D96  
                            l3781 0005                              l3829 0E08                              l3669 03E7  
                            l3837 0E68                              l4653 07D5                              l4645 07AD  
                            l4637 0781                              l4629 075C                              l4581 0683  
                            l4573 0676                              l4565 066A                              l4557 065A  
                            l4549 064D                              l3695 050A                              l3687 0F43  
                            l3679 0F23                              l3599 02D9                              l3871 018B  
                            l3863 016B                              l3759 0D77                              l3855 0DA9  
                            l3847 0DA0                              l3775 0D9B                              l3791 0013  
                            l3783 000B                              l3839 0E6D                              l4655 07DB  
                            l4647 07BD                              l4639 0791                              l4591 06BF  
                            l4583 06A4                              l4575 0679                              l4567 066E  
                            l4559 065E                              l3697 051B                              l3689 0F4F  
                            l3881 01AF                              l3873 0193                              l3865 0173  
                            l3857 0DAB                              l3849 0DA5                              l3777 0D9C  
                            l3793 0015                              l3785 000D                              l3961 0DE7  
                            l4657 07DE                              l4649 07C3                              l4593 06C6  
                            l4585 06AB                              l4577 067C                              l4569 0672  
                            l3699 0526                              l3891 01CE                              l3883 01B3  
                            l3875 0197                              l3867 0177                              l3859 015F  
                            l3779 0D9E                              l3795 0018                              l3787 000F  
                            l3963 0DEA                              l4595 06CA                              l4587 06B0  
                            l4579 067F                              l3885 01BF                              l3877 019F  
                            l3869 0187                              l3893 0E34                              l3797 001A  
                            l3789 0011                              l3965 0DED                              l3957 0DE1  
                            l4597 06DC                              l4589 06BA                              l3887 01C4  
                            l3879 01A3                              l3895 0E35                              l3799 001C  
                            l3967 0DF0                              l3959 0DE4                              l4679 0381  
                            l4599 06E5                              l3889 01C9                              l3897 0E39  
                            l3899 0DAD                   __end_of_LCDrecv 064D                   __end_of_LCDsend 0F65  
                            STR_1 1020                              STR_2 102F                              STR_3 1037  
                            STR_4 103B                              STR_5 103D                              STR_6 1041  
                            STR_7 1035                              STR_8 103F                              STR_9 1035  
                            u2000 0068                              u2001 0067                              u2020 0078  
                            u2100 0F1B                              u2021 0077                              u2101 0F1A  
                            u2030 0082                              u2110 0DC2                              u2031 0081  
                            u2015 006C                              u2111 0DC1                              u2200 0FAE  
                            u2120 0F6D                              u3000 043C                              u2201 0FAD  
                            u2121 0F6C                              u3001 043B                              u2130 0F77  
                            u3010 0441                              u2050 0091                              u2210 01E4  
                            u2131 0F76                              u3011 0440                              u2051 0090  
                            u2035 007E                              u2211 01E2                              u2140 0F80  
                            u3100 0496                              u3020 044C                              u2060 0096  
                            u2300 0270                              u2220 01E5                              u2141 0F7F  
                            u3101 0495                              u3021 044B                              u2061 0095  
                            u2045 0087                              u2301 026F                              _LATA 0016  
                            u2150 0F86                              u3110 04A1                              u3030 045C  
                            u2070 0EE9                              u2230 01EF                              u2310 0114  
                            _LATB 0017                              u2151 0F85                              u3111 04A0  
                            u3031 045B                              u2071 0EE8                              u2231 01EE  
                            u2311 0113                              _LATC 0018                              u2160 0F8B  
                            u2400 02C1                              u3200 0507                              u3120 04B1  
                            u3040 046C                              u2080 0EF3                              u2240 01F8  
                            u2320 015A                              _LATD 0019                              u2161 0F8A  
                            u2401 02C0                              u3201 0506                              u3121 04B0  
                            u3041 046B                              u2081 0EF2                              u2241 01F7  
                            u2321 0159                              _LATE 001A                              u2330 0E56  
                            u2170 0F96                              u2410 02D3                              u3130 04C1  
                            u3050 0472                              u2090 0F16                              u2250 024C  
                            u2331 0E55                              u2171 0F95                              u2411 02D2  
                            u3131 04C0                              u3051 0471                              u2091 0F15  
                            u2251 024B                              u2340 0E5F                              u2180 0F9F  
                            u2420 02E5                              u3140 04C6                              u3060 047D  
                            u2260 0253                              u2500 038B                              u2341 0E5E  
                            u2181 0F9E                              u2421 02E4                              u3141 04C5  
                            u3061 047C                              u2261 0252                              u2501 038A  
                            u2350 0E64                              u2190 0FA3                              u2430 02F8  
                            u3150 04D1                              u3070 0482                              u2270 0258  
                            u2510 039A                              u2351 0E63                              u2191 0FA2  
                            u2431 02F7                              u3151 04D0                              u3071 0481  
                            u2095 0F12                              u2271 0257                              u2255 0248  
                            u2511 0399                              u2600 0516                              u2440 030A  
                            u3160 04E1                              u3080 0486                              u1800 0FBA  
                            u2280 0265                              u2520 03B1                              u2601 0515  
                            u2441 0309                              u3161 04E0                              u3081 0485  
                            u1801 0FB9                              u2281 0264                              u2521 03B0  
                            u2610 051B                              u2450 031C                              u2370 02A1  
                            u3170 04F1                              u3090 0491                              u1810 0FC9  
                            u2290 026A                              u2530 03BB                              u2611 051A  
                            u2451 031B                              u2371 02A0                              u3171 04F0  
                            u3091 0490                              u1811 0FC8                              u2291 0269  
                            u2531 03BA                              u2700 0590                              u2620 0526  
                            u2540 0F2F                              u2460 032F                              u2380 02A6  
                            u3180 04F7                              u1900 00C1                              u1820 0FE7  
                            u3500 073B                              u2701 058F                              u2621 0525  
                            u2541 0F2E                              u2461 032E                              u2381 02A5  
                            u2365 028E                              u3181 04F6                              u1901 00C0  
                            u1821 0FE6                              u2285 0261                              u3501 073A  
                            u2710 0595                              u2630 0536                              u2550 0F34  
                            u2470 0334                              u2390 02B1                              u3190 0502  
                            u1830 0EE2                              u3510 0745                              u2711 0594  
                            u2631 0535                              u2551 0F33                              u2471 0333  
                            u2391 02B0                              u3191 0501                              u1831 0EE1  
                            u3511 0744                              u2800 060A                              u2720 05A0  
                            u2640 0547                              u2560 0F3F                              u1920 00D1  
                            u1840 0EA5                              u3520 074F                              u2801 0609  
                            u2721 059F                              u2641 0546                              u2561 0F3E  
                            u1921 00D0                              u1825 0FE3                              u1841 0EA4  
                            u3521 074E                              u3505 0737                              u2810 060F  
                            u2730 05B0                              u2650 0558                              u2570 0F4F  
                            u2490 034C                              u3530 076C                              u2811 060E  
                            u2731 05AF                              u2651 0557                              u2571 0F4E  
                            u1915 00C5                              u2491 034B                              u3531 076B  
                            u3515 0741                              u2820 061A                              u2740 05C1  
                            u2660 055F                              u2900 0DB6                              u2580 0F5F  
                            u1940 00E0                              u3540 0791                              u3460 06BA  
                            u2821 0619                              u2741 05C0                              u2661 055E  
                            u2901 0DB5                              u2581 0F5E                              u1941 00DF  
                            u3541 0790                              u3525 074B                              u3461 06B9  
                            u2830 062A                              u2750 05D2                              u2670 056A  
                            u2590 0F64                              u2910 0DFA                              u1790 0FB5  
                            u1870 0EB9                              u3550 07BD                              u3470 06E5  
                            u2831 0629                              u2751 05D1                              u2671 0569  
                            u2591 0F63                              u3607 017A                              u2911 0DF9  
                            u1935 00D2                              u1791 0FB4                              u1871 0EB8  
                            u1855 0EAA                              u3551 07BC                              u3535 0768  
                            u3471 06E4                              u2840 063B                              u2760 05D9  
                            u2680 057A                              u1960 00F0                              u1880 00A5  
                            u3560 07D5                              u3480 070D                              u2841 063A  
                            u2761 05D8                              u2681 0579                              u3617 0188  
                            u1961 00EF                              u1945 00DC                              u1881 00A4  
                            u1865 0EAF                              u3561 07D4                              u3545 078D  
                            u3481 070C                              u3465 06B6                              u2850 0640  
                            u2770 05E4                              u2690 058A                              u1970 00F5  
                            u1890 00B0                              u3490 071D                              u2851 063F  
                            u2771 05E3                              u2691 0589                              u3627 0190  
                            u1971 00F4                              u1955 00E6                              u1891 00AF  
                            u3555 07B9                              u3491 071C                              u2940 0DDC  
                            u2780 05F4                              u1980 0052                              _PMD0 0796  
                            u2941 0DDB                              u2781 05F3                              u3637 019C  
                            u1981 0051                              u3565 07D1                              _PMD1 0797  
                            u2790 0604                              u1990 005D                              _PMD2 0798  
                            u2791 0603                              u3647 01A4                              u1991 005C  
                            _PMD3 0799                              u2960 040C                              u2880 0E7F  
                            _PMD4 079A                              u2865 0643                              u3657 01B0  
                            u2961 040B                              u2881 0E7E                              u3577 07A6  
                            _PMD5 079B                              u2890 0E4B                              u2970 0411  
                            u3667 01BA                              u3587 0162                              u2891 0E4A  
                            u2971 0410                              u2980 041C                              u3677 01D6  
                            u3597 0170                              u2981 041B                              u2990 042C  
                            u3687 0335                              u2991 042B                              _WPUA 0F39  
                            _WPUB 0F44                              _WPUC 0F4F                              _WPUD 0F5A  
                            _WPUE 0F65                              abs@a 0077                       main@minutes 00C4  
                     main@seconds 00C6                              _dbuf 0120                              _main 064D  
                            _dtoa 01DB                              _prec 0063                              pad@i 0025  
                            pad@p 007C                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              start 0002  
                 __end_of_ReadI2C 0E66                   __end_of_OpenI2C 0DAD                             ??_abs 0079  
                           ??_pad 0024     __end_of_OSCILLATOR_Initialize 0D96                             _ADACQ 009D  
                           _ADCAP 009B                             _ADACT 0099                             ?_main 0070  
                           ?_dtoa 0028                             _ADCLK 0098                             _ADCNT 010C  
                           _ADPCH 009E                             _ADREF 009A                   __end_of___awdiv 00FF  
                           _ADPRE 009C                   __end_of___awmod 00A0                             _ADRPT 010D  
                           _T1CLK 0211                   ___awdiv@divisor 0070                             _T1CON 020E  
                 ___awdiv@counter 0075        __end_of_i2c1_fsmStateTable 1020                             _OSCEN 0891  
                    vfpfcnvrt@fmt 0034                             _TMR1H 020D                             _TMR1L 020C  
                           _TRISA 0011                             _TRISB 0012                             _TRISC 0013  
                           _TRISD 0014                             _TRISE 0015                 ??_I2C1_Initialize 0070  
                           _flags 0067               read_prec_or_width@c 0020               read_prec_or_width@n 0021  
                           _fputc 0FB0                             _fputs 0EBE                             pad@fp 0027  
                           _width 0061                             _putch 0004                             dtoa@d 0028  
                           dtoa@i 0032                             dtoa@p 002E                             dtoa@s 0031  
                           dtoa@w 002F           __end_of_TMR1_Initialize 0E1D                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 0E9F                   __initialization 07E5  
                    __end_of_main 07E5                      __end_of_dtoa 0287                            ??_main 005F  
                          ??_dtoa 002A                         ??_LCDchar 0077                         ??_LCDbusy 0079  
                       ??_LCDinit 0077        __end_of_read_prec_or_width 015F                         ??_LCDrecv 0072  
                       ??_LCDsend 0072                            _ADACCH 0091                            _ADACCL 0090  
                          _ADCON0 0093                            _ADCON1 0094                            _ADCON2 0095  
                          _ADCON3 0096                            _ADERRH 0117                            _ADERRL 0116  
                          ?_fputc 0070                            _ADLTHH 010F                            _ADLTHL 010E  
                          ?_fputs 0078                            _ADRESH 008D                            _ADRESL 008C  
                          _ADSTAT 0097                            _ADUTHH 0111                  ___awdiv@dividend 0072  
                          _ADUTHL 0110                  __end_of_WriteI2C 0FB0                            _ANSELA 0F38  
                          ?_putch 0070                            _ANSELB 0F43                            _ANSELC 0F4E  
                          _ANSELD 0F59                            _ANSELE 0F64                            _T1GATE 0210  
                          _T1GCON 020F                            _RC3PPS 0F23                            _RC4PPS 0F24  
                          _ODCONA 0F3A                            _ODCONB 0F45                            _ODCONC 0F50  
                          _ODCOND 0F5B                            _ODCONE 0F66                            _INLVLA 0F3C  
                          _INLVLB 0F47                            _INLVLC 0F52                            _INLVLD 0F5D  
                          _INLVLE 0F68                            _LCDcmd 0D76                            _LCDpos 0DF4  
                          _LCDstr 0E34                            _OSCFRQ 0893                     vfpfcnvrt@done 003E  
                       ??_ReadI2C 0070                       LCDsend2x4@c 0074                       LCDrecv@mode 0076  
                       ??_OpenI2C 0070                  _I2C1_DO_TX_EMPTY 0000                      vfprintf@cfmt 0047  
                          ___wmul 0E9F                         ??___awdiv 0074                         ??___awmod 0074  
                __end_of_readTC74 0509              read_prec_or_width@ap 0076                  ___awdiv@quotient 0077  
                 ___awmod@divisor 0070                   ___awmod@counter 0075                            pad@buf 007B  
                          dtoa@fp 002D                   _ADCC_Initialize 0E1D             _I2C1_DO_SEND_ADR_READ 0000  
                          fputc@c 0070                    _PMD_Initialize 0D85                            fputs@c 0020  
                          fputs@i 0021                            fputs@s 0023                            putch@c 0070  
                __end_of_vfprintf 0E82         ?_ADCC_GetSingleConversion 0070                         ??_sprintf 0051  
         _I2C1_DO_RX_NACK_RESTART 0000                  ?_TMR1_Initialize 0070                 _SYSTEM_Initialize 0DE1  
         __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070           _rdBlkRegCompleteHandler 0000  
                  __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0070                     __end_of_fputc 1000  
                   __end_of_fputs 0EE3                     __end_of_putch 0005            __end_of_PMD_Initialize 0D8D  
                       LCDrecv@hc 0074                         LCDrecv@lc 0075                      ??_LCDsend2x4 0073  
                         ??_fputc 0073         __end_of_SYSTEM_Initialize 0DF4                           ??_fputs 0079  
                         ??_putch 0070                        __pbssBANK0 0061                        __pbssBANK1 00C8  
                      __pbssBANK2 0120                           ?_LCDcmd 0070                           ?_LCDpos 0078  
                         ?_LCDstr 0078                           LCDcmd@c 0077                           LCDpos@c 0078  
                         LCDpos@l 0079                           LCDpos@p 007A             _rd1RegCompleteHandler 0000  
                         LCDstr@c 007C                           LCDstr@p 0078                 _I2C1_DO_SEND_STOP 0000  
           _wr1RegCompleteHandler 0000                        __pmaintext 064D                           ?___wmul 0070  
         __end_of_ADCC_Initialize 0E34                   _I2C1_Initialize 0D96                           _ADFLTRH 0115  
                         _ADFLTRL 0114                __end_of_LCDsend2x4 0339                           _ADPREVH 008F  
                         _ADPREVL 008E                         ?_WriteI2C 0070                           _ADSTPTH 0113  
                         _ADSTPTL 0112                   ?_PMD_Initialize 0070                           _LCDchar 0D7D  
                         _LCDbusy 0DAD                           _LCDinit 015F                           _LCDrecv 0509  
                         _LCDsend 0F22                           _OSCCON1 088D                           _OSCCON3 088F  
                         _OSCTUNE 0892                           _SSP1ADD 018D                           _SLRCONA 0F3B  
                         _SLRCONB 0F46                           _SLRCONC 0F51                           _SLRCOND 0F5C  
                         _SLRCONE 0F67                           _SSP1BUF 018C                      LCDsend2x4@hc 0075  
                    LCDsend2x4@lc 0076                         ?_readTC74 0070                _i2c1_fsmStateTable 1000  
                         _ReadI2C 0E4C                           _OpenI2C 0DA0                           ___awdiv 00A0  
                         ___awmod 004D                         ?_vfprintf 0042                        ??_WriteI2C 0070  
                         __ptext1 0E82                           __ptext2 0E66                           __ptext3 0339  
                         __ptext4 00FF                           __ptext5 0E9F                           __ptext6 01DB  
                         __ptext7 0EE3                           __ptext8 0EBE                           __ptext9 0FB0  
                       _T1CONbits 020E             _OSCILLATOR_Initialize 0D8D             read_prec_or_width@fmt 0023  
                ___awmod@dividend 0072          ??_PIN_MANAGER_Initialize 0070                           _sprintf 0E82  
                         clrloop0 0D71                    main@luminosity 00C3              end_of_initialization 07FD  
                      ??_readTC74 0072                           fputc@fp 0072                           fputs@fp 0078  
          _I2C1_DO_SEND_ADR_WRITE 0000                _read_prec_or_width 00FF           __end_of_I2C1_Initialize 0DA0  
                     _I2C1_Status 00C8                 __end_of_vfpfcnvrt 0400               ?_read_prec_or_width 0076  
                vfpfcnvrt@convarg 003A                  ?_ADCC_Initialize 0070                        ??_vfprintf 0045  
__end_of_ADCC_GetSingleConversion 0DE1        _I2C1_DO_SEND_RESTART_WRITE 0000                         _TRISCbits 0013  
            ??_read_prec_or_width 0078                     readTC74@value 0073                    __end_of_LCDcmd 0D7D  
                  __end_of_LCDpos 0E08                    __end_of_LCDstr 0E4C                    LCDsend2x4@mode 0072  
                     vfpfcnvrt@ap 0035                       vfpfcnvrt@cp 0040                       vfpfcnvrt@fp 003F  
                  __end_of___wmul 0EBE                    _I2C1_DO_RX_ACK 0000            ?_OSCILLATOR_Initialize 0070  
             start_initialization 07E5                       __end_of_abs 0DCF                       __end_of_pad 0F22  
                WriteI2C@data_out 0071                          ??_LCDcmd 0077                          ??_LCDpos 0079  
                        ??_LCDstr 007A                  ?_I2C1_Initialize 0070                       vfprintf@fmt 0042  
                ??_PMD_Initialize 0070                          ??___wmul 0074          _ADCC_GetSingleConversion 0DCF  
                        ?_LCDchar 0070                          ?_LCDbusy 0077                          ?_LCDinit 0070  
            _I2C1_DO_SEND_RESTART 0000                          ?_LCDrecv 0070                          ?_LCDsend 0070  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                        LCDchar@c 0077                          LCDsend@c 0073                          ?_ReadI2C 0070  
           _rd2RegCompleteHandler 0000                          ?_OpenI2C 0070            _PIN_MANAGER_Initialize 0005  
           _wr2RegCompleteHandler 0000                         _dtoa$2565 002B   ADCC_GetSingleConversion@channel 0072  
                        ?___awdiv 0070                          ?___awmod 0070                          ?_sprintf 0049  
                        _T1CKIPPS 0E92                    ___wmul@product 0074                        _I2C1_DO_RX 0000  
                      _I2C1_DO_TX 0000                         clear_ram0 0D70                          _PIE3bits 0719  
                        _PIR3bits 070F                          _PIR4bits 0710         _I2C1_DO_SEND_RESTART_READ 0000  
                        _SSP1CON1 0190                          _SSP1CON2 0191                          _SSP1STAT 018F  
                       _vfpfcnvrt 0339                 ??_TMR1_Initialize 0070                        _ADCON0bits 0093  
                      _ADCON1bits 0094                        _ADCON2bits 0095                        _ADCON3bits 0096  
               ___wmul@multiplier 0070                         main@count 00BC                         main@hours 00C0  
                   _I2C1_DO_RESET 0000                        _ADSTATbits 0097                        vfprintf@ap 0044  
                      vfprintf@fp 0046           ??_OSCILLATOR_Initialize 0070                        ?_vfpfcnvrt 0034  
                        _WriteI2C 0F65                        sprintf@fmt 0049                          __ptext10 0004  
                        __ptext11 0DBE                          __ptext20 0D96                          __ptext12 004D  
                        __ptext21 0E1D                          __ptext13 00A0                        _T1GCONbits 020F  
                        __ptext30 0DAD                          __ptext22 0DA0                          __ptext14 0400  
                        __ptext31 0509                          __ptext23 0E34                          __ptext15 0DE1  
                        __ptext32 0F65                          __ptext24 0D7D                          __ptext16 0E08  
                        __ptext33 0E4C                          __ptext25 0DF4                          __ptext17 0D85  
                        __ptext34 0DCF                          __ptext26 0D76                          __ptext18 0005  
                        __ptext27 015F                          __ptext19 0D8D                          __ptext28 0287  
                        __ptext29 0F22                      _SSP1CON1bits 0190                      _SSP1CON2bits 0191  
                        _readTC74 0400          _I2C1_CallbackReturnReset 0000                          main@ALAF 00B0  
                        main@ALAH 00B2                          main@ALAL 00BA                          main@ALAM 00B4  
                        main@ALAS 00B6                          main@ALAT 00B8        ??_ADCC_GetSingleConversion 0072  
                        main@CLKM 00AE                          main@PMON 00BE                          _vfprintf 0E66  
                    _SSP1STATbits 018F                      _I2C1_DO_IDLE 0000                      _I2C1_DO_RCEN 0000  
                 main@time_buffer 00A0                   main@temperature 00C2                        _LCDsend2x4 0287  
                       sprintf@ap 0052                main@measure_buffer 00A8           ?_PIN_MANAGER_Initialize 0070  
         _I2C1_CallbackReturnStop 0000              _I2C1_DO_ADDRESS_NACK 0000                       ??_vfpfcnvrt 0036  
                   __pstringtext1 1000                     __pstringtext2 102F                     __pstringtext3 1037  
                   __pstringtext4 103B                     __pstringtext5 103D                     __pstringtext6 103F  
                   __pstringtext7 1041                     __pstringtext8 0000                          sprintf@f 0054  
                        sprintf@s 0053                        _SSP1DATPPS 0EC6                        _SSP1CLKPPS 0EC5  
  __end_of_PIN_MANAGER_Initialize 004D                 ??_ADCC_Initialize 0070                   _TMR1_Initialize 0E08  
