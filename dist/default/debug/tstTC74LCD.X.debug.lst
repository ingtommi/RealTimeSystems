

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Nov 25 00:07:28 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x7E,2
    59     0000                     
    60                           ; Version 2.35
    61                           ; Generated 13/04/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F18875 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95     0000                     	;# 
    96     0001                     	;# 
    97     0002                     	;# 
    98     0003                     	;# 
    99     0004                     	;# 
   100     0005                     	;# 
   101     0006                     	;# 
   102     0007                     	;# 
   103     0008                     	;# 
   104     0009                     	;# 
   105     000A                     	;# 
   106     000B                     	;# 
   107     000C                     	;# 
   108     000D                     	;# 
   109     000E                     	;# 
   110     000F                     	;# 
   111     0010                     	;# 
   112     0011                     	;# 
   113     0012                     	;# 
   114     0013                     	;# 
   115     0014                     	;# 
   116     0015                     	;# 
   117     0016                     	;# 
   118     0017                     	;# 
   119     0018                     	;# 
   120     0019                     	;# 
   121     001A                     	;# 
   122     001C                     	;# 
   123     001C                     	;# 
   124     001D                     	;# 
   125     001D                     	;# 
   126     001E                     	;# 
   127     001F                     	;# 
   128     008C                     	;# 
   129     008C                     	;# 
   130     008D                     	;# 
   131     008E                     	;# 
   132     008E                     	;# 
   133     008F                     	;# 
   134     0090                     	;# 
   135     0090                     	;# 
   136     0091                     	;# 
   137     0093                     	;# 
   138     0094                     	;# 
   139     0095                     	;# 
   140     0096                     	;# 
   141     0097                     	;# 
   142     0098                     	;# 
   143     0099                     	;# 
   144     009A                     	;# 
   145     009B                     	;# 
   146     009C                     	;# 
   147     009D                     	;# 
   148     009E                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010E                     	;# 
   153     010F                     	;# 
   154     0110                     	;# 
   155     0110                     	;# 
   156     0111                     	;# 
   157     0112                     	;# 
   158     0112                     	;# 
   159     0113                     	;# 
   160     0114                     	;# 
   161     0114                     	;# 
   162     0115                     	;# 
   163     0116                     	;# 
   164     0116                     	;# 
   165     0117                     	;# 
   166     0119                     	;# 
   167     0119                     	;# 
   168     0119                     	;# 
   169     011A                     	;# 
   170     011A                     	;# 
   171     011A                     	;# 
   172     011B                     	;# 
   173     011B                     	;# 
   174     011B                     	;# 
   175     011B                     	;# 
   176     011B                     	;# 
   177     011C                     	;# 
   178     011C                     	;# 
   179     011C                     	;# 
   180     011D                     	;# 
   181     011D                     	;# 
   182     011D                     	;# 
   183     011E                     	;# 
   184     011E                     	;# 
   185     011E                     	;# 
   186     011F                     	;# 
   187     011F                     	;# 
   188     011F                     	;# 
   189     011F                     	;# 
   190     011F                     	;# 
   191     018C                     	;# 
   192     018D                     	;# 
   193     018E                     	;# 
   194     018F                     	;# 
   195     0190                     	;# 
   196     0191                     	;# 
   197     0192                     	;# 
   198     0196                     	;# 
   199     0197                     	;# 
   200     0198                     	;# 
   201     0199                     	;# 
   202     019A                     	;# 
   203     019B                     	;# 
   204     019C                     	;# 
   205     020C                     	;# 
   206     020C                     	;# 
   207     020D                     	;# 
   208     020E                     	;# 
   209     020F                     	;# 
   210     020F                     	;# 
   211     0210                     	;# 
   212     0210                     	;# 
   213     0211                     	;# 
   214     0211                     	;# 
   215     0212                     	;# 
   216     0212                     	;# 
   217     0213                     	;# 
   218     0214                     	;# 
   219     0215                     	;# 
   220     0215                     	;# 
   221     0216                     	;# 
   222     0216                     	;# 
   223     0217                     	;# 
   224     0217                     	;# 
   225     0218                     	;# 
   226     0218                     	;# 
   227     0219                     	;# 
   228     021A                     	;# 
   229     021B                     	;# 
   230     021B                     	;# 
   231     021C                     	;# 
   232     021C                     	;# 
   233     021D                     	;# 
   234     021D                     	;# 
   235     021E                     	;# 
   236     021F                     	;# 
   237     028C                     	;# 
   238     028C                     	;# 
   239     028D                     	;# 
   240     028D                     	;# 
   241     028E                     	;# 
   242     028F                     	;# 
   243     0290                     	;# 
   244     0290                     	;# 
   245     0291                     	;# 
   246     0292                     	;# 
   247     0292                     	;# 
   248     0293                     	;# 
   249     0293                     	;# 
   250     0294                     	;# 
   251     0295                     	;# 
   252     0296                     	;# 
   253     0296                     	;# 
   254     0297                     	;# 
   255     0298                     	;# 
   256     0298                     	;# 
   257     0299                     	;# 
   258     0299                     	;# 
   259     029A                     	;# 
   260     029B                     	;# 
   261     029C                     	;# 
   262     029C                     	;# 
   263     029D                     	;# 
   264     030C                     	;# 
   265     030C                     	;# 
   266     030D                     	;# 
   267     030E                     	;# 
   268     030F                     	;# 
   269     0310                     	;# 
   270     0310                     	;# 
   271     0311                     	;# 
   272     0312                     	;# 
   273     0313                     	;# 
   274     0314                     	;# 
   275     0314                     	;# 
   276     0315                     	;# 
   277     0316                     	;# 
   278     0317                     	;# 
   279     0318                     	;# 
   280     0318                     	;# 
   281     0319                     	;# 
   282     031A                     	;# 
   283     031B                     	;# 
   284     031C                     	;# 
   285     031C                     	;# 
   286     031D                     	;# 
   287     031E                     	;# 
   288     031F                     	;# 
   289     038C                     	;# 
   290     038C                     	;# 
   291     038D                     	;# 
   292     038E                     	;# 
   293     0390                     	;# 
   294     0390                     	;# 
   295     0391                     	;# 
   296     0392                     	;# 
   297     040C                     	;# 
   298     040D                     	;# 
   299     040E                     	;# 
   300     040F                     	;# 
   301     0410                     	;# 
   302     0411                     	;# 
   303     0416                     	;# 
   304     0416                     	;# 
   305     0417                     	;# 
   306     0418                     	;# 
   307     0418                     	;# 
   308     0419                     	;# 
   309     041A                     	;# 
   310     041A                     	;# 
   311     041B                     	;# 
   312     041C                     	;# 
   313     041C                     	;# 
   314     041D                     	;# 
   315     041E                     	;# 
   316     041F                     	;# 
   317     048C                     	;# 
   318     048C                     	;# 
   319     048D                     	;# 
   320     048E                     	;# 
   321     048F                     	;# 
   322     048F                     	;# 
   323     0490                     	;# 
   324     0491                     	;# 
   325     0492                     	;# 
   326     0492                     	;# 
   327     0493                     	;# 
   328     0494                     	;# 
   329     0495                     	;# 
   330     0495                     	;# 
   331     0496                     	;# 
   332     0497                     	;# 
   333     0498                     	;# 
   334     0499                     	;# 
   335     049A                     	;# 
   336     049B                     	;# 
   337     049C                     	;# 
   338     049D                     	;# 
   339     050C                     	;# 
   340     050C                     	;# 
   341     050D                     	;# 
   342     050E                     	;# 
   343     050F                     	;# 
   344     050F                     	;# 
   345     0510                     	;# 
   346     0511                     	;# 
   347     0512                     	;# 
   348     0512                     	;# 
   349     0513                     	;# 
   350     0514                     	;# 
   351     0515                     	;# 
   352     0515                     	;# 
   353     0516                     	;# 
   354     0517                     	;# 
   355     0518                     	;# 
   356     0519                     	;# 
   357     051A                     	;# 
   358     051B                     	;# 
   359     051C                     	;# 
   360     051D                     	;# 
   361     058C                     	;# 
   362     058C                     	;# 
   363     058D                     	;# 
   364     058E                     	;# 
   365     058F                     	;# 
   366     058F                     	;# 
   367     0590                     	;# 
   368     0591                     	;# 
   369     0592                     	;# 
   370     0593                     	;# 
   371     060C                     	;# 
   372     060D                     	;# 
   373     060E                     	;# 
   374     060F                     	;# 
   375     0610                     	;# 
   376     0611                     	;# 
   377     0612                     	;# 
   378     0613                     	;# 
   379     0614                     	;# 
   380     0616                     	;# 
   381     0617                     	;# 
   382     0618                     	;# 
   383     0619                     	;# 
   384     061A                     	;# 
   385     061B                     	;# 
   386     061C                     	;# 
   387     061D                     	;# 
   388     061E                     	;# 
   389     068C                     	;# 
   390     068D                     	;# 
   391     068E                     	;# 
   392     068F                     	;# 
   393     0690                     	;# 
   394     0691                     	;# 
   395     0692                     	;# 
   396     0693                     	;# 
   397     0694                     	;# 
   398     070C                     	;# 
   399     070D                     	;# 
   400     070E                     	;# 
   401     070F                     	;# 
   402     0710                     	;# 
   403     0711                     	;# 
   404     0712                     	;# 
   405     0713                     	;# 
   406     0714                     	;# 
   407     0716                     	;# 
   408     0717                     	;# 
   409     0718                     	;# 
   410     0719                     	;# 
   411     071A                     	;# 
   412     071B                     	;# 
   413     071C                     	;# 
   414     071D                     	;# 
   415     071E                     	;# 
   416     0796                     	;# 
   417     0797                     	;# 
   418     0798                     	;# 
   419     0799                     	;# 
   420     079A                     	;# 
   421     079B                     	;# 
   422     080C                     	;# 
   423     080D                     	;# 
   424     080E                     	;# 
   425     080F                     	;# 
   426     0810                     	;# 
   427     0811                     	;# 
   428     0812                     	;# 
   429     0813                     	;# 
   430     0814                     	;# 
   431     081A                     	;# 
   432     081B                     	;# 
   433     081C                     	;# 
   434     081D                     	;# 
   435     081E                     	;# 
   436     081F                     	;# 
   437     088C                     	;# 
   438     088D                     	;# 
   439     088E                     	;# 
   440     088F                     	;# 
   441     0890                     	;# 
   442     0891                     	;# 
   443     0892                     	;# 
   444     0893                     	;# 
   445     0895                     	;# 
   446     0896                     	;# 
   447     0897                     	;# 
   448     0898                     	;# 
   449     0899                     	;# 
   450     089A                     	;# 
   451     089B                     	;# 
   452     090C                     	;# 
   453     090E                     	;# 
   454     090F                     	;# 
   455     091F                     	;# 
   456     091F                     	;# 
   457     098F                     	;# 
   458     098F                     	;# 
   459     0990                     	;# 
   460     0991                     	;# 
   461     0992                     	;# 
   462     0993                     	;# 
   463     0994                     	;# 
   464     0995                     	;# 
   465     0996                     	;# 
   466     0997                     	;# 
   467     0E0F                     	;# 
   468     0E10                     	;# 
   469     0E11                     	;# 
   470     0E12                     	;# 
   471     0E13                     	;# 
   472     0E14                     	;# 
   473     0E15                     	;# 
   474     0E16                     	;# 
   475     0E17                     	;# 
   476     0E18                     	;# 
   477     0E19                     	;# 
   478     0E1A                     	;# 
   479     0E1B                     	;# 
   480     0E1C                     	;# 
   481     0E1D                     	;# 
   482     0E1E                     	;# 
   483     0E1F                     	;# 
   484     0E20                     	;# 
   485     0E21                     	;# 
   486     0E22                     	;# 
   487     0E23                     	;# 
   488     0E24                     	;# 
   489     0E25                     	;# 
   490     0E26                     	;# 
   491     0E27                     	;# 
   492     0E28                     	;# 
   493     0E29                     	;# 
   494     0E2A                     	;# 
   495     0E2B                     	;# 
   496     0E2C                     	;# 
   497     0E2D                     	;# 
   498     0E2E                     	;# 
   499     0E2F                     	;# 
   500     0E30                     	;# 
   501     0E31                     	;# 
   502     0E32                     	;# 
   503     0E33                     	;# 
   504     0E34                     	;# 
   505     0E35                     	;# 
   506     0E36                     	;# 
   507     0E37                     	;# 
   508     0E8F                     	;# 
   509     0E90                     	;# 
   510     0E91                     	;# 
   511     0E92                     	;# 
   512     0E93                     	;# 
   513     0E94                     	;# 
   514     0E95                     	;# 
   515     0E96                     	;# 
   516     0E97                     	;# 
   517     0E9C                     	;# 
   518     0E9D                     	;# 
   519     0E9E                     	;# 
   520     0EA1                     	;# 
   521     0EA2                     	;# 
   522     0EA3                     	;# 
   523     0EA4                     	;# 
   524     0EA5                     	;# 
   525     0EA9                     	;# 
   526     0EAA                     	;# 
   527     0EAB                     	;# 
   528     0EAC                     	;# 
   529     0EB1                     	;# 
   530     0EB2                     	;# 
   531     0EB3                     	;# 
   532     0EB8                     	;# 
   533     0EB9                     	;# 
   534     0EBA                     	;# 
   535     0EBB                     	;# 
   536     0EBC                     	;# 
   537     0EBD                     	;# 
   538     0EBE                     	;# 
   539     0EC3                     	;# 
   540     0EC5                     	;# 
   541     0EC6                     	;# 
   542     0EC7                     	;# 
   543     0EC8                     	;# 
   544     0EC9                     	;# 
   545     0ECA                     	;# 
   546     0ECB                     	;# 
   547     0ECC                     	;# 
   548     0F10                     	;# 
   549     0F11                     	;# 
   550     0F12                     	;# 
   551     0F13                     	;# 
   552     0F14                     	;# 
   553     0F15                     	;# 
   554     0F16                     	;# 
   555     0F17                     	;# 
   556     0F18                     	;# 
   557     0F19                     	;# 
   558     0F1A                     	;# 
   559     0F1B                     	;# 
   560     0F1C                     	;# 
   561     0F1D                     	;# 
   562     0F1E                     	;# 
   563     0F1F                     	;# 
   564     0F20                     	;# 
   565     0F21                     	;# 
   566     0F22                     	;# 
   567     0F23                     	;# 
   568     0F24                     	;# 
   569     0F25                     	;# 
   570     0F26                     	;# 
   571     0F27                     	;# 
   572     0F28                     	;# 
   573     0F29                     	;# 
   574     0F2A                     	;# 
   575     0F2B                     	;# 
   576     0F2C                     	;# 
   577     0F2D                     	;# 
   578     0F2E                     	;# 
   579     0F2F                     	;# 
   580     0F30                     	;# 
   581     0F31                     	;# 
   582     0F32                     	;# 
   583     0F38                     	;# 
   584     0F39                     	;# 
   585     0F3A                     	;# 
   586     0F3B                     	;# 
   587     0F3C                     	;# 
   588     0F3D                     	;# 
   589     0F3E                     	;# 
   590     0F3F                     	;# 
   591     0F40                     	;# 
   592     0F41                     	;# 
   593     0F43                     	;# 
   594     0F44                     	;# 
   595     0F45                     	;# 
   596     0F46                     	;# 
   597     0F47                     	;# 
   598     0F48                     	;# 
   599     0F49                     	;# 
   600     0F4A                     	;# 
   601     0F4B                     	;# 
   602     0F4C                     	;# 
   603     0F4E                     	;# 
   604     0F4F                     	;# 
   605     0F50                     	;# 
   606     0F51                     	;# 
   607     0F52                     	;# 
   608     0F53                     	;# 
   609     0F54                     	;# 
   610     0F55                     	;# 
   611     0F56                     	;# 
   612     0F57                     	;# 
   613     0F59                     	;# 
   614     0F5A                     	;# 
   615     0F5B                     	;# 
   616     0F5C                     	;# 
   617     0F5D                     	;# 
   618     0F61                     	;# 
   619     0F62                     	;# 
   620     0F64                     	;# 
   621     0F65                     	;# 
   622     0F66                     	;# 
   623     0F67                     	;# 
   624     0F68                     	;# 
   625     0F69                     	;# 
   626     0F6A                     	;# 
   627     0F6B                     	;# 
   628     0F6C                     	;# 
   629     0F6D                     	;# 
   630     0FE4                     	;# 
   631     0FE5                     	;# 
   632     0FE6                     	;# 
   633     0FE7                     	;# 
   634     0FE8                     	;# 
   635     0FE9                     	;# 
   636     0FEA                     	;# 
   637     0FEB                     	;# 
   638     0FED                     	;# 
   639     0FEE                     	;# 
   640     0FEF                     	;# 
   641     0000                     	;# 
   642     0001                     	;# 
   643     0002                     	;# 
   644     0003                     	;# 
   645     0004                     	;# 
   646     0005                     	;# 
   647     0006                     	;# 
   648     0007                     	;# 
   649     0008                     	;# 
   650     0009                     	;# 
   651     000A                     	;# 
   652     000B                     	;# 
   653     000C                     	;# 
   654     000D                     	;# 
   655     000E                     	;# 
   656     000F                     	;# 
   657     0010                     	;# 
   658     0011                     	;# 
   659     0012                     	;# 
   660     0013                     	;# 
   661     0014                     	;# 
   662     0015                     	;# 
   663     0016                     	;# 
   664     0017                     	;# 
   665     0018                     	;# 
   666     0019                     	;# 
   667     001A                     	;# 
   668     001C                     	;# 
   669     001C                     	;# 
   670     001D                     	;# 
   671     001D                     	;# 
   672     001E                     	;# 
   673     001F                     	;# 
   674     008C                     	;# 
   675     008C                     	;# 
   676     008D                     	;# 
   677     008E                     	;# 
   678     008E                     	;# 
   679     008F                     	;# 
   680     0090                     	;# 
   681     0090                     	;# 
   682     0091                     	;# 
   683     0093                     	;# 
   684     0094                     	;# 
   685     0095                     	;# 
   686     0096                     	;# 
   687     0097                     	;# 
   688     0098                     	;# 
   689     0099                     	;# 
   690     009A                     	;# 
   691     009B                     	;# 
   692     009C                     	;# 
   693     009D                     	;# 
   694     009E                     	;# 
   695     010C                     	;# 
   696     010D                     	;# 
   697     010E                     	;# 
   698     010E                     	;# 
   699     010F                     	;# 
   700     0110                     	;# 
   701     0110                     	;# 
   702     0111                     	;# 
   703     0112                     	;# 
   704     0112                     	;# 
   705     0113                     	;# 
   706     0114                     	;# 
   707     0114                     	;# 
   708     0115                     	;# 
   709     0116                     	;# 
   710     0116                     	;# 
   711     0117                     	;# 
   712     0119                     	;# 
   713     0119                     	;# 
   714     0119                     	;# 
   715     011A                     	;# 
   716     011A                     	;# 
   717     011A                     	;# 
   718     011B                     	;# 
   719     011B                     	;# 
   720     011B                     	;# 
   721     011B                     	;# 
   722     011B                     	;# 
   723     011C                     	;# 
   724     011C                     	;# 
   725     011C                     	;# 
   726     011D                     	;# 
   727     011D                     	;# 
   728     011D                     	;# 
   729     011E                     	;# 
   730     011E                     	;# 
   731     011E                     	;# 
   732     011F                     	;# 
   733     011F                     	;# 
   734     011F                     	;# 
   735     011F                     	;# 
   736     011F                     	;# 
   737     018C                     	;# 
   738     018D                     	;# 
   739     018E                     	;# 
   740     018F                     	;# 
   741     0190                     	;# 
   742     0191                     	;# 
   743     0192                     	;# 
   744     0196                     	;# 
   745     0197                     	;# 
   746     0198                     	;# 
   747     0199                     	;# 
   748     019A                     	;# 
   749     019B                     	;# 
   750     019C                     	;# 
   751     020C                     	;# 
   752     020C                     	;# 
   753     020D                     	;# 
   754     020E                     	;# 
   755     020F                     	;# 
   756     020F                     	;# 
   757     0210                     	;# 
   758     0210                     	;# 
   759     0211                     	;# 
   760     0211                     	;# 
   761     0212                     	;# 
   762     0212                     	;# 
   763     0213                     	;# 
   764     0214                     	;# 
   765     0215                     	;# 
   766     0215                     	;# 
   767     0216                     	;# 
   768     0216                     	;# 
   769     0217                     	;# 
   770     0217                     	;# 
   771     0218                     	;# 
   772     0218                     	;# 
   773     0219                     	;# 
   774     021A                     	;# 
   775     021B                     	;# 
   776     021B                     	;# 
   777     021C                     	;# 
   778     021C                     	;# 
   779     021D                     	;# 
   780     021D                     	;# 
   781     021E                     	;# 
   782     021F                     	;# 
   783     028C                     	;# 
   784     028C                     	;# 
   785     028D                     	;# 
   786     028D                     	;# 
   787     028E                     	;# 
   788     028F                     	;# 
   789     0290                     	;# 
   790     0290                     	;# 
   791     0291                     	;# 
   792     0292                     	;# 
   793     0292                     	;# 
   794     0293                     	;# 
   795     0293                     	;# 
   796     0294                     	;# 
   797     0295                     	;# 
   798     0296                     	;# 
   799     0296                     	;# 
   800     0297                     	;# 
   801     0298                     	;# 
   802     0298                     	;# 
   803     0299                     	;# 
   804     0299                     	;# 
   805     029A                     	;# 
   806     029B                     	;# 
   807     029C                     	;# 
   808     029C                     	;# 
   809     029D                     	;# 
   810     030C                     	;# 
   811     030C                     	;# 
   812     030D                     	;# 
   813     030E                     	;# 
   814     030F                     	;# 
   815     0310                     	;# 
   816     0310                     	;# 
   817     0311                     	;# 
   818     0312                     	;# 
   819     0313                     	;# 
   820     0314                     	;# 
   821     0314                     	;# 
   822     0315                     	;# 
   823     0316                     	;# 
   824     0317                     	;# 
   825     0318                     	;# 
   826     0318                     	;# 
   827     0319                     	;# 
   828     031A                     	;# 
   829     031B                     	;# 
   830     031C                     	;# 
   831     031C                     	;# 
   832     031D                     	;# 
   833     031E                     	;# 
   834     031F                     	;# 
   835     038C                     	;# 
   836     038C                     	;# 
   837     038D                     	;# 
   838     038E                     	;# 
   839     0390                     	;# 
   840     0390                     	;# 
   841     0391                     	;# 
   842     0392                     	;# 
   843     040C                     	;# 
   844     040D                     	;# 
   845     040E                     	;# 
   846     040F                     	;# 
   847     0410                     	;# 
   848     0411                     	;# 
   849     0416                     	;# 
   850     0416                     	;# 
   851     0417                     	;# 
   852     0418                     	;# 
   853     0418                     	;# 
   854     0419                     	;# 
   855     041A                     	;# 
   856     041A                     	;# 
   857     041B                     	;# 
   858     041C                     	;# 
   859     041C                     	;# 
   860     041D                     	;# 
   861     041E                     	;# 
   862     041F                     	;# 
   863     048C                     	;# 
   864     048C                     	;# 
   865     048D                     	;# 
   866     048E                     	;# 
   867     048F                     	;# 
   868     048F                     	;# 
   869     0490                     	;# 
   870     0491                     	;# 
   871     0492                     	;# 
   872     0492                     	;# 
   873     0493                     	;# 
   874     0494                     	;# 
   875     0495                     	;# 
   876     0495                     	;# 
   877     0496                     	;# 
   878     0497                     	;# 
   879     0498                     	;# 
   880     0499                     	;# 
   881     049A                     	;# 
   882     049B                     	;# 
   883     049C                     	;# 
   884     049D                     	;# 
   885     050C                     	;# 
   886     050C                     	;# 
   887     050D                     	;# 
   888     050E                     	;# 
   889     050F                     	;# 
   890     050F                     	;# 
   891     0510                     	;# 
   892     0511                     	;# 
   893     0512                     	;# 
   894     0512                     	;# 
   895     0513                     	;# 
   896     0514                     	;# 
   897     0515                     	;# 
   898     0515                     	;# 
   899     0516                     	;# 
   900     0517                     	;# 
   901     0518                     	;# 
   902     0519                     	;# 
   903     051A                     	;# 
   904     051B                     	;# 
   905     051C                     	;# 
   906     051D                     	;# 
   907     058C                     	;# 
   908     058C                     	;# 
   909     058D                     	;# 
   910     058E                     	;# 
   911     058F                     	;# 
   912     058F                     	;# 
   913     0590                     	;# 
   914     0591                     	;# 
   915     0592                     	;# 
   916     0593                     	;# 
   917     060C                     	;# 
   918     060D                     	;# 
   919     060E                     	;# 
   920     060F                     	;# 
   921     0610                     	;# 
   922     0611                     	;# 
   923     0612                     	;# 
   924     0613                     	;# 
   925     0614                     	;# 
   926     0616                     	;# 
   927     0617                     	;# 
   928     0618                     	;# 
   929     0619                     	;# 
   930     061A                     	;# 
   931     061B                     	;# 
   932     061C                     	;# 
   933     061D                     	;# 
   934     061E                     	;# 
   935     068C                     	;# 
   936     068D                     	;# 
   937     068E                     	;# 
   938     068F                     	;# 
   939     0690                     	;# 
   940     0691                     	;# 
   941     0692                     	;# 
   942     0693                     	;# 
   943     0694                     	;# 
   944     070C                     	;# 
   945     070D                     	;# 
   946     070E                     	;# 
   947     070F                     	;# 
   948     0710                     	;# 
   949     0711                     	;# 
   950     0712                     	;# 
   951     0713                     	;# 
   952     0714                     	;# 
   953     0716                     	;# 
   954     0717                     	;# 
   955     0718                     	;# 
   956     0719                     	;# 
   957     071A                     	;# 
   958     071B                     	;# 
   959     071C                     	;# 
   960     071D                     	;# 
   961     071E                     	;# 
   962     0796                     	;# 
   963     0797                     	;# 
   964     0798                     	;# 
   965     0799                     	;# 
   966     079A                     	;# 
   967     079B                     	;# 
   968     080C                     	;# 
   969     080D                     	;# 
   970     080E                     	;# 
   971     080F                     	;# 
   972     0810                     	;# 
   973     0811                     	;# 
   974     0812                     	;# 
   975     0813                     	;# 
   976     0814                     	;# 
   977     081A                     	;# 
   978     081B                     	;# 
   979     081C                     	;# 
   980     081D                     	;# 
   981     081E                     	;# 
   982     081F                     	;# 
   983     088C                     	;# 
   984     088D                     	;# 
   985     088E                     	;# 
   986     088F                     	;# 
   987     0890                     	;# 
   988     0891                     	;# 
   989     0892                     	;# 
   990     0893                     	;# 
   991     0895                     	;# 
   992     0896                     	;# 
   993     0897                     	;# 
   994     0898                     	;# 
   995     0899                     	;# 
   996     089A                     	;# 
   997     089B                     	;# 
   998     090C                     	;# 
   999     090E                     	;# 
  1000     090F                     	;# 
  1001     091F                     	;# 
  1002     091F                     	;# 
  1003     098F                     	;# 
  1004     098F                     	;# 
  1005     0990                     	;# 
  1006     0991                     	;# 
  1007     0992                     	;# 
  1008     0993                     	;# 
  1009     0994                     	;# 
  1010     0995                     	;# 
  1011     0996                     	;# 
  1012     0997                     	;# 
  1013     0E0F                     	;# 
  1014     0E10                     	;# 
  1015     0E11                     	;# 
  1016     0E12                     	;# 
  1017     0E13                     	;# 
  1018     0E14                     	;# 
  1019     0E15                     	;# 
  1020     0E16                     	;# 
  1021     0E17                     	;# 
  1022     0E18                     	;# 
  1023     0E19                     	;# 
  1024     0E1A                     	;# 
  1025     0E1B                     	;# 
  1026     0E1C                     	;# 
  1027     0E1D                     	;# 
  1028     0E1E                     	;# 
  1029     0E1F                     	;# 
  1030     0E20                     	;# 
  1031     0E21                     	;# 
  1032     0E22                     	;# 
  1033     0E23                     	;# 
  1034     0E24                     	;# 
  1035     0E25                     	;# 
  1036     0E26                     	;# 
  1037     0E27                     	;# 
  1038     0E28                     	;# 
  1039     0E29                     	;# 
  1040     0E2A                     	;# 
  1041     0E2B                     	;# 
  1042     0E2C                     	;# 
  1043     0E2D                     	;# 
  1044     0E2E                     	;# 
  1045     0E2F                     	;# 
  1046     0E30                     	;# 
  1047     0E31                     	;# 
  1048     0E32                     	;# 
  1049     0E33                     	;# 
  1050     0E34                     	;# 
  1051     0E35                     	;# 
  1052     0E36                     	;# 
  1053     0E37                     	;# 
  1054     0E8F                     	;# 
  1055     0E90                     	;# 
  1056     0E91                     	;# 
  1057     0E92                     	;# 
  1058     0E93                     	;# 
  1059     0E94                     	;# 
  1060     0E95                     	;# 
  1061     0E96                     	;# 
  1062     0E97                     	;# 
  1063     0E9C                     	;# 
  1064     0E9D                     	;# 
  1065     0E9E                     	;# 
  1066     0EA1                     	;# 
  1067     0EA2                     	;# 
  1068     0EA3                     	;# 
  1069     0EA4                     	;# 
  1070     0EA5                     	;# 
  1071     0EA9                     	;# 
  1072     0EAA                     	;# 
  1073     0EAB                     	;# 
  1074     0EAC                     	;# 
  1075     0EB1                     	;# 
  1076     0EB2                     	;# 
  1077     0EB3                     	;# 
  1078     0EB8                     	;# 
  1079     0EB9                     	;# 
  1080     0EBA                     	;# 
  1081     0EBB                     	;# 
  1082     0EBC                     	;# 
  1083     0EBD                     	;# 
  1084     0EBE                     	;# 
  1085     0EC3                     	;# 
  1086     0EC5                     	;# 
  1087     0EC6                     	;# 
  1088     0EC7                     	;# 
  1089     0EC8                     	;# 
  1090     0EC9                     	;# 
  1091     0ECA                     	;# 
  1092     0ECB                     	;# 
  1093     0ECC                     	;# 
  1094     0F10                     	;# 
  1095     0F11                     	;# 
  1096     0F12                     	;# 
  1097     0F13                     	;# 
  1098     0F14                     	;# 
  1099     0F15                     	;# 
  1100     0F16                     	;# 
  1101     0F17                     	;# 
  1102     0F18                     	;# 
  1103     0F19                     	;# 
  1104     0F1A                     	;# 
  1105     0F1B                     	;# 
  1106     0F1C                     	;# 
  1107     0F1D                     	;# 
  1108     0F1E                     	;# 
  1109     0F1F                     	;# 
  1110     0F20                     	;# 
  1111     0F21                     	;# 
  1112     0F22                     	;# 
  1113     0F23                     	;# 
  1114     0F24                     	;# 
  1115     0F25                     	;# 
  1116     0F26                     	;# 
  1117     0F27                     	;# 
  1118     0F28                     	;# 
  1119     0F29                     	;# 
  1120     0F2A                     	;# 
  1121     0F2B                     	;# 
  1122     0F2C                     	;# 
  1123     0F2D                     	;# 
  1124     0F2E                     	;# 
  1125     0F2F                     	;# 
  1126     0F30                     	;# 
  1127     0F31                     	;# 
  1128     0F32                     	;# 
  1129     0F38                     	;# 
  1130     0F39                     	;# 
  1131     0F3A                     	;# 
  1132     0F3B                     	;# 
  1133     0F3C                     	;# 
  1134     0F3D                     	;# 
  1135     0F3E                     	;# 
  1136     0F3F                     	;# 
  1137     0F40                     	;# 
  1138     0F41                     	;# 
  1139     0F43                     	;# 
  1140     0F44                     	;# 
  1141     0F45                     	;# 
  1142     0F46                     	;# 
  1143     0F47                     	;# 
  1144     0F48                     	;# 
  1145     0F49                     	;# 
  1146     0F4A                     	;# 
  1147     0F4B                     	;# 
  1148     0F4C                     	;# 
  1149     0F4E                     	;# 
  1150     0F4F                     	;# 
  1151     0F50                     	;# 
  1152     0F51                     	;# 
  1153     0F52                     	;# 
  1154     0F53                     	;# 
  1155     0F54                     	;# 
  1156     0F55                     	;# 
  1157     0F56                     	;# 
  1158     0F57                     	;# 
  1159     0F59                     	;# 
  1160     0F5A                     	;# 
  1161     0F5B                     	;# 
  1162     0F5C                     	;# 
  1163     0F5D                     	;# 
  1164     0F61                     	;# 
  1165     0F62                     	;# 
  1166     0F64                     	;# 
  1167     0F65                     	;# 
  1168     0F66                     	;# 
  1169     0F67                     	;# 
  1170     0F68                     	;# 
  1171     0F69                     	;# 
  1172     0F6A                     	;# 
  1173     0F6B                     	;# 
  1174     0F6C                     	;# 
  1175     0F6D                     	;# 
  1176     0FE4                     	;# 
  1177     0FE5                     	;# 
  1178     0FE6                     	;# 
  1179     0FE7                     	;# 
  1180     0FE8                     	;# 
  1181     0FE9                     	;# 
  1182     0FEA                     	;# 
  1183     0FEB                     	;# 
  1184     0FED                     	;# 
  1185     0FEE                     	;# 
  1186     0FEF                     	;# 
  1187     0000                     	;# 
  1188     0001                     	;# 
  1189     0002                     	;# 
  1190     0003                     	;# 
  1191     0004                     	;# 
  1192     0005                     	;# 
  1193     0006                     	;# 
  1194     0007                     	;# 
  1195     0008                     	;# 
  1196     0009                     	;# 
  1197     000A                     	;# 
  1198     000B                     	;# 
  1199     000C                     	;# 
  1200     000D                     	;# 
  1201     000E                     	;# 
  1202     000F                     	;# 
  1203     0010                     	;# 
  1204     0011                     	;# 
  1205     0012                     	;# 
  1206     0013                     	;# 
  1207     0014                     	;# 
  1208     0015                     	;# 
  1209     0016                     	;# 
  1210     0017                     	;# 
  1211     0018                     	;# 
  1212     0019                     	;# 
  1213     001A                     	;# 
  1214     001C                     	;# 
  1215     001C                     	;# 
  1216     001D                     	;# 
  1217     001D                     	;# 
  1218     001E                     	;# 
  1219     001F                     	;# 
  1220     008C                     	;# 
  1221     008C                     	;# 
  1222     008D                     	;# 
  1223     008E                     	;# 
  1224     008E                     	;# 
  1225     008F                     	;# 
  1226     0090                     	;# 
  1227     0090                     	;# 
  1228     0091                     	;# 
  1229     0093                     	;# 
  1230     0094                     	;# 
  1231     0095                     	;# 
  1232     0096                     	;# 
  1233     0097                     	;# 
  1234     0098                     	;# 
  1235     0099                     	;# 
  1236     009A                     	;# 
  1237     009B                     	;# 
  1238     009C                     	;# 
  1239     009D                     	;# 
  1240     009E                     	;# 
  1241     010C                     	;# 
  1242     010D                     	;# 
  1243     010E                     	;# 
  1244     010E                     	;# 
  1245     010F                     	;# 
  1246     0110                     	;# 
  1247     0110                     	;# 
  1248     0111                     	;# 
  1249     0112                     	;# 
  1250     0112                     	;# 
  1251     0113                     	;# 
  1252     0114                     	;# 
  1253     0114                     	;# 
  1254     0115                     	;# 
  1255     0116                     	;# 
  1256     0116                     	;# 
  1257     0117                     	;# 
  1258     0119                     	;# 
  1259     0119                     	;# 
  1260     0119                     	;# 
  1261     011A                     	;# 
  1262     011A                     	;# 
  1263     011A                     	;# 
  1264     011B                     	;# 
  1265     011B                     	;# 
  1266     011B                     	;# 
  1267     011B                     	;# 
  1268     011B                     	;# 
  1269     011C                     	;# 
  1270     011C                     	;# 
  1271     011C                     	;# 
  1272     011D                     	;# 
  1273     011D                     	;# 
  1274     011D                     	;# 
  1275     011E                     	;# 
  1276     011E                     	;# 
  1277     011E                     	;# 
  1278     011F                     	;# 
  1279     011F                     	;# 
  1280     011F                     	;# 
  1281     011F                     	;# 
  1282     011F                     	;# 
  1283     018C                     	;# 
  1284     018D                     	;# 
  1285     018E                     	;# 
  1286     018F                     	;# 
  1287     0190                     	;# 
  1288     0191                     	;# 
  1289     0192                     	;# 
  1290     0196                     	;# 
  1291     0197                     	;# 
  1292     0198                     	;# 
  1293     0199                     	;# 
  1294     019A                     	;# 
  1295     019B                     	;# 
  1296     019C                     	;# 
  1297     020C                     	;# 
  1298     020C                     	;# 
  1299     020D                     	;# 
  1300     020E                     	;# 
  1301     020F                     	;# 
  1302     020F                     	;# 
  1303     0210                     	;# 
  1304     0210                     	;# 
  1305     0211                     	;# 
  1306     0211                     	;# 
  1307     0212                     	;# 
  1308     0212                     	;# 
  1309     0213                     	;# 
  1310     0214                     	;# 
  1311     0215                     	;# 
  1312     0215                     	;# 
  1313     0216                     	;# 
  1314     0216                     	;# 
  1315     0217                     	;# 
  1316     0217                     	;# 
  1317     0218                     	;# 
  1318     0218                     	;# 
  1319     0219                     	;# 
  1320     021A                     	;# 
  1321     021B                     	;# 
  1322     021B                     	;# 
  1323     021C                     	;# 
  1324     021C                     	;# 
  1325     021D                     	;# 
  1326     021D                     	;# 
  1327     021E                     	;# 
  1328     021F                     	;# 
  1329     028C                     	;# 
  1330     028C                     	;# 
  1331     028D                     	;# 
  1332     028D                     	;# 
  1333     028E                     	;# 
  1334     028F                     	;# 
  1335     0290                     	;# 
  1336     0290                     	;# 
  1337     0291                     	;# 
  1338     0292                     	;# 
  1339     0292                     	;# 
  1340     0293                     	;# 
  1341     0293                     	;# 
  1342     0294                     	;# 
  1343     0295                     	;# 
  1344     0296                     	;# 
  1345     0296                     	;# 
  1346     0297                     	;# 
  1347     0298                     	;# 
  1348     0298                     	;# 
  1349     0299                     	;# 
  1350     0299                     	;# 
  1351     029A                     	;# 
  1352     029B                     	;# 
  1353     029C                     	;# 
  1354     029C                     	;# 
  1355     029D                     	;# 
  1356     030C                     	;# 
  1357     030C                     	;# 
  1358     030D                     	;# 
  1359     030E                     	;# 
  1360     030F                     	;# 
  1361     0310                     	;# 
  1362     0310                     	;# 
  1363     0311                     	;# 
  1364     0312                     	;# 
  1365     0313                     	;# 
  1366     0314                     	;# 
  1367     0314                     	;# 
  1368     0315                     	;# 
  1369     0316                     	;# 
  1370     0317                     	;# 
  1371     0318                     	;# 
  1372     0318                     	;# 
  1373     0319                     	;# 
  1374     031A                     	;# 
  1375     031B                     	;# 
  1376     031C                     	;# 
  1377     031C                     	;# 
  1378     031D                     	;# 
  1379     031E                     	;# 
  1380     031F                     	;# 
  1381     038C                     	;# 
  1382     038C                     	;# 
  1383     038D                     	;# 
  1384     038E                     	;# 
  1385     0390                     	;# 
  1386     0390                     	;# 
  1387     0391                     	;# 
  1388     0392                     	;# 
  1389     040C                     	;# 
  1390     040D                     	;# 
  1391     040E                     	;# 
  1392     040F                     	;# 
  1393     0410                     	;# 
  1394     0411                     	;# 
  1395     0416                     	;# 
  1396     0416                     	;# 
  1397     0417                     	;# 
  1398     0418                     	;# 
  1399     0418                     	;# 
  1400     0419                     	;# 
  1401     041A                     	;# 
  1402     041A                     	;# 
  1403     041B                     	;# 
  1404     041C                     	;# 
  1405     041C                     	;# 
  1406     041D                     	;# 
  1407     041E                     	;# 
  1408     041F                     	;# 
  1409     048C                     	;# 
  1410     048C                     	;# 
  1411     048D                     	;# 
  1412     048E                     	;# 
  1413     048F                     	;# 
  1414     048F                     	;# 
  1415     0490                     	;# 
  1416     0491                     	;# 
  1417     0492                     	;# 
  1418     0492                     	;# 
  1419     0493                     	;# 
  1420     0494                     	;# 
  1421     0495                     	;# 
  1422     0495                     	;# 
  1423     0496                     	;# 
  1424     0497                     	;# 
  1425     0498                     	;# 
  1426     0499                     	;# 
  1427     049A                     	;# 
  1428     049B                     	;# 
  1429     049C                     	;# 
  1430     049D                     	;# 
  1431     050C                     	;# 
  1432     050C                     	;# 
  1433     050D                     	;# 
  1434     050E                     	;# 
  1435     050F                     	;# 
  1436     050F                     	;# 
  1437     0510                     	;# 
  1438     0511                     	;# 
  1439     0512                     	;# 
  1440     0512                     	;# 
  1441     0513                     	;# 
  1442     0514                     	;# 
  1443     0515                     	;# 
  1444     0515                     	;# 
  1445     0516                     	;# 
  1446     0517                     	;# 
  1447     0518                     	;# 
  1448     0519                     	;# 
  1449     051A                     	;# 
  1450     051B                     	;# 
  1451     051C                     	;# 
  1452     051D                     	;# 
  1453     058C                     	;# 
  1454     058C                     	;# 
  1455     058D                     	;# 
  1456     058E                     	;# 
  1457     058F                     	;# 
  1458     058F                     	;# 
  1459     0590                     	;# 
  1460     0591                     	;# 
  1461     0592                     	;# 
  1462     0593                     	;# 
  1463     060C                     	;# 
  1464     060D                     	;# 
  1465     060E                     	;# 
  1466     060F                     	;# 
  1467     0610                     	;# 
  1468     0611                     	;# 
  1469     0612                     	;# 
  1470     0613                     	;# 
  1471     0614                     	;# 
  1472     0616                     	;# 
  1473     0617                     	;# 
  1474     0618                     	;# 
  1475     0619                     	;# 
  1476     061A                     	;# 
  1477     061B                     	;# 
  1478     061C                     	;# 
  1479     061D                     	;# 
  1480     061E                     	;# 
  1481     068C                     	;# 
  1482     068D                     	;# 
  1483     068E                     	;# 
  1484     068F                     	;# 
  1485     0690                     	;# 
  1486     0691                     	;# 
  1487     0692                     	;# 
  1488     0693                     	;# 
  1489     0694                     	;# 
  1490     070C                     	;# 
  1491     070D                     	;# 
  1492     070E                     	;# 
  1493     070F                     	;# 
  1494     0710                     	;# 
  1495     0711                     	;# 
  1496     0712                     	;# 
  1497     0713                     	;# 
  1498     0714                     	;# 
  1499     0716                     	;# 
  1500     0717                     	;# 
  1501     0718                     	;# 
  1502     0719                     	;# 
  1503     071A                     	;# 
  1504     071B                     	;# 
  1505     071C                     	;# 
  1506     071D                     	;# 
  1507     071E                     	;# 
  1508     0796                     	;# 
  1509     0797                     	;# 
  1510     0798                     	;# 
  1511     0799                     	;# 
  1512     079A                     	;# 
  1513     079B                     	;# 
  1514     080C                     	;# 
  1515     080D                     	;# 
  1516     080E                     	;# 
  1517     080F                     	;# 
  1518     0810                     	;# 
  1519     0811                     	;# 
  1520     0812                     	;# 
  1521     0813                     	;# 
  1522     0814                     	;# 
  1523     081A                     	;# 
  1524     081B                     	;# 
  1525     081C                     	;# 
  1526     081D                     	;# 
  1527     081E                     	;# 
  1528     081F                     	;# 
  1529     088C                     	;# 
  1530     088D                     	;# 
  1531     088E                     	;# 
  1532     088F                     	;# 
  1533     0890                     	;# 
  1534     0891                     	;# 
  1535     0892                     	;# 
  1536     0893                     	;# 
  1537     0895                     	;# 
  1538     0896                     	;# 
  1539     0897                     	;# 
  1540     0898                     	;# 
  1541     0899                     	;# 
  1542     089A                     	;# 
  1543     089B                     	;# 
  1544     090C                     	;# 
  1545     090E                     	;# 
  1546     090F                     	;# 
  1547     091F                     	;# 
  1548     091F                     	;# 
  1549     098F                     	;# 
  1550     098F                     	;# 
  1551     0990                     	;# 
  1552     0991                     	;# 
  1553     0992                     	;# 
  1554     0993                     	;# 
  1555     0994                     	;# 
  1556     0995                     	;# 
  1557     0996                     	;# 
  1558     0997                     	;# 
  1559     0E0F                     	;# 
  1560     0E10                     	;# 
  1561     0E11                     	;# 
  1562     0E12                     	;# 
  1563     0E13                     	;# 
  1564     0E14                     	;# 
  1565     0E15                     	;# 
  1566     0E16                     	;# 
  1567     0E17                     	;# 
  1568     0E18                     	;# 
  1569     0E19                     	;# 
  1570     0E1A                     	;# 
  1571     0E1B                     	;# 
  1572     0E1C                     	;# 
  1573     0E1D                     	;# 
  1574     0E1E                     	;# 
  1575     0E1F                     	;# 
  1576     0E20                     	;# 
  1577     0E21                     	;# 
  1578     0E22                     	;# 
  1579     0E23                     	;# 
  1580     0E24                     	;# 
  1581     0E25                     	;# 
  1582     0E26                     	;# 
  1583     0E27                     	;# 
  1584     0E28                     	;# 
  1585     0E29                     	;# 
  1586     0E2A                     	;# 
  1587     0E2B                     	;# 
  1588     0E2C                     	;# 
  1589     0E2D                     	;# 
  1590     0E2E                     	;# 
  1591     0E2F                     	;# 
  1592     0E30                     	;# 
  1593     0E31                     	;# 
  1594     0E32                     	;# 
  1595     0E33                     	;# 
  1596     0E34                     	;# 
  1597     0E35                     	;# 
  1598     0E36                     	;# 
  1599     0E37                     	;# 
  1600     0E8F                     	;# 
  1601     0E90                     	;# 
  1602     0E91                     	;# 
  1603     0E92                     	;# 
  1604     0E93                     	;# 
  1605     0E94                     	;# 
  1606     0E95                     	;# 
  1607     0E96                     	;# 
  1608     0E97                     	;# 
  1609     0E9C                     	;# 
  1610     0E9D                     	;# 
  1611     0E9E                     	;# 
  1612     0EA1                     	;# 
  1613     0EA2                     	;# 
  1614     0EA3                     	;# 
  1615     0EA4                     	;# 
  1616     0EA5                     	;# 
  1617     0EA9                     	;# 
  1618     0EAA                     	;# 
  1619     0EAB                     	;# 
  1620     0EAC                     	;# 
  1621     0EB1                     	;# 
  1622     0EB2                     	;# 
  1623     0EB3                     	;# 
  1624     0EB8                     	;# 
  1625     0EB9                     	;# 
  1626     0EBA                     	;# 
  1627     0EBB                     	;# 
  1628     0EBC                     	;# 
  1629     0EBD                     	;# 
  1630     0EBE                     	;# 
  1631     0EC3                     	;# 
  1632     0EC5                     	;# 
  1633     0EC6                     	;# 
  1634     0EC7                     	;# 
  1635     0EC8                     	;# 
  1636     0EC9                     	;# 
  1637     0ECA                     	;# 
  1638     0ECB                     	;# 
  1639     0ECC                     	;# 
  1640     0F10                     	;# 
  1641     0F11                     	;# 
  1642     0F12                     	;# 
  1643     0F13                     	;# 
  1644     0F14                     	;# 
  1645     0F15                     	;# 
  1646     0F16                     	;# 
  1647     0F17                     	;# 
  1648     0F18                     	;# 
  1649     0F19                     	;# 
  1650     0F1A                     	;# 
  1651     0F1B                     	;# 
  1652     0F1C                     	;# 
  1653     0F1D                     	;# 
  1654     0F1E                     	;# 
  1655     0F1F                     	;# 
  1656     0F20                     	;# 
  1657     0F21                     	;# 
  1658     0F22                     	;# 
  1659     0F23                     	;# 
  1660     0F24                     	;# 
  1661     0F25                     	;# 
  1662     0F26                     	;# 
  1663     0F27                     	;# 
  1664     0F28                     	;# 
  1665     0F29                     	;# 
  1666     0F2A                     	;# 
  1667     0F2B                     	;# 
  1668     0F2C                     	;# 
  1669     0F2D                     	;# 
  1670     0F2E                     	;# 
  1671     0F2F                     	;# 
  1672     0F30                     	;# 
  1673     0F31                     	;# 
  1674     0F32                     	;# 
  1675     0F38                     	;# 
  1676     0F39                     	;# 
  1677     0F3A                     	;# 
  1678     0F3B                     	;# 
  1679     0F3C                     	;# 
  1680     0F3D                     	;# 
  1681     0F3E                     	;# 
  1682     0F3F                     	;# 
  1683     0F40                     	;# 
  1684     0F41                     	;# 
  1685     0F43                     	;# 
  1686     0F44                     	;# 
  1687     0F45                     	;# 
  1688     0F46                     	;# 
  1689     0F47                     	;# 
  1690     0F48                     	;# 
  1691     0F49                     	;# 
  1692     0F4A                     	;# 
  1693     0F4B                     	;# 
  1694     0F4C                     	;# 
  1695     0F4E                     	;# 
  1696     0F4F                     	;# 
  1697     0F50                     	;# 
  1698     0F51                     	;# 
  1699     0F52                     	;# 
  1700     0F53                     	;# 
  1701     0F54                     	;# 
  1702     0F55                     	;# 
  1703     0F56                     	;# 
  1704     0F57                     	;# 
  1705     0F59                     	;# 
  1706     0F5A                     	;# 
  1707     0F5B                     	;# 
  1708     0F5C                     	;# 
  1709     0F5D                     	;# 
  1710     0F61                     	;# 
  1711     0F62                     	;# 
  1712     0F64                     	;# 
  1713     0F65                     	;# 
  1714     0F66                     	;# 
  1715     0F67                     	;# 
  1716     0F68                     	;# 
  1717     0F69                     	;# 
  1718     0F6A                     	;# 
  1719     0F6B                     	;# 
  1720     0F6C                     	;# 
  1721     0F6D                     	;# 
  1722     0FE4                     	;# 
  1723     0FE5                     	;# 
  1724     0FE6                     	;# 
  1725     0FE7                     	;# 
  1726     0FE8                     	;# 
  1727     0FE9                     	;# 
  1728     0FEA                     	;# 
  1729     0FEB                     	;# 
  1730     0FED                     	;# 
  1731     0FEE                     	;# 
  1732     0FEF                     	;# 
  1733     0000                     	;# 
  1734     0001                     	;# 
  1735     0002                     	;# 
  1736     0003                     	;# 
  1737     0004                     	;# 
  1738     0005                     	;# 
  1739     0006                     	;# 
  1740     0007                     	;# 
  1741     0008                     	;# 
  1742     0009                     	;# 
  1743     000A                     	;# 
  1744     000B                     	;# 
  1745     000C                     	;# 
  1746     000D                     	;# 
  1747     000E                     	;# 
  1748     000F                     	;# 
  1749     0010                     	;# 
  1750     0011                     	;# 
  1751     0012                     	;# 
  1752     0013                     	;# 
  1753     0014                     	;# 
  1754     0015                     	;# 
  1755     0016                     	;# 
  1756     0017                     	;# 
  1757     0018                     	;# 
  1758     0019                     	;# 
  1759     001A                     	;# 
  1760     001C                     	;# 
  1761     001C                     	;# 
  1762     001D                     	;# 
  1763     001D                     	;# 
  1764     001E                     	;# 
  1765     001F                     	;# 
  1766     008C                     	;# 
  1767     008C                     	;# 
  1768     008D                     	;# 
  1769     008E                     	;# 
  1770     008E                     	;# 
  1771     008F                     	;# 
  1772     0090                     	;# 
  1773     0090                     	;# 
  1774     0091                     	;# 
  1775     0093                     	;# 
  1776     0094                     	;# 
  1777     0095                     	;# 
  1778     0096                     	;# 
  1779     0097                     	;# 
  1780     0098                     	;# 
  1781     0099                     	;# 
  1782     009A                     	;# 
  1783     009B                     	;# 
  1784     009C                     	;# 
  1785     009D                     	;# 
  1786     009E                     	;# 
  1787     010C                     	;# 
  1788     010D                     	;# 
  1789     010E                     	;# 
  1790     010E                     	;# 
  1791     010F                     	;# 
  1792     0110                     	;# 
  1793     0110                     	;# 
  1794     0111                     	;# 
  1795     0112                     	;# 
  1796     0112                     	;# 
  1797     0113                     	;# 
  1798     0114                     	;# 
  1799     0114                     	;# 
  1800     0115                     	;# 
  1801     0116                     	;# 
  1802     0116                     	;# 
  1803     0117                     	;# 
  1804     0119                     	;# 
  1805     0119                     	;# 
  1806     0119                     	;# 
  1807     011A                     	;# 
  1808     011A                     	;# 
  1809     011A                     	;# 
  1810     011B                     	;# 
  1811     011B                     	;# 
  1812     011B                     	;# 
  1813     011B                     	;# 
  1814     011B                     	;# 
  1815     011C                     	;# 
  1816     011C                     	;# 
  1817     011C                     	;# 
  1818     011D                     	;# 
  1819     011D                     	;# 
  1820     011D                     	;# 
  1821     011E                     	;# 
  1822     011E                     	;# 
  1823     011E                     	;# 
  1824     011F                     	;# 
  1825     011F                     	;# 
  1826     011F                     	;# 
  1827     011F                     	;# 
  1828     011F                     	;# 
  1829     018C                     	;# 
  1830     018D                     	;# 
  1831     018E                     	;# 
  1832     018F                     	;# 
  1833     0190                     	;# 
  1834     0191                     	;# 
  1835     0192                     	;# 
  1836     0196                     	;# 
  1837     0197                     	;# 
  1838     0198                     	;# 
  1839     0199                     	;# 
  1840     019A                     	;# 
  1841     019B                     	;# 
  1842     019C                     	;# 
  1843     020C                     	;# 
  1844     020C                     	;# 
  1845     020D                     	;# 
  1846     020E                     	;# 
  1847     020F                     	;# 
  1848     020F                     	;# 
  1849     0210                     	;# 
  1850     0210                     	;# 
  1851     0211                     	;# 
  1852     0211                     	;# 
  1853     0212                     	;# 
  1854     0212                     	;# 
  1855     0213                     	;# 
  1856     0214                     	;# 
  1857     0215                     	;# 
  1858     0215                     	;# 
  1859     0216                     	;# 
  1860     0216                     	;# 
  1861     0217                     	;# 
  1862     0217                     	;# 
  1863     0218                     	;# 
  1864     0218                     	;# 
  1865     0219                     	;# 
  1866     021A                     	;# 
  1867     021B                     	;# 
  1868     021B                     	;# 
  1869     021C                     	;# 
  1870     021C                     	;# 
  1871     021D                     	;# 
  1872     021D                     	;# 
  1873     021E                     	;# 
  1874     021F                     	;# 
  1875     028C                     	;# 
  1876     028C                     	;# 
  1877     028D                     	;# 
  1878     028D                     	;# 
  1879     028E                     	;# 
  1880     028F                     	;# 
  1881     0290                     	;# 
  1882     0290                     	;# 
  1883     0291                     	;# 
  1884     0292                     	;# 
  1885     0292                     	;# 
  1886     0293                     	;# 
  1887     0293                     	;# 
  1888     0294                     	;# 
  1889     0295                     	;# 
  1890     0296                     	;# 
  1891     0296                     	;# 
  1892     0297                     	;# 
  1893     0298                     	;# 
  1894     0298                     	;# 
  1895     0299                     	;# 
  1896     0299                     	;# 
  1897     029A                     	;# 
  1898     029B                     	;# 
  1899     029C                     	;# 
  1900     029C                     	;# 
  1901     029D                     	;# 
  1902     030C                     	;# 
  1903     030C                     	;# 
  1904     030D                     	;# 
  1905     030E                     	;# 
  1906     030F                     	;# 
  1907     0310                     	;# 
  1908     0310                     	;# 
  1909     0311                     	;# 
  1910     0312                     	;# 
  1911     0313                     	;# 
  1912     0314                     	;# 
  1913     0314                     	;# 
  1914     0315                     	;# 
  1915     0316                     	;# 
  1916     0317                     	;# 
  1917     0318                     	;# 
  1918     0318                     	;# 
  1919     0319                     	;# 
  1920     031A                     	;# 
  1921     031B                     	;# 
  1922     031C                     	;# 
  1923     031C                     	;# 
  1924     031D                     	;# 
  1925     031E                     	;# 
  1926     031F                     	;# 
  1927     038C                     	;# 
  1928     038C                     	;# 
  1929     038D                     	;# 
  1930     038E                     	;# 
  1931     0390                     	;# 
  1932     0390                     	;# 
  1933     0391                     	;# 
  1934     0392                     	;# 
  1935     040C                     	;# 
  1936     040D                     	;# 
  1937     040E                     	;# 
  1938     040F                     	;# 
  1939     0410                     	;# 
  1940     0411                     	;# 
  1941     0416                     	;# 
  1942     0416                     	;# 
  1943     0417                     	;# 
  1944     0418                     	;# 
  1945     0418                     	;# 
  1946     0419                     	;# 
  1947     041A                     	;# 
  1948     041A                     	;# 
  1949     041B                     	;# 
  1950     041C                     	;# 
  1951     041C                     	;# 
  1952     041D                     	;# 
  1953     041E                     	;# 
  1954     041F                     	;# 
  1955     048C                     	;# 
  1956     048C                     	;# 
  1957     048D                     	;# 
  1958     048E                     	;# 
  1959     048F                     	;# 
  1960     048F                     	;# 
  1961     0490                     	;# 
  1962     0491                     	;# 
  1963     0492                     	;# 
  1964     0492                     	;# 
  1965     0493                     	;# 
  1966     0494                     	;# 
  1967     0495                     	;# 
  1968     0495                     	;# 
  1969     0496                     	;# 
  1970     0497                     	;# 
  1971     0498                     	;# 
  1972     0499                     	;# 
  1973     049A                     	;# 
  1974     049B                     	;# 
  1975     049C                     	;# 
  1976     049D                     	;# 
  1977     050C                     	;# 
  1978     050C                     	;# 
  1979     050D                     	;# 
  1980     050E                     	;# 
  1981     050F                     	;# 
  1982     050F                     	;# 
  1983     0510                     	;# 
  1984     0511                     	;# 
  1985     0512                     	;# 
  1986     0512                     	;# 
  1987     0513                     	;# 
  1988     0514                     	;# 
  1989     0515                     	;# 
  1990     0515                     	;# 
  1991     0516                     	;# 
  1992     0517                     	;# 
  1993     0518                     	;# 
  1994     0519                     	;# 
  1995     051A                     	;# 
  1996     051B                     	;# 
  1997     051C                     	;# 
  1998     051D                     	;# 
  1999     058C                     	;# 
  2000     058C                     	;# 
  2001     058D                     	;# 
  2002     058E                     	;# 
  2003     058F                     	;# 
  2004     058F                     	;# 
  2005     0590                     	;# 
  2006     0591                     	;# 
  2007     0592                     	;# 
  2008     0593                     	;# 
  2009     060C                     	;# 
  2010     060D                     	;# 
  2011     060E                     	;# 
  2012     060F                     	;# 
  2013     0610                     	;# 
  2014     0611                     	;# 
  2015     0612                     	;# 
  2016     0613                     	;# 
  2017     0614                     	;# 
  2018     0616                     	;# 
  2019     0617                     	;# 
  2020     0618                     	;# 
  2021     0619                     	;# 
  2022     061A                     	;# 
  2023     061B                     	;# 
  2024     061C                     	;# 
  2025     061D                     	;# 
  2026     061E                     	;# 
  2027     068C                     	;# 
  2028     068D                     	;# 
  2029     068E                     	;# 
  2030     068F                     	;# 
  2031     0690                     	;# 
  2032     0691                     	;# 
  2033     0692                     	;# 
  2034     0693                     	;# 
  2035     0694                     	;# 
  2036     070C                     	;# 
  2037     070D                     	;# 
  2038     070E                     	;# 
  2039     070F                     	;# 
  2040     0710                     	;# 
  2041     0711                     	;# 
  2042     0712                     	;# 
  2043     0713                     	;# 
  2044     0714                     	;# 
  2045     0716                     	;# 
  2046     0717                     	;# 
  2047     0718                     	;# 
  2048     0719                     	;# 
  2049     071A                     	;# 
  2050     071B                     	;# 
  2051     071C                     	;# 
  2052     071D                     	;# 
  2053     071E                     	;# 
  2054     0796                     	;# 
  2055     0797                     	;# 
  2056     0798                     	;# 
  2057     0799                     	;# 
  2058     079A                     	;# 
  2059     079B                     	;# 
  2060     080C                     	;# 
  2061     080D                     	;# 
  2062     080E                     	;# 
  2063     080F                     	;# 
  2064     0810                     	;# 
  2065     0811                     	;# 
  2066     0812                     	;# 
  2067     0813                     	;# 
  2068     0814                     	;# 
  2069     081A                     	;# 
  2070     081B                     	;# 
  2071     081C                     	;# 
  2072     081D                     	;# 
  2073     081E                     	;# 
  2074     081F                     	;# 
  2075     088C                     	;# 
  2076     088D                     	;# 
  2077     088E                     	;# 
  2078     088F                     	;# 
  2079     0890                     	;# 
  2080     0891                     	;# 
  2081     0892                     	;# 
  2082     0893                     	;# 
  2083     0895                     	;# 
  2084     0896                     	;# 
  2085     0897                     	;# 
  2086     0898                     	;# 
  2087     0899                     	;# 
  2088     089A                     	;# 
  2089     089B                     	;# 
  2090     090C                     	;# 
  2091     090E                     	;# 
  2092     090F                     	;# 
  2093     091F                     	;# 
  2094     091F                     	;# 
  2095     098F                     	;# 
  2096     098F                     	;# 
  2097     0990                     	;# 
  2098     0991                     	;# 
  2099     0992                     	;# 
  2100     0993                     	;# 
  2101     0994                     	;# 
  2102     0995                     	;# 
  2103     0996                     	;# 
  2104     0997                     	;# 
  2105     0E0F                     	;# 
  2106     0E10                     	;# 
  2107     0E11                     	;# 
  2108     0E12                     	;# 
  2109     0E13                     	;# 
  2110     0E14                     	;# 
  2111     0E15                     	;# 
  2112     0E16                     	;# 
  2113     0E17                     	;# 
  2114     0E18                     	;# 
  2115     0E19                     	;# 
  2116     0E1A                     	;# 
  2117     0E1B                     	;# 
  2118     0E1C                     	;# 
  2119     0E1D                     	;# 
  2120     0E1E                     	;# 
  2121     0E1F                     	;# 
  2122     0E20                     	;# 
  2123     0E21                     	;# 
  2124     0E22                     	;# 
  2125     0E23                     	;# 
  2126     0E24                     	;# 
  2127     0E25                     	;# 
  2128     0E26                     	;# 
  2129     0E27                     	;# 
  2130     0E28                     	;# 
  2131     0E29                     	;# 
  2132     0E2A                     	;# 
  2133     0E2B                     	;# 
  2134     0E2C                     	;# 
  2135     0E2D                     	;# 
  2136     0E2E                     	;# 
  2137     0E2F                     	;# 
  2138     0E30                     	;# 
  2139     0E31                     	;# 
  2140     0E32                     	;# 
  2141     0E33                     	;# 
  2142     0E34                     	;# 
  2143     0E35                     	;# 
  2144     0E36                     	;# 
  2145     0E37                     	;# 
  2146     0E8F                     	;# 
  2147     0E90                     	;# 
  2148     0E91                     	;# 
  2149     0E92                     	;# 
  2150     0E93                     	;# 
  2151     0E94                     	;# 
  2152     0E95                     	;# 
  2153     0E96                     	;# 
  2154     0E97                     	;# 
  2155     0E9C                     	;# 
  2156     0E9D                     	;# 
  2157     0E9E                     	;# 
  2158     0EA1                     	;# 
  2159     0EA2                     	;# 
  2160     0EA3                     	;# 
  2161     0EA4                     	;# 
  2162     0EA5                     	;# 
  2163     0EA9                     	;# 
  2164     0EAA                     	;# 
  2165     0EAB                     	;# 
  2166     0EAC                     	;# 
  2167     0EB1                     	;# 
  2168     0EB2                     	;# 
  2169     0EB3                     	;# 
  2170     0EB8                     	;# 
  2171     0EB9                     	;# 
  2172     0EBA                     	;# 
  2173     0EBB                     	;# 
  2174     0EBC                     	;# 
  2175     0EBD                     	;# 
  2176     0EBE                     	;# 
  2177     0EC3                     	;# 
  2178     0EC5                     	;# 
  2179     0EC6                     	;# 
  2180     0EC7                     	;# 
  2181     0EC8                     	;# 
  2182     0EC9                     	;# 
  2183     0ECA                     	;# 
  2184     0ECB                     	;# 
  2185     0ECC                     	;# 
  2186     0F10                     	;# 
  2187     0F11                     	;# 
  2188     0F12                     	;# 
  2189     0F13                     	;# 
  2190     0F14                     	;# 
  2191     0F15                     	;# 
  2192     0F16                     	;# 
  2193     0F17                     	;# 
  2194     0F18                     	;# 
  2195     0F19                     	;# 
  2196     0F1A                     	;# 
  2197     0F1B                     	;# 
  2198     0F1C                     	;# 
  2199     0F1D                     	;# 
  2200     0F1E                     	;# 
  2201     0F1F                     	;# 
  2202     0F20                     	;# 
  2203     0F21                     	;# 
  2204     0F22                     	;# 
  2205     0F23                     	;# 
  2206     0F24                     	;# 
  2207     0F25                     	;# 
  2208     0F26                     	;# 
  2209     0F27                     	;# 
  2210     0F28                     	;# 
  2211     0F29                     	;# 
  2212     0F2A                     	;# 
  2213     0F2B                     	;# 
  2214     0F2C                     	;# 
  2215     0F2D                     	;# 
  2216     0F2E                     	;# 
  2217     0F2F                     	;# 
  2218     0F30                     	;# 
  2219     0F31                     	;# 
  2220     0F32                     	;# 
  2221     0F38                     	;# 
  2222     0F39                     	;# 
  2223     0F3A                     	;# 
  2224     0F3B                     	;# 
  2225     0F3C                     	;# 
  2226     0F3D                     	;# 
  2227     0F3E                     	;# 
  2228     0F3F                     	;# 
  2229     0F40                     	;# 
  2230     0F41                     	;# 
  2231     0F43                     	;# 
  2232     0F44                     	;# 
  2233     0F45                     	;# 
  2234     0F46                     	;# 
  2235     0F47                     	;# 
  2236     0F48                     	;# 
  2237     0F49                     	;# 
  2238     0F4A                     	;# 
  2239     0F4B                     	;# 
  2240     0F4C                     	;# 
  2241     0F4E                     	;# 
  2242     0F4F                     	;# 
  2243     0F50                     	;# 
  2244     0F51                     	;# 
  2245     0F52                     	;# 
  2246     0F53                     	;# 
  2247     0F54                     	;# 
  2248     0F55                     	;# 
  2249     0F56                     	;# 
  2250     0F57                     	;# 
  2251     0F59                     	;# 
  2252     0F5A                     	;# 
  2253     0F5B                     	;# 
  2254     0F5C                     	;# 
  2255     0F5D                     	;# 
  2256     0F61                     	;# 
  2257     0F62                     	;# 
  2258     0F64                     	;# 
  2259     0F65                     	;# 
  2260     0F66                     	;# 
  2261     0F67                     	;# 
  2262     0F68                     	;# 
  2263     0F69                     	;# 
  2264     0F6A                     	;# 
  2265     0F6B                     	;# 
  2266     0F6C                     	;# 
  2267     0F6D                     	;# 
  2268     0FE4                     	;# 
  2269     0FE5                     	;# 
  2270     0FE6                     	;# 
  2271     0FE7                     	;# 
  2272     0FE8                     	;# 
  2273     0FE9                     	;# 
  2274     0FEA                     	;# 
  2275     0FEB                     	;# 
  2276     0FED                     	;# 
  2277     0FEE                     	;# 
  2278     0FEF                     	;# 
  2279     0000                     	;# 
  2280     0001                     	;# 
  2281     0002                     	;# 
  2282     0003                     	;# 
  2283     0004                     	;# 
  2284     0005                     	;# 
  2285     0006                     	;# 
  2286     0007                     	;# 
  2287     0008                     	;# 
  2288     0009                     	;# 
  2289     000A                     	;# 
  2290     000B                     	;# 
  2291     000C                     	;# 
  2292     000D                     	;# 
  2293     000E                     	;# 
  2294     000F                     	;# 
  2295     0010                     	;# 
  2296     0011                     	;# 
  2297     0012                     	;# 
  2298     0013                     	;# 
  2299     0014                     	;# 
  2300     0015                     	;# 
  2301     0016                     	;# 
  2302     0017                     	;# 
  2303     0018                     	;# 
  2304     0019                     	;# 
  2305     001A                     	;# 
  2306     001C                     	;# 
  2307     001C                     	;# 
  2308     001D                     	;# 
  2309     001D                     	;# 
  2310     001E                     	;# 
  2311     001F                     	;# 
  2312     008C                     	;# 
  2313     008C                     	;# 
  2314     008D                     	;# 
  2315     008E                     	;# 
  2316     008E                     	;# 
  2317     008F                     	;# 
  2318     0090                     	;# 
  2319     0090                     	;# 
  2320     0091                     	;# 
  2321     0093                     	;# 
  2322     0094                     	;# 
  2323     0095                     	;# 
  2324     0096                     	;# 
  2325     0097                     	;# 
  2326     0098                     	;# 
  2327     0099                     	;# 
  2328     009A                     	;# 
  2329     009B                     	;# 
  2330     009C                     	;# 
  2331     009D                     	;# 
  2332     009E                     	;# 
  2333     010C                     	;# 
  2334     010D                     	;# 
  2335     010E                     	;# 
  2336     010E                     	;# 
  2337     010F                     	;# 
  2338     0110                     	;# 
  2339     0110                     	;# 
  2340     0111                     	;# 
  2341     0112                     	;# 
  2342     0112                     	;# 
  2343     0113                     	;# 
  2344     0114                     	;# 
  2345     0114                     	;# 
  2346     0115                     	;# 
  2347     0116                     	;# 
  2348     0116                     	;# 
  2349     0117                     	;# 
  2350     0119                     	;# 
  2351     0119                     	;# 
  2352     0119                     	;# 
  2353     011A                     	;# 
  2354     011A                     	;# 
  2355     011A                     	;# 
  2356     011B                     	;# 
  2357     011B                     	;# 
  2358     011B                     	;# 
  2359     011B                     	;# 
  2360     011B                     	;# 
  2361     011C                     	;# 
  2362     011C                     	;# 
  2363     011C                     	;# 
  2364     011D                     	;# 
  2365     011D                     	;# 
  2366     011D                     	;# 
  2367     011E                     	;# 
  2368     011E                     	;# 
  2369     011E                     	;# 
  2370     011F                     	;# 
  2371     011F                     	;# 
  2372     011F                     	;# 
  2373     011F                     	;# 
  2374     011F                     	;# 
  2375     018C                     	;# 
  2376     018D                     	;# 
  2377     018E                     	;# 
  2378     018F                     	;# 
  2379     0190                     	;# 
  2380     0191                     	;# 
  2381     0192                     	;# 
  2382     0196                     	;# 
  2383     0197                     	;# 
  2384     0198                     	;# 
  2385     0199                     	;# 
  2386     019A                     	;# 
  2387     019B                     	;# 
  2388     019C                     	;# 
  2389     020C                     	;# 
  2390     020C                     	;# 
  2391     020D                     	;# 
  2392     020E                     	;# 
  2393     020F                     	;# 
  2394     020F                     	;# 
  2395     0210                     	;# 
  2396     0210                     	;# 
  2397     0211                     	;# 
  2398     0211                     	;# 
  2399     0212                     	;# 
  2400     0212                     	;# 
  2401     0213                     	;# 
  2402     0214                     	;# 
  2403     0215                     	;# 
  2404     0215                     	;# 
  2405     0216                     	;# 
  2406     0216                     	;# 
  2407     0217                     	;# 
  2408     0217                     	;# 
  2409     0218                     	;# 
  2410     0218                     	;# 
  2411     0219                     	;# 
  2412     021A                     	;# 
  2413     021B                     	;# 
  2414     021B                     	;# 
  2415     021C                     	;# 
  2416     021C                     	;# 
  2417     021D                     	;# 
  2418     021D                     	;# 
  2419     021E                     	;# 
  2420     021F                     	;# 
  2421     028C                     	;# 
  2422     028C                     	;# 
  2423     028D                     	;# 
  2424     028D                     	;# 
  2425     028E                     	;# 
  2426     028F                     	;# 
  2427     0290                     	;# 
  2428     0290                     	;# 
  2429     0291                     	;# 
  2430     0292                     	;# 
  2431     0292                     	;# 
  2432     0293                     	;# 
  2433     0293                     	;# 
  2434     0294                     	;# 
  2435     0295                     	;# 
  2436     0296                     	;# 
  2437     0296                     	;# 
  2438     0297                     	;# 
  2439     0298                     	;# 
  2440     0298                     	;# 
  2441     0299                     	;# 
  2442     0299                     	;# 
  2443     029A                     	;# 
  2444     029B                     	;# 
  2445     029C                     	;# 
  2446     029C                     	;# 
  2447     029D                     	;# 
  2448     030C                     	;# 
  2449     030C                     	;# 
  2450     030D                     	;# 
  2451     030E                     	;# 
  2452     030F                     	;# 
  2453     0310                     	;# 
  2454     0310                     	;# 
  2455     0311                     	;# 
  2456     0312                     	;# 
  2457     0313                     	;# 
  2458     0314                     	;# 
  2459     0314                     	;# 
  2460     0315                     	;# 
  2461     0316                     	;# 
  2462     0317                     	;# 
  2463     0318                     	;# 
  2464     0318                     	;# 
  2465     0319                     	;# 
  2466     031A                     	;# 
  2467     031B                     	;# 
  2468     031C                     	;# 
  2469     031C                     	;# 
  2470     031D                     	;# 
  2471     031E                     	;# 
  2472     031F                     	;# 
  2473     038C                     	;# 
  2474     038C                     	;# 
  2475     038D                     	;# 
  2476     038E                     	;# 
  2477     0390                     	;# 
  2478     0390                     	;# 
  2479     0391                     	;# 
  2480     0392                     	;# 
  2481     040C                     	;# 
  2482     040D                     	;# 
  2483     040E                     	;# 
  2484     040F                     	;# 
  2485     0410                     	;# 
  2486     0411                     	;# 
  2487     0416                     	;# 
  2488     0416                     	;# 
  2489     0417                     	;# 
  2490     0418                     	;# 
  2491     0418                     	;# 
  2492     0419                     	;# 
  2493     041A                     	;# 
  2494     041A                     	;# 
  2495     041B                     	;# 
  2496     041C                     	;# 
  2497     041C                     	;# 
  2498     041D                     	;# 
  2499     041E                     	;# 
  2500     041F                     	;# 
  2501     048C                     	;# 
  2502     048C                     	;# 
  2503     048D                     	;# 
  2504     048E                     	;# 
  2505     048F                     	;# 
  2506     048F                     	;# 
  2507     0490                     	;# 
  2508     0491                     	;# 
  2509     0492                     	;# 
  2510     0492                     	;# 
  2511     0493                     	;# 
  2512     0494                     	;# 
  2513     0495                     	;# 
  2514     0495                     	;# 
  2515     0496                     	;# 
  2516     0497                     	;# 
  2517     0498                     	;# 
  2518     0499                     	;# 
  2519     049A                     	;# 
  2520     049B                     	;# 
  2521     049C                     	;# 
  2522     049D                     	;# 
  2523     050C                     	;# 
  2524     050C                     	;# 
  2525     050D                     	;# 
  2526     050E                     	;# 
  2527     050F                     	;# 
  2528     050F                     	;# 
  2529     0510                     	;# 
  2530     0511                     	;# 
  2531     0512                     	;# 
  2532     0512                     	;# 
  2533     0513                     	;# 
  2534     0514                     	;# 
  2535     0515                     	;# 
  2536     0515                     	;# 
  2537     0516                     	;# 
  2538     0517                     	;# 
  2539     0518                     	;# 
  2540     0519                     	;# 
  2541     051A                     	;# 
  2542     051B                     	;# 
  2543     051C                     	;# 
  2544     051D                     	;# 
  2545     058C                     	;# 
  2546     058C                     	;# 
  2547     058D                     	;# 
  2548     058E                     	;# 
  2549     058F                     	;# 
  2550     058F                     	;# 
  2551     0590                     	;# 
  2552     0591                     	;# 
  2553     0592                     	;# 
  2554     0593                     	;# 
  2555     060C                     	;# 
  2556     060D                     	;# 
  2557     060E                     	;# 
  2558     060F                     	;# 
  2559     0610                     	;# 
  2560     0611                     	;# 
  2561     0612                     	;# 
  2562     0613                     	;# 
  2563     0614                     	;# 
  2564     0616                     	;# 
  2565     0617                     	;# 
  2566     0618                     	;# 
  2567     0619                     	;# 
  2568     061A                     	;# 
  2569     061B                     	;# 
  2570     061C                     	;# 
  2571     061D                     	;# 
  2572     061E                     	;# 
  2573     068C                     	;# 
  2574     068D                     	;# 
  2575     068E                     	;# 
  2576     068F                     	;# 
  2577     0690                     	;# 
  2578     0691                     	;# 
  2579     0692                     	;# 
  2580     0693                     	;# 
  2581     0694                     	;# 
  2582     070C                     	;# 
  2583     070D                     	;# 
  2584     070E                     	;# 
  2585     070F                     	;# 
  2586     0710                     	;# 
  2587     0711                     	;# 
  2588     0712                     	;# 
  2589     0713                     	;# 
  2590     0714                     	;# 
  2591     0716                     	;# 
  2592     0717                     	;# 
  2593     0718                     	;# 
  2594     0719                     	;# 
  2595     071A                     	;# 
  2596     071B                     	;# 
  2597     071C                     	;# 
  2598     071D                     	;# 
  2599     071E                     	;# 
  2600     0796                     	;# 
  2601     0797                     	;# 
  2602     0798                     	;# 
  2603     0799                     	;# 
  2604     079A                     	;# 
  2605     079B                     	;# 
  2606     080C                     	;# 
  2607     080D                     	;# 
  2608     080E                     	;# 
  2609     080F                     	;# 
  2610     0810                     	;# 
  2611     0811                     	;# 
  2612     0812                     	;# 
  2613     0813                     	;# 
  2614     0814                     	;# 
  2615     081A                     	;# 
  2616     081B                     	;# 
  2617     081C                     	;# 
  2618     081D                     	;# 
  2619     081E                     	;# 
  2620     081F                     	;# 
  2621     088C                     	;# 
  2622     088D                     	;# 
  2623     088E                     	;# 
  2624     088F                     	;# 
  2625     0890                     	;# 
  2626     0891                     	;# 
  2627     0892                     	;# 
  2628     0893                     	;# 
  2629     0895                     	;# 
  2630     0896                     	;# 
  2631     0897                     	;# 
  2632     0898                     	;# 
  2633     0899                     	;# 
  2634     089A                     	;# 
  2635     089B                     	;# 
  2636     090C                     	;# 
  2637     090E                     	;# 
  2638     090F                     	;# 
  2639     091F                     	;# 
  2640     091F                     	;# 
  2641     098F                     	;# 
  2642     098F                     	;# 
  2643     0990                     	;# 
  2644     0991                     	;# 
  2645     0992                     	;# 
  2646     0993                     	;# 
  2647     0994                     	;# 
  2648     0995                     	;# 
  2649     0996                     	;# 
  2650     0997                     	;# 
  2651     0E0F                     	;# 
  2652     0E10                     	;# 
  2653     0E11                     	;# 
  2654     0E12                     	;# 
  2655     0E13                     	;# 
  2656     0E14                     	;# 
  2657     0E15                     	;# 
  2658     0E16                     	;# 
  2659     0E17                     	;# 
  2660     0E18                     	;# 
  2661     0E19                     	;# 
  2662     0E1A                     	;# 
  2663     0E1B                     	;# 
  2664     0E1C                     	;# 
  2665     0E1D                     	;# 
  2666     0E1E                     	;# 
  2667     0E1F                     	;# 
  2668     0E20                     	;# 
  2669     0E21                     	;# 
  2670     0E22                     	;# 
  2671     0E23                     	;# 
  2672     0E24                     	;# 
  2673     0E25                     	;# 
  2674     0E26                     	;# 
  2675     0E27                     	;# 
  2676     0E28                     	;# 
  2677     0E29                     	;# 
  2678     0E2A                     	;# 
  2679     0E2B                     	;# 
  2680     0E2C                     	;# 
  2681     0E2D                     	;# 
  2682     0E2E                     	;# 
  2683     0E2F                     	;# 
  2684     0E30                     	;# 
  2685     0E31                     	;# 
  2686     0E32                     	;# 
  2687     0E33                     	;# 
  2688     0E34                     	;# 
  2689     0E35                     	;# 
  2690     0E36                     	;# 
  2691     0E37                     	;# 
  2692     0E8F                     	;# 
  2693     0E90                     	;# 
  2694     0E91                     	;# 
  2695     0E92                     	;# 
  2696     0E93                     	;# 
  2697     0E94                     	;# 
  2698     0E95                     	;# 
  2699     0E96                     	;# 
  2700     0E97                     	;# 
  2701     0E9C                     	;# 
  2702     0E9D                     	;# 
  2703     0E9E                     	;# 
  2704     0EA1                     	;# 
  2705     0EA2                     	;# 
  2706     0EA3                     	;# 
  2707     0EA4                     	;# 
  2708     0EA5                     	;# 
  2709     0EA9                     	;# 
  2710     0EAA                     	;# 
  2711     0EAB                     	;# 
  2712     0EAC                     	;# 
  2713     0EB1                     	;# 
  2714     0EB2                     	;# 
  2715     0EB3                     	;# 
  2716     0EB8                     	;# 
  2717     0EB9                     	;# 
  2718     0EBA                     	;# 
  2719     0EBB                     	;# 
  2720     0EBC                     	;# 
  2721     0EBD                     	;# 
  2722     0EBE                     	;# 
  2723     0EC3                     	;# 
  2724     0EC5                     	;# 
  2725     0EC6                     	;# 
  2726     0EC7                     	;# 
  2727     0EC8                     	;# 
  2728     0EC9                     	;# 
  2729     0ECA                     	;# 
  2730     0ECB                     	;# 
  2731     0ECC                     	;# 
  2732     0F10                     	;# 
  2733     0F11                     	;# 
  2734     0F12                     	;# 
  2735     0F13                     	;# 
  2736     0F14                     	;# 
  2737     0F15                     	;# 
  2738     0F16                     	;# 
  2739     0F17                     	;# 
  2740     0F18                     	;# 
  2741     0F19                     	;# 
  2742     0F1A                     	;# 
  2743     0F1B                     	;# 
  2744     0F1C                     	;# 
  2745     0F1D                     	;# 
  2746     0F1E                     	;# 
  2747     0F1F                     	;# 
  2748     0F20                     	;# 
  2749     0F21                     	;# 
  2750     0F22                     	;# 
  2751     0F23                     	;# 
  2752     0F24                     	;# 
  2753     0F25                     	;# 
  2754     0F26                     	;# 
  2755     0F27                     	;# 
  2756     0F28                     	;# 
  2757     0F29                     	;# 
  2758     0F2A                     	;# 
  2759     0F2B                     	;# 
  2760     0F2C                     	;# 
  2761     0F2D                     	;# 
  2762     0F2E                     	;# 
  2763     0F2F                     	;# 
  2764     0F30                     	;# 
  2765     0F31                     	;# 
  2766     0F32                     	;# 
  2767     0F38                     	;# 
  2768     0F39                     	;# 
  2769     0F3A                     	;# 
  2770     0F3B                     	;# 
  2771     0F3C                     	;# 
  2772     0F3D                     	;# 
  2773     0F3E                     	;# 
  2774     0F3F                     	;# 
  2775     0F40                     	;# 
  2776     0F41                     	;# 
  2777     0F43                     	;# 
  2778     0F44                     	;# 
  2779     0F45                     	;# 
  2780     0F46                     	;# 
  2781     0F47                     	;# 
  2782     0F48                     	;# 
  2783     0F49                     	;# 
  2784     0F4A                     	;# 
  2785     0F4B                     	;# 
  2786     0F4C                     	;# 
  2787     0F4E                     	;# 
  2788     0F4F                     	;# 
  2789     0F50                     	;# 
  2790     0F51                     	;# 
  2791     0F52                     	;# 
  2792     0F53                     	;# 
  2793     0F54                     	;# 
  2794     0F55                     	;# 
  2795     0F56                     	;# 
  2796     0F57                     	;# 
  2797     0F59                     	;# 
  2798     0F5A                     	;# 
  2799     0F5B                     	;# 
  2800     0F5C                     	;# 
  2801     0F5D                     	;# 
  2802     0F61                     	;# 
  2803     0F62                     	;# 
  2804     0F64                     	;# 
  2805     0F65                     	;# 
  2806     0F66                     	;# 
  2807     0F67                     	;# 
  2808     0F68                     	;# 
  2809     0F69                     	;# 
  2810     0F6A                     	;# 
  2811     0F6B                     	;# 
  2812     0F6C                     	;# 
  2813     0F6D                     	;# 
  2814     0FE4                     	;# 
  2815     0FE5                     	;# 
  2816     0FE6                     	;# 
  2817     0FE7                     	;# 
  2818     0FE8                     	;# 
  2819     0FE9                     	;# 
  2820     0FEA                     	;# 
  2821     0FEB                     	;# 
  2822     0FED                     	;# 
  2823     0FEE                     	;# 
  2824     0FEF                     	;# 
  2825     0000                     	;# 
  2826     0001                     	;# 
  2827     0002                     	;# 
  2828     0003                     	;# 
  2829     0004                     	;# 
  2830     0005                     	;# 
  2831     0006                     	;# 
  2832     0007                     	;# 
  2833     0008                     	;# 
  2834     0009                     	;# 
  2835     000A                     	;# 
  2836     000B                     	;# 
  2837     000C                     	;# 
  2838     000D                     	;# 
  2839     000E                     	;# 
  2840     000F                     	;# 
  2841     0010                     	;# 
  2842     0011                     	;# 
  2843     0012                     	;# 
  2844     0013                     	;# 
  2845     0014                     	;# 
  2846     0015                     	;# 
  2847     0016                     	;# 
  2848     0017                     	;# 
  2849     0018                     	;# 
  2850     0019                     	;# 
  2851     001A                     	;# 
  2852     001C                     	;# 
  2853     001C                     	;# 
  2854     001D                     	;# 
  2855     001D                     	;# 
  2856     001E                     	;# 
  2857     001F                     	;# 
  2858     008C                     	;# 
  2859     008C                     	;# 
  2860     008D                     	;# 
  2861     008E                     	;# 
  2862     008E                     	;# 
  2863     008F                     	;# 
  2864     0090                     	;# 
  2865     0090                     	;# 
  2866     0091                     	;# 
  2867     0093                     	;# 
  2868     0094                     	;# 
  2869     0095                     	;# 
  2870     0096                     	;# 
  2871     0097                     	;# 
  2872     0098                     	;# 
  2873     0099                     	;# 
  2874     009A                     	;# 
  2875     009B                     	;# 
  2876     009C                     	;# 
  2877     009D                     	;# 
  2878     009E                     	;# 
  2879     010C                     	;# 
  2880     010D                     	;# 
  2881     010E                     	;# 
  2882     010E                     	;# 
  2883     010F                     	;# 
  2884     0110                     	;# 
  2885     0110                     	;# 
  2886     0111                     	;# 
  2887     0112                     	;# 
  2888     0112                     	;# 
  2889     0113                     	;# 
  2890     0114                     	;# 
  2891     0114                     	;# 
  2892     0115                     	;# 
  2893     0116                     	;# 
  2894     0116                     	;# 
  2895     0117                     	;# 
  2896     0119                     	;# 
  2897     0119                     	;# 
  2898     0119                     	;# 
  2899     011A                     	;# 
  2900     011A                     	;# 
  2901     011A                     	;# 
  2902     011B                     	;# 
  2903     011B                     	;# 
  2904     011B                     	;# 
  2905     011B                     	;# 
  2906     011B                     	;# 
  2907     011C                     	;# 
  2908     011C                     	;# 
  2909     011C                     	;# 
  2910     011D                     	;# 
  2911     011D                     	;# 
  2912     011D                     	;# 
  2913     011E                     	;# 
  2914     011E                     	;# 
  2915     011E                     	;# 
  2916     011F                     	;# 
  2917     011F                     	;# 
  2918     011F                     	;# 
  2919     011F                     	;# 
  2920     011F                     	;# 
  2921     018C                     	;# 
  2922     018D                     	;# 
  2923     018E                     	;# 
  2924     018F                     	;# 
  2925     0190                     	;# 
  2926     0191                     	;# 
  2927     0192                     	;# 
  2928     0196                     	;# 
  2929     0197                     	;# 
  2930     0198                     	;# 
  2931     0199                     	;# 
  2932     019A                     	;# 
  2933     019B                     	;# 
  2934     019C                     	;# 
  2935     020C                     	;# 
  2936     020C                     	;# 
  2937     020D                     	;# 
  2938     020E                     	;# 
  2939     020F                     	;# 
  2940     020F                     	;# 
  2941     0210                     	;# 
  2942     0210                     	;# 
  2943     0211                     	;# 
  2944     0211                     	;# 
  2945     0212                     	;# 
  2946     0212                     	;# 
  2947     0213                     	;# 
  2948     0214                     	;# 
  2949     0215                     	;# 
  2950     0215                     	;# 
  2951     0216                     	;# 
  2952     0216                     	;# 
  2953     0217                     	;# 
  2954     0217                     	;# 
  2955     0218                     	;# 
  2956     0218                     	;# 
  2957     0219                     	;# 
  2958     021A                     	;# 
  2959     021B                     	;# 
  2960     021B                     	;# 
  2961     021C                     	;# 
  2962     021C                     	;# 
  2963     021D                     	;# 
  2964     021D                     	;# 
  2965     021E                     	;# 
  2966     021F                     	;# 
  2967     028C                     	;# 
  2968     028C                     	;# 
  2969     028D                     	;# 
  2970     028D                     	;# 
  2971     028E                     	;# 
  2972     028F                     	;# 
  2973     0290                     	;# 
  2974     0290                     	;# 
  2975     0291                     	;# 
  2976     0292                     	;# 
  2977     0292                     	;# 
  2978     0293                     	;# 
  2979     0293                     	;# 
  2980     0294                     	;# 
  2981     0295                     	;# 
  2982     0296                     	;# 
  2983     0296                     	;# 
  2984     0297                     	;# 
  2985     0298                     	;# 
  2986     0298                     	;# 
  2987     0299                     	;# 
  2988     0299                     	;# 
  2989     029A                     	;# 
  2990     029B                     	;# 
  2991     029C                     	;# 
  2992     029C                     	;# 
  2993     029D                     	;# 
  2994     030C                     	;# 
  2995     030C                     	;# 
  2996     030D                     	;# 
  2997     030E                     	;# 
  2998     030F                     	;# 
  2999     0310                     	;# 
  3000     0310                     	;# 
  3001     0311                     	;# 
  3002     0312                     	;# 
  3003     0313                     	;# 
  3004     0314                     	;# 
  3005     0314                     	;# 
  3006     0315                     	;# 
  3007     0316                     	;# 
  3008     0317                     	;# 
  3009     0318                     	;# 
  3010     0318                     	;# 
  3011     0319                     	;# 
  3012     031A                     	;# 
  3013     031B                     	;# 
  3014     031C                     	;# 
  3015     031C                     	;# 
  3016     031D                     	;# 
  3017     031E                     	;# 
  3018     031F                     	;# 
  3019     038C                     	;# 
  3020     038C                     	;# 
  3021     038D                     	;# 
  3022     038E                     	;# 
  3023     0390                     	;# 
  3024     0390                     	;# 
  3025     0391                     	;# 
  3026     0392                     	;# 
  3027     040C                     	;# 
  3028     040D                     	;# 
  3029     040E                     	;# 
  3030     040F                     	;# 
  3031     0410                     	;# 
  3032     0411                     	;# 
  3033     0416                     	;# 
  3034     0416                     	;# 
  3035     0417                     	;# 
  3036     0418                     	;# 
  3037     0418                     	;# 
  3038     0419                     	;# 
  3039     041A                     	;# 
  3040     041A                     	;# 
  3041     041B                     	;# 
  3042     041C                     	;# 
  3043     041C                     	;# 
  3044     041D                     	;# 
  3045     041E                     	;# 
  3046     041F                     	;# 
  3047     048C                     	;# 
  3048     048C                     	;# 
  3049     048D                     	;# 
  3050     048E                     	;# 
  3051     048F                     	;# 
  3052     048F                     	;# 
  3053     0490                     	;# 
  3054     0491                     	;# 
  3055     0492                     	;# 
  3056     0492                     	;# 
  3057     0493                     	;# 
  3058     0494                     	;# 
  3059     0495                     	;# 
  3060     0495                     	;# 
  3061     0496                     	;# 
  3062     0497                     	;# 
  3063     0498                     	;# 
  3064     0499                     	;# 
  3065     049A                     	;# 
  3066     049B                     	;# 
  3067     049C                     	;# 
  3068     049D                     	;# 
  3069     050C                     	;# 
  3070     050C                     	;# 
  3071     050D                     	;# 
  3072     050E                     	;# 
  3073     050F                     	;# 
  3074     050F                     	;# 
  3075     0510                     	;# 
  3076     0511                     	;# 
  3077     0512                     	;# 
  3078     0512                     	;# 
  3079     0513                     	;# 
  3080     0514                     	;# 
  3081     0515                     	;# 
  3082     0515                     	;# 
  3083     0516                     	;# 
  3084     0517                     	;# 
  3085     0518                     	;# 
  3086     0519                     	;# 
  3087     051A                     	;# 
  3088     051B                     	;# 
  3089     051C                     	;# 
  3090     051D                     	;# 
  3091     058C                     	;# 
  3092     058C                     	;# 
  3093     058D                     	;# 
  3094     058E                     	;# 
  3095     058F                     	;# 
  3096     058F                     	;# 
  3097     0590                     	;# 
  3098     0591                     	;# 
  3099     0592                     	;# 
  3100     0593                     	;# 
  3101     060C                     	;# 
  3102     060D                     	;# 
  3103     060E                     	;# 
  3104     060F                     	;# 
  3105     0610                     	;# 
  3106     0611                     	;# 
  3107     0612                     	;# 
  3108     0613                     	;# 
  3109     0614                     	;# 
  3110     0616                     	;# 
  3111     0617                     	;# 
  3112     0618                     	;# 
  3113     0619                     	;# 
  3114     061A                     	;# 
  3115     061B                     	;# 
  3116     061C                     	;# 
  3117     061D                     	;# 
  3118     061E                     	;# 
  3119     068C                     	;# 
  3120     068D                     	;# 
  3121     068E                     	;# 
  3122     068F                     	;# 
  3123     0690                     	;# 
  3124     0691                     	;# 
  3125     0692                     	;# 
  3126     0693                     	;# 
  3127     0694                     	;# 
  3128     070C                     	;# 
  3129     070D                     	;# 
  3130     070E                     	;# 
  3131     070F                     	;# 
  3132     0710                     	;# 
  3133     0711                     	;# 
  3134     0712                     	;# 
  3135     0713                     	;# 
  3136     0714                     	;# 
  3137     0716                     	;# 
  3138     0717                     	;# 
  3139     0718                     	;# 
  3140     0719                     	;# 
  3141     071A                     	;# 
  3142     071B                     	;# 
  3143     071C                     	;# 
  3144     071D                     	;# 
  3145     071E                     	;# 
  3146     0796                     	;# 
  3147     0797                     	;# 
  3148     0798                     	;# 
  3149     0799                     	;# 
  3150     079A                     	;# 
  3151     079B                     	;# 
  3152     080C                     	;# 
  3153     080D                     	;# 
  3154     080E                     	;# 
  3155     080F                     	;# 
  3156     0810                     	;# 
  3157     0811                     	;# 
  3158     0812                     	;# 
  3159     0813                     	;# 
  3160     0814                     	;# 
  3161     081A                     	;# 
  3162     081B                     	;# 
  3163     081C                     	;# 
  3164     081D                     	;# 
  3165     081E                     	;# 
  3166     081F                     	;# 
  3167     088C                     	;# 
  3168     088D                     	;# 
  3169     088E                     	;# 
  3170     088F                     	;# 
  3171     0890                     	;# 
  3172     0891                     	;# 
  3173     0892                     	;# 
  3174     0893                     	;# 
  3175     0895                     	;# 
  3176     0896                     	;# 
  3177     0897                     	;# 
  3178     0898                     	;# 
  3179     0899                     	;# 
  3180     089A                     	;# 
  3181     089B                     	;# 
  3182     090C                     	;# 
  3183     090E                     	;# 
  3184     090F                     	;# 
  3185     091F                     	;# 
  3186     091F                     	;# 
  3187     098F                     	;# 
  3188     098F                     	;# 
  3189     0990                     	;# 
  3190     0991                     	;# 
  3191     0992                     	;# 
  3192     0993                     	;# 
  3193     0994                     	;# 
  3194     0995                     	;# 
  3195     0996                     	;# 
  3196     0997                     	;# 
  3197     0E0F                     	;# 
  3198     0E10                     	;# 
  3199     0E11                     	;# 
  3200     0E12                     	;# 
  3201     0E13                     	;# 
  3202     0E14                     	;# 
  3203     0E15                     	;# 
  3204     0E16                     	;# 
  3205     0E17                     	;# 
  3206     0E18                     	;# 
  3207     0E19                     	;# 
  3208     0E1A                     	;# 
  3209     0E1B                     	;# 
  3210     0E1C                     	;# 
  3211     0E1D                     	;# 
  3212     0E1E                     	;# 
  3213     0E1F                     	;# 
  3214     0E20                     	;# 
  3215     0E21                     	;# 
  3216     0E22                     	;# 
  3217     0E23                     	;# 
  3218     0E24                     	;# 
  3219     0E25                     	;# 
  3220     0E26                     	;# 
  3221     0E27                     	;# 
  3222     0E28                     	;# 
  3223     0E29                     	;# 
  3224     0E2A                     	;# 
  3225     0E2B                     	;# 
  3226     0E2C                     	;# 
  3227     0E2D                     	;# 
  3228     0E2E                     	;# 
  3229     0E2F                     	;# 
  3230     0E30                     	;# 
  3231     0E31                     	;# 
  3232     0E32                     	;# 
  3233     0E33                     	;# 
  3234     0E34                     	;# 
  3235     0E35                     	;# 
  3236     0E36                     	;# 
  3237     0E37                     	;# 
  3238     0E8F                     	;# 
  3239     0E90                     	;# 
  3240     0E91                     	;# 
  3241     0E92                     	;# 
  3242     0E93                     	;# 
  3243     0E94                     	;# 
  3244     0E95                     	;# 
  3245     0E96                     	;# 
  3246     0E97                     	;# 
  3247     0E9C                     	;# 
  3248     0E9D                     	;# 
  3249     0E9E                     	;# 
  3250     0EA1                     	;# 
  3251     0EA2                     	;# 
  3252     0EA3                     	;# 
  3253     0EA4                     	;# 
  3254     0EA5                     	;# 
  3255     0EA9                     	;# 
  3256     0EAA                     	;# 
  3257     0EAB                     	;# 
  3258     0EAC                     	;# 
  3259     0EB1                     	;# 
  3260     0EB2                     	;# 
  3261     0EB3                     	;# 
  3262     0EB8                     	;# 
  3263     0EB9                     	;# 
  3264     0EBA                     	;# 
  3265     0EBB                     	;# 
  3266     0EBC                     	;# 
  3267     0EBD                     	;# 
  3268     0EBE                     	;# 
  3269     0EC3                     	;# 
  3270     0EC5                     	;# 
  3271     0EC6                     	;# 
  3272     0EC7                     	;# 
  3273     0EC8                     	;# 
  3274     0EC9                     	;# 
  3275     0ECA                     	;# 
  3276     0ECB                     	;# 
  3277     0ECC                     	;# 
  3278     0F10                     	;# 
  3279     0F11                     	;# 
  3280     0F12                     	;# 
  3281     0F13                     	;# 
  3282     0F14                     	;# 
  3283     0F15                     	;# 
  3284     0F16                     	;# 
  3285     0F17                     	;# 
  3286     0F18                     	;# 
  3287     0F19                     	;# 
  3288     0F1A                     	;# 
  3289     0F1B                     	;# 
  3290     0F1C                     	;# 
  3291     0F1D                     	;# 
  3292     0F1E                     	;# 
  3293     0F1F                     	;# 
  3294     0F20                     	;# 
  3295     0F21                     	;# 
  3296     0F22                     	;# 
  3297     0F23                     	;# 
  3298     0F24                     	;# 
  3299     0F25                     	;# 
  3300     0F26                     	;# 
  3301     0F27                     	;# 
  3302     0F28                     	;# 
  3303     0F29                     	;# 
  3304     0F2A                     	;# 
  3305     0F2B                     	;# 
  3306     0F2C                     	;# 
  3307     0F2D                     	;# 
  3308     0F2E                     	;# 
  3309     0F2F                     	;# 
  3310     0F30                     	;# 
  3311     0F31                     	;# 
  3312     0F32                     	;# 
  3313     0F38                     	;# 
  3314     0F39                     	;# 
  3315     0F3A                     	;# 
  3316     0F3B                     	;# 
  3317     0F3C                     	;# 
  3318     0F3D                     	;# 
  3319     0F3E                     	;# 
  3320     0F3F                     	;# 
  3321     0F40                     	;# 
  3322     0F41                     	;# 
  3323     0F43                     	;# 
  3324     0F44                     	;# 
  3325     0F45                     	;# 
  3326     0F46                     	;# 
  3327     0F47                     	;# 
  3328     0F48                     	;# 
  3329     0F49                     	;# 
  3330     0F4A                     	;# 
  3331     0F4B                     	;# 
  3332     0F4C                     	;# 
  3333     0F4E                     	;# 
  3334     0F4F                     	;# 
  3335     0F50                     	;# 
  3336     0F51                     	;# 
  3337     0F52                     	;# 
  3338     0F53                     	;# 
  3339     0F54                     	;# 
  3340     0F55                     	;# 
  3341     0F56                     	;# 
  3342     0F57                     	;# 
  3343     0F59                     	;# 
  3344     0F5A                     	;# 
  3345     0F5B                     	;# 
  3346     0F5C                     	;# 
  3347     0F5D                     	;# 
  3348     0F61                     	;# 
  3349     0F62                     	;# 
  3350     0F64                     	;# 
  3351     0F65                     	;# 
  3352     0F66                     	;# 
  3353     0F67                     	;# 
  3354     0F68                     	;# 
  3355     0F69                     	;# 
  3356     0F6A                     	;# 
  3357     0F6B                     	;# 
  3358     0F6C                     	;# 
  3359     0F6D                     	;# 
  3360     0FE4                     	;# 
  3361     0FE5                     	;# 
  3362     0FE6                     	;# 
  3363     0FE7                     	;# 
  3364     0FE8                     	;# 
  3365     0FE9                     	;# 
  3366     0FEA                     	;# 
  3367     0FEB                     	;# 
  3368     0FED                     	;# 
  3369     0FEE                     	;# 
  3370     0FEF                     	;# 
  3371     0000                     	;# 
  3372     0001                     	;# 
  3373     0002                     	;# 
  3374     0003                     	;# 
  3375     0004                     	;# 
  3376     0005                     	;# 
  3377     0006                     	;# 
  3378     0007                     	;# 
  3379     0008                     	;# 
  3380     0009                     	;# 
  3381     000A                     	;# 
  3382     000B                     	;# 
  3383     000C                     	;# 
  3384     000D                     	;# 
  3385     000E                     	;# 
  3386     000F                     	;# 
  3387     0010                     	;# 
  3388     0011                     	;# 
  3389     0012                     	;# 
  3390     0013                     	;# 
  3391     0014                     	;# 
  3392     0015                     	;# 
  3393     0016                     	;# 
  3394     0017                     	;# 
  3395     0018                     	;# 
  3396     0019                     	;# 
  3397     001A                     	;# 
  3398     001C                     	;# 
  3399     001C                     	;# 
  3400     001D                     	;# 
  3401     001D                     	;# 
  3402     001E                     	;# 
  3403     001F                     	;# 
  3404     008C                     	;# 
  3405     008C                     	;# 
  3406     008D                     	;# 
  3407     008E                     	;# 
  3408     008E                     	;# 
  3409     008F                     	;# 
  3410     0090                     	;# 
  3411     0090                     	;# 
  3412     0091                     	;# 
  3413     0093                     	;# 
  3414     0094                     	;# 
  3415     0095                     	;# 
  3416     0096                     	;# 
  3417     0097                     	;# 
  3418     0098                     	;# 
  3419     0099                     	;# 
  3420     009A                     	;# 
  3421     009B                     	;# 
  3422     009C                     	;# 
  3423     009D                     	;# 
  3424     009E                     	;# 
  3425     010C                     	;# 
  3426     010D                     	;# 
  3427     010E                     	;# 
  3428     010E                     	;# 
  3429     010F                     	;# 
  3430     0110                     	;# 
  3431     0110                     	;# 
  3432     0111                     	;# 
  3433     0112                     	;# 
  3434     0112                     	;# 
  3435     0113                     	;# 
  3436     0114                     	;# 
  3437     0114                     	;# 
  3438     0115                     	;# 
  3439     0116                     	;# 
  3440     0116                     	;# 
  3441     0117                     	;# 
  3442     0119                     	;# 
  3443     0119                     	;# 
  3444     0119                     	;# 
  3445     011A                     	;# 
  3446     011A                     	;# 
  3447     011A                     	;# 
  3448     011B                     	;# 
  3449     011B                     	;# 
  3450     011B                     	;# 
  3451     011B                     	;# 
  3452     011B                     	;# 
  3453     011C                     	;# 
  3454     011C                     	;# 
  3455     011C                     	;# 
  3456     011D                     	;# 
  3457     011D                     	;# 
  3458     011D                     	;# 
  3459     011E                     	;# 
  3460     011E                     	;# 
  3461     011E                     	;# 
  3462     011F                     	;# 
  3463     011F                     	;# 
  3464     011F                     	;# 
  3465     011F                     	;# 
  3466     011F                     	;# 
  3467     018C                     	;# 
  3468     018D                     	;# 
  3469     018E                     	;# 
  3470     018F                     	;# 
  3471     0190                     	;# 
  3472     0191                     	;# 
  3473     0192                     	;# 
  3474     0196                     	;# 
  3475     0197                     	;# 
  3476     0198                     	;# 
  3477     0199                     	;# 
  3478     019A                     	;# 
  3479     019B                     	;# 
  3480     019C                     	;# 
  3481     020C                     	;# 
  3482     020C                     	;# 
  3483     020D                     	;# 
  3484     020E                     	;# 
  3485     020F                     	;# 
  3486     020F                     	;# 
  3487     0210                     	;# 
  3488     0210                     	;# 
  3489     0211                     	;# 
  3490     0211                     	;# 
  3491     0212                     	;# 
  3492     0212                     	;# 
  3493     0213                     	;# 
  3494     0214                     	;# 
  3495     0215                     	;# 
  3496     0215                     	;# 
  3497     0216                     	;# 
  3498     0216                     	;# 
  3499     0217                     	;# 
  3500     0217                     	;# 
  3501     0218                     	;# 
  3502     0218                     	;# 
  3503     0219                     	;# 
  3504     021A                     	;# 
  3505     021B                     	;# 
  3506     021B                     	;# 
  3507     021C                     	;# 
  3508     021C                     	;# 
  3509     021D                     	;# 
  3510     021D                     	;# 
  3511     021E                     	;# 
  3512     021F                     	;# 
  3513     028C                     	;# 
  3514     028C                     	;# 
  3515     028D                     	;# 
  3516     028D                     	;# 
  3517     028E                     	;# 
  3518     028F                     	;# 
  3519     0290                     	;# 
  3520     0290                     	;# 
  3521     0291                     	;# 
  3522     0292                     	;# 
  3523     0292                     	;# 
  3524     0293                     	;# 
  3525     0293                     	;# 
  3526     0294                     	;# 
  3527     0295                     	;# 
  3528     0296                     	;# 
  3529     0296                     	;# 
  3530     0297                     	;# 
  3531     0298                     	;# 
  3532     0298                     	;# 
  3533     0299                     	;# 
  3534     0299                     	;# 
  3535     029A                     	;# 
  3536     029B                     	;# 
  3537     029C                     	;# 
  3538     029C                     	;# 
  3539     029D                     	;# 
  3540     030C                     	;# 
  3541     030C                     	;# 
  3542     030D                     	;# 
  3543     030E                     	;# 
  3544     030F                     	;# 
  3545     0310                     	;# 
  3546     0310                     	;# 
  3547     0311                     	;# 
  3548     0312                     	;# 
  3549     0313                     	;# 
  3550     0314                     	;# 
  3551     0314                     	;# 
  3552     0315                     	;# 
  3553     0316                     	;# 
  3554     0317                     	;# 
  3555     0318                     	;# 
  3556     0318                     	;# 
  3557     0319                     	;# 
  3558     031A                     	;# 
  3559     031B                     	;# 
  3560     031C                     	;# 
  3561     031C                     	;# 
  3562     031D                     	;# 
  3563     031E                     	;# 
  3564     031F                     	;# 
  3565     038C                     	;# 
  3566     038C                     	;# 
  3567     038D                     	;# 
  3568     038E                     	;# 
  3569     0390                     	;# 
  3570     0390                     	;# 
  3571     0391                     	;# 
  3572     0392                     	;# 
  3573     040C                     	;# 
  3574     040D                     	;# 
  3575     040E                     	;# 
  3576     040F                     	;# 
  3577     0410                     	;# 
  3578     0411                     	;# 
  3579     0416                     	;# 
  3580     0416                     	;# 
  3581     0417                     	;# 
  3582     0418                     	;# 
  3583     0418                     	;# 
  3584     0419                     	;# 
  3585     041A                     	;# 
  3586     041A                     	;# 
  3587     041B                     	;# 
  3588     041C                     	;# 
  3589     041C                     	;# 
  3590     041D                     	;# 
  3591     041E                     	;# 
  3592     041F                     	;# 
  3593     048C                     	;# 
  3594     048C                     	;# 
  3595     048D                     	;# 
  3596     048E                     	;# 
  3597     048F                     	;# 
  3598     048F                     	;# 
  3599     0490                     	;# 
  3600     0491                     	;# 
  3601     0492                     	;# 
  3602     0492                     	;# 
  3603     0493                     	;# 
  3604     0494                     	;# 
  3605     0495                     	;# 
  3606     0495                     	;# 
  3607     0496                     	;# 
  3608     0497                     	;# 
  3609     0498                     	;# 
  3610     0499                     	;# 
  3611     049A                     	;# 
  3612     049B                     	;# 
  3613     049C                     	;# 
  3614     049D                     	;# 
  3615     050C                     	;# 
  3616     050C                     	;# 
  3617     050D                     	;# 
  3618     050E                     	;# 
  3619     050F                     	;# 
  3620     050F                     	;# 
  3621     0510                     	;# 
  3622     0511                     	;# 
  3623     0512                     	;# 
  3624     0512                     	;# 
  3625     0513                     	;# 
  3626     0514                     	;# 
  3627     0515                     	;# 
  3628     0515                     	;# 
  3629     0516                     	;# 
  3630     0517                     	;# 
  3631     0518                     	;# 
  3632     0519                     	;# 
  3633     051A                     	;# 
  3634     051B                     	;# 
  3635     051C                     	;# 
  3636     051D                     	;# 
  3637     058C                     	;# 
  3638     058C                     	;# 
  3639     058D                     	;# 
  3640     058E                     	;# 
  3641     058F                     	;# 
  3642     058F                     	;# 
  3643     0590                     	;# 
  3644     0591                     	;# 
  3645     0592                     	;# 
  3646     0593                     	;# 
  3647     060C                     	;# 
  3648     060D                     	;# 
  3649     060E                     	;# 
  3650     060F                     	;# 
  3651     0610                     	;# 
  3652     0611                     	;# 
  3653     0612                     	;# 
  3654     0613                     	;# 
  3655     0614                     	;# 
  3656     0616                     	;# 
  3657     0617                     	;# 
  3658     0618                     	;# 
  3659     0619                     	;# 
  3660     061A                     	;# 
  3661     061B                     	;# 
  3662     061C                     	;# 
  3663     061D                     	;# 
  3664     061E                     	;# 
  3665     068C                     	;# 
  3666     068D                     	;# 
  3667     068E                     	;# 
  3668     068F                     	;# 
  3669     0690                     	;# 
  3670     0691                     	;# 
  3671     0692                     	;# 
  3672     0693                     	;# 
  3673     0694                     	;# 
  3674     070C                     	;# 
  3675     070D                     	;# 
  3676     070E                     	;# 
  3677     070F                     	;# 
  3678     0710                     	;# 
  3679     0711                     	;# 
  3680     0712                     	;# 
  3681     0713                     	;# 
  3682     0714                     	;# 
  3683     0716                     	;# 
  3684     0717                     	;# 
  3685     0718                     	;# 
  3686     0719                     	;# 
  3687     071A                     	;# 
  3688     071B                     	;# 
  3689     071C                     	;# 
  3690     071D                     	;# 
  3691     071E                     	;# 
  3692     0796                     	;# 
  3693     0797                     	;# 
  3694     0798                     	;# 
  3695     0799                     	;# 
  3696     079A                     	;# 
  3697     079B                     	;# 
  3698     080C                     	;# 
  3699     080D                     	;# 
  3700     080E                     	;# 
  3701     080F                     	;# 
  3702     0810                     	;# 
  3703     0811                     	;# 
  3704     0812                     	;# 
  3705     0813                     	;# 
  3706     0814                     	;# 
  3707     081A                     	;# 
  3708     081B                     	;# 
  3709     081C                     	;# 
  3710     081D                     	;# 
  3711     081E                     	;# 
  3712     081F                     	;# 
  3713     088C                     	;# 
  3714     088D                     	;# 
  3715     088E                     	;# 
  3716     088F                     	;# 
  3717     0890                     	;# 
  3718     0891                     	;# 
  3719     0892                     	;# 
  3720     0893                     	;# 
  3721     0895                     	;# 
  3722     0896                     	;# 
  3723     0897                     	;# 
  3724     0898                     	;# 
  3725     0899                     	;# 
  3726     089A                     	;# 
  3727     089B                     	;# 
  3728     090C                     	;# 
  3729     090E                     	;# 
  3730     090F                     	;# 
  3731     091F                     	;# 
  3732     091F                     	;# 
  3733     098F                     	;# 
  3734     098F                     	;# 
  3735     0990                     	;# 
  3736     0991                     	;# 
  3737     0992                     	;# 
  3738     0993                     	;# 
  3739     0994                     	;# 
  3740     0995                     	;# 
  3741     0996                     	;# 
  3742     0997                     	;# 
  3743     0E0F                     	;# 
  3744     0E10                     	;# 
  3745     0E11                     	;# 
  3746     0E12                     	;# 
  3747     0E13                     	;# 
  3748     0E14                     	;# 
  3749     0E15                     	;# 
  3750     0E16                     	;# 
  3751     0E17                     	;# 
  3752     0E18                     	;# 
  3753     0E19                     	;# 
  3754     0E1A                     	;# 
  3755     0E1B                     	;# 
  3756     0E1C                     	;# 
  3757     0E1D                     	;# 
  3758     0E1E                     	;# 
  3759     0E1F                     	;# 
  3760     0E20                     	;# 
  3761     0E21                     	;# 
  3762     0E22                     	;# 
  3763     0E23                     	;# 
  3764     0E24                     	;# 
  3765     0E25                     	;# 
  3766     0E26                     	;# 
  3767     0E27                     	;# 
  3768     0E28                     	;# 
  3769     0E29                     	;# 
  3770     0E2A                     	;# 
  3771     0E2B                     	;# 
  3772     0E2C                     	;# 
  3773     0E2D                     	;# 
  3774     0E2E                     	;# 
  3775     0E2F                     	;# 
  3776     0E30                     	;# 
  3777     0E31                     	;# 
  3778     0E32                     	;# 
  3779     0E33                     	;# 
  3780     0E34                     	;# 
  3781     0E35                     	;# 
  3782     0E36                     	;# 
  3783     0E37                     	;# 
  3784     0E8F                     	;# 
  3785     0E90                     	;# 
  3786     0E91                     	;# 
  3787     0E92                     	;# 
  3788     0E93                     	;# 
  3789     0E94                     	;# 
  3790     0E95                     	;# 
  3791     0E96                     	;# 
  3792     0E97                     	;# 
  3793     0E9C                     	;# 
  3794     0E9D                     	;# 
  3795     0E9E                     	;# 
  3796     0EA1                     	;# 
  3797     0EA2                     	;# 
  3798     0EA3                     	;# 
  3799     0EA4                     	;# 
  3800     0EA5                     	;# 
  3801     0EA9                     	;# 
  3802     0EAA                     	;# 
  3803     0EAB                     	;# 
  3804     0EAC                     	;# 
  3805     0EB1                     	;# 
  3806     0EB2                     	;# 
  3807     0EB3                     	;# 
  3808     0EB8                     	;# 
  3809     0EB9                     	;# 
  3810     0EBA                     	;# 
  3811     0EBB                     	;# 
  3812     0EBC                     	;# 
  3813     0EBD                     	;# 
  3814     0EBE                     	;# 
  3815     0EC3                     	;# 
  3816     0EC5                     	;# 
  3817     0EC6                     	;# 
  3818     0EC7                     	;# 
  3819     0EC8                     	;# 
  3820     0EC9                     	;# 
  3821     0ECA                     	;# 
  3822     0ECB                     	;# 
  3823     0ECC                     	;# 
  3824     0F10                     	;# 
  3825     0F11                     	;# 
  3826     0F12                     	;# 
  3827     0F13                     	;# 
  3828     0F14                     	;# 
  3829     0F15                     	;# 
  3830     0F16                     	;# 
  3831     0F17                     	;# 
  3832     0F18                     	;# 
  3833     0F19                     	;# 
  3834     0F1A                     	;# 
  3835     0F1B                     	;# 
  3836     0F1C                     	;# 
  3837     0F1D                     	;# 
  3838     0F1E                     	;# 
  3839     0F1F                     	;# 
  3840     0F20                     	;# 
  3841     0F21                     	;# 
  3842     0F22                     	;# 
  3843     0F23                     	;# 
  3844     0F24                     	;# 
  3845     0F25                     	;# 
  3846     0F26                     	;# 
  3847     0F27                     	;# 
  3848     0F28                     	;# 
  3849     0F29                     	;# 
  3850     0F2A                     	;# 
  3851     0F2B                     	;# 
  3852     0F2C                     	;# 
  3853     0F2D                     	;# 
  3854     0F2E                     	;# 
  3855     0F2F                     	;# 
  3856     0F30                     	;# 
  3857     0F31                     	;# 
  3858     0F32                     	;# 
  3859     0F38                     	;# 
  3860     0F39                     	;# 
  3861     0F3A                     	;# 
  3862     0F3B                     	;# 
  3863     0F3C                     	;# 
  3864     0F3D                     	;# 
  3865     0F3E                     	;# 
  3866     0F3F                     	;# 
  3867     0F40                     	;# 
  3868     0F41                     	;# 
  3869     0F43                     	;# 
  3870     0F44                     	;# 
  3871     0F45                     	;# 
  3872     0F46                     	;# 
  3873     0F47                     	;# 
  3874     0F48                     	;# 
  3875     0F49                     	;# 
  3876     0F4A                     	;# 
  3877     0F4B                     	;# 
  3878     0F4C                     	;# 
  3879     0F4E                     	;# 
  3880     0F4F                     	;# 
  3881     0F50                     	;# 
  3882     0F51                     	;# 
  3883     0F52                     	;# 
  3884     0F53                     	;# 
  3885     0F54                     	;# 
  3886     0F55                     	;# 
  3887     0F56                     	;# 
  3888     0F57                     	;# 
  3889     0F59                     	;# 
  3890     0F5A                     	;# 
  3891     0F5B                     	;# 
  3892     0F5C                     	;# 
  3893     0F5D                     	;# 
  3894     0F61                     	;# 
  3895     0F62                     	;# 
  3896     0F64                     	;# 
  3897     0F65                     	;# 
  3898     0F66                     	;# 
  3899     0F67                     	;# 
  3900     0F68                     	;# 
  3901     0F69                     	;# 
  3902     0F6A                     	;# 
  3903     0F6B                     	;# 
  3904     0F6C                     	;# 
  3905     0F6D                     	;# 
  3906     0FE4                     	;# 
  3907     0FE5                     	;# 
  3908     0FE6                     	;# 
  3909     0FE7                     	;# 
  3910     0FE8                     	;# 
  3911     0FE9                     	;# 
  3912     0FEA                     	;# 
  3913     0FEB                     	;# 
  3914     0FED                     	;# 
  3915     0FEE                     	;# 
  3916     0FEF                     	;# 
  3917     0000                     	;# 
  3918     0001                     	;# 
  3919     0002                     	;# 
  3920     0003                     	;# 
  3921     0004                     	;# 
  3922     0005                     	;# 
  3923     0006                     	;# 
  3924     0007                     	;# 
  3925     0008                     	;# 
  3926     0009                     	;# 
  3927     000A                     	;# 
  3928     000B                     	;# 
  3929     000C                     	;# 
  3930     000D                     	;# 
  3931     000E                     	;# 
  3932     000F                     	;# 
  3933     0010                     	;# 
  3934     0011                     	;# 
  3935     0012                     	;# 
  3936     0013                     	;# 
  3937     0014                     	;# 
  3938     0015                     	;# 
  3939     0016                     	;# 
  3940     0017                     	;# 
  3941     0018                     	;# 
  3942     0019                     	;# 
  3943     001A                     	;# 
  3944     001C                     	;# 
  3945     001C                     	;# 
  3946     001D                     	;# 
  3947     001D                     	;# 
  3948     001E                     	;# 
  3949     001F                     	;# 
  3950     008C                     	;# 
  3951     008C                     	;# 
  3952     008D                     	;# 
  3953     008E                     	;# 
  3954     008E                     	;# 
  3955     008F                     	;# 
  3956     0090                     	;# 
  3957     0090                     	;# 
  3958     0091                     	;# 
  3959     0093                     	;# 
  3960     0094                     	;# 
  3961     0095                     	;# 
  3962     0096                     	;# 
  3963     0097                     	;# 
  3964     0098                     	;# 
  3965     0099                     	;# 
  3966     009A                     	;# 
  3967     009B                     	;# 
  3968     009C                     	;# 
  3969     009D                     	;# 
  3970     009E                     	;# 
  3971     010C                     	;# 
  3972     010D                     	;# 
  3973     010E                     	;# 
  3974     010E                     	;# 
  3975     010F                     	;# 
  3976     0110                     	;# 
  3977     0110                     	;# 
  3978     0111                     	;# 
  3979     0112                     	;# 
  3980     0112                     	;# 
  3981     0113                     	;# 
  3982     0114                     	;# 
  3983     0114                     	;# 
  3984     0115                     	;# 
  3985     0116                     	;# 
  3986     0116                     	;# 
  3987     0117                     	;# 
  3988     0119                     	;# 
  3989     0119                     	;# 
  3990     0119                     	;# 
  3991     011A                     	;# 
  3992     011A                     	;# 
  3993     011A                     	;# 
  3994     011B                     	;# 
  3995     011B                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011B                     	;# 
  3999     011C                     	;# 
  4000     011C                     	;# 
  4001     011C                     	;# 
  4002     011D                     	;# 
  4003     011D                     	;# 
  4004     011D                     	;# 
  4005     011E                     	;# 
  4006     011E                     	;# 
  4007     011E                     	;# 
  4008     011F                     	;# 
  4009     011F                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     011F                     	;# 
  4013     018C                     	;# 
  4014     018D                     	;# 
  4015     018E                     	;# 
  4016     018F                     	;# 
  4017     0190                     	;# 
  4018     0191                     	;# 
  4019     0192                     	;# 
  4020     0196                     	;# 
  4021     0197                     	;# 
  4022     0198                     	;# 
  4023     0199                     	;# 
  4024     019A                     	;# 
  4025     019B                     	;# 
  4026     019C                     	;# 
  4027     020C                     	;# 
  4028     020C                     	;# 
  4029     020D                     	;# 
  4030     020E                     	;# 
  4031     020F                     	;# 
  4032     020F                     	;# 
  4033     0210                     	;# 
  4034     0210                     	;# 
  4035     0211                     	;# 
  4036     0211                     	;# 
  4037     0212                     	;# 
  4038     0212                     	;# 
  4039     0213                     	;# 
  4040     0214                     	;# 
  4041     0215                     	;# 
  4042     0215                     	;# 
  4043     0216                     	;# 
  4044     0216                     	;# 
  4045     0217                     	;# 
  4046     0217                     	;# 
  4047     0218                     	;# 
  4048     0218                     	;# 
  4049     0219                     	;# 
  4050     021A                     	;# 
  4051     021B                     	;# 
  4052     021B                     	;# 
  4053     021C                     	;# 
  4054     021C                     	;# 
  4055     021D                     	;# 
  4056     021D                     	;# 
  4057     021E                     	;# 
  4058     021F                     	;# 
  4059     028C                     	;# 
  4060     028C                     	;# 
  4061     028D                     	;# 
  4062     028D                     	;# 
  4063     028E                     	;# 
  4064     028F                     	;# 
  4065     0290                     	;# 
  4066     0290                     	;# 
  4067     0291                     	;# 
  4068     0292                     	;# 
  4069     0292                     	;# 
  4070     0293                     	;# 
  4071     0293                     	;# 
  4072     0294                     	;# 
  4073     0295                     	;# 
  4074     0296                     	;# 
  4075     0296                     	;# 
  4076     0297                     	;# 
  4077     0298                     	;# 
  4078     0298                     	;# 
  4079     0299                     	;# 
  4080     0299                     	;# 
  4081     029A                     	;# 
  4082     029B                     	;# 
  4083     029C                     	;# 
  4084     029C                     	;# 
  4085     029D                     	;# 
  4086     030C                     	;# 
  4087     030C                     	;# 
  4088     030D                     	;# 
  4089     030E                     	;# 
  4090     030F                     	;# 
  4091     0310                     	;# 
  4092     0310                     	;# 
  4093     0311                     	;# 
  4094     0312                     	;# 
  4095     0313                     	;# 
  4096     0314                     	;# 
  4097     0314                     	;# 
  4098     0315                     	;# 
  4099     0316                     	;# 
  4100     0317                     	;# 
  4101     0318                     	;# 
  4102     0318                     	;# 
  4103     0319                     	;# 
  4104     031A                     	;# 
  4105     031B                     	;# 
  4106     031C                     	;# 
  4107     031C                     	;# 
  4108     031D                     	;# 
  4109     031E                     	;# 
  4110     031F                     	;# 
  4111     038C                     	;# 
  4112     038C                     	;# 
  4113     038D                     	;# 
  4114     038E                     	;# 
  4115     0390                     	;# 
  4116     0390                     	;# 
  4117     0391                     	;# 
  4118     0392                     	;# 
  4119     040C                     	;# 
  4120     040D                     	;# 
  4121     040E                     	;# 
  4122     040F                     	;# 
  4123     0410                     	;# 
  4124     0411                     	;# 
  4125     0416                     	;# 
  4126     0416                     	;# 
  4127     0417                     	;# 
  4128     0418                     	;# 
  4129     0418                     	;# 
  4130     0419                     	;# 
  4131     041A                     	;# 
  4132     041A                     	;# 
  4133     041B                     	;# 
  4134     041C                     	;# 
  4135     041C                     	;# 
  4136     041D                     	;# 
  4137     041E                     	;# 
  4138     041F                     	;# 
  4139     048C                     	;# 
  4140     048C                     	;# 
  4141     048D                     	;# 
  4142     048E                     	;# 
  4143     048F                     	;# 
  4144     048F                     	;# 
  4145     0490                     	;# 
  4146     0491                     	;# 
  4147     0492                     	;# 
  4148     0492                     	;# 
  4149     0493                     	;# 
  4150     0494                     	;# 
  4151     0495                     	;# 
  4152     0495                     	;# 
  4153     0496                     	;# 
  4154     0497                     	;# 
  4155     0498                     	;# 
  4156     0499                     	;# 
  4157     049A                     	;# 
  4158     049B                     	;# 
  4159     049C                     	;# 
  4160     049D                     	;# 
  4161     050C                     	;# 
  4162     050C                     	;# 
  4163     050D                     	;# 
  4164     050E                     	;# 
  4165     050F                     	;# 
  4166     050F                     	;# 
  4167     0510                     	;# 
  4168     0511                     	;# 
  4169     0512                     	;# 
  4170     0512                     	;# 
  4171     0513                     	;# 
  4172     0514                     	;# 
  4173     0515                     	;# 
  4174     0515                     	;# 
  4175     0516                     	;# 
  4176     0517                     	;# 
  4177     0518                     	;# 
  4178     0519                     	;# 
  4179     051A                     	;# 
  4180     051B                     	;# 
  4181     051C                     	;# 
  4182     051D                     	;# 
  4183     058C                     	;# 
  4184     058C                     	;# 
  4185     058D                     	;# 
  4186     058E                     	;# 
  4187     058F                     	;# 
  4188     058F                     	;# 
  4189     0590                     	;# 
  4190     0591                     	;# 
  4191     0592                     	;# 
  4192     0593                     	;# 
  4193     060C                     	;# 
  4194     060D                     	;# 
  4195     060E                     	;# 
  4196     060F                     	;# 
  4197     0610                     	;# 
  4198     0611                     	;# 
  4199     0612                     	;# 
  4200     0613                     	;# 
  4201     0614                     	;# 
  4202     0616                     	;# 
  4203     0617                     	;# 
  4204     0618                     	;# 
  4205     0619                     	;# 
  4206     061A                     	;# 
  4207     061B                     	;# 
  4208     061C                     	;# 
  4209     061D                     	;# 
  4210     061E                     	;# 
  4211     068C                     	;# 
  4212     068D                     	;# 
  4213     068E                     	;# 
  4214     068F                     	;# 
  4215     0690                     	;# 
  4216     0691                     	;# 
  4217     0692                     	;# 
  4218     0693                     	;# 
  4219     0694                     	;# 
  4220     070C                     	;# 
  4221     070D                     	;# 
  4222     070E                     	;# 
  4223     070F                     	;# 
  4224     0710                     	;# 
  4225     0711                     	;# 
  4226     0712                     	;# 
  4227     0713                     	;# 
  4228     0714                     	;# 
  4229     0716                     	;# 
  4230     0717                     	;# 
  4231     0718                     	;# 
  4232     0719                     	;# 
  4233     071A                     	;# 
  4234     071B                     	;# 
  4235     071C                     	;# 
  4236     071D                     	;# 
  4237     071E                     	;# 
  4238     0796                     	;# 
  4239     0797                     	;# 
  4240     0798                     	;# 
  4241     0799                     	;# 
  4242     079A                     	;# 
  4243     079B                     	;# 
  4244     080C                     	;# 
  4245     080D                     	;# 
  4246     080E                     	;# 
  4247     080F                     	;# 
  4248     0810                     	;# 
  4249     0811                     	;# 
  4250     0812                     	;# 
  4251     0813                     	;# 
  4252     0814                     	;# 
  4253     081A                     	;# 
  4254     081B                     	;# 
  4255     081C                     	;# 
  4256     081D                     	;# 
  4257     081E                     	;# 
  4258     081F                     	;# 
  4259     088C                     	;# 
  4260     088D                     	;# 
  4261     088E                     	;# 
  4262     088F                     	;# 
  4263     0890                     	;# 
  4264     0891                     	;# 
  4265     0892                     	;# 
  4266     0893                     	;# 
  4267     0895                     	;# 
  4268     0896                     	;# 
  4269     0897                     	;# 
  4270     0898                     	;# 
  4271     0899                     	;# 
  4272     089A                     	;# 
  4273     089B                     	;# 
  4274     090C                     	;# 
  4275     090E                     	;# 
  4276     090F                     	;# 
  4277     091F                     	;# 
  4278     091F                     	;# 
  4279     098F                     	;# 
  4280     098F                     	;# 
  4281     0990                     	;# 
  4282     0991                     	;# 
  4283     0992                     	;# 
  4284     0993                     	;# 
  4285     0994                     	;# 
  4286     0995                     	;# 
  4287     0996                     	;# 
  4288     0997                     	;# 
  4289     0E0F                     	;# 
  4290     0E10                     	;# 
  4291     0E11                     	;# 
  4292     0E12                     	;# 
  4293     0E13                     	;# 
  4294     0E14                     	;# 
  4295     0E15                     	;# 
  4296     0E16                     	;# 
  4297     0E17                     	;# 
  4298     0E18                     	;# 
  4299     0E19                     	;# 
  4300     0E1A                     	;# 
  4301     0E1B                     	;# 
  4302     0E1C                     	;# 
  4303     0E1D                     	;# 
  4304     0E1E                     	;# 
  4305     0E1F                     	;# 
  4306     0E20                     	;# 
  4307     0E21                     	;# 
  4308     0E22                     	;# 
  4309     0E23                     	;# 
  4310     0E24                     	;# 
  4311     0E25                     	;# 
  4312     0E26                     	;# 
  4313     0E27                     	;# 
  4314     0E28                     	;# 
  4315     0E29                     	;# 
  4316     0E2A                     	;# 
  4317     0E2B                     	;# 
  4318     0E2C                     	;# 
  4319     0E2D                     	;# 
  4320     0E2E                     	;# 
  4321     0E2F                     	;# 
  4322     0E30                     	;# 
  4323     0E31                     	;# 
  4324     0E32                     	;# 
  4325     0E33                     	;# 
  4326     0E34                     	;# 
  4327     0E35                     	;# 
  4328     0E36                     	;# 
  4329     0E37                     	;# 
  4330     0E8F                     	;# 
  4331     0E90                     	;# 
  4332     0E91                     	;# 
  4333     0E92                     	;# 
  4334     0E93                     	;# 
  4335     0E94                     	;# 
  4336     0E95                     	;# 
  4337     0E96                     	;# 
  4338     0E97                     	;# 
  4339     0E9C                     	;# 
  4340     0E9D                     	;# 
  4341     0E9E                     	;# 
  4342     0EA1                     	;# 
  4343     0EA2                     	;# 
  4344     0EA3                     	;# 
  4345     0EA4                     	;# 
  4346     0EA5                     	;# 
  4347     0EA9                     	;# 
  4348     0EAA                     	;# 
  4349     0EAB                     	;# 
  4350     0EAC                     	;# 
  4351     0EB1                     	;# 
  4352     0EB2                     	;# 
  4353     0EB3                     	;# 
  4354     0EB8                     	;# 
  4355     0EB9                     	;# 
  4356     0EBA                     	;# 
  4357     0EBB                     	;# 
  4358     0EBC                     	;# 
  4359     0EBD                     	;# 
  4360     0EBE                     	;# 
  4361     0EC3                     	;# 
  4362     0EC5                     	;# 
  4363     0EC6                     	;# 
  4364     0EC7                     	;# 
  4365     0EC8                     	;# 
  4366     0EC9                     	;# 
  4367     0ECA                     	;# 
  4368     0ECB                     	;# 
  4369     0ECC                     	;# 
  4370     0F10                     	;# 
  4371     0F11                     	;# 
  4372     0F12                     	;# 
  4373     0F13                     	;# 
  4374     0F14                     	;# 
  4375     0F15                     	;# 
  4376     0F16                     	;# 
  4377     0F17                     	;# 
  4378     0F18                     	;# 
  4379     0F19                     	;# 
  4380     0F1A                     	;# 
  4381     0F1B                     	;# 
  4382     0F1C                     	;# 
  4383     0F1D                     	;# 
  4384     0F1E                     	;# 
  4385     0F1F                     	;# 
  4386     0F20                     	;# 
  4387     0F21                     	;# 
  4388     0F22                     	;# 
  4389     0F23                     	;# 
  4390     0F24                     	;# 
  4391     0F25                     	;# 
  4392     0F26                     	;# 
  4393     0F27                     	;# 
  4394     0F28                     	;# 
  4395     0F29                     	;# 
  4396     0F2A                     	;# 
  4397     0F2B                     	;# 
  4398     0F2C                     	;# 
  4399     0F2D                     	;# 
  4400     0F2E                     	;# 
  4401     0F2F                     	;# 
  4402     0F30                     	;# 
  4403     0F31                     	;# 
  4404     0F32                     	;# 
  4405     0F38                     	;# 
  4406     0F39                     	;# 
  4407     0F3A                     	;# 
  4408     0F3B                     	;# 
  4409     0F3C                     	;# 
  4410     0F3D                     	;# 
  4411     0F3E                     	;# 
  4412     0F3F                     	;# 
  4413     0F40                     	;# 
  4414     0F41                     	;# 
  4415     0F43                     	;# 
  4416     0F44                     	;# 
  4417     0F45                     	;# 
  4418     0F46                     	;# 
  4419     0F47                     	;# 
  4420     0F48                     	;# 
  4421     0F49                     	;# 
  4422     0F4A                     	;# 
  4423     0F4B                     	;# 
  4424     0F4C                     	;# 
  4425     0F4E                     	;# 
  4426     0F4F                     	;# 
  4427     0F50                     	;# 
  4428     0F51                     	;# 
  4429     0F52                     	;# 
  4430     0F53                     	;# 
  4431     0F54                     	;# 
  4432     0F55                     	;# 
  4433     0F56                     	;# 
  4434     0F57                     	;# 
  4435     0F59                     	;# 
  4436     0F5A                     	;# 
  4437     0F5B                     	;# 
  4438     0F5C                     	;# 
  4439     0F5D                     	;# 
  4440     0F61                     	;# 
  4441     0F62                     	;# 
  4442     0F64                     	;# 
  4443     0F65                     	;# 
  4444     0F66                     	;# 
  4445     0F67                     	;# 
  4446     0F68                     	;# 
  4447     0F69                     	;# 
  4448     0F6A                     	;# 
  4449     0F6B                     	;# 
  4450     0F6C                     	;# 
  4451     0F6D                     	;# 
  4452     0FE4                     	;# 
  4453     0FE5                     	;# 
  4454     0FE6                     	;# 
  4455     0FE7                     	;# 
  4456     0FE8                     	;# 
  4457     0FE9                     	;# 
  4458     0FEA                     	;# 
  4459     0FEB                     	;# 
  4460     0FED                     	;# 
  4461     0FEE                     	;# 
  4462     0FEF                     	;# 
  4463     0000                     	;# 
  4464     0001                     	;# 
  4465     0002                     	;# 
  4466     0003                     	;# 
  4467     0004                     	;# 
  4468     0005                     	;# 
  4469     0006                     	;# 
  4470     0007                     	;# 
  4471     0008                     	;# 
  4472     0009                     	;# 
  4473     000A                     	;# 
  4474     000B                     	;# 
  4475     000C                     	;# 
  4476     000D                     	;# 
  4477     000E                     	;# 
  4478     000F                     	;# 
  4479     0010                     	;# 
  4480     0011                     	;# 
  4481     0012                     	;# 
  4482     0013                     	;# 
  4483     0014                     	;# 
  4484     0015                     	;# 
  4485     0016                     	;# 
  4486     0017                     	;# 
  4487     0018                     	;# 
  4488     0019                     	;# 
  4489     001A                     	;# 
  4490     001C                     	;# 
  4491     001C                     	;# 
  4492     001D                     	;# 
  4493     001D                     	;# 
  4494     001E                     	;# 
  4495     001F                     	;# 
  4496     008C                     	;# 
  4497     008C                     	;# 
  4498     008D                     	;# 
  4499     008E                     	;# 
  4500     008E                     	;# 
  4501     008F                     	;# 
  4502     0090                     	;# 
  4503     0090                     	;# 
  4504     0091                     	;# 
  4505     0093                     	;# 
  4506     0094                     	;# 
  4507     0095                     	;# 
  4508     0096                     	;# 
  4509     0097                     	;# 
  4510     0098                     	;# 
  4511     0099                     	;# 
  4512     009A                     	;# 
  4513     009B                     	;# 
  4514     009C                     	;# 
  4515     009D                     	;# 
  4516     009E                     	;# 
  4517     010C                     	;# 
  4518     010D                     	;# 
  4519     010E                     	;# 
  4520     010E                     	;# 
  4521     010F                     	;# 
  4522     0110                     	;# 
  4523     0110                     	;# 
  4524     0111                     	;# 
  4525     0112                     	;# 
  4526     0112                     	;# 
  4527     0113                     	;# 
  4528     0114                     	;# 
  4529     0114                     	;# 
  4530     0115                     	;# 
  4531     0116                     	;# 
  4532     0116                     	;# 
  4533     0117                     	;# 
  4534     0119                     	;# 
  4535     0119                     	;# 
  4536     0119                     	;# 
  4537     011A                     	;# 
  4538     011A                     	;# 
  4539     011A                     	;# 
  4540     011B                     	;# 
  4541     011B                     	;# 
  4542     011B                     	;# 
  4543     011B                     	;# 
  4544     011B                     	;# 
  4545     011C                     	;# 
  4546     011C                     	;# 
  4547     011C                     	;# 
  4548     011D                     	;# 
  4549     011D                     	;# 
  4550     011D                     	;# 
  4551     011E                     	;# 
  4552     011E                     	;# 
  4553     011E                     	;# 
  4554     011F                     	;# 
  4555     011F                     	;# 
  4556     011F                     	;# 
  4557     011F                     	;# 
  4558     011F                     	;# 
  4559     018C                     	;# 
  4560     018D                     	;# 
  4561     018E                     	;# 
  4562     018F                     	;# 
  4563     0190                     	;# 
  4564     0191                     	;# 
  4565     0192                     	;# 
  4566     0196                     	;# 
  4567     0197                     	;# 
  4568     0198                     	;# 
  4569     0199                     	;# 
  4570     019A                     	;# 
  4571     019B                     	;# 
  4572     019C                     	;# 
  4573     020C                     	;# 
  4574     020C                     	;# 
  4575     020D                     	;# 
  4576     020E                     	;# 
  4577     020F                     	;# 
  4578     020F                     	;# 
  4579     0210                     	;# 
  4580     0210                     	;# 
  4581     0211                     	;# 
  4582     0211                     	;# 
  4583     0212                     	;# 
  4584     0212                     	;# 
  4585     0213                     	;# 
  4586     0214                     	;# 
  4587     0215                     	;# 
  4588     0215                     	;# 
  4589     0216                     	;# 
  4590     0216                     	;# 
  4591     0217                     	;# 
  4592     0217                     	;# 
  4593     0218                     	;# 
  4594     0218                     	;# 
  4595     0219                     	;# 
  4596     021A                     	;# 
  4597     021B                     	;# 
  4598     021B                     	;# 
  4599     021C                     	;# 
  4600     021C                     	;# 
  4601     021D                     	;# 
  4602     021D                     	;# 
  4603     021E                     	;# 
  4604     021F                     	;# 
  4605     028C                     	;# 
  4606     028C                     	;# 
  4607     028D                     	;# 
  4608     028D                     	;# 
  4609     028E                     	;# 
  4610     028F                     	;# 
  4611     0290                     	;# 
  4612     0290                     	;# 
  4613     0291                     	;# 
  4614     0292                     	;# 
  4615     0292                     	;# 
  4616     0293                     	;# 
  4617     0293                     	;# 
  4618     0294                     	;# 
  4619     0295                     	;# 
  4620     0296                     	;# 
  4621     0296                     	;# 
  4622     0297                     	;# 
  4623     0298                     	;# 
  4624     0298                     	;# 
  4625     0299                     	;# 
  4626     0299                     	;# 
  4627     029A                     	;# 
  4628     029B                     	;# 
  4629     029C                     	;# 
  4630     029C                     	;# 
  4631     029D                     	;# 
  4632     030C                     	;# 
  4633     030C                     	;# 
  4634     030D                     	;# 
  4635     030E                     	;# 
  4636     030F                     	;# 
  4637     0310                     	;# 
  4638     0310                     	;# 
  4639     0311                     	;# 
  4640     0312                     	;# 
  4641     0313                     	;# 
  4642     0314                     	;# 
  4643     0314                     	;# 
  4644     0315                     	;# 
  4645     0316                     	;# 
  4646     0317                     	;# 
  4647     0318                     	;# 
  4648     0318                     	;# 
  4649     0319                     	;# 
  4650     031A                     	;# 
  4651     031B                     	;# 
  4652     031C                     	;# 
  4653     031C                     	;# 
  4654     031D                     	;# 
  4655     031E                     	;# 
  4656     031F                     	;# 
  4657     038C                     	;# 
  4658     038C                     	;# 
  4659     038D                     	;# 
  4660     038E                     	;# 
  4661     0390                     	;# 
  4662     0390                     	;# 
  4663     0391                     	;# 
  4664     0392                     	;# 
  4665     040C                     	;# 
  4666     040D                     	;# 
  4667     040E                     	;# 
  4668     040F                     	;# 
  4669     0410                     	;# 
  4670     0411                     	;# 
  4671     0416                     	;# 
  4672     0416                     	;# 
  4673     0417                     	;# 
  4674     0418                     	;# 
  4675     0418                     	;# 
  4676     0419                     	;# 
  4677     041A                     	;# 
  4678     041A                     	;# 
  4679     041B                     	;# 
  4680     041C                     	;# 
  4681     041C                     	;# 
  4682     041D                     	;# 
  4683     041E                     	;# 
  4684     041F                     	;# 
  4685     048C                     	;# 
  4686     048C                     	;# 
  4687     048D                     	;# 
  4688     048E                     	;# 
  4689     048F                     	;# 
  4690     048F                     	;# 
  4691     0490                     	;# 
  4692     0491                     	;# 
  4693     0492                     	;# 
  4694     0492                     	;# 
  4695     0493                     	;# 
  4696     0494                     	;# 
  4697     0495                     	;# 
  4698     0495                     	;# 
  4699     0496                     	;# 
  4700     0497                     	;# 
  4701     0498                     	;# 
  4702     0499                     	;# 
  4703     049A                     	;# 
  4704     049B                     	;# 
  4705     049C                     	;# 
  4706     049D                     	;# 
  4707     050C                     	;# 
  4708     050C                     	;# 
  4709     050D                     	;# 
  4710     050E                     	;# 
  4711     050F                     	;# 
  4712     050F                     	;# 
  4713     0510                     	;# 
  4714     0511                     	;# 
  4715     0512                     	;# 
  4716     0512                     	;# 
  4717     0513                     	;# 
  4718     0514                     	;# 
  4719     0515                     	;# 
  4720     0515                     	;# 
  4721     0516                     	;# 
  4722     0517                     	;# 
  4723     0518                     	;# 
  4724     0519                     	;# 
  4725     051A                     	;# 
  4726     051B                     	;# 
  4727     051C                     	;# 
  4728     051D                     	;# 
  4729     058C                     	;# 
  4730     058C                     	;# 
  4731     058D                     	;# 
  4732     058E                     	;# 
  4733     058F                     	;# 
  4734     058F                     	;# 
  4735     0590                     	;# 
  4736     0591                     	;# 
  4737     0592                     	;# 
  4738     0593                     	;# 
  4739     060C                     	;# 
  4740     060D                     	;# 
  4741     060E                     	;# 
  4742     060F                     	;# 
  4743     0610                     	;# 
  4744     0611                     	;# 
  4745     0612                     	;# 
  4746     0613                     	;# 
  4747     0614                     	;# 
  4748     0616                     	;# 
  4749     0617                     	;# 
  4750     0618                     	;# 
  4751     0619                     	;# 
  4752     061A                     	;# 
  4753     061B                     	;# 
  4754     061C                     	;# 
  4755     061D                     	;# 
  4756     061E                     	;# 
  4757     068C                     	;# 
  4758     068D                     	;# 
  4759     068E                     	;# 
  4760     068F                     	;# 
  4761     0690                     	;# 
  4762     0691                     	;# 
  4763     0692                     	;# 
  4764     0693                     	;# 
  4765     0694                     	;# 
  4766     070C                     	;# 
  4767     070D                     	;# 
  4768     070E                     	;# 
  4769     070F                     	;# 
  4770     0710                     	;# 
  4771     0711                     	;# 
  4772     0712                     	;# 
  4773     0713                     	;# 
  4774     0714                     	;# 
  4775     0716                     	;# 
  4776     0717                     	;# 
  4777     0718                     	;# 
  4778     0719                     	;# 
  4779     071A                     	;# 
  4780     071B                     	;# 
  4781     071C                     	;# 
  4782     071D                     	;# 
  4783     071E                     	;# 
  4784     0796                     	;# 
  4785     0797                     	;# 
  4786     0798                     	;# 
  4787     0799                     	;# 
  4788     079A                     	;# 
  4789     079B                     	;# 
  4790     080C                     	;# 
  4791     080D                     	;# 
  4792     080E                     	;# 
  4793     080F                     	;# 
  4794     0810                     	;# 
  4795     0811                     	;# 
  4796     0812                     	;# 
  4797     0813                     	;# 
  4798     0814                     	;# 
  4799     081A                     	;# 
  4800     081B                     	;# 
  4801     081C                     	;# 
  4802     081D                     	;# 
  4803     081E                     	;# 
  4804     081F                     	;# 
  4805     088C                     	;# 
  4806     088D                     	;# 
  4807     088E                     	;# 
  4808     088F                     	;# 
  4809     0890                     	;# 
  4810     0891                     	;# 
  4811     0892                     	;# 
  4812     0893                     	;# 
  4813     0895                     	;# 
  4814     0896                     	;# 
  4815     0897                     	;# 
  4816     0898                     	;# 
  4817     0899                     	;# 
  4818     089A                     	;# 
  4819     089B                     	;# 
  4820     090C                     	;# 
  4821     090E                     	;# 
  4822     090F                     	;# 
  4823     091F                     	;# 
  4824     091F                     	;# 
  4825     098F                     	;# 
  4826     098F                     	;# 
  4827     0990                     	;# 
  4828     0991                     	;# 
  4829     0992                     	;# 
  4830     0993                     	;# 
  4831     0994                     	;# 
  4832     0995                     	;# 
  4833     0996                     	;# 
  4834     0997                     	;# 
  4835     0E0F                     	;# 
  4836     0E10                     	;# 
  4837     0E11                     	;# 
  4838     0E12                     	;# 
  4839     0E13                     	;# 
  4840     0E14                     	;# 
  4841     0E15                     	;# 
  4842     0E16                     	;# 
  4843     0E17                     	;# 
  4844     0E18                     	;# 
  4845     0E19                     	;# 
  4846     0E1A                     	;# 
  4847     0E1B                     	;# 
  4848     0E1C                     	;# 
  4849     0E1D                     	;# 
  4850     0E1E                     	;# 
  4851     0E1F                     	;# 
  4852     0E20                     	;# 
  4853     0E21                     	;# 
  4854     0E22                     	;# 
  4855     0E23                     	;# 
  4856     0E24                     	;# 
  4857     0E25                     	;# 
  4858     0E26                     	;# 
  4859     0E27                     	;# 
  4860     0E28                     	;# 
  4861     0E29                     	;# 
  4862     0E2A                     	;# 
  4863     0E2B                     	;# 
  4864     0E2C                     	;# 
  4865     0E2D                     	;# 
  4866     0E2E                     	;# 
  4867     0E2F                     	;# 
  4868     0E30                     	;# 
  4869     0E31                     	;# 
  4870     0E32                     	;# 
  4871     0E33                     	;# 
  4872     0E34                     	;# 
  4873     0E35                     	;# 
  4874     0E36                     	;# 
  4875     0E37                     	;# 
  4876     0E8F                     	;# 
  4877     0E90                     	;# 
  4878     0E91                     	;# 
  4879     0E92                     	;# 
  4880     0E93                     	;# 
  4881     0E94                     	;# 
  4882     0E95                     	;# 
  4883     0E96                     	;# 
  4884     0E97                     	;# 
  4885     0E9C                     	;# 
  4886     0E9D                     	;# 
  4887     0E9E                     	;# 
  4888     0EA1                     	;# 
  4889     0EA2                     	;# 
  4890     0EA3                     	;# 
  4891     0EA4                     	;# 
  4892     0EA5                     	;# 
  4893     0EA9                     	;# 
  4894     0EAA                     	;# 
  4895     0EAB                     	;# 
  4896     0EAC                     	;# 
  4897     0EB1                     	;# 
  4898     0EB2                     	;# 
  4899     0EB3                     	;# 
  4900     0EB8                     	;# 
  4901     0EB9                     	;# 
  4902     0EBA                     	;# 
  4903     0EBB                     	;# 
  4904     0EBC                     	;# 
  4905     0EBD                     	;# 
  4906     0EBE                     	;# 
  4907     0EC3                     	;# 
  4908     0EC5                     	;# 
  4909     0EC6                     	;# 
  4910     0EC7                     	;# 
  4911     0EC8                     	;# 
  4912     0EC9                     	;# 
  4913     0ECA                     	;# 
  4914     0ECB                     	;# 
  4915     0ECC                     	;# 
  4916     0F10                     	;# 
  4917     0F11                     	;# 
  4918     0F12                     	;# 
  4919     0F13                     	;# 
  4920     0F14                     	;# 
  4921     0F15                     	;# 
  4922     0F16                     	;# 
  4923     0F17                     	;# 
  4924     0F18                     	;# 
  4925     0F19                     	;# 
  4926     0F1A                     	;# 
  4927     0F1B                     	;# 
  4928     0F1C                     	;# 
  4929     0F1D                     	;# 
  4930     0F1E                     	;# 
  4931     0F1F                     	;# 
  4932     0F20                     	;# 
  4933     0F21                     	;# 
  4934     0F22                     	;# 
  4935     0F23                     	;# 
  4936     0F24                     	;# 
  4937     0F25                     	;# 
  4938     0F26                     	;# 
  4939     0F27                     	;# 
  4940     0F28                     	;# 
  4941     0F29                     	;# 
  4942     0F2A                     	;# 
  4943     0F2B                     	;# 
  4944     0F2C                     	;# 
  4945     0F2D                     	;# 
  4946     0F2E                     	;# 
  4947     0F2F                     	;# 
  4948     0F30                     	;# 
  4949     0F31                     	;# 
  4950     0F32                     	;# 
  4951     0F38                     	;# 
  4952     0F39                     	;# 
  4953     0F3A                     	;# 
  4954     0F3B                     	;# 
  4955     0F3C                     	;# 
  4956     0F3D                     	;# 
  4957     0F3E                     	;# 
  4958     0F3F                     	;# 
  4959     0F40                     	;# 
  4960     0F41                     	;# 
  4961     0F43                     	;# 
  4962     0F44                     	;# 
  4963     0F45                     	;# 
  4964     0F46                     	;# 
  4965     0F47                     	;# 
  4966     0F48                     	;# 
  4967     0F49                     	;# 
  4968     0F4A                     	;# 
  4969     0F4B                     	;# 
  4970     0F4C                     	;# 
  4971     0F4E                     	;# 
  4972     0F4F                     	;# 
  4973     0F50                     	;# 
  4974     0F51                     	;# 
  4975     0F52                     	;# 
  4976     0F53                     	;# 
  4977     0F54                     	;# 
  4978     0F55                     	;# 
  4979     0F56                     	;# 
  4980     0F57                     	;# 
  4981     0F59                     	;# 
  4982     0F5A                     	;# 
  4983     0F5B                     	;# 
  4984     0F5C                     	;# 
  4985     0F5D                     	;# 
  4986     0F61                     	;# 
  4987     0F62                     	;# 
  4988     0F64                     	;# 
  4989     0F65                     	;# 
  4990     0F66                     	;# 
  4991     0F67                     	;# 
  4992     0F68                     	;# 
  4993     0F69                     	;# 
  4994     0F6A                     	;# 
  4995     0F6B                     	;# 
  4996     0F6C                     	;# 
  4997     0F6D                     	;# 
  4998     0FE4                     	;# 
  4999     0FE5                     	;# 
  5000     0FE6                     	;# 
  5001     0FE7                     	;# 
  5002     0FE8                     	;# 
  5003     0FE9                     	;# 
  5004     0FEA                     	;# 
  5005     0FEB                     	;# 
  5006     0FED                     	;# 
  5007     0FEE                     	;# 
  5008     0FEF                     	;# 
  5009                           
  5010 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  5011     0000                     
  5012 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  5013     0000                     
  5014 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  5015     0000                     
  5016 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  5017     0000                     
  5018 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  5019     0000                     
  5020 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  5021     0000                     
  5022 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  5023     0000                     
  5024 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  5025     0000                     
  5026 ;; Function _I2C1_DO_TX is unused but had its address taken
  5027     0000                     
  5028 ;; Function _I2C1_DO_RX is unused but had its address taken
  5029     0000                     
  5030 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  5031     0000                     
  5032 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  5033     0000                     
  5034 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  5035     0000                     
  5036 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  5037     0000                     
  5038 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  5039     0000                     
  5040 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  5041     0000                     
  5042 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  5043     0000                     
  5044 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  5045     0000                     
  5046 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  5047     0000                     
  5048 ;; Function _I2C1_DO_RESET is unused but had its address taken
  5049     0000                     
  5050 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  5051     0000                     
  5052 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  5053     0000                     
  5054 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  5055     0000                     
  5056                           	psect	stringtext1
  5057     1000                     __pstringtext1:
  5058     1000                     _i2c1_fsmStateTable:
  5059     1000  3400               	retlw	0
  5060     1001  3400               	retlw	0
  5061     1002  3400               	retlw	0
  5062     1003  3400               	retlw	0
  5063     1004  3400               	retlw	0
  5064     1005  3400               	retlw	0
  5065     1006  3400               	retlw	0
  5066     1007  3400               	retlw	0
  5067     1008  3400               	retlw	0
  5068     1009  3400               	retlw	0
  5069     100A  3400               	retlw	0
  5070     100B  3400               	retlw	0
  5071     100C  3400               	retlw	0
  5072     100D  3400               	retlw	0
  5073     100E  3400               	retlw	0
  5074     100F  3400               	retlw	0
  5075     1010  3400               	retlw	0
  5076     1011  3400               	retlw	0
  5077     1012  3400               	retlw	0
  5078     1013  3400               	retlw	0
  5079     1014  3400               	retlw	0
  5080     1015  3400               	retlw	0
  5081     1016  3400               	retlw	0
  5082     1017  3400               	retlw	0
  5083     1018  3400               	retlw	0
  5084     1019  3400               	retlw	0
  5085     101A  3400               	retlw	0
  5086     101B  3400               	retlw	0
  5087     101C  3400               	retlw	0
  5088     101D  3400               	retlw	0
  5089     101E  3400               	retlw	0
  5090     101F  3400               	retlw	0
  5091     1020                     __end_of_i2c1_fsmStateTable:
  5092     0014                     _TRISD	set	20
  5093     0013                     _TRISC	set	19
  5094     0012                     _TRISB	set	18
  5095     0011                     _TRISA	set	17
  5096     0015                     _TRISE	set	21
  5097     0018                     _LATC	set	24
  5098     0017                     _LATB	set	23
  5099     0016                     _LATA	set	22
  5100     0019                     _LATD	set	25
  5101     001A                     _LATE	set	26
  5102     0013                     _TRISCbits	set	19
  5103     0094                     _ADCON1bits	set	148
  5104     008E                     _ADPREVL	set	142
  5105     008F                     _ADPREVH	set	143
  5106     0097                     _ADSTATbits	set	151
  5107     0090                     _ADACCL	set	144
  5108     0091                     _ADACCH	set	145
  5109     0095                     _ADCON2bits	set	149
  5110     0096                     _ADCON3bits	set	150
  5111     008C                     _ADRESL	set	140
  5112     008D                     _ADRESH	set	141
  5113     0093                     _ADCON0bits	set	147
  5114     009D                     _ADACQ	set	157
  5115     0093                     _ADCON0	set	147
  5116     0098                     _ADCLK	set	152
  5117     0099                     _ADACT	set	153
  5118     009A                     _ADREF	set	154
  5119     0097                     _ADSTAT	set	151
  5120     0096                     _ADCON3	set	150
  5121     0095                     _ADCON2	set	149
  5122     0094                     _ADCON1	set	148
  5123     009C                     _ADPRE	set	156
  5124     009B                     _ADCAP	set	155
  5125     009E                     _ADPCH	set	158
  5126     0116                     _ADERRL	set	278
  5127     0117                     _ADERRH	set	279
  5128     0114                     _ADFLTRL	set	276
  5129     0115                     _ADFLTRH	set	277
  5130     010C                     _ADCNT	set	268
  5131     010D                     _ADRPT	set	269
  5132     0113                     _ADSTPTH	set	275
  5133     0112                     _ADSTPTL	set	274
  5134     0111                     _ADUTHH	set	273
  5135     0110                     _ADUTHL	set	272
  5136     010F                     _ADLTHH	set	271
  5137     010E                     _ADLTHL	set	270
  5138     018C                     _SSP1BUF	set	396
  5139     018F                     _SSP1STATbits	set	399
  5140     0191                     _SSP1CON2bits	set	401
  5141     0190                     _SSP1CON1bits	set	400
  5142     018D                     _SSP1ADD	set	397
  5143     0191                     _SSP1CON2	set	401
  5144     0190                     _SSP1CON1	set	400
  5145     018F                     _SSP1STAT	set	399
  5146     020F                     _T1GCONbits	set	527
  5147     020E                     _T1CONbits	set	526
  5148     020E                     _T1CON	set	526
  5149     020C                     _TMR1L	set	524
  5150     020D                     _TMR1H	set	525
  5151     0211                     _T1CLK	set	529
  5152     0210                     _T1GATE	set	528
  5153     020F                     _T1GCON	set	527
  5154     0710                     _PIR4bits	set	1808
  5155     0719                     _PIE3bits	set	1817
  5156     070F                     _PIR3bits	set	1807
  5157     079B                     _PMD5	set	1947
  5158     079A                     _PMD4	set	1946
  5159     0799                     _PMD3	set	1945
  5160     0798                     _PMD2	set	1944
  5161     0797                     _PMD1	set	1943
  5162     0796                     _PMD0	set	1942
  5163     0892                     _OSCTUNE	set	2194
  5164     0893                     _OSCFRQ	set	2195
  5165     0891                     _OSCEN	set	2193
  5166     088F                     _OSCCON3	set	2191
  5167     088D                     _OSCCON1	set	2189
  5168     0EC6                     _SSP1DATPPS	set	3782
  5169     0EC5                     _SSP1CLKPPS	set	3781
  5170     0E92                     _T1CKIPPS	set	3730
  5171     0F24                     _RC4PPS	set	3876
  5172     0F23                     _RC3PPS	set	3875
  5173     0F68                     _INLVLE	set	3944
  5174     0F5D                     _INLVLD	set	3933
  5175     0F52                     _INLVLC	set	3922
  5176     0F47                     _INLVLB	set	3911
  5177     0F3C                     _INLVLA	set	3900
  5178     0F67                     _SLRCONE	set	3943
  5179     0F5C                     _SLRCOND	set	3932
  5180     0F51                     _SLRCONC	set	3921
  5181     0F46                     _SLRCONB	set	3910
  5182     0F3B                     _SLRCONA	set	3899
  5183     0F5B                     _ODCOND	set	3931
  5184     0F50                     _ODCONC	set	3920
  5185     0F45                     _ODCONB	set	3909
  5186     0F3A                     _ODCONA	set	3898
  5187     0F66                     _ODCONE	set	3942
  5188     0F4F                     _WPUC	set	3919
  5189     0F39                     _WPUA	set	3897
  5190     0F44                     _WPUB	set	3908
  5191     0F65                     _WPUE	set	3941
  5192     0F5A                     _WPUD	set	3930
  5193     0F38                     _ANSELA	set	3896
  5194     0F64                     _ANSELE	set	3940
  5195     0F43                     _ANSELB	set	3907
  5196     0F4E                     _ANSELC	set	3918
  5197     0F59                     _ANSELD	set	3929
  5198     1020                     STR_2:
  5199     1020  3425               	retlw	37	;'%'
  5200     1021  3432               	retlw	50	;'2'
  5201     1022  3464               	retlw	100	;'d'
  5202     1023  343A               	retlw	58	;':'
  5203     1024  3425               	retlw	37	;'%'
  5204     1025  3432               	retlw	50	;'2'
  5205     1026  3464               	retlw	100	;'d'
  5206     1027  343A               	retlw	58	;':'
  5207     1028  3425               	retlw	37	;'%'
  5208     1029  3432               	retlw	50	;'2'
  5209     102A  3464               	retlw	100	;'d'
  5210     102B  3400               	retlw	0
  5211                           
  5212                           	psect	stringtext2
  5213     102C                     __pstringtext2:
  5214     102C                     STR_1:
  5215     102C  3430               	retlw	48	;'0'
  5216     102D  3430               	retlw	48	;'0'
  5217     102E  343A               	retlw	58	;':'
  5218     102F  3430               	retlw	48	;'0'
  5219     1030  3430               	retlw	48	;'0'
  5220     1031  343A               	retlw	58	;':'
  5221     1032  3430               	retlw	48	;'0'
  5222     1033  3430               	retlw	48	;'0'
  5223     1034  3400               	retlw	0
  5224                           
  5225                           	psect	stringtext3
  5226     1035                     __pstringtext3:
  5227     1035                     STR_3:
  5228     1035  3425               	retlw	37	;'%'
  5229     1036  3430               	retlw	48	;'0'
  5230     1037  3432               	retlw	50	;'2'
  5231     1038  3464               	retlw	100	;'d'
  5232     1039  3420               	retlw	32	;' '
  5233     103A  3443               	retlw	67	;'C'
  5234     103B  3420               	retlw	32	;' '
  5235     103C  3400               	retlw	0
  5236                           
  5237                           	psect	stringtext4
  5238     103D                     __pstringtext4:
  5239     103D                     STR_4:
  5240     103D  344C               	retlw	76	;'L'
  5241     103E  3425               	retlw	37	;'%'
  5242     103F  3464               	retlw	100	;'d'
  5243     1040  3400               	retlw	0
  5244                           
  5245                           	psect	stringtext5
  5246     0000                     __pstringtext5:
  5247                           
  5248                           	psect	cinit
  5249     07E5                     start_initialization:	
  5250                           ; #config settings
  5251                           
  5252     07E5                     __initialization:
  5253                           
  5254                           ; Clear objects allocated to BANK0
  5255     07E5  3061               	movlw	low __pbssBANK0
  5256     07E6  0084               	movwf	4
  5257     07E7  3000               	movlw	high __pbssBANK0
  5258     07E8  0085               	movwf	5
  5259     07E9  3007               	movlw	7
  5260     07EA  318D  25EC  3187   	fcall	clear_ram0
  5261                           
  5262                           ; Clear objects allocated to BANK1
  5263     07ED  30C5               	movlw	low __pbssBANK1
  5264     07EE  0084               	movwf	4
  5265     07EF  3000               	movlw	high __pbssBANK1
  5266     07F0  0085               	movwf	5
  5267     07F1  301D               	movlw	29
  5268     07F2  318D  25EC  3187   	fcall	clear_ram0
  5269                           
  5270                           ; Clear objects allocated to BANK2
  5271     07F5  3020               	movlw	low __pbssBANK2
  5272     07F6  0084               	movwf	4
  5273     07F7  3001               	movlw	high __pbssBANK2
  5274     07F8  0085               	movwf	5
  5275     07F9  3020               	movlw	32
  5276     07FA  318D  25EC  3187   	fcall	clear_ram0
  5277     07FD                     end_of_initialization:	
  5278                           ;End of C runtime variable initialization code
  5279                           
  5280     07FD                     __end_of__initialization:
  5281     07FD  0020               	movlb	0
  5282     07FE  3184  2C97         	ljmp	_main	;jump to C main() function
  5283                           
  5284                           	psect	bssBANK0
  5285     0061                     __pbssBANK0:
  5286     0061                     _width:
  5287     0061                     	ds	2
  5288     0063                     _prec:
  5289     0063                     	ds	2
  5290     0065                     _timer1ReloadVal:
  5291     0065                     	ds	2
  5292     0067                     _flags:
  5293     0067                     	ds	1
  5294                           
  5295                           	psect	bssBANK1
  5296     00C5                     __pbssBANK1:
  5297     00C5                     _I2C1_Status:
  5298     00C5                     	ds	29
  5299                           
  5300                           	psect	bssBANK2
  5301     0120                     __pbssBANK2:
  5302     0120                     _dbuf:
  5303     0120                     	ds	32
  5304                           
  5305                           	psect	clrtext
  5306     0DEC                     clear_ram0:	
  5307                           ;	Called with FSR0 containing the base address, and
  5308                           ;	WREG with the size to clear
  5309                           
  5310     0DEC  0064               	clrwdt	;clear the watchdog before getting into this loop
  5311     0DED                     clrloop0:
  5312     0DED  0180               	clrf	0	;clear RAM location pointed to by FSR
  5313     0DEE  3101               	addfsr 0,1
  5314     0DEF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5315     0DF0  2DED               	goto	clrloop0	;have we reached the end yet?
  5316     0DF1  3400               	retlw	0	;all done for this memory range, return
  5317                           
  5318                           	psect	cstackBANK1
  5319     00A0                     __pcstackBANK1:
  5320     00A0                     main@buf:
  5321                           
  5322                           ; 17 bytes @ 0x0
  5323     00A0                     	ds	17
  5324     00B1                     main@time_buffer:
  5325                           
  5326                           ; 8 bytes @ 0x11
  5327     00B1                     	ds	8
  5328     00B9                     main@hours:
  5329                           
  5330                           ; 2 bytes @ 0x19
  5331     00B9                     	ds	2
  5332     00BB                     main@tt:
  5333                           
  5334                           ; 1 bytes @ 0x1B
  5335     00BB                     	ds	1
  5336     00BC                     main@l:
  5337                           
  5338                           ; 1 bytes @ 0x1C
  5339     00BC                     	ds	1
  5340     00BD                     main@count:
  5341                           
  5342                           ; 2 bytes @ 0x1D
  5343     00BD                     	ds	2
  5344     00BF                     main@PMON:
  5345                           
  5346                           ; 2 bytes @ 0x1F
  5347     00BF                     	ds	2
  5348     00C1                     main@minutes:
  5349                           
  5350                           ; 2 bytes @ 0x21
  5351     00C1                     	ds	2
  5352     00C3                     main@seconds:
  5353                           
  5354                           ; 2 bytes @ 0x23
  5355     00C3                     	ds	2
  5356                           
  5357                           	psect	cstackCOMMON
  5358     0070                     __pcstackCOMMON:
  5359     0070                     ?_PMD_Initialize:
  5360     0070                     ??_PMD_Initialize:	
  5361                           ; 1 bytes @ 0x0
  5362                           
  5363     0070                     ?_I2C1_Initialize:	
  5364                           ; 1 bytes @ 0x0
  5365                           
  5366     0070                     ??_I2C1_Initialize:	
  5367                           ; 1 bytes @ 0x0
  5368                           
  5369     0070                     ?_PIN_MANAGER_Initialize:	
  5370                           ; 1 bytes @ 0x0
  5371                           
  5372     0070                     ??_PIN_MANAGER_Initialize:	
  5373                           ; 1 bytes @ 0x0
  5374                           
  5375     0070                     ?_OSCILLATOR_Initialize:	
  5376                           ; 1 bytes @ 0x0
  5377                           
  5378     0070                     ??_OSCILLATOR_Initialize:	
  5379                           ; 1 bytes @ 0x0
  5380                           
  5381     0070                     ?_ADCC_Initialize:	
  5382                           ; 1 bytes @ 0x0
  5383                           
  5384     0070                     ??_ADCC_Initialize:	
  5385                           ; 1 bytes @ 0x0
  5386                           
  5387     0070                     ?_TMR1_Initialize:	
  5388                           ; 1 bytes @ 0x0
  5389                           
  5390     0070                     ??_TMR1_Initialize:	
  5391                           ; 1 bytes @ 0x0
  5392                           
  5393     0070                     ?_TMR1_StartTimer:	
  5394                           ; 1 bytes @ 0x0
  5395                           
  5396     0070                     ??_TMR1_StartTimer:	
  5397                           ; 1 bytes @ 0x0
  5398                           
  5399     0070                     ?_TMR1_HasOverflowOccured:	
  5400                           ; 1 bytes @ 0x0
  5401                           
  5402     0070                     ??_TMR1_HasOverflowOccured:	
  5403                           ; 1 bytes @ 0x0
  5404                           
  5405     0070                     ?_TMR1_Reload:	
  5406                           ; 1 bytes @ 0x0
  5407                           
  5408     0070                     ?_putch:	
  5409                           ; 1 bytes @ 0x0
  5410                           
  5411     0070                     ??_putch:	
  5412                           ; 1 bytes @ 0x0
  5413                           
  5414     0070                     ?_OpenI2C:	
  5415                           ; 1 bytes @ 0x0
  5416                           
  5417     0070                     ??_OpenI2C:	
  5418                           ; 1 bytes @ 0x0
  5419                           
  5420     0070                     ?_ReadI2C:	
  5421                           ; 1 bytes @ 0x0
  5422                           
  5423     0070                     ??_ReadI2C:	
  5424                           ; 1 bytes @ 0x0
  5425                           
  5426     0070                     ?_WriteI2C:	
  5427                           ; 1 bytes @ 0x0
  5428                           
  5429     0070                     ??_WriteI2C:	
  5430                           ; 1 bytes @ 0x0
  5431                           
  5432     0070                     ?_LCDsend:	
  5433                           ; 1 bytes @ 0x0
  5434                           
  5435     0070                     ?_LCDrecv:	
  5436                           ; 1 bytes @ 0x0
  5437                           
  5438     0070                     ?_LCDinit:	
  5439                           ; 1 bytes @ 0x0
  5440                           
  5441     0070                     ?_LCDcmd:	
  5442                           ; 1 bytes @ 0x0
  5443                           
  5444     0070                     ?_LCDchar:	
  5445                           ; 1 bytes @ 0x0
  5446                           
  5447     0070                     ?_SYSTEM_Initialize:	
  5448                           ; 1 bytes @ 0x0
  5449                           
  5450     0070                     ??_SYSTEM_Initialize:	
  5451                           ; 1 bytes @ 0x0
  5452                           
  5453     0070                     ?_readTC74:	
  5454                           ; 1 bytes @ 0x0
  5455                           
  5456     0070                     ?_main:	
  5457                           ; 1 bytes @ 0x0
  5458                           
  5459     0070                     ?_TMR1_WriteTimer:	
  5460                           ; 1 bytes @ 0x0
  5461                           
  5462     0070                     ?_fputc:	
  5463                           ; 1 bytes @ 0x0
  5464                           
  5465     0070                     ?_ADCC_GetSingleConversion:	
  5466                           ; 2 bytes @ 0x0
  5467                           
  5468     0070                     ?___wmul:	
  5469                           ; 2 bytes @ 0x0
  5470                           
  5471     0070                     ?___awdiv:	
  5472                           ; 2 bytes @ 0x0
  5473                           
  5474     0070                     ?___awmod:	
  5475                           ; 2 bytes @ 0x0
  5476                           
  5477     0070                     putch@c:	
  5478                           ; 2 bytes @ 0x0
  5479                           
  5480     0070                     TMR1_WriteTimer@timerVal:	
  5481                           ; 1 bytes @ 0x0
  5482                           
  5483     0070                     ___wmul@multiplier:	
  5484                           ; 2 bytes @ 0x0
  5485                           
  5486     0070                     ___awdiv@divisor:	
  5487                           ; 2 bytes @ 0x0
  5488                           
  5489     0070                     ___awmod@divisor:	
  5490                           ; 2 bytes @ 0x0
  5491                           
  5492     0070                     fputc@c:	
  5493                           ; 2 bytes @ 0x0
  5494                           
  5495                           
  5496                           ; 2 bytes @ 0x0
  5497     0070                     	ds	1
  5498     0071                     WriteI2C@data_out:
  5499                           
  5500                           ; 1 bytes @ 0x1
  5501     0071                     	ds	1
  5502     0072                     ??_TMR1_Reload:
  5503     0072                     ??_LCDsend:	
  5504                           ; 1 bytes @ 0x2
  5505                           
  5506     0072                     ??_LCDrecv:	
  5507                           ; 1 bytes @ 0x2
  5508                           
  5509     0072                     ?_LCDsend2x4:	
  5510                           ; 1 bytes @ 0x2
  5511                           
  5512     0072                     ??_ADCC_GetSingleConversion:	
  5513                           ; 1 bytes @ 0x2
  5514                           
  5515     0072                     ??_readTC74:	
  5516                           ; 1 bytes @ 0x2
  5517                           
  5518     0072                     ??_TMR1_WriteTimer:	
  5519                           ; 1 bytes @ 0x2
  5520                           
  5521     0072                     LCDsend2x4@mode:	
  5522                           ; 1 bytes @ 0x2
  5523                           
  5524     0072                     ADCC_GetSingleConversion@channel:	
  5525                           ; 1 bytes @ 0x2
  5526                           
  5527     0072                     fputc@fp:	
  5528                           ; 1 bytes @ 0x2
  5529                           
  5530     0072                     ___wmul@multiplicand:	
  5531                           ; 1 bytes @ 0x2
  5532                           
  5533     0072                     ___awdiv@dividend:	
  5534                           ; 2 bytes @ 0x2
  5535                           
  5536     0072                     ___awmod@dividend:	
  5537                           ; 2 bytes @ 0x2
  5538                           
  5539                           
  5540                           ; 2 bytes @ 0x2
  5541     0072                     	ds	1
  5542     0073                     ??_fputc:
  5543     0073                     ??_LCDsend2x4:	
  5544                           ; 1 bytes @ 0x3
  5545                           
  5546     0073                     LCDsend@c:	
  5547                           ; 1 bytes @ 0x3
  5548                           
  5549     0073                     readTC74@value:	
  5550                           ; 1 bytes @ 0x3
  5551                           
  5552                           
  5553                           ; 1 bytes @ 0x3
  5554     0073                     	ds	1
  5555     0074                     ??___wmul:
  5556     0074                     ??___awdiv:	
  5557                           ; 1 bytes @ 0x4
  5558                           
  5559     0074                     ??___awmod:	
  5560                           ; 1 bytes @ 0x4
  5561                           
  5562     0074                     LCDrecv@hc:	
  5563                           ; 1 bytes @ 0x4
  5564                           
  5565     0074                     LCDsend2x4@c:	
  5566                           ; 1 bytes @ 0x4
  5567                           
  5568     0074                     ___wmul@product:	
  5569                           ; 1 bytes @ 0x4
  5570                           
  5571                           
  5572                           ; 2 bytes @ 0x4
  5573     0074                     	ds	1
  5574     0075                     LCDrecv@lc:
  5575     0075                     LCDsend2x4@hc:	
  5576                           ; 1 bytes @ 0x5
  5577                           
  5578     0075                     ___awdiv@counter:	
  5579                           ; 1 bytes @ 0x5
  5580                           
  5581     0075                     ___awmod@counter:	
  5582                           ; 1 bytes @ 0x5
  5583                           
  5584                           
  5585                           ; 1 bytes @ 0x5
  5586     0075                     	ds	1
  5587     0076                     ?_read_prec_or_width:
  5588     0076                     LCDrecv@mode:	
  5589                           ; 2 bytes @ 0x6
  5590                           
  5591     0076                     LCDsend2x4@lc:	
  5592                           ; 1 bytes @ 0x6
  5593                           
  5594     0076                     ___awdiv@sign:	
  5595                           ; 1 bytes @ 0x6
  5596                           
  5597     0076                     ___awmod@sign:	
  5598                           ; 1 bytes @ 0x6
  5599                           
  5600     0076                     read_prec_or_width@ap:	
  5601                           ; 1 bytes @ 0x6
  5602                           
  5603                           
  5604                           ; 1 bytes @ 0x6
  5605     0076                     	ds	1
  5606     0077                     ??_LCDinit:
  5607     0077                     ??_LCDcmd:	
  5608                           ; 1 bytes @ 0x7
  5609                           
  5610     0077                     ??_LCDchar:	
  5611                           ; 1 bytes @ 0x7
  5612                           
  5613     0077                     ?_abs:	
  5614                           ; 1 bytes @ 0x7
  5615                           
  5616     0077                     ?_LCDbusy:	
  5617                           ; 2 bytes @ 0x7
  5618                           
  5619     0077                     LCDcmd@c:	
  5620                           ; 2 bytes @ 0x7
  5621                           
  5622     0077                     LCDchar@c:	
  5623                           ; 1 bytes @ 0x7
  5624                           
  5625     0077                     ___awdiv@quotient:	
  5626                           ; 1 bytes @ 0x7
  5627                           
  5628     0077                     abs@a:	
  5629                           ; 2 bytes @ 0x7
  5630                           
  5631                           
  5632                           ; 2 bytes @ 0x7
  5633     0077                     	ds	1
  5634     0078                     ?_LCDstr:
  5635     0078                     ?_LCDpos:	
  5636                           ; 1 bytes @ 0x8
  5637                           
  5638     0078                     ??_read_prec_or_width:	
  5639                           ; 1 bytes @ 0x8
  5640                           
  5641     0078                     ?_fputs:	
  5642                           ; 1 bytes @ 0x8
  5643                           
  5644     0078                     LCDpos@c:	
  5645                           ; 2 bytes @ 0x8
  5646                           
  5647     0078                     fputs@fp:	
  5648                           ; 1 bytes @ 0x8
  5649                           
  5650     0078                     LCDstr@p:	
  5651                           ; 1 bytes @ 0x8
  5652                           
  5653                           
  5654                           ; 2 bytes @ 0x8
  5655     0078                     	ds	1
  5656     0079                     ??_fputs:
  5657     0079                     ??_abs:	
  5658                           ; 1 bytes @ 0x9
  5659                           
  5660     0079                     ??_LCDbusy:	
  5661                           ; 1 bytes @ 0x9
  5662                           
  5663     0079                     ??_LCDpos:	
  5664                           ; 1 bytes @ 0x9
  5665                           
  5666     0079                     LCDpos@l:	
  5667                           ; 1 bytes @ 0x9
  5668                           
  5669                           
  5670                           ; 1 bytes @ 0x9
  5671     0079                     	ds	1
  5672     007A                     ??_LCDstr:
  5673     007A                     LCDpos@p:	
  5674                           ; 1 bytes @ 0xA
  5675                           
  5676                           
  5677                           ; 1 bytes @ 0xA
  5678     007A                     	ds	1
  5679     007B                     ?_pad:
  5680     007B                     pad@buf:	
  5681                           ; 1 bytes @ 0xB
  5682                           
  5683                           
  5684                           ; 1 bytes @ 0xB
  5685     007B                     	ds	1
  5686     007C                     LCDstr@c:
  5687     007C                     pad@p:	
  5688                           ; 1 bytes @ 0xC
  5689                           
  5690                           
  5691                           ; 2 bytes @ 0xC
  5692     007C                     	ds	2
  5693                           
  5694                           	psect	cstackBANK0
  5695     0020                     __pcstackBANK0:
  5696     0020                     read_prec_or_width@c:
  5697     0020                     fputs@c:	
  5698                           ; 1 bytes @ 0x0
  5699                           
  5700                           
  5701                           ; 1 bytes @ 0x0
  5702     0020                     	ds	1
  5703     0021                     read_prec_or_width@n:
  5704     0021                     fputs@i:	
  5705                           ; 2 bytes @ 0x1
  5706                           
  5707                           
  5708                           ; 2 bytes @ 0x1
  5709     0021                     	ds	2
  5710     0023                     read_prec_or_width@fmt:
  5711     0023                     fputs@s:	
  5712                           ; 1 bytes @ 0x3
  5713                           
  5714                           
  5715                           ; 1 bytes @ 0x3
  5716     0023                     	ds	1
  5717     0024                     ??_pad:
  5718                           
  5719                           ; 1 bytes @ 0x4
  5720     0024                     	ds	1
  5721     0025                     pad@i:
  5722                           
  5723                           ; 2 bytes @ 0x5
  5724     0025                     	ds	2
  5725     0027                     pad@fp:
  5726                           
  5727                           ; 1 bytes @ 0x7
  5728     0027                     	ds	1
  5729     0028                     ?_dtoa:
  5730     0028                     dtoa@d:	
  5731                           ; 1 bytes @ 0x8
  5732                           
  5733                           
  5734                           ; 2 bytes @ 0x8
  5735     0028                     	ds	2
  5736     002A                     ??_dtoa:
  5737                           
  5738                           ; 1 bytes @ 0xA
  5739     002A                     	ds	1
  5740     002B                     _dtoa$2561:
  5741                           
  5742                           ; 2 bytes @ 0xB
  5743     002B                     	ds	2
  5744     002D                     dtoa@fp:
  5745                           
  5746                           ; 1 bytes @ 0xD
  5747     002D                     	ds	1
  5748     002E                     dtoa@p:
  5749                           
  5750                           ; 1 bytes @ 0xE
  5751     002E                     	ds	1
  5752     002F                     dtoa@w:
  5753                           
  5754                           ; 2 bytes @ 0xF
  5755     002F                     	ds	2
  5756     0031                     dtoa@s:
  5757                           
  5758                           ; 1 bytes @ 0x11
  5759     0031                     	ds	1
  5760     0032                     dtoa@i:
  5761                           
  5762                           ; 2 bytes @ 0x12
  5763     0032                     	ds	2
  5764     0034                     ?_vfpfcnvrt:
  5765     0034                     vfpfcnvrt@fmt:	
  5766                           ; 1 bytes @ 0x14
  5767                           
  5768                           
  5769                           ; 1 bytes @ 0x14
  5770     0034                     	ds	1
  5771     0035                     vfpfcnvrt@ap:
  5772                           
  5773                           ; 1 bytes @ 0x15
  5774     0035                     	ds	1
  5775     0036                     ??_vfpfcnvrt:
  5776                           
  5777                           ; 1 bytes @ 0x16
  5778     0036                     	ds	4
  5779     003A                     vfpfcnvrt@convarg:
  5780                           
  5781                           ; 4 bytes @ 0x1A
  5782     003A                     	ds	4
  5783     003E                     vfpfcnvrt@done:
  5784                           
  5785                           ; 1 bytes @ 0x1E
  5786     003E                     	ds	1
  5787     003F                     vfpfcnvrt@fp:
  5788                           
  5789                           ; 1 bytes @ 0x1F
  5790     003F                     	ds	1
  5791     0040                     vfpfcnvrt@cp:
  5792                           
  5793                           ; 2 bytes @ 0x20
  5794     0040                     	ds	2
  5795     0042                     ?_vfprintf:
  5796     0042                     vfprintf@fmt:	
  5797                           ; 2 bytes @ 0x22
  5798                           
  5799                           
  5800                           ; 2 bytes @ 0x22
  5801     0042                     	ds	2
  5802     0044                     vfprintf@ap:
  5803                           
  5804                           ; 1 bytes @ 0x24
  5805     0044                     	ds	1
  5806     0045                     ??_vfprintf:
  5807                           
  5808                           ; 1 bytes @ 0x25
  5809     0045                     	ds	1
  5810     0046                     vfprintf@fp:
  5811                           
  5812                           ; 1 bytes @ 0x26
  5813     0046                     	ds	1
  5814     0047                     vfprintf@cfmt:
  5815                           
  5816                           ; 2 bytes @ 0x27
  5817     0047                     	ds	2
  5818     0049                     ?_sprintf:
  5819     0049                     sprintf@fmt:	
  5820                           ; 2 bytes @ 0x29
  5821                           
  5822                           
  5823                           ; 2 bytes @ 0x29
  5824     0049                     	ds	8
  5825     0051                     ??_sprintf:
  5826                           
  5827                           ; 1 bytes @ 0x31
  5828     0051                     	ds	1
  5829     0052                     sprintf@ap:
  5830                           
  5831                           ; 1 bytes @ 0x32
  5832     0052                     	ds	1
  5833     0053                     sprintf@s:
  5834                           
  5835                           ; 1 bytes @ 0x33
  5836     0053                     	ds	1
  5837     0054                     sprintf@f:
  5838                           
  5839                           ; 11 bytes @ 0x34
  5840     0054                     	ds	11
  5841     005F                     ??_main:
  5842                           
  5843                           ; 1 bytes @ 0x3F
  5844     005F                     	ds	2
  5845                           
  5846                           	psect	maintext
  5847     0497                     __pmaintext:	
  5848 ;;
  5849 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5850 ;;
  5851 ;; *************** function _main *****************
  5852 ;; Defined at:
  5853 ;;		line 89 in file "main.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;		None
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  buf            17    0[BANK1 ] unsigned char [17]
  5858 ;;  time_buffer     8   17[BANK1 ] unsigned char [8]
  5859 ;;  seconds         2   35[BANK1 ] int 
  5860 ;;  minutes         2   33[BANK1 ] int 
  5861 ;;  PMON            2   31[BANK1 ] int 
  5862 ;;  count           2   29[BANK1 ] int 
  5863 ;;  hours           2   25[BANK1 ] int 
  5864 ;;  l               1   28[BANK1 ] unsigned char 
  5865 ;;  tt              1   27[BANK1 ] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : B1F/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Locals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Totals:         0       2      37       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;Total ram usage:       39 bytes
  5880 ;; Hardware stack levels required when called: 8
  5881 ;; This function calls:
  5882 ;;		_ADCC_GetSingleConversion
  5883 ;;		_LCDbusy
  5884 ;;		_LCDcmd
  5885 ;;		_LCDinit
  5886 ;;		_LCDpos
  5887 ;;		_LCDstr
  5888 ;;		_OpenI2C
  5889 ;;		_SYSTEM_Initialize
  5890 ;;		_TMR1_HasOverflowOccured
  5891 ;;		_TMR1_Reload
  5892 ;;		_TMR1_StartTimer
  5893 ;;		_readTC74
  5894 ;;		_sprintf
  5895 ;; This function is called by:
  5896 ;;		Startup code after reset
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900     0497                     _main:	
  5901                           ;psect for function _main
  5902                           
  5903     0497                     l4518:	
  5904                           ;incstack = 0
  5905                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5906                           
  5907                           
  5908                           ;main.c: 91:     unsigned char tt;;main.c: 92:     unsigned char l;;main.c: 93:     char
      +                           buf[17];;main.c: 94:     char time_buffer[8];;main.c: 96:     int PMON = 3;
  5909     0497  3003               	movlw	3
  5910     0498  0021               	movlb	1	; select bank1
  5911     0499  00BF               	movwf	main@PMON^(0+128)
  5912     049A  3000               	movlw	0
  5913     049B  00C0               	movwf	(main@PMON^(0+128)+1)
  5914     049C                     l4520:
  5915                           
  5916                           ;main.c: 97:     int count = PMON-1;
  5917     049C  3002               	movlw	2
  5918     049D  00BD               	movwf	main@count^(0+128)
  5919     049E  3000               	movlw	0
  5920     049F  00BE               	movwf	(main@count^(0+128)+1)
  5921     04A0                     l4522:
  5922                           
  5923                           ;main.c: 98:     int hours = 0, minutes = 0, seconds = 0;
  5924     04A0  01B9               	clrf	main@hours^(0+128)
  5925     04A1  01BA               	clrf	(main@hours+1)^(0+128)
  5926     04A2                     l4524:
  5927     04A2  01C1               	clrf	main@minutes^(0+128)
  5928     04A3  01C2               	clrf	(main@minutes+1)^(0+128)
  5929     04A4                     l4526:
  5930     04A4  01C3               	clrf	main@seconds^(0+128)
  5931     04A5  01C4               	clrf	(main@seconds+1)^(0+128)
  5932     04A6                     l4528:
  5933                           
  5934                           ;main.c: 101:     SYSTEM_Initialize();
  5935     04A6  318E  2677  3184   	fcall	_SYSTEM_Initialize
  5936     04A9                     l4530:
  5937                           
  5938                           ;main.c: 118:     OpenI2C();
  5939     04A9  318E  2625  3184   	fcall	_OpenI2C
  5940     04AC                     l4532:
  5941                           
  5942                           ;main.c: 124:     LCDinit();
  5943     04AC  3181  21F6  3184   	fcall	_LCDinit
  5944     04AF                     l4534:
  5945                           
  5946                           ;main.c: 126:     LCDcmd(0x80);
  5947     04AF  3080               	movlw	128
  5948     04B0  318D  25F2  3184   	fcall	_LCDcmd
  5949     04B3                     l4536:
  5950                           
  5951                           ;main.c: 128:     LCDstr("00:00:00");
  5952     04B3  302C               	movlw	low (STR_1| (0+32768))
  5953     04B4  00F8               	movwf	LCDstr@p
  5954     04B5  3090               	movlw	high (STR_1| (0+32768))
  5955     04B6  00F9               	movwf	LCDstr@p+1
  5956     04B7  318E  26CA  3184   	fcall	_LCDstr
  5957     04BA                     l4538:
  5958                           
  5959                           ;main.c: 130:     TMR1_StartTimer();
  5960     04BA  318D  25E5  3184   	fcall	_TMR1_StartTimer
  5961     04BD                     l4540:
  5962     04BD  318D  25E8  3184   	fcall	_TMR1_HasOverflowOccured
  5963     04C0  3A00               	xorlw	0
  5964     04C1  1903               	skipnz
  5965     04C2  2CC4               	goto	u3411
  5966     04C3  2CC5               	goto	u3410
  5967     04C4                     u3411:
  5968     04C4  2CBD               	goto	l4540
  5969     04C5                     u3410:
  5970     04C5                     l4542:
  5971                           
  5972                           ;main.c: 136:         TMR1_Reload();
  5973     04C5  318E  2612  3184   	fcall	_TMR1_Reload
  5974     04C8                     l4544:
  5975                           
  5976                           ;main.c: 138:         if(seconds < 59)
  5977     04C8  0021               	movlb	1	; select bank1
  5978     04C9  0844               	movf	(main@seconds+1)^(0+128),w
  5979     04CA  3A80               	xorlw	128
  5980     04CB  0020               	movlb	0	; select bank0
  5981     04CC  00DF               	movwf	??_main
  5982     04CD  3080               	movlw	128
  5983     04CE  025F               	subwf	??_main,w
  5984     04CF  1D03               	skipz
  5985     04D0  2CD4               	goto	u3425
  5986     04D1  303B               	movlw	59
  5987     04D2  0021               	movlb	1	; select bank1
  5988     04D3  0243               	subwf	main@seconds^(0+128),w
  5989     04D4                     u3425:
  5990     04D4  1803               	skipnc
  5991     04D5  2CD7               	goto	u3421
  5992     04D6  2CD8               	goto	u3420
  5993     04D7                     u3421:
  5994     04D7  2CDE               	goto	l4548
  5995     04D8                     u3420:
  5996     04D8                     l4546:
  5997                           
  5998                           ;main.c: 139:             seconds++;
  5999     04D8  3001               	movlw	1
  6000     04D9  0021               	movlb	1	; select bank1
  6001     04DA  07C3               	addwf	main@seconds^(0+128),f
  6002     04DB  3000               	movlw	0
  6003     04DC  3DC4               	addwfc	(main@seconds+1)^(0+128),f
  6004     04DD  2CFD               	goto	l4558
  6005     04DE                     l4548:
  6006                           
  6007                           ;main.c: 141:             seconds=0;
  6008     04DE  0021               	movlb	1	; select bank1
  6009     04DF  01C3               	clrf	main@seconds^(0+128)
  6010     04E0  01C4               	clrf	(main@seconds+1)^(0+128)
  6011     04E1                     l4550:
  6012                           
  6013                           ;main.c: 142:             if(minutes < 59){
  6014     04E1  0842               	movf	(main@minutes+1)^(0+128),w
  6015     04E2  3A80               	xorlw	128
  6016     04E3  0020               	movlb	0	; select bank0
  6017     04E4  00DF               	movwf	??_main
  6018     04E5  3080               	movlw	128
  6019     04E6  025F               	subwf	??_main,w
  6020     04E7  1D03               	skipz
  6021     04E8  2CEC               	goto	u3435
  6022     04E9  303B               	movlw	59
  6023     04EA  0021               	movlb	1	; select bank1
  6024     04EB  0241               	subwf	main@minutes^(0+128),w
  6025     04EC                     u3435:
  6026     04EC  1803               	skipnc
  6027     04ED  2CEF               	goto	u3431
  6028     04EE  2CF0               	goto	u3430
  6029     04EF                     u3431:
  6030     04EF  2CF6               	goto	l4554
  6031     04F0                     u3430:
  6032     04F0                     l4552:
  6033                           
  6034                           ;main.c: 143:                 minutes++;
  6035     04F0  3001               	movlw	1
  6036     04F1  0021               	movlb	1	; select bank1
  6037     04F2  07C1               	addwf	main@minutes^(0+128),f
  6038     04F3  3000               	movlw	0
  6039     04F4  3DC2               	addwfc	(main@minutes+1)^(0+128),f
  6040                           
  6041                           ;main.c: 144:             }
  6042     04F5  2CFD               	goto	l4558
  6043     04F6                     l4554:
  6044                           
  6045                           ;main.c: 146:                 minutes=0;
  6046     04F6  0021               	movlb	1	; select bank1
  6047     04F7  01C1               	clrf	main@minutes^(0+128)
  6048     04F8  01C2               	clrf	(main@minutes+1)^(0+128)
  6049     04F9                     l4556:
  6050                           
  6051                           ;main.c: 147:                 hours++;
  6052     04F9  3001               	movlw	1
  6053     04FA  07B9               	addwf	main@hours^(0+128),f
  6054     04FB  3000               	movlw	0
  6055     04FC  3DBA               	addwfc	(main@hours+1)^(0+128),f
  6056     04FD                     l4558:
  6057                           
  6058                           ;main.c: 151:         LCDcmd(0x80);
  6059     04FD  3080               	movlw	128
  6060     04FE  318D  25F2  3184   	fcall	_LCDcmd
  6061     0501                     l4560:
  6062                           
  6063                           ;main.c: 153:         sprintf(time_buffer, "%2d:%2d:%2d", hours, minutes, seconds);
  6064     0501  3020               	movlw	low (STR_2| (0+32768))
  6065     0502  0020               	movlb	0	; select bank0
  6066     0503  00C9               	movwf	sprintf@fmt
  6067     0504  3090               	movlw	high (STR_2| (0+32768))
  6068     0505  00CA               	movwf	sprintf@fmt+1
  6069     0506  0021               	movlb	1	; select bank1
  6070     0507  083A               	movf	(main@hours+1)^(0+128),w
  6071     0508  0020               	movlb	0	; select bank0
  6072     0509  00CC               	movwf	?_sprintf+3
  6073     050A  0021               	movlb	1	; select bank1
  6074     050B  0839               	movf	main@hours^(0+128),w
  6075     050C  0020               	movlb	0	; select bank0
  6076     050D  00CB               	movwf	?_sprintf+2
  6077     050E  0021               	movlb	1	; select bank1
  6078     050F  0842               	movf	(main@minutes+1)^(0+128),w
  6079     0510  0020               	movlb	0	; select bank0
  6080     0511  00CE               	movwf	?_sprintf+5
  6081     0512  0021               	movlb	1	; select bank1
  6082     0513  0841               	movf	main@minutes^(0+128),w
  6083     0514  0020               	movlb	0	; select bank0
  6084     0515  00CD               	movwf	?_sprintf+4
  6085     0516  0021               	movlb	1	; select bank1
  6086     0517  0844               	movf	(main@seconds+1)^(0+128),w
  6087     0518  0020               	movlb	0	; select bank0
  6088     0519  00D0               	movwf	?_sprintf+7
  6089     051A  0021               	movlb	1	; select bank1
  6090     051B  0843               	movf	main@seconds^(0+128),w
  6091     051C  0020               	movlb	0	; select bank0
  6092     051D  00CF               	movwf	?_sprintf+6
  6093     051E  30B1               	movlw	(low (main@time_buffer| 0))& (0+255)
  6094     051F  318F  2718  3184   	fcall	_sprintf
  6095     0522                     l4562:
  6096                           
  6097                           ;main.c: 155:         LCDstr(time_buffer);
  6098     0522  30B1               	movlw	low main@time_buffer
  6099     0523  00F8               	movwf	LCDstr@p
  6100     0524  3000               	movlw	high main@time_buffer
  6101     0525  00F9               	movwf	LCDstr@p+1
  6102     0526  318E  26CA  3184   	fcall	_LCDstr
  6103     0529                     l4564:
  6104                           
  6105                           ;main.c: 157:         count++;
  6106     0529  3001               	movlw	1
  6107     052A  0021               	movlb	1	; select bank1
  6108     052B  07BD               	addwf	main@count^(0+128),f
  6109     052C  3000               	movlw	0
  6110     052D  3DBE               	addwfc	(main@count+1)^(0+128),f
  6111     052E                     l4566:
  6112                           
  6113                           ;main.c: 159:         if(count == PMON){
  6114     052E  0840               	movf	(main@PMON+1)^(0+128),w
  6115     052F  063E               	xorwf	(main@count+1)^(0+128),w
  6116     0530  1D03               	skipz
  6117     0531  2D34               	goto	u3445
  6118     0532  083F               	movf	main@PMON^(0+128),w
  6119     0533  063D               	xorwf	main@count^(0+128),w
  6120     0534                     u3445:
  6121     0534  1D03               	skipz
  6122     0535  2D37               	goto	u3441
  6123     0536  2D38               	goto	u3440
  6124     0537                     u3441:
  6125     0537  2CBD               	goto	l4540
  6126     0538                     u3440:
  6127     0538                     l4568:
  6128                           
  6129                           ;main.c: 161:             tt = readTC74();
  6130     0538  3185  2598  3184   	fcall	_readTC74
  6131     053B  0021               	movlb	1	; select bank1
  6132     053C  00BB               	movwf	main@tt^(0+128)
  6133     053D                     l4570:
  6134                           
  6135                           ;main.c: 162:             l = ADCC_GetSingleConversion(0x0) >> 8;
  6136     053D  3000               	movlw	0
  6137     053E  318E  2665  3184   	fcall	_ADCC_GetSingleConversion
  6138     0541  0871               	movf	?_ADCC_GetSingleConversion+1,w
  6139     0542  0021               	movlb	1	; select bank1
  6140     0543  00BC               	movwf	main@l^(0+128)
  6141     0544                     l4572:
  6142                           
  6143                           ;main.c: 165:             LCDcmd(0xc0);
  6144     0544  30C0               	movlw	192
  6145     0545  318D  25F2  3184   	fcall	_LCDcmd
  6146     0548                     l4574:
  6147                           
  6148                           ;main.c: 166:             sprintf(buf, "%02d C ", tt);
  6149     0548  3035               	movlw	low (STR_3| (0+32768))
  6150     0549  0020               	movlb	0	; select bank0
  6151     054A  00C9               	movwf	sprintf@fmt
  6152     054B  3090               	movlw	high (STR_3| (0+32768))
  6153     054C  00CA               	movwf	sprintf@fmt+1
  6154     054D  0021               	movlb	1	; select bank1
  6155     054E  083B               	movf	main@tt^(0+128),w
  6156     054F  0020               	movlb	0	; select bank0
  6157     0550  00DF               	movwf	??_main
  6158     0551  01E0               	clrf	??_main+1
  6159     0552  085F               	movf	??_main,w
  6160     0553  00CB               	movwf	?_sprintf+2
  6161     0554  0860               	movf	??_main+1,w
  6162     0555  00CC               	movwf	?_sprintf+3
  6163     0556  30A0               	movlw	(low (main@buf| 0))& (0+255)
  6164     0557  318F  2718  3184   	fcall	_sprintf
  6165     055A                     l4576:	
  6166                           ;main.c: 167:             while (LCDbusy());
  6167                           
  6168     055A  318E  2632  3184   	fcall	_LCDbusy
  6169     055D  0877               	movf	?_LCDbusy,w
  6170     055E  0478               	iorwf	?_LCDbusy+1,w
  6171     055F  1D03               	btfss	3,2
  6172     0560  2D62               	goto	u3451
  6173     0561  2D63               	goto	u3450
  6174     0562                     u3451:
  6175     0562  2D5A               	goto	l4576
  6176     0563                     u3450:
  6177     0563                     l4578:
  6178                           
  6179                           ;main.c: 168:             LCDstr(buf);
  6180     0563  30A0               	movlw	low main@buf
  6181     0564  00F8               	movwf	LCDstr@p
  6182     0565  3000               	movlw	high main@buf
  6183     0566  00F9               	movwf	LCDstr@p+1
  6184     0567  318E  26CA  3184   	fcall	_LCDstr
  6185     056A                     l4580:
  6186                           
  6187                           ;main.c: 171:             LCDpos(1,14);
  6188     056A  300E               	movlw	14
  6189     056B  00F8               	movwf	LCDpos@c
  6190     056C  3001               	movlw	1
  6191     056D  318E  268A  3184   	fcall	_LCDpos
  6192     0570                     l4582:
  6193                           
  6194                           ;main.c: 172:             sprintf(buf, "L%d", l);
  6195     0570  303D               	movlw	low (STR_4| (0+32768))
  6196     0571  0020               	movlb	0	; select bank0
  6197     0572  00C9               	movwf	sprintf@fmt
  6198     0573  3090               	movlw	high (STR_4| (0+32768))
  6199     0574  00CA               	movwf	sprintf@fmt+1
  6200     0575  0021               	movlb	1	; select bank1
  6201     0576  083C               	movf	main@l^(0+128),w
  6202     0577  0020               	movlb	0	; select bank0
  6203     0578  00DF               	movwf	??_main
  6204     0579  01E0               	clrf	??_main+1
  6205     057A  085F               	movf	??_main,w
  6206     057B  00CB               	movwf	?_sprintf+2
  6207     057C  0860               	movf	??_main+1,w
  6208     057D  00CC               	movwf	?_sprintf+3
  6209     057E  30A0               	movlw	(low (main@buf| 0))& (0+255)
  6210     057F  318F  2718  3184   	fcall	_sprintf
  6211     0582                     l4584:	
  6212                           ;main.c: 173:             while (LCDbusy());
  6213                           
  6214     0582  318E  2632  3184   	fcall	_LCDbusy
  6215     0585  0877               	movf	?_LCDbusy,w
  6216     0586  0478               	iorwf	?_LCDbusy+1,w
  6217     0587  1D03               	btfss	3,2
  6218     0588  2D8A               	goto	u3461
  6219     0589  2D8B               	goto	u3460
  6220     058A                     u3461:
  6221     058A  2D82               	goto	l4584
  6222     058B                     u3460:
  6223     058B                     l4586:
  6224                           
  6225                           ;main.c: 174:             LCDstr(buf);
  6226     058B  30A0               	movlw	low main@buf
  6227     058C  00F8               	movwf	LCDstr@p
  6228     058D  3000               	movlw	high main@buf
  6229     058E  00F9               	movwf	LCDstr@p+1
  6230     058F  318E  26CA  3184   	fcall	_LCDstr
  6231     0592                     l4588:
  6232                           
  6233                           ;main.c: 177:             count = 0;
  6234     0592  0021               	movlb	1	; select bank1
  6235     0593  01BD               	clrf	main@count^(0+128)
  6236     0594  01BE               	clrf	(main@count+1)^(0+128)
  6237     0595  2CBD               	goto	l4540
  6238     0596  3180  2802         	ljmp	start
  6239     0598                     __end_of_main:
  6240                           
  6241                           	psect	text1
  6242     0F18                     __ptext1:	
  6243 ;; *************** function _sprintf *****************
  6244 ;; Defined at:
  6245 ;;		line 9 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_sprintf.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  s               1    wreg     PTR unsigned char 
  6248 ;;		 -> main@buf(17), main@time_buffer(8), 
  6249 ;;  fmt             2   41[BANK0 ] PTR const unsigned char 
  6250 ;;		 -> STR_4(4), STR_3(8), STR_2(12), 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  s               1   51[BANK0 ] PTR unsigned char 
  6253 ;;		 -> main@buf(17), main@time_buffer(8), 
  6254 ;;  f              11   52[BANK0 ] struct _IO_FILE
  6255 ;;  ret             2    0        int 
  6256 ;;  ap              1   50[BANK0 ] PTR void [1]
  6257 ;;		 -> ?_sprintf(2), 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  2   41[BANK0 ] int 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6267 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;Total ram usage:       22 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; Hardware stack levels required when called: 7
  6274 ;; This function calls:
  6275 ;;		_vfprintf
  6276 ;; This function is called by:
  6277 ;;		_main
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281     0F18                     _sprintf:	
  6282                           ;psect for function _sprintf
  6283                           
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6287                           ;sprintf@s stored from wreg
  6288     0F18  0020               	movlb	0	; select bank0
  6289     0F19  00D3               	movwf	sprintf@s
  6290     0F1A                     l4052:
  6291     0F1A  304B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6292     0F1B  00D2               	movwf	sprintf@ap
  6293     0F1C  0853               	movf	sprintf@s,w
  6294     0F1D  00D4               	movwf	sprintf@f
  6295     0F1E                     l4054:
  6296     0F1E  01D6               	clrf	sprintf@f+2
  6297     0F1F  01D7               	clrf	sprintf@f+3
  6298     0F20                     l4056:
  6299     0F20  01DD               	clrf	sprintf@f+9
  6300     0F21  01DE               	clrf	sprintf@f+10
  6301     0F22                     l4058:
  6302     0F22  084A               	movf	sprintf@fmt+1,w
  6303     0F23  00C3               	movwf	vfprintf@fmt+1
  6304     0F24  0849               	movf	sprintf@fmt,w
  6305     0F25  00C2               	movwf	vfprintf@fmt
  6306     0F26  3052               	movlw	(low (sprintf@ap| 0))& (0+255)
  6307     0F27  00C4               	movwf	vfprintf@ap
  6308     0F28  3054               	movlw	(low (sprintf@f| 0))& (0+255)
  6309     0F29  318E  26FC  318F   	fcall	_vfprintf
  6310     0F2C                     l4060:
  6311     0F2C  0020               	movlb	0	; select bank0
  6312     0F2D  0856               	movf	sprintf@f+2,w
  6313     0F2E  0753               	addwf	sprintf@s,w
  6314     0F2F  00D1               	movwf	??_sprintf
  6315     0F30  0851               	movf	??_sprintf,w
  6316     0F31  0086               	movwf	6
  6317     0F32  0187               	clrf	7
  6318     0F33  0181               	clrf	1
  6319     0F34                     l1788:
  6320     0F34  0008               	return
  6321     0F35                     __end_of_sprintf:
  6322                           
  6323                           	psect	text2
  6324     0EFC                     __ptext2:	
  6325 ;; *************** function _vfprintf *****************
  6326 ;; Defined at:
  6327 ;;		line 1817 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  fp              1    wreg     PTR struct _IO_FILE
  6330 ;;		 -> sprintf@f(11), 
  6331 ;;  fmt             2   34[BANK0 ] PTR const unsigned char 
  6332 ;;		 -> STR_4(4), STR_3(8), STR_2(12), 
  6333 ;;  ap              1   36[BANK0 ] PTR PTR void 
  6334 ;;		 -> sprintf@ap(1), 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  6337 ;;		 -> sprintf@f(11), 
  6338 ;;  cfmt            2   39[BANK0 ] PTR unsigned char 
  6339 ;;		 -> STR_4(4), STR_3(8), STR_2(12), 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  2   34[BANK0 ] int 
  6342 ;; Registers used:
  6343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6349 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;Total ram usage:        7 bytes
  6354 ;; Hardware stack levels used: 1
  6355 ;; Hardware stack levels required when called: 6
  6356 ;; This function calls:
  6357 ;;		_vfpfcnvrt
  6358 ;; This function is called by:
  6359 ;;		_sprintf
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363     0EFC                     _vfprintf:	
  6364                           ;psect for function _vfprintf
  6365                           
  6366                           
  6367                           ;incstack = 0
  6368                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6369                           ;vfprintf@fp stored from wreg
  6370     0EFC  0020               	movlb	0	; select bank0
  6371     0EFD  00C6               	movwf	vfprintf@fp
  6372     0EFE                     l3814:
  6373                           
  6374                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
  6375     0EFE  0843               	movf	vfprintf@fmt+1,w
  6376     0EFF  00C8               	movwf	vfprintf@cfmt+1
  6377     0F00  0842               	movf	vfprintf@fmt,w
  6378     0F01  00C7               	movwf	vfprintf@cfmt
  6379                           
  6380                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  6381     0F02  2F0B               	goto	l3818
  6382     0F03                     l3816:
  6383                           
  6384                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  6385     0F03  3047               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6386     0F04  00B4               	movwf	vfpfcnvrt@fmt
  6387     0F05  0844               	movf	vfprintf@ap,w
  6388     0F06  00B5               	movwf	vfpfcnvrt@ap
  6389     0F07  0846               	movf	vfprintf@fp,w
  6390     0F08  3183  23D0  318E   	fcall	_vfpfcnvrt
  6391     0F0B                     l3818:
  6392                           
  6393                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  6394     0F0B  0020               	movlb	0	; select bank0
  6395     0F0C  0847               	movf	vfprintf@cfmt,w
  6396     0F0D  0084               	movwf	4
  6397     0F0E  0848               	movf	vfprintf@cfmt+1,w
  6398     0F0F  0085               	movwf	5
  6399     0F10  0012               	moviw fsr0++
  6400     0F11  1D03               	btfss	3,2
  6401     0F12  2F14               	goto	u2841
  6402     0F13  2F15               	goto	u2840
  6403     0F14                     u2841:
  6404     0F14  2F03               	goto	l3816
  6405     0F15                     u2840:
  6406     0F15                     l3820:
  6407                           
  6408                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  6409     0F15  01C2               	clrf	?_vfprintf
  6410     0F16  01C3               	clrf	?_vfprintf+1
  6411     0F17                     l1858:
  6412     0F17  0008               	return
  6413     0F18                     __end_of_vfprintf:
  6414                           
  6415                           	psect	text3
  6416     03D0                     __ptext3:	
  6417 ;; *************** function _vfpfcnvrt *****************
  6418 ;; Defined at:
  6419 ;;		line 1177 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  fp              1    wreg     PTR struct _IO_FILE
  6422 ;;		 -> sprintf@f(11), 
  6423 ;;  fmt             1   20[BANK0 ] PTR PTR unsigned char 
  6424 ;;		 -> vfprintf@cfmt(2), 
  6425 ;;  ap              1   21[BANK0 ] PTR PTR void 
  6426 ;;		 -> sprintf@ap(1), 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  6429 ;;		 -> sprintf@f(11), 
  6430 ;;  convarg         4   26[BANK0 ] struct .
  6431 ;;  cp              2   32[BANK0 ] PTR unsigned char 
  6432 ;;		 -> STR_4(4), STR_3(8), STR_2(12), 
  6433 ;;  done            1   30[BANK0 ] _Bool 
  6434 ;;  c               1    0        unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6446 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6447 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;Total ram usage:       14 bytes
  6449 ;; Hardware stack levels used: 1
  6450 ;; Hardware stack levels required when called: 5
  6451 ;; This function calls:
  6452 ;;		_dtoa
  6453 ;;		_fputc
  6454 ;;		_read_prec_or_width
  6455 ;; This function is called by:
  6456 ;;		_vfprintf
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460     03D0                     _vfpfcnvrt:	
  6461                           ;psect for function _vfpfcnvrt
  6462                           
  6463                           
  6464                           ;incstack = 0
  6465                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6466                           ;vfpfcnvrt@fp stored from wreg
  6467     03D0  0020               	movlb	0	; select bank0
  6468     03D1  00BF               	movwf	vfpfcnvrt@fp
  6469     03D2                     l3588:
  6470                           
  6471                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.45/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6472     03D2  0834               	movf	vfpfcnvrt@fmt,w
  6473     03D3  0086               	movwf	6
  6474     03D4  0187               	clrf	7
  6475     03D5  3F40               	moviw [0]fsr1
  6476     03D6  00B6               	movwf	??_vfpfcnvrt
  6477     03D7  3F41               	moviw [1]fsr1
  6478     03D8  00B7               	movwf	??_vfpfcnvrt+1
  6479     03D9  0836               	movf	??_vfpfcnvrt,w
  6480     03DA  0084               	movwf	4
  6481     03DB  0837               	movf	??_vfpfcnvrt+1,w
  6482     03DC  0085               	movwf	5
  6483     03DD  0012               	moviw fsr0++
  6484     03DE  3A25               	xorlw	37
  6485     03DF  1D03               	btfss	3,2
  6486     03E0  2BE2               	goto	u2441
  6487     03E1  2BE3               	goto	u2440
  6488     03E2                     u2441:
  6489     03E2  2C7E               	goto	l3632
  6490     03E3                     u2440:
  6491     03E3                     l3590:
  6492                           
  6493                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
  6494     03E3  0834               	movf	vfpfcnvrt@fmt,w
  6495     03E4  0086               	movwf	6
  6496     03E5  0187               	clrf	7
  6497     03E6  3001               	movlw	1
  6498     03E7  0781               	addwf	1,f
  6499     03E8  3141               	addfsr 1,1
  6500     03E9  1803               	skipnc
  6501     03EA  0A81               	incf	1,f
  6502     03EB                     l3592:
  6503                           
  6504                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
  6505     03EB  01E1               	clrf	_width
  6506     03EC  01E2               	clrf	_width+1
  6507     03ED  1003               	clrc
  6508     03EE  3000               	movlw	0
  6509     03EF  1803               	btfsc	3,0
  6510     03F0  3001               	movlw	1
  6511     03F1  00E7               	movwf	_flags
  6512     03F2                     l3594:
  6513                           
  6514                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
  6515     03F2  30FF               	movlw	255
  6516     03F3  00E3               	movwf	_prec
  6517     03F4  30FF               	movlw	255
  6518     03F5  00E4               	movwf	_prec+1
  6519     03F6                     l3596:
  6520                           
  6521                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1209:         done = 0;
  6522     03F6  01BE               	clrf	vfpfcnvrt@done
  6523                           
  6524                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
  6525     03F7  2C1D               	goto	l3604
  6526     03F8                     l1844:	
  6527                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1219:                 case '0
      +                          ' :
  6528                           
  6529                           
  6530                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1220:                     fla
      +                          gs |= (1 << 1);
  6531     03F8  14E7               	bsf	_flags,1
  6532     03F9                     l3598:
  6533                           
  6534                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1221:                     ++*
      +                          fmt;
  6535     03F9  0834               	movf	vfpfcnvrt@fmt,w
  6536     03FA  0086               	movwf	6
  6537     03FB  0187               	clrf	7
  6538     03FC  3001               	movlw	1
  6539     03FD  0781               	addwf	1,f
  6540     03FE  3141               	addfsr 1,1
  6541     03FF  1803               	skipnc
  6542     0400  0A81               	incf	1,f
  6543                           
  6544                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1222:                     bre
      +                          ak;
  6545     0401  2C1D               	goto	l3604
  6546     0402                     l1846:	
  6547                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1242:                 default
      +                          :
  6548                           
  6549                           
  6550                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1243:                     don
      +                          e = 1;
  6551     0402  01BE               	clrf	vfpfcnvrt@done
  6552     0403  0ABE               	incf	vfpfcnvrt@done,f
  6553                           
  6554                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1244:                     bre
      +                          ak;
  6555     0404  2C1D               	goto	l3604
  6556     0405                     l3602:
  6557     0405  0834               	movf	vfpfcnvrt@fmt,w
  6558     0406  0086               	movwf	6
  6559     0407  0187               	clrf	7
  6560     0408  3F40               	moviw [0]fsr1
  6561     0409  00B6               	movwf	??_vfpfcnvrt
  6562     040A  3F41               	moviw [1]fsr1
  6563     040B  00B7               	movwf	??_vfpfcnvrt+1
  6564     040C  0836               	movf	??_vfpfcnvrt,w
  6565     040D  0084               	movwf	4
  6566     040E  0837               	movf	??_vfpfcnvrt+1,w
  6567     040F  0085               	movwf	5
  6568     0410  0800               	movf	0,w	;code access
  6569     0411  00B8               	movwf	??_vfpfcnvrt+2
  6570     0412  01B9               	clrf	??_vfpfcnvrt+3
  6571                           
  6572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6573                           ; Switch size 1, requested type "simple"
  6574                           ; Number of cases is 1, Range of values is 0 to 0
  6575                           ; switch strategies available:
  6576                           ; Name         Instructions Cycles
  6577                           ; simple_byte            4     3 (average)
  6578                           ; direct_byte            8     6 (fixed)
  6579                           ; jumptable            260     6 (fixed)
  6580                           ;	Chosen strategy is simple_byte
  6581     0413  0839               	movf	??_vfpfcnvrt+3,w
  6582     0414  3A00               	xorlw	0	; case 0
  6583     0415  1903               	skipnz
  6584     0416  2C18               	goto	l4610
  6585     0417  2C02               	goto	l1846
  6586     0418                     l4610:
  6587                           
  6588                           ; Switch size 1, requested type "simple"
  6589                           ; Number of cases is 1, Range of values is 48 to 48
  6590                           ; switch strategies available:
  6591                           ; Name         Instructions Cycles
  6592                           ; simple_byte            4     3 (average)
  6593                           ; direct_byte           11     9 (fixed)
  6594                           ; jumptable            263     9 (fixed)
  6595                           ;	Chosen strategy is simple_byte
  6596     0418  0838               	movf	??_vfpfcnvrt+2,w
  6597     0419  3A30               	xorlw	48	; case 48
  6598     041A  1903               	skipnz
  6599     041B  2BF8               	goto	l1844
  6600     041C  2C02               	goto	l1846
  6601     041D                     l3604:
  6602                           
  6603                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
  6604     041D  083E               	movf	vfpfcnvrt@done,w
  6605     041E  1903               	btfsc	3,2
  6606     041F  2C21               	goto	u2451
  6607     0420  2C22               	goto	u2450
  6608     0421                     u2451:
  6609     0421  2C05               	goto	l3602
  6610     0422                     u2450:
  6611     0422                     l3606:
  6612                           
  6613                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1256:   width = read_prec_or_
      +                          width(fmt, ap);
  6614     0422  0835               	movf	vfpfcnvrt@ap,w
  6615     0423  00F6               	movwf	read_prec_or_width@ap
  6616     0424  0834               	movf	vfpfcnvrt@fmt,w
  6617     0425  3181  2196  3183   	fcall	_read_prec_or_width
  6618     0428  0877               	movf	?_read_prec_or_width+1,w
  6619     0429  0020               	movlb	0	; select bank0
  6620     042A  00E2               	movwf	_width+1
  6621     042B  0876               	movf	?_read_prec_or_width,w
  6622     042C  00E1               	movwf	_width
  6623     042D                     l3608:
  6624                           
  6625                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1257:   if (width < 0) {
  6626     042D  1FE2               	btfss	_width+1,7
  6627     042E  2C30               	goto	u2461
  6628     042F  2C31               	goto	u2460
  6629     0430                     u2461:
  6630     0430  2C37               	goto	l3614
  6631     0431                     u2460:
  6632     0431                     l3610:
  6633                           
  6634                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1 << 0);
  6635     0431  1467               	bsf	_flags,0
  6636     0432                     l3612:
  6637                           
  6638                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1259:    width = -width;
  6639     0432  09E1               	comf	_width,f
  6640     0433  09E2               	comf	_width+1,f
  6641     0434  0AE1               	incf	_width,f
  6642     0435  1903               	skipnz
  6643     0436  0AE2               	incf	_width+1,f
  6644     0437                     l3614:
  6645                           
  6646                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  6647     0437  0834               	movf	vfpfcnvrt@fmt,w
  6648     0438  0086               	movwf	6
  6649     0439  0187               	clrf	7
  6650     043A  3F40               	moviw [0]fsr1
  6651     043B  00C0               	movwf	vfpfcnvrt@cp
  6652     043C  3F41               	moviw [1]fsr1
  6653     043D  00C1               	movwf	vfpfcnvrt@cp+1
  6654     043E                     l3616:
  6655                           
  6656                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == 'd' || *cp
      +                           == 'i') {
  6657     043E  0840               	movf	vfpfcnvrt@cp,w
  6658     043F  0084               	movwf	4
  6659     0440  0841               	movf	vfpfcnvrt@cp+1,w
  6660     0441  0085               	movwf	5
  6661     0442  0012               	moviw fsr0++
  6662     0443  3A64               	xorlw	100
  6663     0444  1903               	btfsc	3,2
  6664     0445  2C47               	goto	u2471
  6665     0446  2C48               	goto	u2470
  6666     0447                     u2471:
  6667     0447  2C52               	goto	l3620
  6668     0448                     u2470:
  6669     0448                     l3618:
  6670     0448  0840               	movf	vfpfcnvrt@cp,w
  6671     0449  0084               	movwf	4
  6672     044A  0841               	movf	vfpfcnvrt@cp+1,w
  6673     044B  0085               	movwf	5
  6674     044C  0012               	moviw fsr0++
  6675     044D  3A69               	xorlw	105
  6676     044E  1D03               	btfss	3,2
  6677     044F  2C51               	goto	u2481
  6678     0450  2C52               	goto	u2480
  6679     0451                     u2481:
  6680     0451  2C74               	goto	l3628
  6681     0452                     u2480:
  6682     0452                     l3620:
  6683                           
  6684                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1404:    convarg.sint = (vfpf
      +                          _sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6685     0452  0835               	movf	vfpfcnvrt@ap,w
  6686     0453  0086               	movwf	6
  6687     0454  0187               	clrf	7
  6688     0455  0801               	movf	1,w
  6689     0456  0084               	movwf	4
  6690     0457  0185               	clrf	5
  6691     0458  3002               	movlw	2
  6692     0459  0781               	addwf	1,f
  6693     045A  3F00               	moviw [0]fsr0
  6694     045B  00BA               	movwf	vfpfcnvrt@convarg
  6695     045C  3F01               	moviw [1]fsr0
  6696     045D  00BB               	movwf	vfpfcnvrt@convarg+1
  6697     045E                     l3622:
  6698                           
  6699                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1;
  6700     045E  0840               	movf	vfpfcnvrt@cp,w
  6701     045F  3E01               	addlw	1
  6702     0460  00B6               	movwf	??_vfpfcnvrt
  6703     0461  3000               	movlw	0
  6704     0462  3D41               	addwfc	vfpfcnvrt@cp+1,w
  6705     0463  00B7               	movwf	??_vfpfcnvrt+1
  6706     0464  0834               	movf	vfpfcnvrt@fmt,w
  6707     0465  0086               	movwf	6
  6708     0466  0187               	clrf	7
  6709     0467  0836               	movf	??_vfpfcnvrt,w
  6710     0468  3FC0               	movwi [0]fsr1
  6711     0469  0837               	movf	??_vfpfcnvrt+1,w
  6712     046A  3FC1               	movwi [1]fsr1
  6713     046B                     l3624:
  6714                           
  6715                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1432:    return (void) dtoa(f
      +                          p, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6716     046B  083B               	movf	vfpfcnvrt@convarg+1,w
  6717     046C  00A9               	movwf	dtoa@d+1
  6718     046D  083A               	movf	vfpfcnvrt@convarg,w
  6719     046E  00A8               	movwf	dtoa@d
  6720     046F  083F               	movf	vfpfcnvrt@fp,w
  6721     0470  3182  2272  3183   	fcall	_dtoa
  6722     0473  2C96               	goto	l1852
  6723     0474                     l3628:
  6724                           
  6725                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  6726     0474  0020               	movlb	0	; select bank0
  6727     0475  0834               	movf	vfpfcnvrt@fmt,w
  6728     0476  0086               	movwf	6
  6729     0477  0187               	clrf	7
  6730     0478  3001               	movlw	1
  6731     0479  0781               	addwf	1,f
  6732     047A  3141               	addfsr 1,1
  6733     047B  1803               	skipnc
  6734     047C  0A81               	incf	1,f
  6735     047D  2C96               	goto	l1852
  6736     047E                     l3632:
  6737                           
  6738                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  6739     047E  0834               	movf	vfpfcnvrt@fmt,w
  6740     047F  0086               	movwf	6
  6741     0480  0187               	clrf	7
  6742     0481  3F40               	moviw [0]fsr1
  6743     0482  00B6               	movwf	??_vfpfcnvrt
  6744     0483  3F41               	moviw [1]fsr1
  6745     0484  00B7               	movwf	??_vfpfcnvrt+1
  6746     0485  0836               	movf	??_vfpfcnvrt,w
  6747     0486  0084               	movwf	4
  6748     0487  0837               	movf	??_vfpfcnvrt+1,w
  6749     0488  0085               	movwf	5
  6750     0489  0800               	movf	0,w	;code access
  6751     048A  00B8               	movwf	??_vfpfcnvrt+2
  6752     048B  01B9               	clrf	??_vfpfcnvrt+3
  6753     048C  0838               	movf	??_vfpfcnvrt+2,w
  6754     048D  00F0               	movwf	fputc@c
  6755     048E  0839               	movf	??_vfpfcnvrt+3,w
  6756     048F  00F1               	movwf	fputc@c+1
  6757     0490  083F               	movf	vfpfcnvrt@fp,w
  6758     0491  00F2               	movwf	fputc@fp
  6759     0492  3180  2094  3183   	fcall	_fputc
  6760     0495  2C74               	goto	l3628
  6761     0496                     l1852:
  6762     0496  0008               	return
  6763     0497                     __end_of_vfpfcnvrt:
  6764                           
  6765                           	psect	text4
  6766     0196                     __ptext4:	
  6767 ;; *************** function _read_prec_or_width *****************
  6768 ;; Defined at:
  6769 ;;		line 1158 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  fmt             1    wreg     PTR PTR const unsigned c
  6772 ;;		 -> vfprintf@cfmt(2), 
  6773 ;;  ap              1    6[COMMON] PTR PTR void [1]
  6774 ;;		 -> sprintf@ap(1), 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  6777 ;;		 -> vfprintf@cfmt(2), 
  6778 ;;  c               1    0[BANK0 ] unsigned char 
  6779 ;;  n               2    1[BANK0 ] int 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  2    6[COMMON] int 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6791 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6792 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;Total ram usage:        9 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 1
  6796 ;; This function calls:
  6797 ;;		___wmul
  6798 ;; This function is called by:
  6799 ;;		_vfpfcnvrt
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803     0196                     _read_prec_or_width:	
  6804                           ;psect for function _read_prec_or_width
  6805                           
  6806                           
  6807                           ;incstack = 0
  6808                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6809                           ;read_prec_or_width@fmt stored from wreg
  6810     0196  0020               	movlb	0	; select bank0
  6811     0197  00A3               	movwf	read_prec_or_width@fmt
  6812     0198                     l3518:
  6813                           
  6814                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  6815     0198  01A1               	clrf	read_prec_or_width@n
  6816     0199  01A2               	clrf	read_prec_or_width@n+1
  6817     019A                     l3520:
  6818                           
  6819                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
  6820     019A  0823               	movf	read_prec_or_width@fmt,w
  6821     019B  0086               	movwf	6
  6822     019C  0187               	clrf	7
  6823     019D  3F40               	moviw [0]fsr1
  6824     019E  00F8               	movwf	??_read_prec_or_width
  6825     019F  3F41               	moviw [1]fsr1
  6826     01A0  00F9               	movwf	??_read_prec_or_width+1
  6827     01A1  0878               	movf	??_read_prec_or_width,w
  6828     01A2  0084               	movwf	4
  6829     01A3  0879               	movf	??_read_prec_or_width+1,w
  6830     01A4  0085               	movwf	5
  6831     01A5  0012               	moviw fsr0++
  6832     01A6  3A2A               	xorlw	42
  6833     01A7  1D03               	btfss	3,2
  6834     01A8  29AA               	goto	u2261
  6835     01A9  29AB               	goto	u2260
  6836     01AA                     u2261:
  6837     01AA  29DD               	goto	l3530
  6838     01AB                     u2260:
  6839     01AB                     l3522:
  6840                           
  6841                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
  6842     01AB  0823               	movf	read_prec_or_width@fmt,w
  6843     01AC  0086               	movwf	6
  6844     01AD  0187               	clrf	7
  6845     01AE  3001               	movlw	1
  6846     01AF  0781               	addwf	1,f
  6847     01B0  3141               	addfsr 1,1
  6848     01B1  1803               	skipnc
  6849     01B2  0A81               	incf	1,f
  6850     01B3                     l3524:
  6851                           
  6852                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
  6853     01B3  0876               	movf	read_prec_or_width@ap,w
  6854     01B4  0086               	movwf	6
  6855     01B5  0187               	clrf	7
  6856     01B6  0801               	movf	1,w
  6857     01B7  0084               	movwf	4
  6858     01B8  0185               	clrf	5
  6859     01B9  3002               	movlw	2
  6860     01BA  0781               	addwf	1,f
  6861     01BB  3F00               	moviw [0]fsr0
  6862     01BC  00A1               	movwf	read_prec_or_width@n
  6863     01BD  3F01               	moviw [1]fsr0
  6864     01BE  00A2               	movwf	read_prec_or_width@n+1
  6865                           
  6866                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1163:     } else {
  6867     01BF  29F1               	goto	l3532
  6868     01C0                     l3526:
  6869                           
  6870                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
  6871     01C0  0820               	movf	read_prec_or_width@c,w
  6872     01C1  00F8               	movwf	??_read_prec_or_width
  6873     01C2  01F9               	clrf	??_read_prec_or_width+1
  6874     01C3  0822               	movf	read_prec_or_width@n+1,w
  6875     01C4  00F1               	movwf	___wmul@multiplier+1
  6876     01C5  0821               	movf	read_prec_or_width@n,w
  6877     01C6  00F0               	movwf	___wmul@multiplier
  6878     01C7  300A               	movlw	10
  6879     01C8  00F2               	movwf	___wmul@multiplicand
  6880     01C9  3000               	movlw	0
  6881     01CA  00F3               	movwf	___wmul@multiplicand+1
  6882     01CB  318F  2735  3181   	fcall	___wmul
  6883     01CE  0878               	movf	??_read_prec_or_width,w
  6884     01CF  0770               	addwf	?___wmul,w
  6885     01D0  0020               	movlb	0	; select bank0
  6886     01D1  00A1               	movwf	read_prec_or_width@n
  6887     01D2  0879               	movf	??_read_prec_or_width+1,w
  6888     01D3  3D71               	addwfc	?___wmul+1,w
  6889     01D4  00A2               	movwf	read_prec_or_width@n+1
  6890     01D5                     l3528:
  6891                           
  6892                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
  6893     01D5  0823               	movf	read_prec_or_width@fmt,w
  6894     01D6  0086               	movwf	6
  6895     01D7  0187               	clrf	7
  6896     01D8  3001               	movlw	1
  6897     01D9  0781               	addwf	1,f
  6898     01DA  3141               	addfsr 1,1
  6899     01DB  1803               	skipnc
  6900     01DC  0A81               	incf	1,f
  6901     01DD                     l3530:
  6902                           
  6903                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
  6904     01DD  0823               	movf	read_prec_or_width@fmt,w
  6905     01DE  0086               	movwf	6
  6906     01DF  0187               	clrf	7
  6907     01E0  3F40               	moviw [0]fsr1
  6908     01E1  00F8               	movwf	??_read_prec_or_width
  6909     01E2  3F41               	moviw [1]fsr1
  6910     01E3  00F9               	movwf	??_read_prec_or_width+1
  6911     01E4  0878               	movf	??_read_prec_or_width,w
  6912     01E5  0084               	movwf	4
  6913     01E6  0879               	movf	??_read_prec_or_width+1,w
  6914     01E7  0085               	movwf	5
  6915     01E8  0800               	movf	0,w	;code access
  6916     01E9  3ED0               	addlw	208
  6917     01EA  00A0               	movwf	read_prec_or_width@c
  6918     01EB  300A               	movlw	10
  6919     01EC  0220               	subwf	read_prec_or_width@c,w
  6920     01ED  1C03               	skipc
  6921     01EE  29F0               	goto	u2271
  6922     01EF  29F1               	goto	u2270
  6923     01F0                     u2271:
  6924     01F0  29C0               	goto	l3526
  6925     01F1                     u2270:
  6926     01F1                     l3532:
  6927                           
  6928                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1170:     return n;
  6929     01F1  0822               	movf	read_prec_or_width@n+1,w
  6930     01F2  00F7               	movwf	?_read_prec_or_width+1
  6931     01F3  0821               	movf	read_prec_or_width@n,w
  6932     01F4  00F6               	movwf	?_read_prec_or_width
  6933     01F5                     l1837:
  6934     01F5  0008               	return
  6935     01F6                     __end_of_read_prec_or_width:
  6936                           
  6937                           	psect	text5
  6938     0F35                     __ptext5:	
  6939 ;; *************** function ___wmul *****************
  6940 ;; Defined at:
  6941 ;;		line 15 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  multiplier      2    0[COMMON] unsigned int 
  6944 ;;  multiplicand    2    2[COMMON] unsigned int 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  product         2    4[COMMON] unsigned int 
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  2    0[COMMON] unsigned int 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6957 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6960 ;;Total ram usage:        6 bytes
  6961 ;; Hardware stack levels used: 1
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_read_prec_or_width
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969     0F35                     ___wmul:	
  6970                           ;psect for function ___wmul
  6971                           
  6972     0F35                     l3322:	
  6973                           ;incstack = 0
  6974                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6975                           
  6976     0F35  01F4               	clrf	___wmul@product
  6977     0F36  01F5               	clrf	___wmul@product+1
  6978     0F37                     l3324:
  6979     0F37  1C70               	btfss	___wmul@multiplier,0
  6980     0F38  2F3A               	goto	u1791
  6981     0F39  2F3B               	goto	u1790
  6982     0F3A                     u1791:
  6983     0F3A  2F3F               	goto	l1325
  6984     0F3B                     u1790:
  6985     0F3B                     l3326:
  6986     0F3B  0872               	movf	___wmul@multiplicand,w
  6987     0F3C  07F4               	addwf	___wmul@product,f
  6988     0F3D  0873               	movf	___wmul@multiplicand+1,w
  6989     0F3E  3DF5               	addwfc	___wmul@product+1,f
  6990     0F3F                     l1325:
  6991     0F3F  3001               	movlw	1
  6992     0F40                     u1805:
  6993     0F40  35F2               	lslf	___wmul@multiplicand,f
  6994     0F41  0DF3               	rlf	___wmul@multiplicand+1,f
  6995     0F42  0B89               	decfsz	9,f
  6996     0F43  2F40               	goto	u1805
  6997     0F44                     l3328:
  6998     0F44  3001               	movlw	1
  6999     0F45                     u1815:
  7000     0F45  36F1               	lsrf	___wmul@multiplier+1,f
  7001     0F46  0CF0               	rrf	___wmul@multiplier,f
  7002     0F47  0B89               	decfsz	9,f
  7003     0F48  2F45               	goto	u1815
  7004     0F49                     l3330:
  7005     0F49  0870               	movf	___wmul@multiplier,w
  7006     0F4A  0471               	iorwf	___wmul@multiplier+1,w
  7007     0F4B  1D03               	btfss	3,2
  7008     0F4C  2F4E               	goto	u1821
  7009     0F4D  2F4F               	goto	u1820
  7010     0F4E                     u1821:
  7011     0F4E  2F37               	goto	l3324
  7012     0F4F                     u1820:
  7013     0F4F                     l3332:
  7014     0F4F  0875               	movf	___wmul@product+1,w
  7015     0F50  00F1               	movwf	?___wmul+1
  7016     0F51  0874               	movf	___wmul@product,w
  7017     0F52  00F0               	movwf	?___wmul
  7018     0F53                     l1327:
  7019     0F53  0008               	return
  7020     0F54                     __end_of___wmul:
  7021                           
  7022                           	psect	text6
  7023     0272                     __ptext6:	
  7024 ;; *************** function _dtoa *****************
  7025 ;; Defined at:
  7026 ;;		line 513 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  fp              1    wreg     PTR struct _IO_FILE
  7029 ;;		 -> sprintf@f(11), 
  7030 ;;  d               2    8[BANK0 ] int 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  7033 ;;		 -> sprintf@f(11), 
  7034 ;;  i               2   18[BANK0 ] int 
  7035 ;;  w               2   15[BANK0 ] int 
  7036 ;;  s               1   17[BANK0 ] unsigned char 
  7037 ;;  p               1   14[BANK0 ] _Bool 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7047 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;Total ram usage:       12 bytes
  7052 ;; Hardware stack levels used: 1
  7053 ;; Hardware stack levels required when called: 4
  7054 ;; This function calls:
  7055 ;;		___awdiv
  7056 ;;		___awmod
  7057 ;;		_abs
  7058 ;;		_pad
  7059 ;; This function is called by:
  7060 ;;		_vfpfcnvrt
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064     0272                     _dtoa:	
  7065                           ;psect for function _dtoa
  7066                           
  7067                           
  7068                           ;incstack = 0
  7069                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7070                           ;dtoa@fp stored from wreg
  7071     0272  0020               	movlb	0	; select bank0
  7072     0273  00AD               	movwf	dtoa@fp
  7073     0274                     l3472:
  7074                           
  7075                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 513: static void dtoa(FILE *f
      +                          p, vfpf_sint_t d);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 514: {;/opt/
      +                          microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 515:  char s;;/opt/microchip/xc8/v2
      +                          .45/pic/sources/c99/common/doprnt.c: 516:     int i, w;;/opt/microchip/xc8/v2.45/pic/sou
      +                          rces/c99/common/doprnt.c: 520:  _Bool p = 1;
  7076     0274  01AE               	clrf	dtoa@p
  7077     0275  0AAE               	incf	dtoa@p,f
  7078     0276                     l3474:
  7079                           
  7080                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 524:     s = d < 0 ? 1 : 0;
  7081     0276  1BA9               	btfsc	dtoa@d+1,7
  7082     0277  2A79               	goto	u2161
  7083     0278  2A7B               	goto	u2160
  7084     0279                     u2161:
  7085     0279  3001               	movlw	1
  7086     027A  2A7C               	goto	u2170
  7087     027B                     u2160:
  7088     027B  3000               	movlw	0
  7089     027C                     u2170:
  7090     027C  00B1               	movwf	dtoa@s
  7091                           
  7092                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 535:     w = width;
  7093     027D  0862               	movf	_width+1,w
  7094     027E  00B0               	movwf	dtoa@w+1
  7095     027F  0861               	movf	_width,w
  7096     0280  00AF               	movwf	dtoa@w
  7097     0281                     l3476:
  7098                           
  7099                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 536:     if (s
  7100     0281  0831               	movf	dtoa@s,w
  7101     0282  1903               	btfsc	3,2
  7102     0283  2A85               	goto	u2181
  7103     0284  2A86               	goto	u2180
  7104     0285                     u2181:
  7105     0285  2A9A               	goto	l1816
  7106     0286                     u2180:
  7107     0286                     l3478:
  7108                           
  7109                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 540:     ) {;/opt/microchip/x
      +                          c8/v2.45/pic/sources/c99/common/doprnt.c: 541:         --w;
  7110     0286  30FF               	movlw	255
  7111     0287  07AF               	addwf	dtoa@w,f
  7112     0288  30FF               	movlw	255
  7113     0289  3DB0               	addwfc	dtoa@w+1,f
  7114     028A                     l3480:
  7115                           
  7116                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' : '+';
  7117     028A  0831               	movf	dtoa@s,w
  7118     028B  1D03               	btfss	3,2
  7119     028C  2A8E               	goto	u2191
  7120     028D  2A8F               	goto	u2190
  7121     028E                     u2191:
  7122     028E  2A94               	goto	l3484
  7123     028F                     u2190:
  7124     028F                     l3482:
  7125     028F  302B               	movlw	43
  7126     0290  00AB               	movwf	_dtoa$2561
  7127     0291  3000               	movlw	0
  7128     0292  00AC               	movwf	_dtoa$2561+1
  7129     0293  2A98               	goto	l1820
  7130     0294                     l3484:
  7131     0294  302D               	movlw	45
  7132     0295  00AB               	movwf	_dtoa$2561
  7133     0296  3000               	movlw	0
  7134     0297  00AC               	movwf	_dtoa$2561+1
  7135     0298                     l1820:
  7136     0298  082B               	movf	_dtoa$2561,w
  7137     0299  00B1               	movwf	dtoa@s
  7138     029A                     l1816:	
  7139                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 543:     }
  7140                           
  7141                           
  7142                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(dbuf) - 1
      +                          ;
  7143     029A  301F               	movlw	31
  7144     029B  00B2               	movwf	dtoa@i
  7145     029C  3000               	movlw	0
  7146     029D  00B3               	movwf	dtoa@i+1
  7147     029E                     l3486:
  7148                           
  7149                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '\0';
  7150     029E  0022               	movlb	2	; select bank2
  7151     029F  01BF               	clrf	(_dbuf^(0+256)+31)
  7152                           
  7153                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
  7154     02A0  2AD5               	goto	l3498
  7155     02A1                     l3488:
  7156                           
  7157                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 563:     )) {;/opt/microchip/
      +                          xc8/v2.45/pic/sources/c99/common/doprnt.c: 564:         --i;
  7158     02A1  30FF               	movlw	255
  7159     02A2  07B2               	addwf	dtoa@i,f
  7160     02A3  30FF               	movlw	255
  7161     02A4  3DB3               	addwfc	dtoa@i+1,f
  7162     02A5                     l3490:
  7163                           
  7164                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 565:         dbuf[i] = (char)
      +                          ((int)'0' + abs(d % 10));
  7165     02A5  0832               	movf	dtoa@i,w
  7166     02A6  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7167     02A7  0086               	movwf	6
  7168     02A8  3001               	movlw	1	; select bank2/3
  7169     02A9  0087               	movwf	7
  7170     02AA  300A               	movlw	10
  7171     02AB  00F0               	movwf	___awmod@divisor
  7172     02AC  3000               	movlw	0
  7173     02AD  00F1               	movwf	___awmod@divisor+1
  7174     02AE  0829               	movf	dtoa@d+1,w
  7175     02AF  00F3               	movwf	___awmod@dividend+1
  7176     02B0  0828               	movf	dtoa@d,w
  7177     02B1  00F2               	movwf	___awmod@dividend
  7178     02B2  3180  20E4  3182   	fcall	___awmod
  7179     02B5  0871               	movf	?___awmod+1,w
  7180     02B6  00F8               	movwf	abs@a+1
  7181     02B7  0870               	movf	?___awmod,w
  7182     02B8  00F7               	movwf	abs@a
  7183     02B9  318E  2654  3182   	fcall	_abs
  7184     02BC  0877               	movf	?_abs,w
  7185     02BD  3E30               	addlw	48
  7186     02BE  0081               	movwf	1
  7187     02BF                     l3492:
  7188                           
  7189                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 569:   p = 0;
  7190     02BF  0020               	movlb	0	; select bank0
  7191     02C0  01AE               	clrf	dtoa@p
  7192     02C1                     l3494:
  7193                           
  7194                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 571:         --w;
  7195     02C1  30FF               	movlw	255
  7196     02C2  07AF               	addwf	dtoa@w,f
  7197     02C3  30FF               	movlw	255
  7198     02C4  3DB0               	addwfc	dtoa@w+1,f
  7199     02C5                     l3496:
  7200                           
  7201                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 572:         d = d / 10;
  7202     02C5  300A               	movlw	10
  7203     02C6  00F0               	movwf	___awdiv@divisor
  7204     02C7  3000               	movlw	0
  7205     02C8  00F1               	movwf	___awdiv@divisor+1
  7206     02C9  0829               	movf	dtoa@d+1,w
  7207     02CA  00F3               	movwf	___awdiv@dividend+1
  7208     02CB  0828               	movf	dtoa@d,w
  7209     02CC  00F2               	movwf	___awdiv@dividend
  7210     02CD  3181  2137  3182   	fcall	___awdiv
  7211     02D0  0871               	movf	?___awdiv+1,w
  7212     02D1  0020               	movlb	0	; select bank0
  7213     02D2  00A9               	movwf	dtoa@d+1
  7214     02D3  0870               	movf	?___awdiv,w
  7215     02D4  00A8               	movwf	dtoa@d
  7216     02D5                     l3498:
  7217                           
  7218                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
  7219     02D5  0020               	movlb	0	; select bank0
  7220     02D6  0833               	movf	dtoa@i+1,w
  7221     02D7  3A80               	xorlw	128
  7222     02D8  00AA               	movwf	??_dtoa
  7223     02D9  3080               	movlw	128
  7224     02DA  022A               	subwf	??_dtoa,w
  7225     02DB  1D03               	skipz
  7226     02DC  2ADF               	goto	u2205
  7227     02DD  3001               	movlw	1
  7228     02DE  0232               	subwf	dtoa@i,w
  7229     02DF                     u2205:
  7230     02DF  1C03               	skipc
  7231     02E0  2AE2               	goto	u2201
  7232     02E1  2AE3               	goto	u2200
  7233     02E2                     u2201:
  7234     02E2  2B01               	goto	l3508
  7235     02E3                     u2200:
  7236     02E3                     l3500:
  7237     02E3  0020               	movlb	0	; select bank0
  7238     02E4  0828               	movf	dtoa@d,w
  7239     02E5  0429               	iorwf	dtoa@d+1,w
  7240     02E6  1D03               	btfss	3,2
  7241     02E7  2AE9               	goto	u2211
  7242     02E8  2AEA               	goto	u2210
  7243     02E9                     u2211:
  7244     02E9  2AA1               	goto	l3488
  7245     02EA                     u2210:
  7246     02EA                     l3502:
  7247     02EA  082E               	movf	dtoa@p,w
  7248     02EB  1D03               	btfss	3,2
  7249     02EC  2AEE               	goto	u2221
  7250     02ED  2AEF               	goto	u2220
  7251     02EE                     u2221:
  7252     02EE  2AA1               	goto	l3488
  7253     02EF                     u2220:
  7254     02EF                     l3504:
  7255     02EF  0830               	movf	dtoa@w+1,w
  7256     02F0  3A80               	xorlw	128
  7257     02F1  00AA               	movwf	??_dtoa
  7258     02F2  3080               	movlw	128
  7259     02F3  022A               	subwf	??_dtoa,w
  7260     02F4  1D03               	skipz
  7261     02F5  2AF8               	goto	u2235
  7262     02F6  3001               	movlw	1
  7263     02F7  022F               	subwf	dtoa@w,w
  7264     02F8                     u2235:
  7265     02F8  1C03               	skipc
  7266     02F9  2AFB               	goto	u2231
  7267     02FA  2AFC               	goto	u2230
  7268     02FB                     u2231:
  7269     02FB  2B01               	goto	l3508
  7270     02FC                     u2230:
  7271     02FC                     l3506:
  7272     02FC  0020               	movlb	0	; select bank0
  7273     02FD  18E7               	btfsc	_flags,1
  7274     02FE  2B00               	goto	u2241
  7275     02FF  2B01               	goto	u2240
  7276     0300                     u2241:
  7277     0300  2AA1               	goto	l3488
  7278     0301                     u2240:
  7279     0301                     l3508:
  7280                           
  7281                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 576:     if (s != 0) {
  7282     0301  0020               	movlb	0	; select bank0
  7283     0302  0831               	movf	dtoa@s,w
  7284     0303  1903               	btfsc	3,2
  7285     0304  2B06               	goto	u2251
  7286     0305  2B07               	goto	u2250
  7287     0306                     u2251:
  7288     0306  2B12               	goto	l3514
  7289     0307                     u2250:
  7290     0307                     l3510:
  7291                           
  7292                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 577:         --i;
  7293     0307  30FF               	movlw	255
  7294     0308  07B2               	addwf	dtoa@i,f
  7295     0309  30FF               	movlw	255
  7296     030A  3DB3               	addwfc	dtoa@i+1,f
  7297     030B                     l3512:
  7298                           
  7299                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 578:         dbuf[i] = s;
  7300     030B  0832               	movf	dtoa@i,w
  7301     030C  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7302     030D  0086               	movwf	6
  7303     030E  3001               	movlw	1	; select bank2/3
  7304     030F  0087               	movwf	7
  7305     0310  0831               	movf	dtoa@s,w
  7306     0311  0081               	movwf	1
  7307     0312                     l3514:
  7308                           
  7309                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 582:     return (void) pad(fp
      +                          , &dbuf[i], w);
  7310     0312  0832               	movf	dtoa@i,w
  7311     0313  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7312     0314  00FB               	movwf	pad@buf
  7313     0315  0830               	movf	dtoa@w+1,w
  7314     0316  00FD               	movwf	pad@p+1
  7315     0317  082F               	movf	dtoa@w,w
  7316     0318  00FC               	movwf	pad@p
  7317     0319  082D               	movf	dtoa@fp,w
  7318     031A  318F  2779  3182   	fcall	_pad
  7319     031D                     l1829:
  7320     031D  0008               	return
  7321     031E                     __end_of_dtoa:
  7322                           
  7323                           	psect	text7
  7324     0F79                     __ptext7:	
  7325 ;; *************** function _pad *****************
  7326 ;; Defined at:
  7327 ;;		line 193 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  fp              1    wreg     PTR struct _IO_FILE
  7330 ;;		 -> sprintf@f(11), 
  7331 ;;  buf             1   11[COMMON] PTR unsigned char 
  7332 ;;		 -> dbuf(32), 
  7333 ;;  p               2   12[COMMON] int 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  7336 ;;		 -> sprintf@f(11), 
  7337 ;;  i               2    5[BANK0 ] int 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  1    wreg      void 
  7340 ;; Registers used:
  7341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7347 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7350 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;Total ram usage:        7 bytes
  7352 ;; Hardware stack levels used: 1
  7353 ;; Hardware stack levels required when called: 3
  7354 ;; This function calls:
  7355 ;;		_fputc
  7356 ;;		_fputs
  7357 ;; This function is called by:
  7358 ;;		_dtoa
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362     0F79                     _pad:	
  7363                           ;psect for function _pad
  7364                           
  7365                           
  7366                           ;incstack = 0
  7367                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7368                           ;pad@fp stored from wreg
  7369     0F79  0020               	movlb	0	; select bank0
  7370     0F7A  00A7               	movwf	pad@fp
  7371     0F7B                     l3418:
  7372                           
  7373                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 193: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 194: {;/op
      +                          t/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc
      +                          8/v2.45/pic/sources/c99/common/doprnt.c: 199:     if (flags & (1 << 0)) {
  7374     0F7B  1C67               	btfss	_flags,0
  7375     0F7C  2F7E               	goto	u2021
  7376     0F7D  2F7F               	goto	u2020
  7377     0F7E                     u2021:
  7378     0F7E  2F85               	goto	l3422
  7379     0F7F                     u2020:
  7380     0F7F                     l3420:
  7381                           
  7382                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 200:         fputs((const cha
      +                          r *)buf, fp);
  7383     0F7F  0827               	movf	pad@fp,w
  7384     0F80  00F8               	movwf	fputs@fp
  7385     0F81  087B               	movf	pad@buf,w
  7386     0F82  318F  2754  318F   	fcall	_fputs
  7387     0F85                     l3422:
  7388                           
  7389                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  7390     0F85  1FFD               	btfss	pad@p+1,7
  7391     0F86  2F88               	goto	u2031
  7392     0F87  2F89               	goto	u2030
  7393     0F88                     u2031:
  7394     0F88  2F8B               	goto	l1808
  7395     0F89                     u2030:
  7396     0F89                     l3424:
  7397                           
  7398                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  7399     0F89  01FC               	clrf	pad@p
  7400     0F8A  01FD               	clrf	pad@p+1
  7401     0F8B                     l1808:	
  7402                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 207:  }
  7403                           
  7404                           
  7405                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  7406     0F8B  0020               	movlb	0	; select bank0
  7407     0F8C  01A5               	clrf	pad@i
  7408     0F8D  01A6               	clrf	pad@i+1
  7409                           
  7410                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  7411     0F8E  2F9E               	goto	l3430
  7412     0F8F                     l3426:
  7413                           
  7414                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
  7415     0F8F  3020               	movlw	32
  7416     0F90  00F0               	movwf	fputc@c
  7417     0F91  3000               	movlw	0
  7418     0F92  00F1               	movwf	fputc@c+1
  7419     0F93  0020               	movlb	0	; select bank0
  7420     0F94  0827               	movf	pad@fp,w
  7421     0F95  00F2               	movwf	fputc@fp
  7422     0F96  3180  2094  318F   	fcall	_fputc
  7423     0F99                     l3428:
  7424                           
  7425                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 211:         ++i;
  7426     0F99  3001               	movlw	1
  7427     0F9A  0020               	movlb	0	; select bank0
  7428     0F9B  07A5               	addwf	pad@i,f
  7429     0F9C  3000               	movlw	0
  7430     0F9D  3DA6               	addwfc	pad@i+1,f
  7431     0F9E                     l3430:
  7432                           
  7433                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  7434     0F9E  0826               	movf	pad@i+1,w
  7435     0F9F  3A80               	xorlw	128
  7436     0FA0  00A4               	movwf	??_pad
  7437     0FA1  087D               	movf	pad@p+1,w
  7438     0FA2  3A80               	xorlw	128
  7439     0FA3  0224               	subwf	??_pad,w
  7440     0FA4  1D03               	skipz
  7441     0FA5  2FA8               	goto	u2045
  7442     0FA6  087C               	movf	pad@p,w
  7443     0FA7  0225               	subwf	pad@i,w
  7444     0FA8                     u2045:
  7445     0FA8  1C03               	skipc
  7446     0FA9  2FAB               	goto	u2041
  7447     0FAA  2FAC               	goto	u2040
  7448     0FAB                     u2041:
  7449     0FAB  2F8F               	goto	l3426
  7450     0FAC                     u2040:
  7451     0FAC                     l1811:
  7452                           
  7453                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 216:     if (!(flags & (1 << 
      +                          0))) {
  7454     0FAC  0020               	movlb	0	; select bank0
  7455     0FAD  1867               	btfsc	_flags,0
  7456     0FAE  2FB0               	goto	u2051
  7457     0FAF  2FB1               	goto	u2050
  7458     0FB0                     u2051:
  7459     0FB0  2FB7               	goto	l1813
  7460     0FB1                     u2050:
  7461     0FB1                     l3432:
  7462                           
  7463                           ;/opt/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
  7464     0FB1  0827               	movf	pad@fp,w
  7465     0FB2  00F8               	movwf	fputs@fp
  7466     0FB3  087B               	movf	pad@buf,w
  7467     0FB4  318F  2754  318F   	fcall	_fputs
  7468     0FB7                     l1813:
  7469     0FB7  0008               	return
  7470     0FB8                     __end_of_pad:
  7471                           
  7472                           	psect	text8
  7473     0F54                     __ptext8:	
  7474 ;; *************** function _fputs *****************
  7475 ;; Defined at:
  7476 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputs.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  s               1    wreg     PTR const unsigned char 
  7479 ;;		 -> dbuf(32), 
  7480 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  7481 ;;		 -> sprintf@f(11), 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  7484 ;;		 -> dbuf(32), 
  7485 ;;  i               2    1[BANK0 ] int 
  7486 ;;  c               1    0[BANK0 ] unsigned char 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  2    8[COMMON] int 
  7489 ;; Registers used:
  7490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7496 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;Total ram usage:        7 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 2
  7503 ;; This function calls:
  7504 ;;		_fputc
  7505 ;; This function is called by:
  7506 ;;		_pad
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510     0F54                     _fputs:	
  7511                           ;psect for function _fputs
  7512                           
  7513                           
  7514                           ;incstack = 0
  7515                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7516                           ;fputs@s stored from wreg
  7517     0F54  0020               	movlb	0	; select bank0
  7518     0F55  00A3               	movwf	fputs@s
  7519     0F56                     l3314:
  7520     0F56  01A1               	clrf	fputs@i
  7521     0F57  01A2               	clrf	fputs@i+1
  7522     0F58  2F6A               	goto	l3320
  7523     0F59                     l3316:
  7524     0F59  0820               	movf	fputs@c,w
  7525     0F5A  00F9               	movwf	??_fputs
  7526     0F5B  01FA               	clrf	??_fputs+1
  7527     0F5C  0879               	movf	??_fputs,w
  7528     0F5D  00F0               	movwf	fputc@c
  7529     0F5E  087A               	movf	??_fputs+1,w
  7530     0F5F  00F1               	movwf	fputc@c+1
  7531     0F60  0878               	movf	fputs@fp,w
  7532     0F61  00F2               	movwf	fputc@fp
  7533     0F62  3180  2094  318F   	fcall	_fputc
  7534     0F65                     l3318:
  7535     0F65  3001               	movlw	1
  7536     0F66  0020               	movlb	0	; select bank0
  7537     0F67  07A1               	addwf	fputs@i,f
  7538     0F68  3000               	movlw	0
  7539     0F69  3DA2               	addwfc	fputs@i+1,f
  7540     0F6A                     l3320:
  7541     0F6A  0821               	movf	fputs@i,w
  7542     0F6B  0723               	addwf	fputs@s,w
  7543     0F6C  00F9               	movwf	??_fputs
  7544     0F6D  0879               	movf	??_fputs,w
  7545     0F6E  0086               	movwf	6
  7546     0F6F  3001               	movlw	1	; select bank2/3
  7547     0F70  0087               	movwf	7
  7548     0F71  0801               	movf	1,w
  7549     0F72  00A0               	movwf	fputs@c
  7550     0F73  0820               	movf	fputs@c,w
  7551     0F74  1D03               	btfss	3,2
  7552     0F75  2F77               	goto	u1781
  7553     0F76  2F78               	goto	u1780
  7554     0F77                     u1781:
  7555     0F77  2F59               	goto	l3316
  7556     0F78                     u1780:
  7557     0F78                     l1885:
  7558     0F78  0008               	return
  7559     0F79                     __end_of_fputs:
  7560                           
  7561                           	psect	text9
  7562     0094                     __ptext9:	
  7563 ;; *************** function _fputc *****************
  7564 ;; Defined at:
  7565 ;;		line 8 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputc.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  c               2    0[COMMON] int 
  7568 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  7569 ;;		 -> sprintf@f(11), 
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  2    0[COMMON] int 
  7574 ;; Registers used:
  7575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7581 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;Total ram usage:        8 bytes
  7586 ;; Hardware stack levels used: 1
  7587 ;; Hardware stack levels required when called: 1
  7588 ;; This function calls:
  7589 ;;		_putch
  7590 ;; This function is called by:
  7591 ;;		_pad
  7592 ;;		_vfpfcnvrt
  7593 ;;		_fputs
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597     0094                     _fputc:	
  7598                           ;psect for function _fputc
  7599                           
  7600     0094                     l3298:	
  7601                           ;incstack = 0
  7602                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7603                           
  7604     0094  0872               	movf	fputc@fp,w
  7605     0095  1903               	btfsc	3,2
  7606     0096  2898               	goto	u1741
  7607     0097  2899               	goto	u1740
  7608     0098                     u1741:
  7609     0098  289E               	goto	l3302
  7610     0099                     u1740:
  7611     0099                     l3300:
  7612     0099  0872               	movf	fputc@fp,w
  7613     009A  1D03               	btfss	3,2
  7614     009B  289D               	goto	u1751
  7615     009C  289E               	goto	u1750
  7616     009D                     u1751:
  7617     009D  28A3               	goto	l3304
  7618     009E                     u1750:
  7619     009E                     l3302:
  7620     009E  0870               	movf	fputc@c,w
  7621     009F  3180  2005  3180   	fcall	_putch
  7622     00A2  28E3               	goto	l1877
  7623     00A3                     l3304:
  7624     00A3  0872               	movf	fputc@fp,w
  7625     00A4  3E09               	addlw	9
  7626     00A5  0086               	movwf	6
  7627     00A6  0187               	clrf	7
  7628     00A7  0016               	moviw fsr1++
  7629     00A8  0401               	iorwf	1,w
  7630     00A9  1903               	btfsc	3,2
  7631     00AA  28AC               	goto	u1761
  7632     00AB  28AD               	goto	u1760
  7633     00AC                     u1761:
  7634     00AC  28CB               	goto	l3308
  7635     00AD                     u1760:
  7636     00AD                     l3306:
  7637     00AD  0872               	movf	fputc@fp,w
  7638     00AE  3E09               	addlw	9
  7639     00AF  0086               	movwf	6
  7640     00B0  0187               	clrf	7
  7641     00B1  3F40               	moviw [0]fsr1
  7642     00B2  00F3               	movwf	??_fputc
  7643     00B3  3F41               	moviw [1]fsr1
  7644     00B4  00F4               	movwf	??_fputc+1
  7645     00B5  0872               	movf	fputc@fp,w
  7646     00B6  3E02               	addlw	2
  7647     00B7  0086               	movwf	6
  7648     00B8  0187               	clrf	7
  7649     00B9  3F40               	moviw [0]fsr1
  7650     00BA  00F5               	movwf	??_fputc+2
  7651     00BB  3F41               	moviw [1]fsr1
  7652     00BC  00F6               	movwf	??_fputc+3
  7653     00BD  0876               	movf	??_fputc+3,w
  7654     00BE  3A80               	xorlw	128
  7655     00BF  00F7               	movwf	??_fputc+4
  7656     00C0  0874               	movf	??_fputc+1,w
  7657     00C1  3A80               	xorlw	128
  7658     00C2  0277               	subwf	??_fputc+4,w
  7659     00C3  1D03               	skipz
  7660     00C4  28C7               	goto	u1775
  7661     00C5  0873               	movf	??_fputc,w
  7662     00C6  0275               	subwf	??_fputc+2,w
  7663     00C7                     u1775:
  7664     00C7  1803               	skipnc
  7665     00C8  28CA               	goto	u1771
  7666     00C9  28CB               	goto	u1770
  7667     00CA                     u1771:
  7668     00CA  28E3               	goto	l1877
  7669     00CB                     u1770:
  7670     00CB                     l3308:
  7671     00CB  0872               	movf	fputc@fp,w
  7672     00CC  0086               	movwf	6
  7673     00CD  0187               	clrf	7
  7674     00CE  0872               	movf	fputc@fp,w
  7675     00CF  3E02               	addlw	2
  7676     00D0  0084               	movwf	4
  7677     00D1  0185               	clrf	5
  7678     00D2  0800               	movf	0,w
  7679     00D3  0701               	addwf	1,w
  7680     00D4  00F3               	movwf	??_fputc
  7681     00D5  0873               	movf	??_fputc,w
  7682     00D6  0086               	movwf	6
  7683     00D7  0187               	clrf	7
  7684     00D8  0870               	movf	fputc@c,w
  7685     00D9  0081               	movwf	1
  7686     00DA                     l3310:
  7687     00DA  0872               	movf	fputc@fp,w
  7688     00DB  3E02               	addlw	2
  7689     00DC  0086               	movwf	6
  7690     00DD  0187               	clrf	7
  7691     00DE  3001               	movlw	1
  7692     00DF  0781               	addwf	1,f
  7693     00E0  3141               	addfsr 1,1
  7694     00E1  1803               	skipnc
  7695     00E2  0A81               	incf	1,f
  7696     00E3                     l1877:
  7697     00E3  0008               	return
  7698     00E4                     __end_of_fputc:
  7699                           
  7700                           	psect	text10
  7701     0005                     __ptext10:	
  7702 ;; *************** function _putch *****************
  7703 ;; Defined at:
  7704 ;;		line 7 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/putch.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  c               1    wreg     unsigned char 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  c               1    0[COMMON] unsigned char 
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      void 
  7711 ;; Registers used:
  7712 ;;		wreg
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;Total ram usage:        0 bytes
  7723 ;; Hardware stack levels used: 1
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_fputc
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731     0005                     _putch:	
  7732                           ;psect for function _putch
  7733                           
  7734     0005                     l1888:	
  7735                           ;incstack = 0
  7736                           ; Regs used in _putch: [wreg]
  7737                           
  7738     0005  0008               	return
  7739     0006                     __end_of_putch:
  7740                           
  7741                           	psect	text11
  7742     0E54                     __ptext11:	
  7743 ;; *************** function _abs *****************
  7744 ;; Defined at:
  7745 ;;		line 1 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/abs.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  a               2    7[COMMON] int 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  2    7[COMMON] int 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;Total ram usage:        4 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; This function calls:
  7766 ;;		Nothing
  7767 ;; This function is called by:
  7768 ;;		_dtoa
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772     0E54                     _abs:	
  7773                           ;psect for function _abs
  7774                           
  7775     0E54                     l3434:	
  7776                           ;incstack = 0
  7777                           ; Regs used in _abs: [wreg+status,2+status,0]
  7778                           
  7779     0E54  1BF8               	btfsc	abs@a+1,7
  7780     0E55  2E57               	goto	u2061
  7781     0E56  2E58               	goto	u2060
  7782     0E57                     u2061:
  7783     0E57  2E59               	goto	l3438
  7784     0E58                     u2060:
  7785     0E58                     l3436:
  7786     0E58  2E64               	goto	l1865
  7787     0E59                     l3438:
  7788     0E59  0977               	comf	abs@a,w
  7789     0E5A  00F9               	movwf	??_abs
  7790     0E5B  0978               	comf	abs@a+1,w
  7791     0E5C  00FA               	movwf	??_abs+1
  7792     0E5D  0AF9               	incf	??_abs,f
  7793     0E5E  1903               	skipnz
  7794     0E5F  0AFA               	incf	??_abs+1,f
  7795     0E60  0879               	movf	??_abs,w
  7796     0E61  00F7               	movwf	?_abs
  7797     0E62  087A               	movf	??_abs+1,w
  7798     0E63  00F8               	movwf	?_abs+1
  7799     0E64                     l1865:
  7800     0E64  0008               	return
  7801     0E65                     __end_of_abs:
  7802                           
  7803                           	psect	text12
  7804     00E4                     __ptext12:	
  7805 ;; *************** function ___awmod *****************
  7806 ;; Defined at:
  7807 ;;		line 5 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/awmod.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  divisor         2    0[COMMON] int 
  7810 ;;  dividend        2    2[COMMON] int 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  sign            1    6[COMMON] unsigned char 
  7813 ;;  counter         1    5[COMMON] unsigned char 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  2    0[COMMON] int 
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;Total ram usage:        7 bytes
  7828 ;; Hardware stack levels used: 1
  7829 ;; This function calls:
  7830 ;;		Nothing
  7831 ;; This function is called by:
  7832 ;;		_dtoa
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836     00E4                     ___awmod:	
  7837                           ;psect for function ___awmod
  7838                           
  7839     00E4                     l3380:	
  7840                           ;incstack = 0
  7841                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7842                           
  7843     00E4  01F6               	clrf	___awmod@sign
  7844     00E5                     l3382:
  7845     00E5  1FF3               	btfss	___awmod@dividend+1,7
  7846     00E6  28E8               	goto	u1931
  7847     00E7  28E9               	goto	u1930
  7848     00E8                     u1931:
  7849     00E8  28F0               	goto	l3388
  7850     00E9                     u1930:
  7851     00E9                     l3384:
  7852     00E9  09F2               	comf	___awmod@dividend,f
  7853     00EA  09F3               	comf	___awmod@dividend+1,f
  7854     00EB  0AF2               	incf	___awmod@dividend,f
  7855     00EC  1903               	skipnz
  7856     00ED  0AF3               	incf	___awmod@dividend+1,f
  7857     00EE                     l3386:
  7858     00EE  01F6               	clrf	___awmod@sign
  7859     00EF  0AF6               	incf	___awmod@sign,f
  7860     00F0                     l3388:
  7861     00F0  1FF1               	btfss	___awmod@divisor+1,7
  7862     00F1  28F3               	goto	u1941
  7863     00F2  28F4               	goto	u1940
  7864     00F3                     u1941:
  7865     00F3  28F9               	goto	l3392
  7866     00F4                     u1940:
  7867     00F4                     l3390:
  7868     00F4  09F0               	comf	___awmod@divisor,f
  7869     00F5  09F1               	comf	___awmod@divisor+1,f
  7870     00F6  0AF0               	incf	___awmod@divisor,f
  7871     00F7  1903               	skipnz
  7872     00F8  0AF1               	incf	___awmod@divisor+1,f
  7873     00F9                     l3392:
  7874     00F9  0870               	movf	___awmod@divisor,w
  7875     00FA  0471               	iorwf	___awmod@divisor+1,w
  7876     00FB  1903               	btfsc	3,2
  7877     00FC  28FE               	goto	u1951
  7878     00FD  28FF               	goto	u1950
  7879     00FE                     u1951:
  7880     00FE  2928               	goto	l3410
  7881     00FF                     u1950:
  7882     00FF                     l3394:
  7883     00FF  01F5               	clrf	___awmod@counter
  7884     0100  0AF5               	incf	___awmod@counter,f
  7885     0101  290B               	goto	l3400
  7886     0102                     l3396:
  7887     0102  3001               	movlw	1
  7888     0103                     u1965:
  7889     0103  35F0               	lslf	___awmod@divisor,f
  7890     0104  0DF1               	rlf	___awmod@divisor+1,f
  7891     0105  0B89               	decfsz	9,f
  7892     0106  2903               	goto	u1965
  7893     0107                     l3398:
  7894     0107  3001               	movlw	1
  7895     0108  00F4               	movwf	??___awmod
  7896     0109  0874               	movf	??___awmod,w
  7897     010A  07F5               	addwf	___awmod@counter,f
  7898     010B                     l3400:
  7899     010B  1FF1               	btfss	___awmod@divisor+1,7
  7900     010C  290E               	goto	u1971
  7901     010D  290F               	goto	u1970
  7902     010E                     u1971:
  7903     010E  2902               	goto	l3396
  7904     010F                     u1970:
  7905     010F                     l3402:
  7906     010F  0871               	movf	___awmod@divisor+1,w
  7907     0110  0273               	subwf	___awmod@dividend+1,w
  7908     0111  1D03               	skipz
  7909     0112  2915               	goto	u1985
  7910     0113  0870               	movf	___awmod@divisor,w
  7911     0114  0272               	subwf	___awmod@dividend,w
  7912     0115                     u1985:
  7913     0115  1C03               	skipc
  7914     0116  2918               	goto	u1981
  7915     0117  2919               	goto	u1980
  7916     0118                     u1981:
  7917     0118  291D               	goto	l3406
  7918     0119                     u1980:
  7919     0119                     l3404:
  7920     0119  0870               	movf	___awmod@divisor,w
  7921     011A  02F2               	subwf	___awmod@dividend,f
  7922     011B  0871               	movf	___awmod@divisor+1,w
  7923     011C  3BF3               	subwfb	___awmod@dividend+1,f
  7924     011D                     l3406:
  7925     011D  3001               	movlw	1
  7926     011E                     u1995:
  7927     011E  36F1               	lsrf	___awmod@divisor+1,f
  7928     011F  0CF0               	rrf	___awmod@divisor,f
  7929     0120  0B89               	decfsz	9,f
  7930     0121  291E               	goto	u1995
  7931     0122                     l3408:
  7932     0122  3001               	movlw	1
  7933     0123  02F5               	subwf	___awmod@counter,f
  7934     0124  1D03               	btfss	3,2
  7935     0125  2927               	goto	u2001
  7936     0126  2928               	goto	u2000
  7937     0127                     u2001:
  7938     0127  290F               	goto	l3402
  7939     0128                     u2000:
  7940     0128                     l3410:
  7941     0128  0876               	movf	___awmod@sign,w
  7942     0129  1903               	btfsc	3,2
  7943     012A  292C               	goto	u2011
  7944     012B  292D               	goto	u2010
  7945     012C                     u2011:
  7946     012C  2932               	goto	l3414
  7947     012D                     u2010:
  7948     012D                     l3412:
  7949     012D  09F2               	comf	___awmod@dividend,f
  7950     012E  09F3               	comf	___awmod@dividend+1,f
  7951     012F  0AF2               	incf	___awmod@dividend,f
  7952     0130  1903               	skipnz
  7953     0131  0AF3               	incf	___awmod@dividend+1,f
  7954     0132                     l3414:
  7955     0132  0873               	movf	___awmod@dividend+1,w
  7956     0133  00F1               	movwf	?___awmod+1
  7957     0134  0872               	movf	___awmod@dividend,w
  7958     0135  00F0               	movwf	?___awmod
  7959     0136                     l1491:
  7960     0136  0008               	return
  7961     0137                     __end_of___awmod:
  7962                           
  7963                           	psect	text13
  7964     0137                     __ptext13:	
  7965 ;; *************** function ___awdiv *****************
  7966 ;; Defined at:
  7967 ;;		line 5 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/awdiv.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;  divisor         2    0[COMMON] int 
  7970 ;;  dividend        2    2[COMMON] int 
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;  quotient        2    7[COMMON] int 
  7973 ;;  sign            1    6[COMMON] unsigned char 
  7974 ;;  counter         1    5[COMMON] unsigned char 
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  2    0[COMMON] int 
  7977 ;; Registers used:
  7978 ;;		wreg, status,2, status,0
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7988 ;;Total ram usage:        9 bytes
  7989 ;; Hardware stack levels used: 1
  7990 ;; This function calls:
  7991 ;;		Nothing
  7992 ;; This function is called by:
  7993 ;;		_dtoa
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997     0137                     ___awdiv:	
  7998                           ;psect for function ___awdiv
  7999                           
  8000     0137                     l3336:	
  8001                           ;incstack = 0
  8002                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8003                           
  8004     0137  01F6               	clrf	___awdiv@sign
  8005     0138                     l3338:
  8006     0138  1FF1               	btfss	___awdiv@divisor+1,7
  8007     0139  293B               	goto	u1831
  8008     013A  293C               	goto	u1830
  8009     013B                     u1831:
  8010     013B  2943               	goto	l3344
  8011     013C                     u1830:
  8012     013C                     l3340:
  8013     013C  09F0               	comf	___awdiv@divisor,f
  8014     013D  09F1               	comf	___awdiv@divisor+1,f
  8015     013E  0AF0               	incf	___awdiv@divisor,f
  8016     013F  1903               	skipnz
  8017     0140  0AF1               	incf	___awdiv@divisor+1,f
  8018     0141                     l3342:
  8019     0141  01F6               	clrf	___awdiv@sign
  8020     0142  0AF6               	incf	___awdiv@sign,f
  8021     0143                     l3344:
  8022     0143  1FF3               	btfss	___awdiv@dividend+1,7
  8023     0144  2946               	goto	u1841
  8024     0145  2947               	goto	u1840
  8025     0146                     u1841:
  8026     0146  2950               	goto	l3350
  8027     0147                     u1840:
  8028     0147                     l3346:
  8029     0147  09F2               	comf	___awdiv@dividend,f
  8030     0148  09F3               	comf	___awdiv@dividend+1,f
  8031     0149  0AF2               	incf	___awdiv@dividend,f
  8032     014A  1903               	skipnz
  8033     014B  0AF3               	incf	___awdiv@dividend+1,f
  8034     014C                     l3348:
  8035     014C  3001               	movlw	1
  8036     014D  00F4               	movwf	??___awdiv
  8037     014E  0874               	movf	??___awdiv,w
  8038     014F  06F6               	xorwf	___awdiv@sign,f
  8039     0150                     l3350:
  8040     0150  01F7               	clrf	___awdiv@quotient
  8041     0151  01F8               	clrf	___awdiv@quotient+1
  8042     0152                     l3352:
  8043     0152  0870               	movf	___awdiv@divisor,w
  8044     0153  0471               	iorwf	___awdiv@divisor+1,w
  8045     0154  1903               	btfsc	3,2
  8046     0155  2957               	goto	u1851
  8047     0156  2958               	goto	u1850
  8048     0157                     u1851:
  8049     0157  2987               	goto	l3372
  8050     0158                     u1850:
  8051     0158                     l3354:
  8052     0158  01F5               	clrf	___awdiv@counter
  8053     0159  0AF5               	incf	___awdiv@counter,f
  8054     015A  2964               	goto	l3360
  8055     015B                     l3356:
  8056     015B  3001               	movlw	1
  8057     015C                     u1865:
  8058     015C  35F0               	lslf	___awdiv@divisor,f
  8059     015D  0DF1               	rlf	___awdiv@divisor+1,f
  8060     015E  0B89               	decfsz	9,f
  8061     015F  295C               	goto	u1865
  8062     0160                     l3358:
  8063     0160  3001               	movlw	1
  8064     0161  00F4               	movwf	??___awdiv
  8065     0162  0874               	movf	??___awdiv,w
  8066     0163  07F5               	addwf	___awdiv@counter,f
  8067     0164                     l3360:
  8068     0164  1FF1               	btfss	___awdiv@divisor+1,7
  8069     0165  2967               	goto	u1871
  8070     0166  2968               	goto	u1870
  8071     0167                     u1871:
  8072     0167  295B               	goto	l3356
  8073     0168                     u1870:
  8074     0168                     l3362:
  8075     0168  3001               	movlw	1
  8076     0169                     u1885:
  8077     0169  35F7               	lslf	___awdiv@quotient,f
  8078     016A  0DF8               	rlf	___awdiv@quotient+1,f
  8079     016B  0B89               	decfsz	9,f
  8080     016C  2969               	goto	u1885
  8081     016D  0871               	movf	___awdiv@divisor+1,w
  8082     016E  0273               	subwf	___awdiv@dividend+1,w
  8083     016F  1D03               	skipz
  8084     0170  2973               	goto	u1895
  8085     0171  0870               	movf	___awdiv@divisor,w
  8086     0172  0272               	subwf	___awdiv@dividend,w
  8087     0173                     u1895:
  8088     0173  1C03               	skipc
  8089     0174  2976               	goto	u1891
  8090     0175  2977               	goto	u1890
  8091     0176                     u1891:
  8092     0176  297C               	goto	l3368
  8093     0177                     u1890:
  8094     0177                     l3364:
  8095     0177  0870               	movf	___awdiv@divisor,w
  8096     0178  02F2               	subwf	___awdiv@dividend,f
  8097     0179  0871               	movf	___awdiv@divisor+1,w
  8098     017A  3BF3               	subwfb	___awdiv@dividend+1,f
  8099     017B                     l3366:
  8100     017B  1477               	bsf	___awdiv@quotient,0
  8101     017C                     l3368:
  8102     017C  3001               	movlw	1
  8103     017D                     u1905:
  8104     017D  36F1               	lsrf	___awdiv@divisor+1,f
  8105     017E  0CF0               	rrf	___awdiv@divisor,f
  8106     017F  0B89               	decfsz	9,f
  8107     0180  297D               	goto	u1905
  8108     0181                     l3370:
  8109     0181  3001               	movlw	1
  8110     0182  02F5               	subwf	___awdiv@counter,f
  8111     0183  1D03               	btfss	3,2
  8112     0184  2986               	goto	u1911
  8113     0185  2987               	goto	u1910
  8114     0186                     u1911:
  8115     0186  2968               	goto	l3362
  8116     0187                     u1910:
  8117     0187                     l3372:
  8118     0187  0876               	movf	___awdiv@sign,w
  8119     0188  1903               	btfsc	3,2
  8120     0189  298B               	goto	u1921
  8121     018A  298C               	goto	u1920
  8122     018B                     u1921:
  8123     018B  2991               	goto	l3376
  8124     018C                     u1920:
  8125     018C                     l3374:
  8126     018C  09F7               	comf	___awdiv@quotient,f
  8127     018D  09F8               	comf	___awdiv@quotient+1,f
  8128     018E  0AF7               	incf	___awdiv@quotient,f
  8129     018F  1903               	skipnz
  8130     0190  0AF8               	incf	___awdiv@quotient+1,f
  8131     0191                     l3376:
  8132     0191  0878               	movf	___awdiv@quotient+1,w
  8133     0192  00F1               	movwf	?___awdiv+1
  8134     0193  0877               	movf	___awdiv@quotient,w
  8135     0194  00F0               	movwf	?___awdiv
  8136     0195                     l1478:
  8137     0195  0008               	return
  8138     0196                     __end_of___awdiv:
  8139                           
  8140                           	psect	text14
  8141     0598                     __ptext14:	
  8142 ;; *************** function _readTC74 *****************
  8143 ;; Defined at:
  8144 ;;		line 60 in file "main.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;  value           1    3[COMMON] unsigned char 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      unsigned char 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2, status,0, pclath, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;Total ram usage:        2 bytes
  8163 ;; Hardware stack levels used: 1
  8164 ;; Hardware stack levels required when called: 1
  8165 ;; This function calls:
  8166 ;;		_ReadI2C
  8167 ;;		_WriteI2C
  8168 ;; This function is called by:
  8169 ;;		_main
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173     0598                     _readTC74:	
  8174                           ;psect for function _readTC74
  8175                           
  8176     0598                     l1012:	
  8177                           ;incstack = 0
  8178                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
  8179                           ;main.c: 62:  unsigned char value;;main.c: 63: do{
  8180                           
  8181     0598                     l3992:	
  8182                           ;main.c: 64:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8183                           
  8184     0598  0023               	movlb	3	; select bank3
  8185     0599  0C0F               	rrf	15,w	;volatile
  8186     059A  0C89               	rrf	9,f
  8187     059B  3901               	andlw	1
  8188     059C  00F2               	movwf	??_readTC74
  8189     059D  0811               	movf	17,w	;volatile
  8190     059E  391F               	andlw	31
  8191     059F  0472               	iorwf	??_readTC74,w
  8192     05A0  1D03               	btfss	3,2
  8193     05A1  2DA3               	goto	u2911
  8194     05A2  2DA4               	goto	u2910
  8195     05A3                     u2911:
  8196     05A3  2D98               	goto	l3992
  8197     05A4                     u2910:
  8198     05A4                     l1016:	
  8199                           ;main.c: 65:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
  8200                           
  8201     05A4  1411               	bsf	17,0	;volatile
  8202     05A5                     l1017:
  8203     05A5  1811               	btfsc	17,0	;volatile
  8204     05A6  2DA8               	goto	u2921
  8205     05A7  2DA9               	goto	u2920
  8206     05A8                     u2921:
  8207     05A8  2DA5               	goto	l1017
  8208     05A9                     u2920:
  8209     05A9                     l3994:
  8210     05A9  0C0F               	rrf	15,w	;volatile
  8211     05AA  0C89               	rrf	9,f
  8212     05AB  3901               	andlw	1
  8213     05AC  00F2               	movwf	??_readTC74
  8214     05AD  0811               	movf	17,w	;volatile
  8215     05AE  391F               	andlw	31
  8216     05AF  0472               	iorwf	??_readTC74,w
  8217     05B0  1D03               	btfss	3,2
  8218     05B1  2DB3               	goto	u2931
  8219     05B2  2DB4               	goto	u2930
  8220     05B3                     u2931:
  8221     05B3  2DA9               	goto	l3994
  8222     05B4                     u2930:
  8223     05B4                     l3996:
  8224                           
  8225                           ;main.c: 67:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8226     05B4  309A               	movlw	154
  8227     05B5  3180  2049  3185   	fcall	_WriteI2C
  8228     05B8                     l3998:
  8229     05B8  0023               	movlb	3	; select bank3
  8230     05B9  0C0F               	rrf	15,w	;volatile
  8231     05BA  0C89               	rrf	9,f
  8232     05BB  3901               	andlw	1
  8233     05BC  00F2               	movwf	??_readTC74
  8234     05BD  0811               	movf	17,w	;volatile
  8235     05BE  391F               	andlw	31
  8236     05BF  0472               	iorwf	??_readTC74,w
  8237     05C0  1D03               	btfss	3,2
  8238     05C1  2DC3               	goto	u2941
  8239     05C2  2DC4               	goto	u2940
  8240     05C3                     u2941:
  8241     05C3  2DB8               	goto	l3998
  8242     05C4                     u2940:
  8243     05C4                     l4000:
  8244                           
  8245                           ;main.c: 68:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8246     05C4  3001               	movlw	1
  8247     05C5  3180  2049  3185   	fcall	_WriteI2C
  8248     05C8                     l4002:
  8249     05C8  0023               	movlb	3	; select bank3
  8250     05C9  0C0F               	rrf	15,w	;volatile
  8251     05CA  0C89               	rrf	9,f
  8252     05CB  3901               	andlw	1
  8253     05CC  00F2               	movwf	??_readTC74
  8254     05CD  0811               	movf	17,w	;volatile
  8255     05CE  391F               	andlw	31
  8256     05CF  0472               	iorwf	??_readTC74,w
  8257     05D0  1D03               	btfss	3,2
  8258     05D1  2DD3               	goto	u2951
  8259     05D2  2DD4               	goto	u2950
  8260     05D3                     u2951:
  8261     05D3  2DC8               	goto	l4002
  8262     05D4                     u2950:
  8263     05D4                     l1030:	
  8264                           ;main.c: 69:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8265                           
  8266     05D4  1491               	bsf	17,1	;volatile
  8267     05D5                     l1031:
  8268     05D5  1891               	btfsc	17,1	;volatile
  8269     05D6  2DD8               	goto	u2961
  8270     05D7  2DD9               	goto	u2960
  8271     05D8                     u2961:
  8272     05D8  2DD5               	goto	l1031
  8273     05D9                     u2960:
  8274     05D9                     l4004:
  8275     05D9  0C0F               	rrf	15,w	;volatile
  8276     05DA  0C89               	rrf	9,f
  8277     05DB  3901               	andlw	1
  8278     05DC  00F2               	movwf	??_readTC74
  8279     05DD  0811               	movf	17,w	;volatile
  8280     05DE  391F               	andlw	31
  8281     05DF  0472               	iorwf	??_readTC74,w
  8282     05E0  1D03               	btfss	3,2
  8283     05E1  2DE3               	goto	u2971
  8284     05E2  2DE4               	goto	u2970
  8285     05E3                     u2971:
  8286     05E3  2DD9               	goto	l4004
  8287     05E4                     u2970:
  8288     05E4                     l4006:
  8289                           
  8290                           ;main.c: 70:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8291     05E4  309B               	movlw	155
  8292     05E5  3180  2049  3185   	fcall	_WriteI2C
  8293     05E8                     l4008:
  8294     05E8  0023               	movlb	3	; select bank3
  8295     05E9  0C0F               	rrf	15,w	;volatile
  8296     05EA  0C89               	rrf	9,f
  8297     05EB  3901               	andlw	1
  8298     05EC  00F2               	movwf	??_readTC74
  8299     05ED  0811               	movf	17,w	;volatile
  8300     05EE  391F               	andlw	31
  8301     05EF  0472               	iorwf	??_readTC74,w
  8302     05F0  1D03               	btfss	3,2
  8303     05F1  2DF3               	goto	u2981
  8304     05F2  2DF4               	goto	u2980
  8305     05F3                     u2981:
  8306     05F3  2DE8               	goto	l4008
  8307     05F4                     u2980:
  8308     05F4                     l4010:
  8309                           
  8310                           ;main.c: 71:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8311     05F4  318E  26E2  3185   	fcall	_ReadI2C
  8312     05F7  00F3               	movwf	readTC74@value
  8313     05F8                     l4012:
  8314     05F8  0023               	movlb	3	; select bank3
  8315     05F9  0C0F               	rrf	15,w	;volatile
  8316     05FA  0C89               	rrf	9,f
  8317     05FB  3901               	andlw	1
  8318     05FC  00F2               	movwf	??_readTC74
  8319     05FD  0811               	movf	17,w	;volatile
  8320     05FE  391F               	andlw	31
  8321     05FF  0472               	iorwf	??_readTC74,w
  8322     0600  1D03               	btfss	3,2
  8323     0601  2E03               	goto	u2991
  8324     0602  2E04               	goto	u2990
  8325     0603                     u2991:
  8326     0603  2DF8               	goto	l4012
  8327     0604                     u2990:
  8328     0604                     l1044:	
  8329                           ;main.c: 72:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8330                           
  8331     0604  1691               	bsf	17,5	;volatile
  8332     0605  1611               	bsf	17,4	;volatile
  8333     0606                     l1045:
  8334     0606  1A11               	btfsc	17,4	;volatile
  8335     0607  2E09               	goto	u3001
  8336     0608  2E0A               	goto	u3000
  8337     0609                     u3001:
  8338     0609  2E06               	goto	l1045
  8339     060A                     u3000:
  8340     060A                     l4014:
  8341     060A  0C0F               	rrf	15,w	;volatile
  8342     060B  0C89               	rrf	9,f
  8343     060C  3901               	andlw	1
  8344     060D  00F2               	movwf	??_readTC74
  8345     060E  0811               	movf	17,w	;volatile
  8346     060F  391F               	andlw	31
  8347     0610  0472               	iorwf	??_readTC74,w
  8348     0611  1D03               	btfss	3,2
  8349     0612  2E14               	goto	u3011
  8350     0613  2E15               	goto	u3010
  8351     0614                     u3011:
  8352     0614  2E0A               	goto	l4014
  8353     0615                     u3010:
  8354     0615                     l1052:	
  8355                           ;main.c: 73:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
  8356                           
  8357     0615  1511               	bsf	17,2	;volatile
  8358     0616                     l1053:
  8359     0616  1911               	btfsc	17,2	;volatile
  8360     0617  2E19               	goto	u3021
  8361     0618  2E1A               	goto	u3020
  8362     0619                     u3021:
  8363     0619  2E16               	goto	l1053
  8364     061A                     u3020:
  8365     061A                     l1056:
  8366                           
  8367                           ;main.c: 74: } while (!(value & 0x40));
  8368     061A  1F73               	btfss	readTC74@value,6
  8369     061B  2E1D               	goto	u3031
  8370     061C  2E1E               	goto	u3030
  8371     061D                     u3031:
  8372     061D  2D98               	goto	l1012
  8373     061E                     u3030:
  8374     061E                     l4016:
  8375     061E  0C0F               	rrf	15,w	;volatile
  8376     061F  0C89               	rrf	9,f
  8377     0620  3901               	andlw	1
  8378     0621  00F2               	movwf	??_readTC74
  8379     0622  0811               	movf	17,w	;volatile
  8380     0623  391F               	andlw	31
  8381     0624  0472               	iorwf	??_readTC74,w
  8382     0625  1D03               	btfss	3,2
  8383     0626  2E28               	goto	u3041
  8384     0627  2E29               	goto	u3040
  8385     0628                     u3041:
  8386     0628  2E1E               	goto	l4016
  8387     0629                     u3040:
  8388     0629                     l1061:	
  8389                           ;main.c: 77:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
  8390                           
  8391     0629  1411               	bsf	17,0	;volatile
  8392     062A                     l1062:
  8393     062A  1811               	btfsc	17,0	;volatile
  8394     062B  2E2D               	goto	u3051
  8395     062C  2E2E               	goto	u3050
  8396     062D                     u3051:
  8397     062D  2E2A               	goto	l1062
  8398     062E                     u3050:
  8399     062E                     l4018:
  8400     062E  0C0F               	rrf	15,w	;volatile
  8401     062F  0C89               	rrf	9,f
  8402     0630  3901               	andlw	1
  8403     0631  00F2               	movwf	??_readTC74
  8404     0632  0811               	movf	17,w	;volatile
  8405     0633  391F               	andlw	31
  8406     0634  0472               	iorwf	??_readTC74,w
  8407     0635  1D03               	btfss	3,2
  8408     0636  2E38               	goto	u3061
  8409     0637  2E39               	goto	u3060
  8410     0638                     u3061:
  8411     0638  2E2E               	goto	l4018
  8412     0639                     u3060:
  8413     0639                     l4020:
  8414                           
  8415                           ;main.c: 78:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8416     0639  309A               	movlw	154
  8417     063A  3180  2049  3185   	fcall	_WriteI2C
  8418     063D                     l4022:
  8419     063D  0023               	movlb	3	; select bank3
  8420     063E  0C0F               	rrf	15,w	;volatile
  8421     063F  0C89               	rrf	9,f
  8422     0640  3901               	andlw	1
  8423     0641  00F2               	movwf	??_readTC74
  8424     0642  0811               	movf	17,w	;volatile
  8425     0643  391F               	andlw	31
  8426     0644  0472               	iorwf	??_readTC74,w
  8427     0645  1D03               	btfss	3,2
  8428     0646  2E48               	goto	u3071
  8429     0647  2E49               	goto	u3070
  8430     0648                     u3071:
  8431     0648  2E3D               	goto	l4022
  8432     0649                     u3070:
  8433     0649                     l4024:
  8434                           
  8435                           ;main.c: 79:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8436     0649  3000               	movlw	0
  8437     064A  3180  2049  3185   	fcall	_WriteI2C
  8438     064D                     l4026:
  8439     064D  0023               	movlb	3	; select bank3
  8440     064E  0C0F               	rrf	15,w	;volatile
  8441     064F  0C89               	rrf	9,f
  8442     0650  3901               	andlw	1
  8443     0651  00F2               	movwf	??_readTC74
  8444     0652  0811               	movf	17,w	;volatile
  8445     0653  391F               	andlw	31
  8446     0654  0472               	iorwf	??_readTC74,w
  8447     0655  1D03               	btfss	3,2
  8448     0656  2E58               	goto	u3081
  8449     0657  2E59               	goto	u3080
  8450     0658                     u3081:
  8451     0658  2E4D               	goto	l4026
  8452     0659                     u3080:
  8453     0659                     l1075:	
  8454                           ;main.c: 80:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8455                           
  8456     0659  1491               	bsf	17,1	;volatile
  8457     065A                     l1076:
  8458     065A  1891               	btfsc	17,1	;volatile
  8459     065B  2E5D               	goto	u3091
  8460     065C  2E5E               	goto	u3090
  8461     065D                     u3091:
  8462     065D  2E5A               	goto	l1076
  8463     065E                     u3090:
  8464     065E                     l4028:
  8465     065E  0C0F               	rrf	15,w	;volatile
  8466     065F  0C89               	rrf	9,f
  8467     0660  3901               	andlw	1
  8468     0661  00F2               	movwf	??_readTC74
  8469     0662  0811               	movf	17,w	;volatile
  8470     0663  391F               	andlw	31
  8471     0664  0472               	iorwf	??_readTC74,w
  8472     0665  1D03               	btfss	3,2
  8473     0666  2E68               	goto	u3101
  8474     0667  2E69               	goto	u3100
  8475     0668                     u3101:
  8476     0668  2E5E               	goto	l4028
  8477     0669                     u3100:
  8478     0669                     l4030:
  8479                           
  8480                           ;main.c: 81:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8481     0669  309B               	movlw	155
  8482     066A  3180  2049  3185   	fcall	_WriteI2C
  8483     066D                     l4032:
  8484     066D  0023               	movlb	3	; select bank3
  8485     066E  0C0F               	rrf	15,w	;volatile
  8486     066F  0C89               	rrf	9,f
  8487     0670  3901               	andlw	1
  8488     0671  00F2               	movwf	??_readTC74
  8489     0672  0811               	movf	17,w	;volatile
  8490     0673  391F               	andlw	31
  8491     0674  0472               	iorwf	??_readTC74,w
  8492     0675  1D03               	btfss	3,2
  8493     0676  2E78               	goto	u3111
  8494     0677  2E79               	goto	u3110
  8495     0678                     u3111:
  8496     0678  2E6D               	goto	l4032
  8497     0679                     u3110:
  8498     0679                     l4034:
  8499                           
  8500                           ;main.c: 82:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8501     0679  318E  26E2  3185   	fcall	_ReadI2C
  8502     067C  00F3               	movwf	readTC74@value
  8503     067D                     l4036:
  8504     067D  0023               	movlb	3	; select bank3
  8505     067E  0C0F               	rrf	15,w	;volatile
  8506     067F  0C89               	rrf	9,f
  8507     0680  3901               	andlw	1
  8508     0681  00F2               	movwf	??_readTC74
  8509     0682  0811               	movf	17,w	;volatile
  8510     0683  391F               	andlw	31
  8511     0684  0472               	iorwf	??_readTC74,w
  8512     0685  1D03               	btfss	3,2
  8513     0686  2E88               	goto	u3121
  8514     0687  2E89               	goto	u3120
  8515     0688                     u3121:
  8516     0688  2E7D               	goto	l4036
  8517     0689                     u3120:
  8518     0689                     l1089:	
  8519                           ;main.c: 83:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8520                           
  8521     0689  1691               	bsf	17,5	;volatile
  8522     068A  1611               	bsf	17,4	;volatile
  8523     068B                     l1090:
  8524     068B  1A11               	btfsc	17,4	;volatile
  8525     068C  2E8E               	goto	u3131
  8526     068D  2E8F               	goto	u3130
  8527     068E                     u3131:
  8528     068E  2E8B               	goto	l1090
  8529     068F                     u3130:
  8530     068F                     l4038:
  8531     068F  0C0F               	rrf	15,w	;volatile
  8532     0690  0C89               	rrf	9,f
  8533     0691  3901               	andlw	1
  8534     0692  00F2               	movwf	??_readTC74
  8535     0693  0811               	movf	17,w	;volatile
  8536     0694  391F               	andlw	31
  8537     0695  0472               	iorwf	??_readTC74,w
  8538     0696  1D03               	btfss	3,2
  8539     0697  2E99               	goto	u3141
  8540     0698  2E9A               	goto	u3140
  8541     0699                     u3141:
  8542     0699  2E8F               	goto	l4038
  8543     069A                     u3140:
  8544     069A                     l1097:	
  8545                           ;main.c: 84:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
  8546                           
  8547     069A  1511               	bsf	17,2	;volatile
  8548     069B                     l1098:
  8549     069B  1911               	btfsc	17,2	;volatile
  8550     069C  2E9E               	goto	u3151
  8551     069D  2E9F               	goto	u3150
  8552     069E                     u3151:
  8553     069E  2E9B               	goto	l1098
  8554     069F                     u3150:
  8555     069F                     l4040:
  8556                           
  8557                           ;main.c: 86:  return value;
  8558     069F  0873               	movf	readTC74@value,w
  8559     06A0                     l1102:
  8560     06A0  0008               	return
  8561     06A1                     __end_of_readTC74:
  8562                           
  8563                           	psect	text15
  8564     0DE5                     __ptext15:	
  8565 ;; *************** function _TMR1_StartTimer *****************
  8566 ;; Defined at:
  8567 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;		None
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;		None
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  1    wreg      void 
  8574 ;; Registers used:
  8575 ;;		None
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;Total ram usage:        0 bytes
  8586 ;; Hardware stack levels used: 1
  8587 ;; This function calls:
  8588 ;;		Nothing
  8589 ;; This function is called by:
  8590 ;;		_main
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594     0DE5                     _TMR1_StartTimer:	
  8595                           ;psect for function _TMR1_StartTimer
  8596                           
  8597     0DE5                     l4044:	
  8598                           ;incstack = 0
  8599                           ; Regs used in _TMR1_StartTimer: []
  8600                           
  8601                           
  8602                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
  8603     0DE5  0024               	movlb	4	; select bank4
  8604     0DE6  140E               	bsf	14,0	;volatile
  8605     0DE7                     l1150:
  8606     0DE7  0008               	return
  8607     0DE8                     __end_of_TMR1_StartTimer:
  8608                           
  8609                           	psect	text16
  8610     0E12                     __ptext16:	
  8611 ;; *************** function _TMR1_Reload *****************
  8612 ;; Defined at:
  8613 ;;		line 142 in file "mcc_generated_files/tmr1.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;		None
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;		None
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      void 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0, pclath, cstack
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;Total ram usage:        0 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; Hardware stack levels required when called: 1
  8634 ;; This function calls:
  8635 ;;		_TMR1_WriteTimer
  8636 ;; This function is called by:
  8637 ;;		_main
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641     0E12                     _TMR1_Reload:	
  8642                           ;psect for function _TMR1_Reload
  8643                           
  8644     0E12                     l4050:	
  8645                           ;incstack = 0
  8646                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  8647                           
  8648                           
  8649                           ;mcc_generated_files/tmr1.c: 144:     TMR1_WriteTimer(timer1ReloadVal);
  8650     0E12  0020               	movlb	0	; select bank0
  8651     0E13  0866               	movf	_timer1ReloadVal+1,w	;volatile
  8652     0E14  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  8653     0E15  0865               	movf	_timer1ReloadVal,w	;volatile
  8654     0E16  00F0               	movwf	TMR1_WriteTimer@timerVal
  8655     0E17  318E  2643  318E   	fcall	_TMR1_WriteTimer
  8656     0E1A                     l1164:
  8657     0E1A  0008               	return
  8658     0E1B                     __end_of_TMR1_Reload:
  8659                           
  8660                           	psect	text17
  8661     0E43                     __ptext17:	
  8662 ;; *************** function _TMR1_WriteTimer *****************
  8663 ;; Defined at:
  8664 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;  timerVal        2    0[COMMON] unsigned short 
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      void 
  8671 ;; Registers used:
  8672 ;;		wreg, status,2
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;Total ram usage:        2 bytes
  8683 ;; Hardware stack levels used: 1
  8684 ;; This function calls:
  8685 ;;		Nothing
  8686 ;; This function is called by:
  8687 ;;		_TMR1_Reload
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691     0E43                     _TMR1_WriteTimer:	
  8692                           ;psect for function _TMR1_WriteTimer
  8693                           
  8694     0E43                     l3800:	
  8695                           ;incstack = 0
  8696                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  8697                           
  8698                           
  8699                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  8700     0E43  0024               	movlb	4	; select bank4
  8701     0E44  1D0E               	btfss	14,2	;volatile
  8702     0E45  2E47               	goto	u2831
  8703     0E46  2E48               	goto	u2830
  8704     0E47                     u2831:
  8705     0E47  2E4F               	goto	l3810
  8706     0E48                     u2830:
  8707     0E48                     l3802:
  8708                           
  8709                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  8710     0E48  100E               	bcf	14,0	;volatile
  8711     0E49                     l3804:
  8712                           
  8713                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  8714     0E49  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  8715     0E4A  008D               	movwf	13	;volatile
  8716     0E4B                     l3806:
  8717                           
  8718                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  8719     0E4B  0870               	movf	TMR1_WriteTimer@timerVal,w
  8720     0E4C  008C               	movwf	12	;volatile
  8721     0E4D                     l3808:
  8722                           
  8723                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  8724     0E4D  140E               	bsf	14,0	;volatile
  8725                           
  8726                           ;mcc_generated_files/tmr1.c: 133:     }
  8727     0E4E  2E53               	goto	l1161
  8728     0E4F                     l3810:
  8729                           
  8730                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  8731     0E4F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  8732     0E50  008D               	movwf	13	;volatile
  8733     0E51                     l3812:
  8734                           
  8735                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  8736     0E51  0870               	movf	TMR1_WriteTimer@timerVal,w
  8737     0E52  008C               	movwf	12	;volatile
  8738     0E53                     l1161:
  8739     0E53  0008               	return
  8740     0E54                     __end_of_TMR1_WriteTimer:
  8741                           
  8742                           	psect	text18
  8743     0DE8                     __ptext18:	
  8744 ;; *************** function _TMR1_HasOverflowOccured *****************
  8745 ;; Defined at:
  8746 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;		None
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      _Bool 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;Total ram usage:        0 bytes
  8765 ;; Hardware stack levels used: 1
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_main
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773     0DE8                     _TMR1_HasOverflowOccured:	
  8774                           ;psect for function _TMR1_HasOverflowOccured
  8775                           
  8776     0DE8                     l4046:	
  8777                           ;incstack = 0
  8778                           ; Regs used in _TMR1_HasOverflowOccured: [wreg+status,2+status,0]
  8779                           
  8780                           
  8781                           ;mcc_generated_files/tmr1.c: 160:     return(PIR4bits.TMR1IF);
  8782     0DE8  002E               	movlb	14	; select bank14
  8783     0DE9  0810               	movf	16,w	;volatile
  8784     0DEA  3901               	andlw	1
  8785     0DEB                     l1173:
  8786     0DEB  0008               	return
  8787     0DEC                     __end_of_TMR1_HasOverflowOccured:
  8788                           
  8789                           	psect	text19
  8790     0E77                     __ptext19:	
  8791 ;; *************** function _SYSTEM_Initialize *****************
  8792 ;; Defined at:
  8793 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;		None
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;		None
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  1    wreg      void 
  8800 ;; Registers used:
  8801 ;;		wreg, status,2, status,0, pclath, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;Total ram usage:        0 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; Hardware stack levels required when called: 1
  8814 ;; This function calls:
  8815 ;;		_ADCC_Initialize
  8816 ;;		_I2C1_Initialize
  8817 ;;		_OSCILLATOR_Initialize
  8818 ;;		_PIN_MANAGER_Initialize
  8819 ;;		_PMD_Initialize
  8820 ;;		_TMR1_Initialize
  8821 ;; This function is called by:
  8822 ;;		_main
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826     0E77                     _SYSTEM_Initialize:	
  8827                           ;psect for function _SYSTEM_Initialize
  8828                           
  8829     0E77                     l3934:	
  8830                           ;incstack = 0
  8831                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8832                           
  8833                           
  8834                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8835     0E77  318E  2601  318E   	fcall	_PMD_Initialize
  8836     0E7A                     l3936:
  8837                           
  8838                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  8839     0E7A  318E  261B  318E   	fcall	_I2C1_Initialize
  8840     0E7D                     l3938:
  8841                           
  8842                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8843     0E7D  318F  27B8  318E   	fcall	_PIN_MANAGER_Initialize
  8844     0E80                     l3940:
  8845                           
  8846                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8847     0E80  318E  2609  318E   	fcall	_OSCILLATOR_Initialize
  8848     0E83                     l3942:
  8849                           
  8850                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8851     0E83  318E  26B3  318E   	fcall	_ADCC_Initialize
  8852     0E86                     l3944:
  8853                           
  8854                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  8855     0E86  318E  269E  318E   	fcall	_TMR1_Initialize
  8856     0E89                     l392:
  8857     0E89  0008               	return
  8858     0E8A                     __end_of_SYSTEM_Initialize:
  8859                           
  8860                           	psect	text20
  8861     0E9E                     __ptext20:	
  8862 ;; *************** function _TMR1_Initialize *****************
  8863 ;; Defined at:
  8864 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;		None
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1    wreg      void 
  8871 ;; Registers used:
  8872 ;;		wreg, status,2
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;Total ram usage:        0 bytes
  8883 ;; Hardware stack levels used: 1
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_SYSTEM_Initialize
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891     0E9E                     _TMR1_Initialize:	
  8892                           ;psect for function _TMR1_Initialize
  8893                           
  8894     0E9E                     l3792:	
  8895                           ;incstack = 0
  8896                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8897                           
  8898                           
  8899                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  8900     0E9E  0024               	movlb	4	; select bank4
  8901     0E9F  018F               	clrf	15	;volatile
  8902                           
  8903                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
  8904     0EA0  0190               	clrf	16	;volatile
  8905                           
  8906                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x00;
  8907     0EA1  0191               	clrf	17	;volatile
  8908     0EA2                     l3794:
  8909                           
  8910                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x80;
  8911     0EA2  3080               	movlw	128
  8912     0EA3  008D               	movwf	13	;volatile
  8913     0EA4                     l3796:
  8914                           
  8915                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0x00;
  8916     0EA4  018C               	clrf	12	;volatile
  8917     0EA5                     l3798:
  8918                           
  8919                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
  8920     0EA5  002E               	movlb	14	; select bank14
  8921     0EA6  1010               	bcf	16,0	;volatile
  8922                           
  8923                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8924     0EA7  0024               	movlb	4	; select bank4
  8925     0EA8  080D               	movf	13,w	;volatile
  8926     0EA9  0020               	movlb	0	; select bank0
  8927     0EAA  00E6               	movwf	_timer1ReloadVal+1	;volatile
  8928     0EAB  0024               	movlb	4	; select bank4
  8929     0EAC  080C               	movf	12,w	;volatile
  8930     0EAD  0020               	movlb	0	; select bank0
  8931     0EAE  00E5               	movwf	_timer1ReloadVal	;volatile
  8932                           
  8933                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x01;
  8934     0EAF  3001               	movlw	1
  8935     0EB0  0024               	movlb	4	; select bank4
  8936     0EB1  008E               	movwf	14	;volatile
  8937     0EB2                     l1147:
  8938     0EB2  0008               	return
  8939     0EB3                     __end_of_TMR1_Initialize:
  8940                           
  8941                           	psect	text21
  8942     0E01                     __ptext21:	
  8943 ;; *************** function _PMD_Initialize *****************
  8944 ;; Defined at:
  8945 ;;		line 74 in file "mcc_generated_files/mcc.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;		None
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;		None
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		status,2
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;Total ram usage:        0 bytes
  8964 ;; Hardware stack levels used: 1
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_SYSTEM_Initialize
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972     0E01                     _PMD_Initialize:	
  8973                           ;psect for function _PMD_Initialize
  8974                           
  8975     0E01                     l3734:	
  8976                           ;incstack = 0
  8977                           ; Regs used in _PMD_Initialize: [status,2]
  8978                           
  8979                           
  8980                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  8981     0E01  002F               	movlb	15	; select bank15
  8982     0E02  0196               	clrf	22	;volatile
  8983                           
  8984                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  8985     0E03  0197               	clrf	23	;volatile
  8986                           
  8987                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  8988     0E04  0198               	clrf	24	;volatile
  8989                           
  8990                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  8991     0E05  0199               	clrf	25	;volatile
  8992                           
  8993                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  8994     0E06  019A               	clrf	26	;volatile
  8995                           
  8996                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  8997     0E07  019B               	clrf	27	;volatile
  8998     0E08                     l398:
  8999     0E08  0008               	return
  9000     0E09                     __end_of_PMD_Initialize:
  9001                           
  9002                           	psect	text22
  9003     0FB8                     __ptext22:	
  9004 ;; *************** function _PIN_MANAGER_Initialize *****************
  9005 ;; Defined at:
  9006 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, status,2
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;Total ram usage:        0 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_SYSTEM_Initialize
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033     0FB8                     _PIN_MANAGER_Initialize:	
  9034                           ;psect for function _PIN_MANAGER_Initialize
  9035                           
  9036     0FB8                     l3744:	
  9037                           ;incstack = 0
  9038                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9039                           
  9040                           
  9041                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9042     0FB8  0020               	movlb	0	; select bank0
  9043     0FB9  019A               	clrf	26	;volatile
  9044                           
  9045                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9046     0FBA  0199               	clrf	25	;volatile
  9047                           
  9048                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  9049     0FBB  0196               	clrf	22	;volatile
  9050                           
  9051                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9052     0FBC  0197               	clrf	23	;volatile
  9053                           
  9054                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9055     0FBD  0198               	clrf	24	;volatile
  9056     0FBE                     l3746:
  9057                           
  9058                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9059     0FBE  3007               	movlw	7
  9060     0FBF  0095               	movwf	21	;volatile
  9061     0FC0                     l3748:
  9062                           
  9063                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  9064     0FC0  30FF               	movlw	255
  9065     0FC1  0091               	movwf	17	;volatile
  9066     0FC2                     l3750:
  9067                           
  9068                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  9069     0FC2  30FF               	movlw	255
  9070     0FC3  0092               	movwf	18	;volatile
  9071     0FC4                     l3752:
  9072                           
  9073                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9074     0FC4  30FF               	movlw	255
  9075     0FC5  0093               	movwf	19	;volatile
  9076     0FC6                     l3754:
  9077                           
  9078                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9079     0FC6  30FF               	movlw	255
  9080     0FC7  0094               	movwf	20	;volatile
  9081     0FC8                     l3756:
  9082                           
  9083                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  9084     0FC8  30FF               	movlw	255
  9085     0FC9  003E               	movlb	30	; select bank30
  9086     0FCA  00D9               	movwf	89	;volatile
  9087     0FCB                     l3758:
  9088                           
  9089                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE6;
  9090     0FCB  30E6               	movlw	230
  9091     0FCC  00CE               	movwf	78	;volatile
  9092     0FCD                     l3760:
  9093                           
  9094                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  9095     0FCD  30FF               	movlw	255
  9096     0FCE  00C3               	movwf	67	;volatile
  9097     0FCF                     l3762:
  9098                           
  9099                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9100     0FCF  3007               	movlw	7
  9101     0FD0  00E4               	movwf	100	;volatile
  9102     0FD1                     l3764:
  9103                           
  9104                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  9105     0FD1  30FF               	movlw	255
  9106     0FD2  00B8               	movwf	56	;volatile
  9107                           
  9108                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9109     0FD3  01DA               	clrf	90	;volatile
  9110                           
  9111                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9112     0FD4  01E5               	clrf	101	;volatile
  9113                           
  9114                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9115     0FD5  01C4               	clrf	68	;volatile
  9116                           
  9117                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9118     0FD6  01B9               	clrf	57	;volatile
  9119     0FD7                     l3766:
  9120                           
  9121                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x18;
  9122     0FD7  3018               	movlw	24
  9123     0FD8  00CF               	movwf	79	;volatile
  9124     0FD9                     l3768:
  9125                           
  9126                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  9127     0FD9  01E6               	clrf	102	;volatile
  9128     0FDA                     l3770:
  9129                           
  9130                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  9131     0FDA  01BA               	clrf	58	;volatile
  9132     0FDB                     l3772:
  9133                           
  9134                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  9135     0FDB  01C5               	clrf	69	;volatile
  9136     0FDC                     l3774:
  9137                           
  9138                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  9139     0FDC  01D0               	clrf	80	;volatile
  9140     0FDD                     l3776:
  9141                           
  9142                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  9143     0FDD  01DB               	clrf	91	;volatile
  9144                           
  9145                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  9146     0FDE  30FF               	movlw	255
  9147     0FDF  00BB               	movwf	59	;volatile
  9148                           
  9149                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  9150     0FE0  30FF               	movlw	255
  9151     0FE1  00C6               	movwf	70	;volatile
  9152                           
  9153                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  9154     0FE2  30FF               	movlw	255
  9155     0FE3  00D1               	movwf	81	;volatile
  9156                           
  9157                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  9158     0FE4  30FF               	movlw	255
  9159     0FE5  00DC               	movwf	92	;volatile
  9160                           
  9161                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  9162     0FE6  3007               	movlw	7
  9163     0FE7  00E7               	movwf	103	;volatile
  9164                           
  9165                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  9166     0FE8  30FF               	movlw	255
  9167     0FE9  00BC               	movwf	60	;volatile
  9168                           
  9169                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  9170     0FEA  30FF               	movlw	255
  9171     0FEB  00C7               	movwf	71	;volatile
  9172                           
  9173                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  9174     0FEC  30FF               	movlw	255
  9175     0FED  00D2               	movwf	82	;volatile
  9176                           
  9177                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  9178     0FEE  30FF               	movlw	255
  9179     0FEF  00DD               	movwf	93	;volatile
  9180                           
  9181                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  9182     0FF0  3007               	movlw	7
  9183     0FF1  00E8               	movwf	104	;volatile
  9184                           
  9185                           ;mcc_generated_files/pin_manager.c: 127:     T1CKIPPS = 0x10;
  9186     0FF2  3010               	movlw	16
  9187     0FF3  003D               	movlb	29	; select bank29
  9188     0FF4  0092               	movwf	18	;volatile
  9189                           
  9190                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
  9191     0FF5  3013               	movlw	19
  9192     0FF6  00C5               	movwf	69	;volatile
  9193                           
  9194                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
  9195     0FF7  3014               	movlw	20
  9196     0FF8  003E               	movlb	30	; select bank30
  9197     0FF9  00A3               	movwf	35	;volatile
  9198                           
  9199                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
  9200     0FFA  3015               	movlw	21
  9201     0FFB  00A4               	movwf	36	;volatile
  9202                           
  9203                           ;mcc_generated_files/pin_manager.c: 131:     SSP1DATPPS = 0x14;
  9204     0FFC  3014               	movlw	20
  9205     0FFD  003D               	movlb	29	; select bank29
  9206     0FFE  00C6               	movwf	70	;volatile
  9207     0FFF                     l481:
  9208     0FFF  0008               	return
  9209     1000                     __end_of_PIN_MANAGER_Initialize:
  9210                           
  9211                           	psect	text23
  9212     0E09                     __ptext23:	
  9213 ;; *************** function _OSCILLATOR_Initialize *****************
  9214 ;; Defined at:
  9215 ;;		line 60 in file "mcc_generated_files/mcc.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;Total ram usage:        0 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_SYSTEM_Initialize
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242     0E09                     _OSCILLATOR_Initialize:	
  9243                           ;psect for function _OSCILLATOR_Initialize
  9244                           
  9245     0E09                     l3778:	
  9246                           ;incstack = 0
  9247                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9248                           
  9249                           
  9250                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  9251     0E09  3062               	movlw	98
  9252     0E0A  0031               	movlb	17	; select bank17
  9253     0E0B  008D               	movwf	13	;volatile
  9254     0E0C                     l3780:
  9255                           
  9256                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  9257     0E0C  018F               	clrf	15	;volatile
  9258     0E0D                     l3782:
  9259                           
  9260                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  9261     0E0D  0191               	clrf	17	;volatile
  9262                           
  9263                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  9264     0E0E  3002               	movlw	2
  9265     0E0F  0093               	movwf	19	;volatile
  9266     0E10                     l3784:
  9267                           
  9268                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9269     0E10  0192               	clrf	18	;volatile
  9270     0E11                     l395:
  9271     0E11  0008               	return
  9272     0E12                     __end_of_OSCILLATOR_Initialize:
  9273                           
  9274                           	psect	text24
  9275     0E1B                     __ptext24:	
  9276 ;; *************** function _I2C1_Initialize *****************
  9277 ;; Defined at:
  9278 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;		None
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;		None
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  1    wreg      void 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9296 ;;Total ram usage:        0 bytes
  9297 ;; Hardware stack levels used: 1
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		_SYSTEM_Initialize
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305     0E1B                     _I2C1_Initialize:	
  9306                           ;psect for function _I2C1_Initialize
  9307                           
  9308     0E1B                     l3736:	
  9309                           ;incstack = 0
  9310                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  9311                           
  9312                           
  9313                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
  9314     0E1B  3080               	movlw	128
  9315     0E1C  0023               	movlb	3	; select bank3
  9316     0E1D  008F               	movwf	15	;volatile
  9317                           
  9318                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  9319     0E1E  3008               	movlw	8
  9320     0E1F  0090               	movwf	16	;volatile
  9321     0E20                     l3738:
  9322                           
  9323                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  9324     0E20  0191               	clrf	17	;volatile
  9325     0E21                     l3740:
  9326                           
  9327                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
  9328     0E21  3003               	movlw	3
  9329     0E22  008D               	movwf	13	;volatile
  9330     0E23                     l3742:
  9331                           
  9332                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  9333     0E23  1290               	bcf	16,5	;volatile
  9334     0E24                     l589:
  9335     0E24  0008               	return
  9336     0E25                     __end_of_I2C1_Initialize:
  9337                           
  9338                           	psect	text25
  9339     0EB3                     __ptext25:	
  9340 ;; *************** function _ADCC_Initialize *****************
  9341 ;; Defined at:
  9342 ;;		line 63 in file "mcc_generated_files/adcc.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;		None
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;Total ram usage:        0 bytes
  9361 ;; Hardware stack levels used: 1
  9362 ;; This function calls:
  9363 ;;		Nothing
  9364 ;; This function is called by:
  9365 ;;		_SYSTEM_Initialize
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369     0EB3                     _ADCC_Initialize:	
  9370                           ;psect for function _ADCC_Initialize
  9371                           
  9372     0EB3                     l3786:	
  9373                           ;incstack = 0
  9374                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9375                           
  9376                           
  9377                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  9378     0EB3  0022               	movlb	2	; select bank2
  9379     0EB4  018E               	clrf	14	;volatile
  9380                           
  9381                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  9382     0EB5  018F               	clrf	15	;volatile
  9383                           
  9384                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  9385     0EB6  0190               	clrf	16	;volatile
  9386                           
  9387                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  9388     0EB7  0191               	clrf	17	;volatile
  9389                           
  9390                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  9391     0EB8  0192               	clrf	18	;volatile
  9392                           
  9393                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  9394     0EB9  0193               	clrf	19	;volatile
  9395                           
  9396                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  9397     0EBA  018D               	clrf	13	;volatile
  9398                           
  9399                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  9400     0EBB  0021               	movlb	1	; select bank1
  9401     0EBC  019E               	clrf	30	;volatile
  9402                           
  9403                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  9404     0EBD  019B               	clrf	27	;volatile
  9405                           
  9406                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  9407     0EBE  019C               	clrf	28	;volatile
  9408                           
  9409                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  9410     0EBF  0194               	clrf	20	;volatile
  9411                           
  9412                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
  9413     0EC0  0195               	clrf	21	;volatile
  9414                           
  9415                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  9416     0EC1  0196               	clrf	22	;volatile
  9417                           
  9418                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  9419     0EC2  0197               	clrf	23	;volatile
  9420                           
  9421                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  9422     0EC3  019A               	clrf	26	;volatile
  9423                           
  9424                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
  9425     0EC4  0199               	clrf	25	;volatile
  9426                           
  9427                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
  9428     0EC5  0198               	clrf	24	;volatile
  9429     0EC6                     l3788:
  9430                           
  9431                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  9432     0EC6  3084               	movlw	132
  9433     0EC7  0093               	movwf	19	;volatile
  9434     0EC8                     l3790:
  9435                           
  9436                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
  9437     0EC8  019D               	clrf	29	;volatile
  9438     0EC9                     l894:
  9439     0EC9  0008               	return
  9440     0ECA                     __end_of_ADCC_Initialize:
  9441                           
  9442                           	psect	text26
  9443     0E25                     __ptext26:	
  9444 ;; *************** function _OpenI2C *****************
  9445 ;; Defined at:
  9446 ;;		line 26 in file "I2C/i2c.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;		None
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1    wreg      void 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;Total ram usage:        0 bytes
  9465 ;; Hardware stack levels used: 1
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_main
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473     0E25                     _OpenI2C:	
  9474                           ;psect for function _OpenI2C
  9475                           
  9476     0E25                     l3824:	
  9477                           ;incstack = 0
  9478                           ; Regs used in _OpenI2C: [wreg+status,2]
  9479                           
  9480                           
  9481                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
  9482     0E25  3080               	movlw	128
  9483     0E26  0023               	movlb	3	; select bank3
  9484     0E27  008F               	movwf	15	;volatile
  9485                           
  9486                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
  9487     0E28  3008               	movlw	8
  9488     0E29  0090               	movwf	16	;volatile
  9489     0E2A                     l3826:
  9490                           
  9491                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
  9492     0E2A  0191               	clrf	17	;volatile
  9493     0E2B                     l3828:
  9494                           
  9495                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
  9496     0E2B  3003               	movlw	3
  9497     0E2C  008D               	movwf	13	;volatile
  9498     0E2D                     l3830:
  9499                           
  9500                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
  9501     0E2D  1690               	bsf	16,5	;volatile
  9502     0E2E                     l3832:
  9503                           
  9504                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
  9505     0E2E  0020               	movlb	0	; select bank0
  9506     0E2F  1593               	bsf	19,3	;volatile
  9507     0E30                     l3834:
  9508                           
  9509                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
  9510     0E30  1613               	bsf	19,4	;volatile
  9511     0E31                     l23:
  9512     0E31  0008               	return
  9513     0E32                     __end_of_OpenI2C:
  9514                           
  9515                           	psect	text27
  9516     0ECA                     __ptext27:	
  9517 ;; *************** function _LCDstr *****************
  9518 ;; Defined at:
  9519 ;;		line 112 in file "LCD/lcd.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  p               2    8[COMMON] PTR unsigned char 
  9522 ;;		 -> main@buf(17), main@time_buffer(8), STR_1(9), 
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;  c               1   12[COMMON] unsigned char 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  1    wreg      void 
  9527 ;; Registers used:
  9528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9537 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9538 ;;Total ram usage:        5 bytes
  9539 ;; Hardware stack levels used: 1
  9540 ;; Hardware stack levels required when called: 3
  9541 ;; This function calls:
  9542 ;;		_LCDchar
  9543 ;; This function is called by:
  9544 ;;		_main
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548     0ECA                     _LCDstr:	
  9549                           ;psect for function _LCDstr
  9550                           
  9551     0ECA                     l3870:	
  9552                           ;incstack = 0
  9553                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9554                           
  9555                           
  9556                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
  9557     0ECA  2ECF               	goto	l3874
  9558     0ECB                     l3872:
  9559     0ECB  087C               	movf	LCDstr@c,w
  9560     0ECC  318D  25F9  318E   	fcall	_LCDchar
  9561     0ECF                     l3874:
  9562     0ECF  0879               	movf	LCDstr@p+1,w
  9563     0ED0  00FB               	movwf	??_LCDstr+1
  9564     0ED1  0878               	movf	LCDstr@p,w
  9565     0ED2  00FA               	movwf	??_LCDstr
  9566     0ED3  0AF8               	incf	LCDstr@p,f
  9567     0ED4  1903               	skipnz
  9568     0ED5  0AF9               	incf	LCDstr@p+1,f
  9569     0ED6  087A               	movf	??_LCDstr,w
  9570     0ED7  0084               	movwf	4
  9571     0ED8  087B               	movf	??_LCDstr+1,w
  9572     0ED9  0085               	movwf	5
  9573     0EDA  0800               	movf	0,w	;code access
  9574     0EDB  00FC               	movwf	LCDstr@c
  9575     0EDC  087C               	movf	LCDstr@c,w
  9576     0EDD  1D03               	btfss	3,2
  9577     0EDE  2EE0               	goto	u2851
  9578     0EDF  2EE1               	goto	u2850
  9579     0EE0                     u2851:
  9580     0EE0  2ECB               	goto	l3872
  9581     0EE1                     u2850:
  9582     0EE1                     l244:
  9583     0EE1  0008               	return
  9584     0EE2                     __end_of_LCDstr:
  9585                           
  9586                           	psect	text28
  9587     0DF9                     __ptext28:	
  9588 ;; *************** function _LCDchar *****************
  9589 ;; Defined at:
  9590 ;;		line 107 in file "LCD/lcd.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  c               1    wreg     unsigned char 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  c               1    7[COMMON] unsigned char 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1    wreg      void 
  9597 ;; Registers used:
  9598 ;;		wreg, status,2, status,0, pclath, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;Total ram usage:        1 bytes
  9609 ;; Hardware stack levels used: 1
  9610 ;; Hardware stack levels required when called: 2
  9611 ;; This function calls:
  9612 ;;		_LCDsend2x4
  9613 ;; This function is called by:
  9614 ;;		_LCDstr
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618     0DF9                     _LCDchar:	
  9619                           ;psect for function _LCDchar
  9620                           
  9621                           
  9622                           ;incstack = 0
  9623                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
  9624                           ;LCDchar@c stored from wreg
  9625     0DF9  00F7               	movwf	LCDchar@c
  9626     0DFA                     l3724:
  9627                           
  9628                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
  9629     0DFA  01F2               	clrf	LCDsend2x4@mode
  9630     0DFB  0AF2               	incf	LCDsend2x4@mode,f
  9631     0DFC  0877               	movf	LCDchar@c,w
  9632     0DFD  3183  231E  318D   	fcall	_LCDsend2x4
  9633     0E00                     l238:
  9634     0E00  0008               	return
  9635     0E01                     __end_of_LCDchar:
  9636                           
  9637                           	psect	text29
  9638     0E8A                     __ptext29:	
  9639 ;; *************** function _LCDpos *****************
  9640 ;; Defined at:
  9641 ;;		line 125 in file "LCD/lcd.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  l               1    wreg     unsigned char 
  9644 ;;  c               1    8[COMMON] unsigned char 
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;  l               1    9[COMMON] unsigned char 
  9647 ;;  p               1   10[COMMON] unsigned char 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      void 
  9650 ;; Registers used:
  9651 ;;		wreg, status,2, status,0, pclath, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9657 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;Total ram usage:        3 bytes
  9662 ;; Hardware stack levels used: 1
  9663 ;; Hardware stack levels required when called: 3
  9664 ;; This function calls:
  9665 ;;		_LCDcmd
  9666 ;; This function is called by:
  9667 ;;		_main
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671     0E8A                     _LCDpos:	
  9672                           ;psect for function _LCDpos
  9673                           
  9674                           
  9675                           ;incstack = 0
  9676                           ; Regs used in _LCDpos: [wreg+status,2+status,0+pclath+cstack]
  9677                           ;LCDpos@l stored from wreg
  9678     0E8A  00F9               	movwf	LCDpos@l
  9679     0E8B                     l3886:
  9680                           
  9681                           ;LCD/lcd.c: 125: void LCDpos(unsigned char l, unsigned char c);LCD/lcd.c: 126: {;LCD/lcd
      +                          .c: 127:   unsigned char p;;LCD/lcd.c: 131:   if (l>=1) p = 0xc0; else p=0x80;
  9682     0E8B  0879               	movf	LCDpos@l,w
  9683     0E8C  1903               	btfsc	3,2
  9684     0E8D  2E8F               	goto	u2871
  9685     0E8E  2E90               	goto	u2870
  9686     0E8F                     u2871:
  9687     0E8F  2E93               	goto	l3890
  9688     0E90                     u2870:
  9689     0E90                     l3888:
  9690     0E90  30C0               	movlw	192
  9691     0E91  00FA               	movwf	LCDpos@p
  9692     0E92  2E95               	goto	l3892
  9693     0E93                     l3890:
  9694     0E93  3080               	movlw	128
  9695     0E94  00FA               	movwf	LCDpos@p
  9696     0E95                     l3892:
  9697                           
  9698                           ;LCD/lcd.c: 132:   p = p | (c&0x0f);
  9699     0E95  0878               	movf	LCDpos@c,w
  9700     0E96  390F               	andlw	15
  9701     0E97  047A               	iorwf	LCDpos@p,w
  9702     0E98  00FA               	movwf	LCDpos@p
  9703     0E99                     l3894:
  9704                           
  9705                           ;LCD/lcd.c: 133:   LCDcmd(p);
  9706     0E99  087A               	movf	LCDpos@p,w
  9707     0E9A  318D  25F2  318E   	fcall	_LCDcmd
  9708     0E9D                     l253:
  9709     0E9D  0008               	return
  9710     0E9E                     __end_of_LCDpos:
  9711                           
  9712                           	psect	text30
  9713     0DF2                     __ptext30:	
  9714 ;; *************** function _LCDcmd *****************
  9715 ;; Defined at:
  9716 ;;		line 102 in file "LCD/lcd.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;  c               1    wreg     unsigned char 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  c               1    7[COMMON] unsigned char 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0, pclath, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;Total ram usage:        1 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 2
  9737 ;; This function calls:
  9738 ;;		_LCDsend2x4
  9739 ;; This function is called by:
  9740 ;;		_LCDpos
  9741 ;;		_main
  9742 ;; This function uses a non-reentrant model
  9743 ;;
  9744                           
  9745     0DF2                     _LCDcmd:	
  9746                           ;psect for function _LCDcmd
  9747                           
  9748                           
  9749                           ;incstack = 0
  9750                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
  9751                           ;LCDcmd@c stored from wreg
  9752     0DF2  00F7               	movwf	LCDcmd@c
  9753     0DF3                     l3722:
  9754                           
  9755                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
  9756     0DF3  01F2               	clrf	LCDsend2x4@mode
  9757     0DF4  0877               	movf	LCDcmd@c,w
  9758     0DF5  3183  231E  318D   	fcall	_LCDsend2x4
  9759     0DF8                     l235:
  9760     0DF8  0008               	return
  9761     0DF9                     __end_of_LCDcmd:
  9762                           
  9763                           	psect	text31
  9764     01F6                     __ptext31:	
  9765 ;; *************** function _LCDinit *****************
  9766 ;; Defined at:
  9767 ;;		line 79 in file "LCD/lcd.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;		None
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;		None
  9772 ;; Return value:  Size  Location     Type
  9773 ;;                  1    wreg      void 
  9774 ;; Registers used:
  9775 ;;		wreg, status,2, status,0, pclath, cstack
  9776 ;; Tracked objects:
  9777 ;;		On entry : 0/0
  9778 ;;		On exit  : 0/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9785 ;;Total ram usage:        1 bytes
  9786 ;; Hardware stack levels used: 1
  9787 ;; Hardware stack levels required when called: 2
  9788 ;; This function calls:
  9789 ;;		_LCDsend
  9790 ;;		_LCDsend2x4
  9791 ;; This function is called by:
  9792 ;;		_main
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796     01F6                     _LCDinit:	
  9797                           ;psect for function _LCDinit
  9798                           
  9799     01F6                     l3836:	
  9800                           ;incstack = 0
  9801                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  9802                           
  9803                           
  9804                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
  9805     01F6  3041               	movlw	65
  9806     01F7  00F7               	movwf	??_LCDinit
  9807     01F8  30EE               	movlw	238
  9808     01F9                     u3477:
  9809     01F9  0B89               	decfsz	9,f
  9810     01FA  29F9               	goto	u3477
  9811     01FB  0BF7               	decfsz	??_LCDinit,f
  9812     01FC  29F9               	goto	u3477
  9813     01FD  3200               	nop2
  9814     01FE                     l3838:
  9815                           
  9816                           ;LCD/lcd.c: 82:   LCDsend(0x30);
  9817     01FE  3030               	movlw	48
  9818     01FF  3180  2006  3181   	fcall	_LCDsend
  9819     0202                     l3840:
  9820                           
  9821                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
  9822     0202  3034               	movlw	52
  9823     0203  3180  2006  3181   	fcall	_LCDsend
  9824     0206  30A6               	movlw	166
  9825     0207                     u3487:
  9826     0207  0B89               	decfsz	9,f
  9827     0208  2A07               	goto	u3487
  9828     0209  3200               	nop2
  9829     020A                     l3842:
  9830     020A  3030               	movlw	48
  9831     020B  3180  2006  3181   	fcall	_LCDsend
  9832     020E                     l3844:
  9833                           
  9834                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
  9835     020E  3007               	movlw	7
  9836     020F  00F7               	movwf	??_LCDinit
  9837     0210  307D               	movlw	125
  9838     0211                     u3497:
  9839     0211  0B89               	decfsz	9,f
  9840     0212  2A11               	goto	u3497
  9841     0213  0BF7               	decfsz	??_LCDinit,f
  9842     0214  2A11               	goto	u3497
  9843     0215  0000               	nop
  9844                           
  9845                           ;LCD/lcd.c: 85:   LCDsend(0x30);
  9846     0216  3030               	movlw	48
  9847     0217  3180  2006  3181   	fcall	_LCDsend
  9848                           
  9849                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
  9850     021A  3034               	movlw	52
  9851     021B  3180  2006  3181   	fcall	_LCDsend
  9852     021E                     l3846:
  9853     021E  30A6               	movlw	166
  9854     021F                     u3507:
  9855     021F  0B89               	decfsz	9,f
  9856     0220  2A1F               	goto	u3507
  9857     0221  3200               	nop2
  9858     0222                     l3848:
  9859     0222  3030               	movlw	48
  9860     0223  3180  2006  3181   	fcall	_LCDsend
  9861                           
  9862                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  9863     0226  3021               	movlw	33
  9864     0227                     u3517:
  9865     0227  0B89               	decfsz	9,f
  9866     0228  2A27               	goto	u3517
  9867     0229  0000               	nop
  9868     022A                     l3850:
  9869                           
  9870                           ;LCD/lcd.c: 88:   LCDsend(0x30);
  9871     022A  3030               	movlw	48
  9872     022B  3180  2006  3181   	fcall	_LCDsend
  9873     022E                     l3852:
  9874                           
  9875                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
  9876     022E  3034               	movlw	52
  9877     022F  3180  2006  3181   	fcall	_LCDsend
  9878     0232  30A6               	movlw	166
  9879     0233                     u3527:
  9880     0233  0B89               	decfsz	9,f
  9881     0234  2A33               	goto	u3527
  9882     0235  3200               	nop2
  9883     0236                     l3854:
  9884     0236  3030               	movlw	48
  9885     0237  3180  2006  3181   	fcall	_LCDsend
  9886     023A                     l3856:
  9887                           
  9888                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  9889     023A  3021               	movlw	33
  9890     023B                     u3537:
  9891     023B  0B89               	decfsz	9,f
  9892     023C  2A3B               	goto	u3537
  9893     023D  0000               	nop
  9894                           
  9895                           ;LCD/lcd.c: 91:   LCDsend(0x20);
  9896     023E  3020               	movlw	32
  9897     023F  3180  2006  3181   	fcall	_LCDsend
  9898                           
  9899                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
  9900     0242  3024               	movlw	36
  9901     0243  3180  2006  3181   	fcall	_LCDsend
  9902     0246                     l3858:
  9903     0246  30A6               	movlw	166
  9904     0247                     u3547:
  9905     0247  0B89               	decfsz	9,f
  9906     0248  2A47               	goto	u3547
  9907     0249  3200               	nop2
  9908     024A                     l3860:
  9909     024A  3020               	movlw	32
  9910     024B  3180  2006  3181   	fcall	_LCDsend
  9911                           
  9912                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
  9913     024E  3007               	movlw	7
  9914     024F  00F7               	movwf	??_LCDinit
  9915     0250  307D               	movlw	125
  9916     0251                     u3557:
  9917     0251  0B89               	decfsz	9,f
  9918     0252  2A51               	goto	u3557
  9919     0253  0BF7               	decfsz	??_LCDinit,f
  9920     0254  2A51               	goto	u3557
  9921     0255  0000               	nop
  9922     0256                     l3862:
  9923                           
  9924                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
  9925     0256  01F2               	clrf	LCDsend2x4@mode
  9926     0257  3028               	movlw	40
  9927     0258  3183  231E  3181   	fcall	_LCDsend2x4
  9928     025B                     l3864:
  9929                           
  9930                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
  9931     025B  01F2               	clrf	LCDsend2x4@mode
  9932     025C  3006               	movlw	6
  9933     025D  3183  231E  3181   	fcall	_LCDsend2x4
  9934     0260                     l3866:
  9935                           
  9936                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
  9937     0260  01F2               	clrf	LCDsend2x4@mode
  9938     0261  300F               	movlw	15
  9939     0262  3183  231E  3181   	fcall	_LCDsend2x4
  9940     0265                     l3868:
  9941                           
  9942                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
  9943     0265  01F2               	clrf	LCDsend2x4@mode
  9944     0266  3001               	movlw	1
  9945     0267  3183  231E  3181   	fcall	_LCDsend2x4
  9946                           
  9947                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
  9948     026A  3003               	movlw	3
  9949     026B  00F7               	movwf	??_LCDinit
  9950     026C  3098               	movlw	152
  9951     026D                     u3567:
  9952     026D  0B89               	decfsz	9,f
  9953     026E  2A6D               	goto	u3567
  9954     026F  0BF7               	decfsz	??_LCDinit,f
  9955     0270  2A6D               	goto	u3567
  9956     0271                     l232:
  9957     0271  0008               	return
  9958     0272                     __end_of_LCDinit:
  9959                           
  9960                           	psect	text32
  9961     031E                     __ptext32:	
  9962 ;; *************** function _LCDsend2x4 *****************
  9963 ;; Defined at:
  9964 ;;		line 56 in file "LCD/lcd.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  c               1    wreg     unsigned char 
  9967 ;;  mode            1    2[COMMON] unsigned char 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  c               1    4[COMMON] unsigned char 
  9970 ;;  lc              1    6[COMMON] unsigned char 
  9971 ;;  hc              1    5[COMMON] unsigned char 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      void 
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, status,0, pclath, cstack
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9981 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9984 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9985 ;;Total ram usage:        5 bytes
  9986 ;; Hardware stack levels used: 1
  9987 ;; Hardware stack levels required when called: 1
  9988 ;; This function calls:
  9989 ;;		_WriteI2C
  9990 ;; This function is called by:
  9991 ;;		_LCDinit
  9992 ;;		_LCDcmd
  9993 ;;		_LCDchar
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997     031E                     _LCDsend2x4:	
  9998                           ;psect for function _LCDsend2x4
  9999                           
 10000                           
 10001                           ;incstack = 0
 10002                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10003                           ;LCDsend2x4@c stored from wreg
 10004     031E  00F4               	movwf	LCDsend2x4@c
 10005     031F                     l3544:
 10006                           
 10007                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 10008     031F  0874               	movf	LCDsend2x4@c,w
 10009     0320  39F0               	andlw	240
 10010     0321  00F5               	movwf	LCDsend2x4@hc
 10011     0322                     l3546:
 10012                           
 10013                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 10014     0322  0874               	movf	LCDsend2x4@c,w
 10015     0323  00F3               	movwf	??_LCDsend2x4
 10016     0324  3003               	movlw	3
 10017     0325                     u2315:
 10018     0325  35F3               	lslf	??_LCDsend2x4,f
 10019     0326  3EFF               	addlw	-1
 10020     0327  1D03               	skipz
 10021     0328  2B25               	goto	u2315
 10022     0329  3573               	lslf	??_LCDsend2x4,w
 10023     032A  39F0               	andlw	240
 10024     032B  00F6               	movwf	LCDsend2x4@lc
 10025     032C                     l3548:	
 10026                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10027                           
 10028     032C  0023               	movlb	3	; select bank3
 10029     032D  0C0F               	rrf	15,w	;volatile
 10030     032E  0C89               	rrf	9,f
 10031     032F  3901               	andlw	1
 10032     0330  00F3               	movwf	??_LCDsend2x4
 10033     0331  0811               	movf	17,w	;volatile
 10034     0332  391F               	andlw	31
 10035     0333  0473               	iorwf	??_LCDsend2x4,w
 10036     0334  1D03               	btfss	3,2
 10037     0335  2B37               	goto	u2321
 10038     0336  2B38               	goto	u2320
 10039     0337                     u2321:
 10040     0337  2B2C               	goto	l3548
 10041     0338                     u2320:
 10042     0338                     l195:	
 10043                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10044                           
 10045     0338  1411               	bsf	17,0	;volatile
 10046     0339                     l196:
 10047     0339  1811               	btfsc	17,0	;volatile
 10048     033A  2B3C               	goto	u2331
 10049     033B  2B3D               	goto	u2330
 10050     033C                     u2331:
 10051     033C  2B39               	goto	l196
 10052     033D                     u2330:
 10053     033D                     l3550:
 10054     033D  0C0F               	rrf	15,w	;volatile
 10055     033E  0C89               	rrf	9,f
 10056     033F  3901               	andlw	1
 10057     0340  00F3               	movwf	??_LCDsend2x4
 10058     0341  0811               	movf	17,w	;volatile
 10059     0342  391F               	andlw	31
 10060     0343  0473               	iorwf	??_LCDsend2x4,w
 10061     0344  1D03               	btfss	3,2
 10062     0345  2B47               	goto	u2341
 10063     0346  2B48               	goto	u2340
 10064     0347                     u2341:
 10065     0347  2B3D               	goto	l3550
 10066     0348                     u2340:
 10067     0348                     l3552:
 10068                           
 10069                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10070     0348  304E               	movlw	78
 10071     0349  3180  2049  3183   	fcall	_WriteI2C
 10072     034C                     l3554:
 10073     034C  0023               	movlb	3	; select bank3
 10074     034D  0C0F               	rrf	15,w	;volatile
 10075     034E  0C89               	rrf	9,f
 10076     034F  3901               	andlw	1
 10077     0350  00F3               	movwf	??_LCDsend2x4
 10078     0351  0811               	movf	17,w	;volatile
 10079     0352  391F               	andlw	31
 10080     0353  0473               	iorwf	??_LCDsend2x4,w
 10081     0354  1D03               	btfss	3,2
 10082     0355  2B57               	goto	u2351
 10083     0356  2B58               	goto	u2350
 10084     0357                     u2351:
 10085     0357  2B4C               	goto	l3554
 10086     0358                     u2350:
 10087     0358                     l3556:
 10088                           
 10089                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10090     0358  0875               	movf	LCDsend2x4@hc,w
 10091     0359  0472               	iorwf	LCDsend2x4@mode,w
 10092     035A  3808               	iorlw	8
 10093     035B  3180  2049  3183   	fcall	_WriteI2C
 10094     035E                     l3558:
 10095     035E  0023               	movlb	3	; select bank3
 10096     035F  0C0F               	rrf	15,w	;volatile
 10097     0360  0C89               	rrf	9,f
 10098     0361  3901               	andlw	1
 10099     0362  00F3               	movwf	??_LCDsend2x4
 10100     0363  0811               	movf	17,w	;volatile
 10101     0364  391F               	andlw	31
 10102     0365  0473               	iorwf	??_LCDsend2x4,w
 10103     0366  1D03               	btfss	3,2
 10104     0367  2B69               	goto	u2361
 10105     0368  2B6A               	goto	u2360
 10106     0369                     u2361:
 10107     0369  2B5E               	goto	l3558
 10108     036A                     u2360:
 10109     036A                     l3560:
 10110                           
 10111                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 10112     036A  0875               	movf	LCDsend2x4@hc,w
 10113     036B  0472               	iorwf	LCDsend2x4@mode,w
 10114     036C  380C               	iorlw	12
 10115     036D  3180  2049  3183   	fcall	_WriteI2C
 10116     0370                     l3562:
 10117     0370  0023               	movlb	3	; select bank3
 10118     0371  0C0F               	rrf	15,w	;volatile
 10119     0372  0C89               	rrf	9,f
 10120     0373  3901               	andlw	1
 10121     0374  00F3               	movwf	??_LCDsend2x4
 10122     0375  0811               	movf	17,w	;volatile
 10123     0376  391F               	andlw	31
 10124     0377  0473               	iorwf	??_LCDsend2x4,w
 10125     0378  1D03               	btfss	3,2
 10126     0379  2B7B               	goto	u2371
 10127     037A  2B7C               	goto	u2370
 10128     037B                     u2371:
 10129     037B  2B70               	goto	l3562
 10130     037C                     u2370:
 10131     037C                     l211:
 10132                           
 10133                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10134     037C  0000               	nop
 10135     037D                     l3564:
 10136                           
 10137                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10138     037D  0875               	movf	LCDsend2x4@hc,w
 10139     037E  0472               	iorwf	LCDsend2x4@mode,w
 10140     037F  3808               	iorlw	8
 10141     0380  3180  2049  3183   	fcall	_WriteI2C
 10142     0383                     l3566:
 10143     0383  0023               	movlb	3	; select bank3
 10144     0384  0C0F               	rrf	15,w	;volatile
 10145     0385  0C89               	rrf	9,f
 10146     0386  3901               	andlw	1
 10147     0387  00F3               	movwf	??_LCDsend2x4
 10148     0388  0811               	movf	17,w	;volatile
 10149     0389  391F               	andlw	31
 10150     038A  0473               	iorwf	??_LCDsend2x4,w
 10151     038B  1D03               	btfss	3,2
 10152     038C  2B8E               	goto	u2381
 10153     038D  2B8F               	goto	u2380
 10154     038E                     u2381:
 10155     038E  2B83               	goto	l3566
 10156     038F                     u2380:
 10157     038F                     l3568:
 10158                           
 10159                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10160     038F  0876               	movf	LCDsend2x4@lc,w
 10161     0390  0472               	iorwf	LCDsend2x4@mode,w
 10162     0391  3808               	iorlw	8
 10163     0392  3180  2049  3183   	fcall	_WriteI2C
 10164     0395                     l3570:
 10165     0395  0023               	movlb	3	; select bank3
 10166     0396  0C0F               	rrf	15,w	;volatile
 10167     0397  0C89               	rrf	9,f
 10168     0398  3901               	andlw	1
 10169     0399  00F3               	movwf	??_LCDsend2x4
 10170     039A  0811               	movf	17,w	;volatile
 10171     039B  391F               	andlw	31
 10172     039C  0473               	iorwf	??_LCDsend2x4,w
 10173     039D  1D03               	btfss	3,2
 10174     039E  2BA0               	goto	u2391
 10175     039F  2BA1               	goto	u2390
 10176     03A0                     u2391:
 10177     03A0  2B95               	goto	l3570
 10178     03A1                     u2390:
 10179     03A1                     l3572:
 10180                           
 10181                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 10182     03A1  0876               	movf	LCDsend2x4@lc,w
 10183     03A2  0472               	iorwf	LCDsend2x4@mode,w
 10184     03A3  380C               	iorlw	12
 10185     03A4  3180  2049  3183   	fcall	_WriteI2C
 10186     03A7                     l3574:
 10187     03A7  0023               	movlb	3	; select bank3
 10188     03A8  0C0F               	rrf	15,w	;volatile
 10189     03A9  0C89               	rrf	9,f
 10190     03AA  3901               	andlw	1
 10191     03AB  00F3               	movwf	??_LCDsend2x4
 10192     03AC  0811               	movf	17,w	;volatile
 10193     03AD  391F               	andlw	31
 10194     03AE  0473               	iorwf	??_LCDsend2x4,w
 10195     03AF  1D03               	btfss	3,2
 10196     03B0  2BB2               	goto	u2401
 10197     03B1  2BB3               	goto	u2400
 10198     03B2                     u2401:
 10199     03B2  2BA7               	goto	l3574
 10200     03B3                     u2400:
 10201     03B3                     l220:
 10202                           
 10203                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10204     03B3  0000               	nop
 10205     03B4                     l3576:
 10206                           
 10207                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 10208     03B4  0876               	movf	LCDsend2x4@lc,w
 10209     03B5  0472               	iorwf	LCDsend2x4@mode,w
 10210     03B6  3808               	iorlw	8
 10211     03B7  3180  2049  3183   	fcall	_WriteI2C
 10212     03BA                     l3578:
 10213     03BA  0023               	movlb	3	; select bank3
 10214     03BB  0C0F               	rrf	15,w	;volatile
 10215     03BC  0C89               	rrf	9,f
 10216     03BD  3901               	andlw	1
 10217     03BE  00F3               	movwf	??_LCDsend2x4
 10218     03BF  0811               	movf	17,w	;volatile
 10219     03C0  391F               	andlw	31
 10220     03C1  0473               	iorwf	??_LCDsend2x4,w
 10221     03C2  1D03               	btfss	3,2
 10222     03C3  2BC5               	goto	u2411
 10223     03C4  2BC6               	goto	u2410
 10224     03C5                     u2411:
 10225     03C5  2BBA               	goto	l3578
 10226     03C6                     u2410:
 10227     03C6                     l224:	
 10228                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10229                           
 10230     03C6  1511               	bsf	17,2	;volatile
 10231     03C7                     l225:
 10232     03C7  1911               	btfsc	17,2	;volatile
 10233     03C8  2BCA               	goto	u2421
 10234     03C9  2BCB               	goto	u2420
 10235     03CA                     u2421:
 10236     03CA  2BC7               	goto	l225
 10237     03CB                     u2420:
 10238     03CB                     l3580:
 10239                           
 10240                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 10241     03CB  3010               	movlw	16
 10242     03CC                     u3577:
 10243     03CC  0B89               	decfsz	9,f
 10244     03CD  2BCC               	goto	u3577
 10245     03CE  3200               	nop2
 10246     03CF                     l229:
 10247     03CF  0008               	return
 10248     03D0                     __end_of_LCDsend2x4:
 10249                           
 10250                           	psect	text33
 10251     0006                     __ptext33:	
 10252 ;; *************** function _LCDsend *****************
 10253 ;; Defined at:
 10254 ;;		line 17 in file "LCD/lcd.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;  c               1    wreg     unsigned char 
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;  c               1    3[COMMON] unsigned char 
 10259 ;; Return value:  Size  Location     Type
 10260 ;;                  1    wreg      void 
 10261 ;; Registers used:
 10262 ;;		wreg, status,2, status,0, pclath, cstack
 10263 ;; Tracked objects:
 10264 ;;		On entry : 0/0
 10265 ;;		On exit  : 0/0
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;Total ram usage:        2 bytes
 10273 ;; Hardware stack levels used: 1
 10274 ;; Hardware stack levels required when called: 1
 10275 ;; This function calls:
 10276 ;;		_WriteI2C
 10277 ;; This function is called by:
 10278 ;;		_LCDinit
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282     0006                     _LCDsend:	
 10283                           ;psect for function _LCDsend
 10284                           
 10285                           
 10286                           ;incstack = 0
 10287                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 10288                           ;LCDsend@c stored from wreg
 10289     0006  00F3               	movwf	LCDsend@c
 10290     0007                     l3642:
 10291     0007                     l3644:	
 10292                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10293                           
 10294     0007  0023               	movlb	3	; select bank3
 10295     0008  0C0F               	rrf	15,w	;volatile
 10296     0009  0C89               	rrf	9,f
 10297     000A  3901               	andlw	1
 10298     000B  00F2               	movwf	??_LCDsend
 10299     000C  0811               	movf	17,w	;volatile
 10300     000D  391F               	andlw	31
 10301     000E  0472               	iorwf	??_LCDsend,w
 10302     000F  1D03               	btfss	3,2
 10303     0010  2812               	goto	u2491
 10304     0011  2813               	goto	u2490
 10305     0012                     u2491:
 10306     0012  2807               	goto	l3644
 10307     0013                     u2490:
 10308     0013                     l73:	
 10309                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10310                           
 10311     0013  1411               	bsf	17,0	;volatile
 10312     0014                     l74:
 10313     0014  1811               	btfsc	17,0	;volatile
 10314     0015  2817               	goto	u2501
 10315     0016  2818               	goto	u2500
 10316     0017                     u2501:
 10317     0017  2814               	goto	l74
 10318     0018                     u2500:
 10319     0018                     l3646:
 10320     0018  0C0F               	rrf	15,w	;volatile
 10321     0019  0C89               	rrf	9,f
 10322     001A  3901               	andlw	1
 10323     001B  00F2               	movwf	??_LCDsend
 10324     001C  0811               	movf	17,w	;volatile
 10325     001D  391F               	andlw	31
 10326     001E  0472               	iorwf	??_LCDsend,w
 10327     001F  1D03               	btfss	3,2
 10328     0020  2822               	goto	u2511
 10329     0021  2823               	goto	u2510
 10330     0022                     u2511:
 10331     0022  2818               	goto	l3646
 10332     0023                     u2510:
 10333     0023                     l3648:
 10334                           
 10335                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10336     0023  304E               	movlw	78
 10337     0024  3180  2049  3180   	fcall	_WriteI2C
 10338     0027                     l3650:
 10339     0027  0023               	movlb	3	; select bank3
 10340     0028  0C0F               	rrf	15,w	;volatile
 10341     0029  0C89               	rrf	9,f
 10342     002A  3901               	andlw	1
 10343     002B  00F2               	movwf	??_LCDsend
 10344     002C  0811               	movf	17,w	;volatile
 10345     002D  391F               	andlw	31
 10346     002E  0472               	iorwf	??_LCDsend,w
 10347     002F  1D03               	btfss	3,2
 10348     0030  2832               	goto	u2521
 10349     0031  2833               	goto	u2520
 10350     0032                     u2521:
 10351     0032  2827               	goto	l3650
 10352     0033                     u2520:
 10353     0033                     l3652:
 10354                           
 10355                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10356     0033  0873               	movf	LCDsend@c,w
 10357     0034  3180  2049  3180   	fcall	_WriteI2C
 10358     0037                     l3654:
 10359     0037  0023               	movlb	3	; select bank3
 10360     0038  0C0F               	rrf	15,w	;volatile
 10361     0039  0C89               	rrf	9,f
 10362     003A  3901               	andlw	1
 10363     003B  00F2               	movwf	??_LCDsend
 10364     003C  0811               	movf	17,w	;volatile
 10365     003D  391F               	andlw	31
 10366     003E  0472               	iorwf	??_LCDsend,w
 10367     003F  1D03               	btfss	3,2
 10368     0040  2842               	goto	u2531
 10369     0041  2843               	goto	u2530
 10370     0042                     u2531:
 10371     0042  2837               	goto	l3654
 10372     0043                     u2530:
 10373     0043                     l87:	
 10374                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10375                           
 10376     0043  1511               	bsf	17,2	;volatile
 10377     0044                     l88:
 10378     0044  1911               	btfsc	17,2	;volatile
 10379     0045  2847               	goto	u2541
 10380     0046  2848               	goto	u2540
 10381     0047                     u2541:
 10382     0047  2844               	goto	l88
 10383     0048                     u2540:
 10384     0048                     l92:
 10385     0048  0008               	return
 10386     0049                     __end_of_LCDsend:
 10387                           
 10388                           	psect	text34
 10389     0E32                     __ptext34:	
 10390 ;; *************** function _LCDbusy *****************
 10391 ;; Defined at:
 10392 ;;		line 119 in file "LCD/lcd.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;		None
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;		None
 10397 ;; Return value:  Size  Location     Type
 10398 ;;                  2    7[COMMON] int 
 10399 ;; Registers used:
 10400 ;;		wreg, status,2, status,0, pclath, cstack
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;Total ram usage:        2 bytes
 10411 ;; Hardware stack levels used: 1
 10412 ;; Hardware stack levels required when called: 2
 10413 ;; This function calls:
 10414 ;;		_LCDrecv
 10415 ;; This function is called by:
 10416 ;;		_main
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420     0E32                     _LCDbusy:	
 10421                           ;psect for function _LCDbusy
 10422                           
 10423     0E32                     l3876:	
 10424                           ;incstack = 0
 10425                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 10426                           
 10427                           
 10428                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 10429     0E32  3000               	movlw	0
 10430     0E33  3186  26A1  318E   	fcall	_LCDrecv
 10431     0E36  3980               	andlw	128
 10432     0E37  1903               	btfsc	3,2
 10433     0E38  2E3A               	goto	u2861
 10434     0E39  2E3B               	goto	u2860
 10435     0E3A                     u2861:
 10436     0E3A  2E40               	goto	l3882
 10437     0E3B                     u2860:
 10438     0E3B                     l3878:
 10439     0E3B  3001               	movlw	1
 10440     0E3C  00F7               	movwf	?_LCDbusy
 10441     0E3D  3000               	movlw	0
 10442     0E3E  00F8               	movwf	?_LCDbusy+1
 10443     0E3F  2E42               	goto	l248
 10444     0E40                     l3882:
 10445                           
 10446                           ;LCD/lcd.c: 122:   return 0;
 10447     0E40  01F7               	clrf	?_LCDbusy
 10448     0E41  01F8               	clrf	?_LCDbusy+1
 10449     0E42                     l248:
 10450     0E42  0008               	return
 10451     0E43                     __end_of_LCDbusy:
 10452                           
 10453                           	psect	text35
 10454     06A1                     __ptext35:	
 10455 ;; *************** function _LCDrecv *****************
 10456 ;; Defined at:
 10457 ;;		line 25 in file "LCD/lcd.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;  mode            1    wreg     unsigned char 
 10460 ;; Auto vars:     Size  Location     Type
 10461 ;;  mode            1    6[COMMON] unsigned char 
 10462 ;;  lc              1    5[COMMON] unsigned char 
 10463 ;;  hc              1    4[COMMON] unsigned char 
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  1    wreg      unsigned char 
 10466 ;; Registers used:
 10467 ;;		wreg, status,2, status,0, pclath, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;Total ram usage:        5 bytes
 10478 ;; Hardware stack levels used: 1
 10479 ;; Hardware stack levels required when called: 1
 10480 ;; This function calls:
 10481 ;;		_ReadI2C
 10482 ;;		_WriteI2C
 10483 ;; This function is called by:
 10484 ;;		_LCDbusy
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488     06A1                     _LCDrecv:	
 10489                           ;psect for function _LCDrecv
 10490                           
 10491                           
 10492                           ;incstack = 0
 10493                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 10494                           ;LCDrecv@mode stored from wreg
 10495     06A1  00F6               	movwf	LCDrecv@mode
 10496     06A2                     l3656:
 10497     06A2                     l3658:	
 10498                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 10499                           
 10500     06A2  0023               	movlb	3	; select bank3
 10501     06A3  0C0F               	rrf	15,w	;volatile
 10502     06A4  0C89               	rrf	9,f
 10503     06A5  3901               	andlw	1
 10504     06A6  00F2               	movwf	??_LCDrecv
 10505     06A7  0811               	movf	17,w	;volatile
 10506     06A8  391F               	andlw	31
 10507     06A9  0472               	iorwf	??_LCDrecv,w
 10508     06AA  1D03               	btfss	3,2
 10509     06AB  2EAD               	goto	u2551
 10510     06AC  2EAE               	goto	u2550
 10511     06AD                     u2551:
 10512     06AD  2EA2               	goto	l3658
 10513     06AE                     u2550:
 10514     06AE                     l98:	
 10515                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10516                           
 10517     06AE  1411               	bsf	17,0	;volatile
 10518     06AF                     l99:
 10519     06AF  1811               	btfsc	17,0	;volatile
 10520     06B0  2EB2               	goto	u2561
 10521     06B1  2EB3               	goto	u2560
 10522     06B2                     u2561:
 10523     06B2  2EAF               	goto	l99
 10524     06B3                     u2560:
 10525     06B3                     l3660:
 10526     06B3  0C0F               	rrf	15,w	;volatile
 10527     06B4  0C89               	rrf	9,f
 10528     06B5  3901               	andlw	1
 10529     06B6  00F2               	movwf	??_LCDrecv
 10530     06B7  0811               	movf	17,w	;volatile
 10531     06B8  391F               	andlw	31
 10532     06B9  0472               	iorwf	??_LCDrecv,w
 10533     06BA  1D03               	btfss	3,2
 10534     06BB  2EBD               	goto	u2571
 10535     06BC  2EBE               	goto	u2570
 10536     06BD                     u2571:
 10537     06BD  2EB3               	goto	l3660
 10538     06BE                     u2570:
 10539     06BE                     l3662:
 10540                           
 10541                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10542     06BE  304E               	movlw	78
 10543     06BF  3180  2049  3186   	fcall	_WriteI2C
 10544     06C2                     l3664:
 10545     06C2  0023               	movlb	3	; select bank3
 10546     06C3  0C0F               	rrf	15,w	;volatile
 10547     06C4  0C89               	rrf	9,f
 10548     06C5  3901               	andlw	1
 10549     06C6  00F2               	movwf	??_LCDrecv
 10550     06C7  0811               	movf	17,w	;volatile
 10551     06C8  391F               	andlw	31
 10552     06C9  0472               	iorwf	??_LCDrecv,w
 10553     06CA  1D03               	btfss	3,2
 10554     06CB  2ECD               	goto	u2581
 10555     06CC  2ECE               	goto	u2580
 10556     06CD                     u2581:
 10557     06CD  2EC2               	goto	l3664
 10558     06CE                     u2580:
 10559     06CE                     l3666:
 10560                           
 10561                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 10562     06CE  0876               	movf	LCDrecv@mode,w
 10563     06CF  38FA               	iorlw	250
 10564     06D0  3180  2049  3186   	fcall	_WriteI2C
 10565     06D3                     l3668:
 10566     06D3  0023               	movlb	3	; select bank3
 10567     06D4  0C0F               	rrf	15,w	;volatile
 10568     06D5  0C89               	rrf	9,f
 10569     06D6  3901               	andlw	1
 10570     06D7  00F2               	movwf	??_LCDrecv
 10571     06D8  0811               	movf	17,w	;volatile
 10572     06D9  391F               	andlw	31
 10573     06DA  0472               	iorwf	??_LCDrecv,w
 10574     06DB  1D03               	btfss	3,2
 10575     06DC  2EDE               	goto	u2591
 10576     06DD  2EDF               	goto	u2590
 10577     06DE                     u2591:
 10578     06DE  2ED3               	goto	l3668
 10579     06DF                     u2590:
 10580     06DF                     l3670:
 10581                           
 10582                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 10583     06DF  0876               	movf	LCDrecv@mode,w
 10584     06E0  38FE               	iorlw	254
 10585     06E1  3180  2049  3186   	fcall	_WriteI2C
 10586     06E4                     l3672:
 10587     06E4  0023               	movlb	3	; select bank3
 10588     06E5  0C0F               	rrf	15,w	;volatile
 10589     06E6  0C89               	rrf	9,f
 10590     06E7  3901               	andlw	1
 10591     06E8  00F2               	movwf	??_LCDrecv
 10592     06E9  0811               	movf	17,w	;volatile
 10593     06EA  391F               	andlw	31
 10594     06EB  0472               	iorwf	??_LCDrecv,w
 10595     06EC  1D03               	btfss	3,2
 10596     06ED  2EEF               	goto	u2601
 10597     06EE  2EF0               	goto	u2600
 10598     06EF                     u2601:
 10599     06EF  2EE4               	goto	l3672
 10600     06F0                     u2600:
 10601     06F0                     l114:
 10602                           
 10603                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10604     06F0  0000               	nop
 10605     06F1                     l115:	
 10606                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10607                           
 10608     06F1  0023               	movlb	3	; select bank3
 10609     06F2  1491               	bsf	17,1	;volatile
 10610     06F3                     l116:
 10611     06F3  1891               	btfsc	17,1	;volatile
 10612     06F4  2EF6               	goto	u2611
 10613     06F5  2EF7               	goto	u2610
 10614     06F6                     u2611:
 10615     06F6  2EF3               	goto	l116
 10616     06F7                     u2610:
 10617     06F7                     l3674:
 10618     06F7  0C0F               	rrf	15,w	;volatile
 10619     06F8  0C89               	rrf	9,f
 10620     06F9  3901               	andlw	1
 10621     06FA  00F2               	movwf	??_LCDrecv
 10622     06FB  0811               	movf	17,w	;volatile
 10623     06FC  391F               	andlw	31
 10624     06FD  0472               	iorwf	??_LCDrecv,w
 10625     06FE  1D03               	btfss	3,2
 10626     06FF  2F01               	goto	u2621
 10627     0700  2F02               	goto	u2620
 10628     0701                     u2621:
 10629     0701  2EF7               	goto	l3674
 10630     0702                     u2620:
 10631     0702                     l3676:
 10632                           
 10633                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10634     0702  304F               	movlw	79
 10635     0703  3180  2049  3186   	fcall	_WriteI2C
 10636     0706                     l3678:
 10637     0706  0023               	movlb	3	; select bank3
 10638     0707  0C0F               	rrf	15,w	;volatile
 10639     0708  0C89               	rrf	9,f
 10640     0709  3901               	andlw	1
 10641     070A  00F2               	movwf	??_LCDrecv
 10642     070B  0811               	movf	17,w	;volatile
 10643     070C  391F               	andlw	31
 10644     070D  0472               	iorwf	??_LCDrecv,w
 10645     070E  1D03               	btfss	3,2
 10646     070F  2F11               	goto	u2631
 10647     0710  2F12               	goto	u2630
 10648     0711                     u2631:
 10649     0711  2F06               	goto	l3678
 10650     0712                     u2630:
 10651     0712                     l3680:
 10652                           
 10653                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10654     0712  318E  26E2  3186   	fcall	_ReadI2C
 10655     0715  00F4               	movwf	LCDrecv@hc
 10656     0716                     l3682:
 10657     0716  0023               	movlb	3	; select bank3
 10658     0717  0C0F               	rrf	15,w	;volatile
 10659     0718  0C89               	rrf	9,f
 10660     0719  3901               	andlw	1
 10661     071A  00F2               	movwf	??_LCDrecv
 10662     071B  0811               	movf	17,w	;volatile
 10663     071C  391F               	andlw	31
 10664     071D  0472               	iorwf	??_LCDrecv,w
 10665     071E  1D03               	btfss	3,2
 10666     071F  2F21               	goto	u2641
 10667     0720  2F22               	goto	u2640
 10668     0721                     u2641:
 10669     0721  2F16               	goto	l3682
 10670     0722                     u2640:
 10671     0722                     l129:	
 10672                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 10673                           
 10674     0722  1691               	bsf	17,5	;volatile
 10675     0723  1611               	bsf	17,4	;volatile
 10676     0724                     l130:
 10677     0724  1A11               	btfsc	17,4	;volatile
 10678     0725  2F27               	goto	u2651
 10679     0726  2F28               	goto	u2650
 10680     0727                     u2651:
 10681     0727  2F24               	goto	l130
 10682     0728                     u2650:
 10683     0728                     l134:	
 10684                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10685                           
 10686     0728  1491               	bsf	17,1	;volatile
 10687     0729                     l135:
 10688     0729  1891               	btfsc	17,1	;volatile
 10689     072A  2F2C               	goto	u2661
 10690     072B  2F2D               	goto	u2660
 10691     072C                     u2661:
 10692     072C  2F29               	goto	l135
 10693     072D                     u2660:
 10694     072D                     l3684:
 10695     072D  0C0F               	rrf	15,w	;volatile
 10696     072E  0C89               	rrf	9,f
 10697     072F  3901               	andlw	1
 10698     0730  00F2               	movwf	??_LCDrecv
 10699     0731  0811               	movf	17,w	;volatile
 10700     0732  391F               	andlw	31
 10701     0733  0472               	iorwf	??_LCDrecv,w
 10702     0734  1D03               	btfss	3,2
 10703     0735  2F37               	goto	u2671
 10704     0736  2F38               	goto	u2670
 10705     0737                     u2671:
 10706     0737  2F2D               	goto	l3684
 10707     0738                     u2670:
 10708     0738                     l3686:
 10709                           
 10710                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10711     0738  304E               	movlw	78
 10712     0739  3180  2049  3186   	fcall	_WriteI2C
 10713     073C                     l3688:
 10714     073C  0023               	movlb	3	; select bank3
 10715     073D  0C0F               	rrf	15,w	;volatile
 10716     073E  0C89               	rrf	9,f
 10717     073F  3901               	andlw	1
 10718     0740  00F2               	movwf	??_LCDrecv
 10719     0741  0811               	movf	17,w	;volatile
 10720     0742  391F               	andlw	31
 10721     0743  0472               	iorwf	??_LCDrecv,w
 10722     0744  1D03               	btfss	3,2
 10723     0745  2F47               	goto	u2681
 10724     0746  2F48               	goto	u2680
 10725     0747                     u2681:
 10726     0747  2F3C               	goto	l3688
 10727     0748                     u2680:
 10728     0748                     l3690:
 10729                           
 10730                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 10731     0748  0876               	movf	LCDrecv@mode,w
 10732     0749  38FA               	iorlw	250
 10733     074A  3180  2049  3186   	fcall	_WriteI2C
 10734     074D                     l3692:
 10735     074D  0023               	movlb	3	; select bank3
 10736     074E  0C0F               	rrf	15,w	;volatile
 10737     074F  0C89               	rrf	9,f
 10738     0750  3901               	andlw	1
 10739     0751  00F2               	movwf	??_LCDrecv
 10740     0752  0811               	movf	17,w	;volatile
 10741     0753  391F               	andlw	31
 10742     0754  0472               	iorwf	??_LCDrecv,w
 10743     0755  1D03               	btfss	3,2
 10744     0756  2F58               	goto	u2691
 10745     0757  2F59               	goto	u2690
 10746     0758                     u2691:
 10747     0758  2F4D               	goto	l3692
 10748     0759                     u2690:
 10749     0759                     l3694:
 10750                           
 10751                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 10752     0759  0876               	movf	LCDrecv@mode,w
 10753     075A  38FE               	iorlw	254
 10754     075B  3180  2049  3186   	fcall	_WriteI2C
 10755     075E                     l3696:
 10756     075E  0023               	movlb	3	; select bank3
 10757     075F  0C0F               	rrf	15,w	;volatile
 10758     0760  0C89               	rrf	9,f
 10759     0761  3901               	andlw	1
 10760     0762  00F2               	movwf	??_LCDrecv
 10761     0763  0811               	movf	17,w	;volatile
 10762     0764  391F               	andlw	31
 10763     0765  0472               	iorwf	??_LCDrecv,w
 10764     0766  1D03               	btfss	3,2
 10765     0767  2F69               	goto	u2701
 10766     0768  2F6A               	goto	u2700
 10767     0769                     u2701:
 10768     0769  2F5E               	goto	l3696
 10769     076A                     u2700:
 10770     076A                     l150:
 10771                           
 10772                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 10773     076A  0000               	nop
 10774     076B                     l151:	
 10775                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10776                           
 10777     076B  0023               	movlb	3	; select bank3
 10778     076C  1491               	bsf	17,1	;volatile
 10779     076D                     l152:
 10780     076D  1891               	btfsc	17,1	;volatile
 10781     076E  2F70               	goto	u2711
 10782     076F  2F71               	goto	u2710
 10783     0770                     u2711:
 10784     0770  2F6D               	goto	l152
 10785     0771                     u2710:
 10786     0771                     l3698:
 10787     0771  0C0F               	rrf	15,w	;volatile
 10788     0772  0C89               	rrf	9,f
 10789     0773  3901               	andlw	1
 10790     0774  00F2               	movwf	??_LCDrecv
 10791     0775  0811               	movf	17,w	;volatile
 10792     0776  391F               	andlw	31
 10793     0777  0472               	iorwf	??_LCDrecv,w
 10794     0778  1D03               	btfss	3,2
 10795     0779  2F7B               	goto	u2721
 10796     077A  2F7C               	goto	u2720
 10797     077B                     u2721:
 10798     077B  2F71               	goto	l3698
 10799     077C                     u2720:
 10800     077C                     l3700:
 10801                           
 10802                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10803     077C  304F               	movlw	79
 10804     077D  3180  2049  3186   	fcall	_WriteI2C
 10805     0780                     l3702:
 10806     0780  0023               	movlb	3	; select bank3
 10807     0781  0C0F               	rrf	15,w	;volatile
 10808     0782  0C89               	rrf	9,f
 10809     0783  3901               	andlw	1
 10810     0784  00F2               	movwf	??_LCDrecv
 10811     0785  0811               	movf	17,w	;volatile
 10812     0786  391F               	andlw	31
 10813     0787  0472               	iorwf	??_LCDrecv,w
 10814     0788  1D03               	btfss	3,2
 10815     0789  2F8B               	goto	u2731
 10816     078A  2F8C               	goto	u2730
 10817     078B                     u2731:
 10818     078B  2F80               	goto	l3702
 10819     078C                     u2730:
 10820     078C                     l3704:
 10821                           
 10822                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10823     078C  318E  26E2  3186   	fcall	_ReadI2C
 10824     078F  00F5               	movwf	LCDrecv@lc
 10825     0790                     l3706:
 10826     0790  0023               	movlb	3	; select bank3
 10827     0791  0C0F               	rrf	15,w	;volatile
 10828     0792  0C89               	rrf	9,f
 10829     0793  3901               	andlw	1
 10830     0794  00F2               	movwf	??_LCDrecv
 10831     0795  0811               	movf	17,w	;volatile
 10832     0796  391F               	andlw	31
 10833     0797  0472               	iorwf	??_LCDrecv,w
 10834     0798  1D03               	btfss	3,2
 10835     0799  2F9B               	goto	u2741
 10836     079A  2F9C               	goto	u2740
 10837     079B                     u2741:
 10838     079B  2F90               	goto	l3706
 10839     079C                     u2740:
 10840     079C                     l165:	
 10841                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 10842                           
 10843     079C  1691               	bsf	17,5	;volatile
 10844     079D  1611               	bsf	17,4	;volatile
 10845     079E                     l166:
 10846     079E  1A11               	btfsc	17,4	;volatile
 10847     079F  2FA1               	goto	u2751
 10848     07A0  2FA2               	goto	u2750
 10849     07A1                     u2751:
 10850     07A1  2F9E               	goto	l166
 10851     07A2                     u2750:
 10852     07A2                     l170:	
 10853                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10854                           
 10855     07A2  1491               	bsf	17,1	;volatile
 10856     07A3                     l171:
 10857     07A3  1891               	btfsc	17,1	;volatile
 10858     07A4  2FA6               	goto	u2761
 10859     07A5  2FA7               	goto	u2760
 10860     07A6                     u2761:
 10861     07A6  2FA3               	goto	l171
 10862     07A7                     u2760:
 10863     07A7                     l3708:
 10864     07A7  0C0F               	rrf	15,w	;volatile
 10865     07A8  0C89               	rrf	9,f
 10866     07A9  3901               	andlw	1
 10867     07AA  00F2               	movwf	??_LCDrecv
 10868     07AB  0811               	movf	17,w	;volatile
 10869     07AC  391F               	andlw	31
 10870     07AD  0472               	iorwf	??_LCDrecv,w
 10871     07AE  1D03               	btfss	3,2
 10872     07AF  2FB1               	goto	u2771
 10873     07B0  2FB2               	goto	u2770
 10874     07B1                     u2771:
 10875     07B1  2FA7               	goto	l3708
 10876     07B2                     u2770:
 10877     07B2                     l3710:
 10878                           
 10879                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10880     07B2  304E               	movlw	78
 10881     07B3  3180  2049  3186   	fcall	_WriteI2C
 10882     07B6                     l3712:
 10883     07B6  0023               	movlb	3	; select bank3
 10884     07B7  0C0F               	rrf	15,w	;volatile
 10885     07B8  0C89               	rrf	9,f
 10886     07B9  3901               	andlw	1
 10887     07BA  00F2               	movwf	??_LCDrecv
 10888     07BB  0811               	movf	17,w	;volatile
 10889     07BC  391F               	andlw	31
 10890     07BD  0472               	iorwf	??_LCDrecv,w
 10891     07BE  1D03               	btfss	3,2
 10892     07BF  2FC1               	goto	u2781
 10893     07C0  2FC2               	goto	u2780
 10894     07C1                     u2781:
 10895     07C1  2FB6               	goto	l3712
 10896     07C2                     u2780:
 10897     07C2                     l3714:
 10898                           
 10899                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 10900     07C2  0876               	movf	LCDrecv@mode,w
 10901     07C3  38FA               	iorlw	250
 10902     07C4  3180  2049  3186   	fcall	_WriteI2C
 10903     07C7                     l3716:
 10904     07C7  0023               	movlb	3	; select bank3
 10905     07C8  0C0F               	rrf	15,w	;volatile
 10906     07C9  0C89               	rrf	9,f
 10907     07CA  3901               	andlw	1
 10908     07CB  00F2               	movwf	??_LCDrecv
 10909     07CC  0811               	movf	17,w	;volatile
 10910     07CD  391F               	andlw	31
 10911     07CE  0472               	iorwf	??_LCDrecv,w
 10912     07CF  1D03               	btfss	3,2
 10913     07D0  2FD2               	goto	u2791
 10914     07D1  2FD3               	goto	u2790
 10915     07D2                     u2791:
 10916     07D2  2FC7               	goto	l3716
 10917     07D3                     u2790:
 10918     07D3                     l184:	
 10919                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10920                           
 10921     07D3  1511               	bsf	17,2	;volatile
 10922     07D4                     l185:
 10923     07D4  1911               	btfsc	17,2	;volatile
 10924     07D5  2FD7               	goto	u2801
 10925     07D6  2FD8               	goto	u2800
 10926     07D7                     u2801:
 10927     07D7  2FD4               	goto	l185
 10928     07D8                     u2800:
 10929     07D8                     l3718:
 10930                           
 10931                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 10932     07D8  0875               	movf	LCDrecv@lc,w
 10933     07D9  00F2               	movwf	??_LCDrecv
 10934     07DA  3004               	movlw	4
 10935     07DB                     u2815:
 10936     07DB  36F2               	lsrf	??_LCDrecv,f
 10937     07DC  0B89               	decfsz	9,f
 10938     07DD  2FDB               	goto	u2815
 10939     07DE  300F               	movlw	15
 10940     07DF  0572               	andwf	??_LCDrecv,w
 10941     07E0  00F3               	movwf	??_LCDrecv+1
 10942     07E1  0874               	movf	LCDrecv@hc,w
 10943     07E2  39F0               	andlw	240
 10944     07E3  0473               	iorwf	??_LCDrecv+1,w
 10945     07E4                     l189:
 10946     07E4  0008               	return
 10947     07E5                     __end_of_LCDrecv:
 10948                           
 10949                           	psect	text36
 10950     0049                     __ptext36:	
 10951 ;; *************** function _WriteI2C *****************
 10952 ;; Defined at:
 10953 ;;		line 59 in file "I2C/i2c.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;  data_out        1    wreg     unsigned char 
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;  data_out        1    1[COMMON] unsigned char 
 10958 ;; Return value:  Size  Location     Type
 10959 ;;                  1    wreg      char 
 10960 ;; Registers used:
 10961 ;;		wreg, status,2, status,0
 10962 ;; Tracked objects:
 10963 ;;		On entry : 0/0
 10964 ;;		On exit  : 0/0
 10965 ;;		Unchanged: 0/0
 10966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10971 ;;Total ram usage:        2 bytes
 10972 ;; Hardware stack levels used: 1
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		_LCDsend
 10977 ;;		_LCDrecv
 10978 ;;		_LCDsend2x4
 10979 ;;		_readTC74
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983     0049                     _WriteI2C:	
 10984                           ;psect for function _WriteI2C
 10985                           
 10986                           
 10987                           ;incstack = 0
 10988                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 10989                           ;WriteI2C@data_out stored from wreg
 10990     0049  00F1               	movwf	WriteI2C@data_out
 10991     004A                     l3442:
 10992                           
 10993                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 10994     004A  0871               	movf	WriteI2C@data_out,w
 10995     004B  0023               	movlb	3	; select bank3
 10996     004C  008C               	movwf	12	;volatile
 10997     004D                     l3444:
 10998                           
 10999                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 11000     004D  1F90               	btfss	16,7	;volatile
 11001     004E  2850               	goto	u2071
 11002     004F  2851               	goto	u2070
 11003     0050                     u2071:
 11004     0050  2852               	goto	l3450
 11005     0051                     u2070:
 11006     0051  2893               	goto	l36
 11007     0052                     l3450:
 11008                           
 11009                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11010     0052  300F               	movlw	15
 11011     0053  0510               	andwf	16,w	;volatile
 11012     0054  00F0               	movwf	??_WriteI2C
 11013     0055  3008               	movlw	8
 11014     0056  0670               	xorwf	??_WriteI2C,w
 11015     0057  1903               	btfsc	3,2
 11016     0058  285A               	goto	u2081
 11017     0059  285B               	goto	u2080
 11018     005A                     u2081:
 11019     005A  2871               	goto	l3462
 11020     005B                     u2080:
 11021     005B                     l3452:
 11022     005B  300F               	movlw	15
 11023     005C  0510               	andwf	16,w	;volatile
 11024     005D  00F0               	movwf	??_WriteI2C
 11025     005E  300B               	movlw	11
 11026     005F  0670               	xorwf	??_WriteI2C,w
 11027     0060  1903               	btfsc	3,2
 11028     0061  2863               	goto	u2091
 11029     0062  2864               	goto	u2090
 11030     0063                     u2091:
 11031     0063  2871               	goto	l3462
 11032     0064                     u2090:
 11033     0064                     l3454:
 11034                           
 11035                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 11036     0064  1610               	bsf	16,4	;volatile
 11037     0065                     l39:	
 11038                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 11039                           
 11040     0065  002E               	movlb	14	; select bank14
 11041     0066  1C0F               	btfss	15,0	;volatile
 11042     0067  2869               	goto	u2101
 11043     0068  286A               	goto	u2100
 11044     0069                     u2101:
 11045     0069  2865               	goto	l39
 11046     006A                     u2100:
 11047     006A                     l41:
 11048                           
 11049                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11050     006A  0023               	movlb	3	; select bank3
 11051     006B  190F               	btfsc	15,2	;volatile
 11052     006C  286E               	goto	u2111
 11053     006D  286F               	goto	u2110
 11054     006E                     u2111:
 11055     006E  2893               	goto	l36
 11056     006F                     u2110:
 11057     006F                     l3456:
 11058     006F  080F               	movf	15,w	;volatile
 11059     0070  2893               	goto	l36
 11060     0071                     l3462:
 11061     0071  300F               	movlw	15
 11062     0072  0510               	andwf	16,w	;volatile
 11063     0073  00F0               	movwf	??_WriteI2C
 11064     0074  3008               	movlw	8
 11065     0075  0670               	xorwf	??_WriteI2C,w
 11066     0076  1903               	btfsc	3,2
 11067     0077  2879               	goto	u2121
 11068     0078  287A               	goto	u2120
 11069     0079                     u2121:
 11070     0079  2883               	goto	l48
 11071     007A                     u2120:
 11072     007A                     l3464:
 11073     007A  300F               	movlw	15
 11074     007B  0510               	andwf	16,w	;volatile
 11075     007C  00F0               	movwf	??_WriteI2C
 11076     007D  300B               	movlw	11
 11077     007E  0670               	xorwf	??_WriteI2C,w
 11078     007F  1D03               	btfss	3,2
 11079     0080  2882               	goto	u2131
 11080     0081  2883               	goto	u2130
 11081     0082                     u2131:
 11082     0082  2893               	goto	l36
 11083     0083                     u2130:
 11084     0083                     l48:
 11085     0083  180F               	btfsc	15,0	;volatile
 11086     0084  2886               	goto	u2141
 11087     0085  2887               	goto	u2140
 11088     0086                     u2141:
 11089     0086  2883               	goto	l48
 11090     0087                     u2140:
 11091     0087                     l3466:
 11092     0087  0C0F               	rrf	15,w	;volatile
 11093     0088  0C89               	rrf	9,f
 11094     0089  3901               	andlw	1
 11095     008A  00F0               	movwf	??_WriteI2C
 11096     008B  0811               	movf	17,w	;volatile
 11097     008C  391F               	andlw	31
 11098     008D  0470               	iorwf	??_WriteI2C,w
 11099     008E  1D03               	btfss	3,2
 11100     008F  2891               	goto	u2151
 11101     0090  2892               	goto	u2150
 11102     0091                     u2151:
 11103     0091  2887               	goto	l3466
 11104     0092                     u2150:
 11105     0092                     l53:
 11106                           
 11107                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 11108     0092  0811               	movf	17,w	;volatile
 11109     0093                     l36:
 11110     0093  0008               	return
 11111     0094                     __end_of_WriteI2C:
 11112                           
 11113                           	psect	text37
 11114     0EE2                     __ptext37:	
 11115 ;; *************** function _ReadI2C *****************
 11116 ;; Defined at:
 11117 ;;		line 44 in file "I2C/i2c.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;		None
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;		None
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  1    wreg      unsigned char 
 11124 ;; Registers used:
 11125 ;;		wreg, status,2, status,0
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;Total ram usage:        1 bytes
 11136 ;; Hardware stack levels used: 1
 11137 ;; This function calls:
 11138 ;;		Nothing
 11139 ;; This function is called by:
 11140 ;;		_LCDrecv
 11141 ;;		_readTC74
 11142 ;; This function uses a non-reentrant model
 11143 ;;
 11144                           
 11145     0EE2                     _ReadI2C:	
 11146                           ;psect for function _ReadI2C
 11147                           
 11148     0EE2                     l3536:	
 11149                           ;incstack = 0
 11150                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11151                           
 11152                           
 11153                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11154     0EE2  300F               	movlw	15
 11155     0EE3  0023               	movlb	3	; select bank3
 11156     0EE4  0510               	andwf	16,w	;volatile
 11157     0EE5  00F0               	movwf	??_ReadI2C
 11158     0EE6  3008               	movlw	8
 11159     0EE7  0670               	xorwf	??_ReadI2C,w
 11160     0EE8  1903               	btfsc	3,2
 11161     0EE9  2EEB               	goto	u2281
 11162     0EEA  2EEC               	goto	u2280
 11163     0EEB                     u2281:
 11164     0EEB  2EF5               	goto	l28
 11165     0EEC                     u2280:
 11166     0EEC                     l3538:
 11167     0EEC  300F               	movlw	15
 11168     0EED  0510               	andwf	16,w	;volatile
 11169     0EEE  00F0               	movwf	??_ReadI2C
 11170     0EEF  300B               	movlw	11
 11171     0EF0  0670               	xorwf	??_ReadI2C,w
 11172     0EF1  1D03               	btfss	3,2
 11173     0EF2  2EF4               	goto	u2291
 11174     0EF3  2EF5               	goto	u2290
 11175     0EF4                     u2291:
 11176     0EF4  2EF6               	goto	l29
 11177     0EF5                     u2290:
 11178     0EF5                     l28:
 11179                           
 11180                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 11181     0EF5  1591               	bsf	17,3	;volatile
 11182     0EF6                     l29:
 11183     0EF6  1C0F               	btfss	15,0	;volatile
 11184     0EF7  2EF9               	goto	u2301
 11185     0EF8  2EFA               	goto	u2300
 11186     0EF9                     u2301:
 11187     0EF9  2EF6               	goto	l29
 11188     0EFA                     u2300:
 11189     0EFA                     l3540:
 11190                           
 11191                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 11192     0EFA  080C               	movf	12,w	;volatile
 11193     0EFB                     l32:
 11194     0EFB  0008               	return
 11195     0EFC                     __end_of_ReadI2C:
 11196                           
 11197                           	psect	text38
 11198     0E65                     __ptext38:	
 11199 ;; *************** function _ADCC_GetSingleConversion *****************
 11200 ;; Defined at:
 11201 ;;		line 132 in file "mcc_generated_files/adcc.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;  channel         1    wreg     enum E12225
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;  channel         1    2[COMMON] enum E12225
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  2    0[COMMON] unsigned short 
 11208 ;; Registers used:
 11209 ;;		wreg
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/0
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;Total ram usage:        3 bytes
 11220 ;; Hardware stack levels used: 1
 11221 ;; This function calls:
 11222 ;;		Nothing
 11223 ;; This function is called by:
 11224 ;;		_main
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           
 11228     0E65                     _ADCC_GetSingleConversion:	
 11229                           ;psect for function _ADCC_GetSingleConversion
 11230                           
 11231                           
 11232                           ;incstack = 0
 11233                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11234                           ;ADCC_GetSingleConversion@channel stored from wreg
 11235     0E65  00F2               	movwf	ADCC_GetSingleConversion@channel
 11236     0E66                     l3978:
 11237                           
 11238                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 11239     0E66  0872               	movf	ADCC_GetSingleConversion@channel,w
 11240     0E67  0021               	movlb	1	; select bank1
 11241     0E68  009E               	movwf	30	;volatile
 11242     0E69                     l3980:
 11243                           
 11244                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 11245     0E69  1793               	bsf	19,7	;volatile
 11246     0E6A                     l3982:
 11247                           
 11248                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 11249     0E6A  1313               	bcf	19,6	;volatile
 11250     0E6B                     l3984:
 11251                           
 11252                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 11253     0E6B  1413               	bsf	19,0	;volatile
 11254     0E6C                     l3986:
 11255                           
 11256                           ;mcc_generated_files/adcc.c: 147:     __nop();
 11257     0E6C  0000               	nop
 11258     0E6D                     l906:	
 11259                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 11260                           
 11261                           
 11262                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 11263     0E6D  0021               	movlb	1	; select bank1
 11264     0E6E  1813               	btfsc	19,0	;volatile
 11265     0E6F  2E71               	goto	u2901
 11266     0E70  2E72               	goto	u2900
 11267     0E71                     u2901:
 11268     0E71  2E6D               	goto	l906
 11269     0E72                     u2900:
 11270     0E72                     l3988:
 11271                           
 11272                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11273     0E72  080D               	movf	13,w	;volatile
 11274     0E73  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11275     0E74  080C               	movf	12,w	;volatile
 11276     0E75  00F0               	movwf	?_ADCC_GetSingleConversion
 11277     0E76                     l909:
 11278     0E76  0008               	return
 11279     0E77                     __end_of_ADCC_GetSingleConversion:
 11280     007E                     btemp	set	126	;btemp
 11281     007E                     wtemp0	set	126
 11282                           
 11283                           	psect	idloc
 11284                           
 11285                           ;Config register IDLOC0 @ 0x8000
 11286                           ;	unspecified, using default values
 11287     8000                     	org	32768
 11288     8000  3FFF               	dw	16383
 11289                           
 11290                           ;Config register IDLOC1 @ 0x8001
 11291                           ;	unspecified, using default values
 11292     8001                     	org	32769
 11293     8001  3FFF               	dw	16383
 11294                           
 11295                           ;Config register IDLOC2 @ 0x8002
 11296                           ;	unspecified, using default values
 11297     8002                     	org	32770
 11298     8002  3FFF               	dw	16383
 11299                           
 11300                           ;Config register IDLOC3 @ 0x8003
 11301                           ;	unspecified, using default values
 11302     8003                     	org	32771
 11303     8003  3FFF               	dw	16383
 11304                           
 11305                           	psect	config
 11306                           
 11307                           ;Config register CONFIG1 @ 0x8007
 11308                           ;	External Oscillator mode selection bits
 11309                           ;	FEXTOSC = OFF, Oscillator not enabled
 11310                           ;	Power-up default value for COSC bits
 11311                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 11312                           ;	Clock Out Enable bit
 11313                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 11314                           ;	Clock Switch Enable bit
 11315                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 11316                           ;	Fail-Safe Clock Monitor Enable bit
 11317                           ;	FCMEN = ON, FSCM timer enabled
 11318     8007                     	org	32775
 11319     8007  3FEC               	dw	16364
 11320                           
 11321                           ;Config register CONFIG2 @ 0x8008
 11322                           ;	Master Clear Enable bit
 11323                           ;	MCLRE = ON, MCLR pin is Master Clear function
 11324                           ;	Power-up Timer Enable bit
 11325                           ;	PWRTE = OFF, PWRT disabled
 11326                           ;	Low-Power BOR enable bit
 11327                           ;	LPBOREN = OFF, ULPBOR disabled
 11328                           ;	Brown-out reset enable bits
 11329                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 11330                           ;	Brown-out Reset Voltage Selection
 11331                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 11332                           ;	Zero-cross detect disable
 11333                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 11334                           ;	Peripheral Pin Select one-way control
 11335                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 11336                           ;	Stack Overflow/Underflow Reset Enable bit
 11337                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 11338                           ;	Background Debugger
 11339                           ;	DEBUG = OFF, Background Debugger disabled
 11340     8008                     	org	32776
 11341     8008  3FFF               	dw	16383
 11342                           
 11343                           ;Config register CONFIG3 @ 0x8009
 11344                           ;	WDT Period Select bits
 11345                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11346                           ;	WDT operating mode
 11347                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 11348                           ;	WDT Window Select bits
 11349                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 11350                           ;	WDT input clock selector
 11351                           ;	WDTCCS = SC, Software Control
 11352     8009                     	org	32777
 11353     8009  3F9F               	dw	16287
 11354                           
 11355                           ;Config register CONFIG4 @ 0x800A
 11356                           ;	UserNVM self-write protection bits
 11357                           ;	WRT = OFF, Write protection off
 11358                           ;	Scanner Enable bit
 11359                           ;	SCANE = available, Scanner module is available for use
 11360                           ;	Low Voltage Programming Enable bit
 11361                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 11362     800A                     	org	32778
 11363     800A  3FFF               	dw	16383
 11364                           
 11365                           ;Config register CONFIG5 @ 0x800B
 11366                           ;	UserNVM Program memory code protection bit
 11367                           ;	CP = OFF, Program Memory code protection disabled
 11368                           ;	DataNVM code protection bit
 11369                           ;	CPD = OFF, Data EEPROM code protection disabled
 11370     800B                     	org	32779
 11371     800B  3FFF               	dw	16383

Data Sizes:
    Strings     33
    Constant    32
    Data        0
    BSS         68
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      72
    BANK1            80     37      66
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    I2C1_DO_TX$2975$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_fsmStateTable	const PTR FTN()enum E12617[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> main@buf(BANK1[17]), main@time_buffer(BANK1[8]), STR_1(CODE[9]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2482$buffer	PTR unsigned char  size(2) Largest target is 0

    S2482$source	PTR const unsigned char  size(2) Largest target is 0

    S679$data	PTR unsigned char  size(2) Largest target is 0

    S911$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S911$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S911$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S911$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_3(CODE[8]), STR_4(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), main@time_buffer(BANK1[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_3(CODE[8]), STR_4(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_3(CODE[8]), STR_4(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_3(CODE[8]), STR_4(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _readTC74->_WriteI2C
    _TMR1_Reload->_TMR1_WriteTimer
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDpos->_LCDcmd
    _LCDcmd->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->_WriteI2C

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   11755
                                             63 BANK0      2     2      0
                                              0 BANK1     37    37      0
           _ADCC_GetSingleConversion
                            _LCDbusy
                             _LCDcmd
                            _LCDinit
                             _LCDpos
                             _LCDstr
                            _OpenI2C
                  _SYSTEM_Initialize
            _TMR1_HasOverflowOccured
                        _TMR1_Reload
                    _TMR1_StartTimer
                           _readTC74
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8    7169
                                             41 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    6641
                                             34 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           15    13      2    6325
                                             20 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2    1433
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12    10      2    3603
                                              8 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    2043
                                             11 COMMON     3     0      3
                                              4 BANK0      4     4      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     997
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _readTC74                                             2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0     164
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               5     3      2    1159
                                              8 COMMON     5     3      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              7 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDpos                                               3     2      1     977
                                              8 COMMON     3     2      1
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              7 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              7 COMMON     1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           5     4      1     788
                                              2 COMMON     5     4      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 COMMON     2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDbusy                                              2     0      2     178
                                              7 COMMON     2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (2) _LCDrecv                                              5     5      0     178
                                              2 COMMON     5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCDbusy
     _LCDrecv
       _ReadI2C
       _WriteI2C
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
   _LCDpos
     _LCDcmd
   _LCDstr
     _LCDchar
       _LCDsend2x4
   _OpenI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
   _TMR1_HasOverflowOccured
   _TMR1_Reload
     _TMR1_WriteTimer
   _TMR1_StartTimer
   _readTC74
     _ReadI2C
     _WriteI2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     25      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Nov 25 00:07:28 2023

                              l23 0E31                                l32 0EFB                                l41 006A  
                              l28 0EF5                                l36 0093                                l29 0EF6  
                              l53 0092                                l39 0065                                l48 0083  
                              l73 0013                                l74 0014                                l92 0048  
                              l87 0043                                l88 0044                                l98 06AE  
                              l99 06AF                      ___awdiv@sign 0076               ___wmul@multiplicand 0072  
                             l130 0724                               l114 06F0                               l115 06F1  
                             l211 037C                               l116 06F3                               l220 03B3  
                             l150 076A                               l134 0728                               l151 076B  
                             l135 0729                               l152 076D                               l224 03C6  
                             l232 0271                               l129 0722                               l225 03C7  
                             l170 07A2                               l171 07A3                               l235 0DF8  
                             l244 0EE1                               l165 079C                               l229 03CF  
                             l253 0E9D                               l166 079E                               l238 0E00  
                             l184 07D3                               l248 0E42                               l185 07D4  
                             l195 0338                               l196 0339                               l189 07E4  
                             l392 0E89                               l481 0FFF                               l395 0E11  
                             l398 0E08                               l906 0E6D                               l909 0E76  
                             l589 0E24                               l894 0EC9                   _timer1ReloadVal 0065  
                             _abs 0E54                               _pad 0F79                      ___awmod@sign 0076  
                             wreg 0009              _I2C1_DO_RX_NACK_STOP 0000                       ?_LCDsend2x4 0072  
                 __end_of_LCDchar 0E01                              l1012 0598                              l1102 06A0  
                            l1030 05D4                              l1031 05D5                              l1016 05A4  
                            l1017 05A5                              ?_abs 0077                              l1052 0615  
                            l1044 0604                              l1061 0629                              l1053 0616  
                            l1045 0606                              l1150 0DE7                              l1062 062A  
                            l1056 061A                              l1161 0E53                              l1090 068B  
                            l1147 0EB2                              l1075 0659                              l1164 0E1A  
                            l1076 065A                              l1173 0DEB                              l1325 0F3F  
                            l1327 0F53                              l4000 05C4                              l1097 069A  
                            l1089 0689                              l1098 069B                              l4010 05F4  
                            l4002 05C8                              l4020 0639                              l4012 05F8  
                            l4004 05D9                              l3300 0099                              l4030 0669  
                            l4022 063D                              l4014 060A                              l4006 05E4  
                            l3310 00DA                              l3302 009E                              l4040 069F  
                            l4032 066D                              l4024 0649                              l4016 061E  
                            l4008 05E8                              l3400 010B                              l3304 00A3  
                            l3320 0F6A                              l4050 0E12                              l4034 0679  
                            l4026 064D                              l4018 062E                              l3402 010F  
                            l3410 0128                              l3306 00AD                              l3314 0F56  
                            l3330 0F49                              l3322 0F35                              l1491 0136  
                            l1811 0FAC                              l4044 0DE5                              l4036 067D  
                            l4028 065E                              l3340 013C                              l3412 012D  
                            l3404 0119                              l3308 00CB                              l3316 0F59  
                            l3420 0F7F                              l3500 02E3                              l1820 0298  
                            l3332 0F4F                              l3324 0F37                              l4060 0F2C  
                            l4052 0F1A                              l1813 0FB7                              l4046 0DE8  
                            l4038 068F                              l1478 0195                              l3350 0150  
                            l3342 0141                              l3414 0132                              l3406 011D  
                            l3318 0F65                              l3430 0F9E                              l3422 0F85  
                            l3510 0307                              l3502 02EA                              l3326 0F3B  
                            l4054 0F1E                              l3360 0164                              l3352 0152  
                            l3344 0143                              l3336 0137                              l3408 0122  
                            l3432 0FB1                              l3424 0F89                              l1808 0F8B  
                            l3512 030B                              l3504 02EF                              l1816 029A  
                            l3328 0F44                              l3520 019A                              l4056 0F20  
                            l3450 0052                              l3442 004A                              l3370 0181  
                            l3362 0168                              l3354 0158                              l3346 0147  
                            l3338 0138                              l3434 0E54                              l3426 0F8F  
                            l3418 0F7B                              l3514 0312                              l3506 02FC  
                            l3522 01AB                              l3530 01DD                              l3610 0431  
                            l3602 0405                              l4058 0F22                              l3540 0EFA  
                            l3452 005B                              l3444 004D                              l3700 077C  
                            l3364 0177                              l3356 015B                              l3372 0187  
                            l3348 014C                              l3380 00E4                              l3436 0E58  
                            l3428 0F99                              l3508 0301                              l3532 01F1  
                            l3524 01B3                              l1852 0496                              l3620 0452  
                            l3612 0432                              l1844 03F8                              l3604 041D  
                            l1829 031D                              l1837 01F5                              l3454 0064  
                            l3462 0071                              l3710 07B2                              l3702 0780  
                            l3550 033D                              l3374 018C                              l3366 017B  
                            l3358 0160                              l3390 00F4                              l3382 00E5  
                            l3438 0E59                              l3526 01C0                              l3518 0198  
                            l3622 045E                              l3614 0437                              l3606 0422  
                            l1846 0402                              l3536 0EE2                              l3464 007A  
                            l3456 006F                              l3712 07B6                              l3704 078C  
                            l3560 036A                              l3552 0348                              l3544 031F  
                            l3800 0E43                              l3376 0191                              l3368 017C  
                            l3392 00F9                              l3384 00E9                              l3480 028A  
                            l3472 0274                              l3528 01D5                              l3624 046B  
                            l3616 043E                              l3608 042D                              l3632 047E  
                            l4520 049C                              l1865 0E64                              l3538 0EEC  
                            l3466 0087                              l3714 07C2                              l3706 0790  
                            l3650 0027                              l3642 0007                              l3570 0395  
                            l3562 0370                              l3554 034C                              l3546 0322  
                            l3722 0DF3                              l3802 0E48                              l3810 0E4F  
                            l3394 00FF                              l3386 00EE                              l3298 0094  
                            l3490 02A5                              l3482 028F                              l3474 0276  
                            l3618 0448                              l4610 0418                              l1858 0F17  
                            l4530 04A9                              l4522 04A0                              l3716 07C7  
                            l3708 07A7                              l3660 06B3                              l3652 0033  
                            l3644 0007                              l3580 03CB                              l3572 03A1  
                            l3564 037D                              l3556 0358                              l3548 032C  
                            l3724 0DFA                              l3740 0E21                              l3812 0E51  
                            l3804 0E49                              l3396 0102                              l3388 00F0  
                            l3492 02BF                              l3484 0294                              l3476 0281  
                            l3628 0474                              l3820 0F15                              l1788 0F34  
                            l4540 04BD                              l4532 04AC                              l4524 04A2  
                            l1877 00E3                              l1885 0F78                              l3718 07D8  
                            l3670 06DF                              l3662 06BE                   __end_of_LCDbusy 0E43  
                            l3654 0037                              l3646 0018                              l3574 03A7  
                            l3566 0383                              l3558 035E                              l3830 0E2D  
                            l3742 0E23                              l3750 0FC2                              l3734 0E01  
                            l3806 0E4B                              l3398 0107                              l3494 02C1  
                            l3486 029E                              l3478 0286                              l3590 03E3  
                            l3814 0EFE                              l4550 04E1                              l4542 04C5  
                            l4534 04AF                              l4526 04A4                              l4518 0497  
                            ?_pad 007B                              l3680 0712                              l3672 06E4  
                            l3664 06C2                              l3656 06A2                              l3648 0023  
                            l3576 03B4                              l3568 038F                              l3840 0202  
                            l3832 0E2E                              l3824 0E25                              l3736 0E1B  
                            l3760 0FCD                              l3752 0FC4                              l3744 0FB8  
                            l3808 0E4D                              l1888 0005                              l3496 02C5  
                            l3488 02A1                              l3592 03EB                              l3816 0F03  
                            l4560 0501                              l4552 04F0                              l4544 04C8  
                            l4536 04B3                              l4528 04A6                   __end_of_LCDinit 0272  
                            l3690 0748                              l3682 0716                              l3674 06F7  
                            l3666 06CE                              l3658 06A2                              l3578 03BA  
                            l3850 022A                              l3842 020A                              l3834 0E30  
                            l3826 0E2A                              l3738 0E20                              l3770 0FDA  
                            l3762 0FCF                              l3754 0FC6                              l3746 0FBE  
                            l3498 02D5                              l3594 03F2                              l3818 0F0B  
                            l4570 053D                              l4562 0522                              l4554 04F6  
                            l4546 04D8                              l4538 04BA                              l3692 074D  
                            l3684 072D                              l3676 0702                              l3668 06D3  
                            l3860 024A                              l3852 022E                              l3844 020E  
                            l3836 01F6                              l3828 0E2B                              l3780 0E0C  
                            l3772 0FDB                              l3764 0FD1                              l3756 0FC8  
                            l3748 0FC0                              l3940 0E80                              l3596 03F6  
                            l3588 03D2                              l4580 056A                              l4572 0544  
                            l4564 0529                              l4556 04F9                              l4548 04DE  
                            l3694 0759                              l3686 0738                              l3678 0706  
                            l3862 0256                              l3854 0236                              l3846 021E  
                            l3838 01FE                              l3870 0ECA                              l3790 0EC8  
                            l3782 0E0D                              l3774 0FDC                              l3766 0FD7  
                            l3758 0FCB                              l3942 0E83                              l3934 0E77  
                            l3598 03F9                              l4582 0570                              l4574 0548  
                            l4566 052E                              l4558 04FD                              l3696 075E  
                            l3688 073C                              l3864 025B                              l3856 023A  
                            l3848 0222                              l3872 0ECB                              l3784 0E10  
                            l3776 0FDD                              l3768 0FD9                              l3792 0E9E  
                            l3944 0E86                              l3936 0E7A                              l4584 0582  
                            l4576 055A                              l4568 0538                              l3698 0771  
                            l3882 0E40                              l3866 0260                              l3858 0246  
                            l3890 0E93                              l3874 0ECF                              l3786 0EB3  
                            l3778 0E09                              l3794 0EA2                              l3938 0E7D  
                            l4586 058B                              l4578 0563                              l3980 0E69  
                            l3876 0E32                              l3868 0265                              l3892 0E95  
                            l3788 0EC6                              l3796 0EA4                              l4588 0592  
                            l3982 0E6A                              l3878 0E3B                              l3894 0E99  
                            l3886 0E8B                              l3798 0EA5                              l3984 0E6B  
                            l3888 0E90                              l3992 0598                              l3986 0E6C  
                            l3978 0E66                              l3994 05A9                              l3988 0E72  
                            l3996 05B4                              l3998 05B8                   __end_of_LCDrecv 07E5  
                 __end_of_LCDsend 0049                              STR_1 102C                              STR_2 1020  
                            STR_3 1035                              STR_4 103D                              u2000 0128  
                            u2001 0127                              u2010 012D                              u2011 012C  
                            u2100 006A                              u2020 0F7F                              u2101 0069  
                            u2021 0F7E                              u2110 006F                              u2030 0F89  
                            u2111 006E                              u2031 0F88                              u2120 007A  
                            u3000 060A                              u2040 0FAC                              u2200 02E3  
                            u2121 0079                              u3001 0609                              u2041 0FAB  
                            u2201 02E2                              u2130 0083                              u3010 0615  
                            u2050 0FB1                              u2210 02EA                              u2131 0082  
                            u3011 0614                              u2051 0FB0                              u2211 02E9  
                            u2300 0EFA                              u2140 0087                              u3100 0669  
                            u3020 061A                              u2060 0E58                              u2220 02EF  
                            u2301 0EF9                              u2141 0086                              u3101 0668  
                            u3021 0619                              u2061 0E57                              u2045 0FA8  
                            u2221 02EE                              u2205 02DF                              _LATA 0016  
                            u2150 0092                              u2070 0051                              u3110 0679  
                            u3030 061E                              u2230 02FC                              _LATB 0017  
                            u2151 0091                              u2071 0050                              u3111 0678  
                            u3031 061D                              u2231 02FB                              _LATC 0018  
                            u2080 005B                              u2400 03B3                              u2320 0338  
                            u3120 0689                              u3040 0629                              u2240 0301  
                            u2160 027B                              _LATD 0019                              u2081 005A  
                            u2401 03B2                              u2321 0337                              u3121 0688  
                            u3041 0628                              u2241 0300                              u2161 0279  
                            _LATE 001A                              u2090 0064                              u2410 03C6  
                            u2330 033D                              u3130 068F                              u3050 062E  
                            u2250 0307                              u2170 027C                              u2091 0063  
                            u2411 03C5                              u2331 033C                              u2315 0325  
                            u3131 068E                              u3051 062D                              u2251 0306  
                            u2235 02F8                              u2500 0018                              u2420 03CB  
                            u2340 0348                              u3140 069A                              u3060 0639  
                            u2180 0286                              u2260 01AB                              u2501 0017  
                            u2421 03CA                              u2341 0347                              u3141 0699  
                            u3061 0638                              u2181 0285                              u2261 01AA  
                            u2510 0023                              u2350 0358                              u3150 069F  
                            u3070 0649                              u2190 028F                              u2270 01F1  
                            u2511 0022                              u2351 0357                              u3151 069E  
                            u3071 0648                              u2191 028E                              u2271 01F0  
                            u2280 0EEC                              u2600 06F0                              u2520 0033  
                            u2360 036A                              u3080 0659                              u2440 03E3  
                            u2281 0EEB                              u2601 06EF                              u2521 0032  
                            u2361 0369                              u3081 0658                              u2441 03E2  
                            u2290 0EF5                              u2610 06F7                              u2530 0043  
                            u2370 037C                              u3090 065E                              u2450 0422  
                            u3410 04C5                              u2291 0EF4                              u2611 06F6  
                            u2531 0042                              u2371 037B                              u3091 065D  
                            u2451 0421                              u3411 04C4                              u2700 076A  
                            u2620 0702                              u2540 0048                              u2380 038F  
                            u1740 0099                              u1820 0F4F                              u2460 0431  
                            u3420 04D8                              u2701 0769                              u2621 0701  
                            u2541 0047                              u2381 038E                              u1741 0098  
                            u1821 0F4E                              u1805 0F40                              u2461 0430  
                            u3421 04D7                              u2710 0771                              u2630 0712  
                            u2550 06AE                              u2390 03A1                              u1910 0187  
                            u1830 013C                              u1750 009E                              u2470 0448  
                            u3430 04F0                              u2711 0770                              u2631 0711  
                            u2551 06AD                              u2391 03A0                              u1911 0186  
                            u1831 013B                              u1751 009D                              u1815 0F45  
                            u2471 0447                              u3431 04EF                              u2800 07D8  
                            u2720 077C                              u2640 0722                              u2560 06B3  
                            u1920 018C                              u1840 0147                              u1760 00AD  
                            u2480 0452                              u3440 0538                              u2801 07D7  
                            u2721 077B                              u2641 0721                              u2561 06B2  
                            u1921 018B                              u1905 017D                              u1841 0146  
                            u1761 00AC                              u2481 0451                              u3441 0537  
                            u3425 04D4                              u2730 078C                              u2650 0728  
                            u2570 06BE                              u2490 0013                              u1850 0158  
                            u1930 00E9                              u1770 00CB                              u3450 0563  
                            u2731 078B                              u2651 0727                              u2571 06BD  
                            u2491 0012                              u3507 021F                              u1851 0157  
                            u1931 00E8                              u1771 00CA                              u3451 0562  
                            u3435 04EC                              u2900 0E72                              u2740 079C  
                            u2660 072D                              u2580 06CE                              u1940 00F4  
                            u1780 0F78                              u3460 058B                              u2901 0E71  
                            u2741 079B                              u2661 072C                              u2581 06CD  
                            u3517 0227                              u1941 00F3                              u1781 0F77  
                            u3461 058A                              u3445 0534                              u2750 07A2  
                            u2670 0738                              u2590 06DF                              u2830 0E48  
                            u2910 05A4                              u1870 0168                              u1950 00FF  
                            u1790 0F3B                              u2815 07DB                              u2751 07A1  
                            u2671 0737                              u2591 06DE                              u3527 0233  
                            u2831 0E47                              u2911 05A3                              u1871 0167  
                            u1951 00FE                              u1775 00C7                              u1791 0F3A  
                            u2760 07A7                              u2680 0748                              u2920 05A9  
                            u2840 0F15                              u2761 07A6                              u2681 0747  
                            u3537 023B                              u2921 05A8                              u1865 015C  
                            u2841 0F14                              u2770 07B2                              u2690 0759  
                            u2850 0EE1                              u2930 05B4                              u1890 0177  
                            u1970 010F                              u2771 07B1                              u2691 0758  
                            u3547 0247                              u2851 0EE0                              u2931 05B3  
                            u1891 0176                              u1971 010E                              u2780 07C2  
                            u2860 0E3B                              u2940 05C4                              u1980 0119  
                            _PMD0 0796                              u2781 07C1                              u2861 0E3A  
                            u3557 0251                              u3477 01F9                              u2941 05C3  
                            u1885 0169                              u1981 0118                              u1965 0103  
                            _PMD1 0797                              u2790 07D3                              u2870 0E90  
                            u2950 05D4                              _PMD2 0798                              u2791 07D2  
                            u3567 026D                              u3487 0207                              u2871 0E8F  
                            u2951 05D3                              u1895 0173                              _PMD3 0799  
                            u2960 05D9                              _PMD4 079A                              u3577 03CC  
                            u3497 0211                              u2961 05D8                              u1985 0115  
                            _PMD5 079B                              u2970 05E4                              u2971 05E3  
                            u1995 011E                              u2980 05F4                              u2981 05F3  
                            u2990 0604                              u2991 0603           _TMR1_HasOverflowOccured 0DE8  
                            _WPUA 0F39                              _WPUB 0F44                              _WPUC 0F4F  
                            _WPUD 0F5A                              _WPUE 0F65                              abs@a 0077  
                     main@minutes 00C1                       main@seconds 00C3                              _dbuf 0120  
                            _main 0497                              _dtoa 0272                              _prec 0063  
                            pad@i 0025                              pad@p 007C                              fsr0h 0005  
                            fsr1h 0007                              indf0 0000                              fsr0l 0004  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            start 0002                   __end_of_ReadI2C 0EFC                   __end_of_OpenI2C 0E32  
                           ??_abs 0079                             ??_pad 0024     __end_of_OSCILLATOR_Initialize 0E12  
                           _ADACQ 009D                             _ADCAP 009B                             _ADACT 0099  
                           ?_main 0070                             ?_dtoa 0028                             _ADCLK 0098  
                           _ADCNT 010C                             _ADPCH 009E                             _ADREF 009A  
                 __end_of___awdiv 0196                             _ADPRE 009C                   __end_of___awmod 0137  
                           _ADRPT 010D                   _TMR1_StartTimer 0DE5                             _T1CLK 0211  
                 ___awdiv@divisor 0070                             _T1CON 020E                   ___awdiv@counter 0075  
      __end_of_i2c1_fsmStateTable 1020                             _OSCEN 0891                      vfpfcnvrt@fmt 0034  
                           _TMR1H 020D                             _TMR1L 020C                             _TRISA 0011  
                           _TRISB 0012                             _TRISC 0013                             _TRISD 0014  
                           _TRISE 0015                 ??_I2C1_Initialize 0070                             _flags 0067  
             read_prec_or_width@c 0020               read_prec_or_width@n 0021                             _fputc 0094  
                           _fputs 0F54                             pad@fp 0027                             _width 0061  
                           _putch 0005                             main@l 00BC                             dtoa@d 0028  
                           dtoa@i 0032                             dtoa@p 002E                             dtoa@s 0031  
                           dtoa@w 002F           __end_of_TMR1_Initialize 0EB3                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 0F35                   _TMR1_WriteTimer 0E43  
                 __initialization 07E5                      __end_of_main 0598                      __end_of_dtoa 031E  
                          ??_main 005F                            ??_dtoa 002A                         ??_LCDchar 0077  
                       ??_LCDbusy 0079                         ??_LCDinit 0077        __end_of_read_prec_or_width 01F6  
                       ??_LCDrecv 0072                         ??_LCDsend 0072         ??_TMR1_HasOverflowOccured 0070  
                          _ADACCH 0091                            _ADACCL 0090                            _ADCON0 0093  
                          _ADCON1 0094                            _ADCON2 0095                            _ADCON3 0096  
                          _ADERRH 0117                            _ADERRL 0116                            ?_fputc 0070  
                          _ADLTHH 010F                            _ADLTHL 010E                            ?_fputs 0078  
                          _ADRESH 008D                            _ADRESL 008C                            _ADSTAT 0097  
                          _ADUTHH 0111                  ___awdiv@dividend 0072                            _ADUTHL 0110  
                __end_of_WriteI2C 0094                            _ANSELA 0F38                            ?_putch 0070  
                          _ANSELB 0F43                            _ANSELC 0F4E                            _ANSELD 0F59  
                          _ANSELE 0F64                            _T1GATE 0210                            _T1GCON 020F  
                          _RC3PPS 0F23           TMR1_WriteTimer@timerVal 0070                            _RC4PPS 0F24  
                          _ODCONA 0F3A                            _ODCONB 0F45                            _ODCONC 0F50  
                          _ODCOND 0F5B                            _ODCONE 0F66                            _INLVLA 0F3C  
                          _INLVLB 0F47                            _INLVLC 0F52                            _INLVLD 0F5D  
                          _INLVLE 0F68                            _LCDcmd 0DF2                            _LCDpos 0E8A  
                          _LCDstr 0ECA                            _OSCFRQ 0893                     vfpfcnvrt@done 003E  
                       ??_ReadI2C 0070                       LCDsend2x4@c 0074                       LCDrecv@mode 0076  
                       ??_OpenI2C 0070                  _I2C1_DO_TX_EMPTY 0000                      vfprintf@cfmt 0047  
         __end_of_TMR1_StartTimer 0DE8                      ?_TMR1_Reload 0070                            ___wmul 0F35  
                       ??___awdiv 0074                         ??___awmod 0074                  __end_of_readTC74 06A1  
            read_prec_or_width@ap 0076                  ___awdiv@quotient 0077                   ___awmod@divisor 0070  
                 ___awmod@counter 0075                            pad@buf 007B                            dtoa@fp 002D  
                          main@tt 00BB                   _ADCC_Initialize 0EB3             _I2C1_DO_SEND_ADR_READ 0000  
                          fputc@c 0070                    _PMD_Initialize 0E01                            fputs@c 0020  
                          fputs@i 0021                            fputs@s 0023                            putch@c 0070  
                __end_of_vfprintf 0F18         ?_ADCC_GetSingleConversion 0070                         ??_sprintf 0051  
         __end_of_TMR1_WriteTimer 0E54           _I2C1_DO_RX_NACK_RESTART 0000                  ?_TMR1_Initialize 0070  
               _SYSTEM_Initialize 0E77           __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070  
         _rdBlkRegCompleteHandler 0000                    __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0070  
                   __end_of_fputc 00E4                     __end_of_fputs 0F79                     __end_of_putch 0006  
          __end_of_PMD_Initialize 0E09                         LCDrecv@hc 0074                         LCDrecv@lc 0075  
                    ??_LCDsend2x4 0073                           ??_fputc 0073         __end_of_SYSTEM_Initialize 0E8A  
                         ??_fputs 0079                           ??_putch 0070                        __pbssBANK0 0061  
                      __pbssBANK1 00C5                        __pbssBANK2 0120                           ?_LCDcmd 0070  
                         ?_LCDpos 0078                           ?_LCDstr 0078                           LCDcmd@c 0077  
                         LCDpos@c 0078                           LCDpos@l 0079                           LCDpos@p 007A  
           _rd1RegCompleteHandler 0000                           LCDstr@c 007C                           LCDstr@p 0078  
               _I2C1_DO_SEND_STOP 0000             _wr1RegCompleteHandler 0000                        __pmaintext 0497  
                         ?___wmul 0070                  ?_TMR1_StartTimer 0070           __end_of_ADCC_Initialize 0ECA  
                 _I2C1_Initialize 0E1B                           _ADFLTRH 0115                           _ADFLTRL 0114  
              __end_of_LCDsend2x4 03D0                           _ADPREVH 008F                           _ADPREVL 008E  
                       ?_WriteI2C 0070                           _ADSTPTH 0113                           _ADSTPTL 0112  
                 ?_PMD_Initialize 0070                           _LCDchar 0DF9                           _LCDbusy 0E32  
                         _LCDinit 01F6                           _LCDrecv 06A1                           _LCDsend 0006  
                         _OSCCON1 088D                           _OSCCON3 088F                           _OSCTUNE 0892  
                         _SSP1ADD 018D                           _SLRCONA 0F3B                           _SLRCONB 0F46  
                         _SLRCONC 0F51                           _SLRCOND 0F5C                           _SLRCONE 0F67  
                         _SSP1BUF 018C                  ?_TMR1_WriteTimer 0070                      LCDsend2x4@hc 0075  
                    LCDsend2x4@lc 0076                         ?_readTC74 0070                _i2c1_fsmStateTable 1000  
                         _ReadI2C 0EE2                           _OpenI2C 0E25                           ___awdiv 0137  
                         ___awmod 00E4                         ?_vfprintf 0042                        ??_WriteI2C 0070  
                         __ptext1 0F18                           __ptext2 0EFC                           __ptext3 03D0  
                         __ptext4 0196                           __ptext5 0F35                           __ptext6 0272  
                         __ptext7 0F79                           __ptext8 0F54                           __ptext9 0094  
                       _T1CONbits 020E             _OSCILLATOR_Initialize 0E09             read_prec_or_width@fmt 0023  
                ___awmod@dividend 0072          ??_PIN_MANAGER_Initialize 0070                           main@buf 00A0  
                         _sprintf 0F18                           clrloop0 0DED              end_of_initialization 07FD  
                      ??_readTC74 0072                           fputc@fp 0072                           fputs@fp 0078  
          _I2C1_DO_SEND_ADR_WRITE 0000                _read_prec_or_width 0196           __end_of_I2C1_Initialize 0E25  
                     _I2C1_Status 00C5                 __end_of_vfpfcnvrt 0497               ?_read_prec_or_width 0076  
                vfpfcnvrt@convarg 003A                  ?_ADCC_Initialize 0070                        ??_vfprintf 0045  
__end_of_ADCC_GetSingleConversion 0E77        _I2C1_DO_SEND_RESTART_WRITE 0000                         _TRISCbits 0013  
            ??_read_prec_or_width 0078                     readTC74@value 0073                    __end_of_LCDcmd 0DF9  
                  __end_of_LCDpos 0E9E                    __end_of_LCDstr 0EE2                    LCDsend2x4@mode 0072  
                     vfpfcnvrt@ap 0035                       vfpfcnvrt@cp 0040                       vfpfcnvrt@fp 003F  
                  __end_of___wmul 0F54                    _I2C1_DO_RX_ACK 0000            ?_OSCILLATOR_Initialize 0070  
        ?_TMR1_HasOverflowOccured 0070               start_initialization 07E5                       __end_of_abs 0E65  
                     __end_of_pad 0FB8                  WriteI2C@data_out 0071                          ??_LCDcmd 0077  
                        ??_LCDpos 0079                          ??_LCDstr 007A                  ?_I2C1_Initialize 0070  
                     vfprintf@fmt 0042                  ??_PMD_Initialize 0070                          ??___wmul 0074  
        _ADCC_GetSingleConversion 0E65                          ?_LCDchar 0070                          ?_LCDbusy 0077  
                        ?_LCDinit 0070              _I2C1_DO_SEND_RESTART 0000                          ?_LCDrecv 0070  
                        ?_LCDsend 0070                         ___latbits 0002                     __pcstackBANK0 0020  
                   __pcstackBANK1 00A0                          LCDchar@c 0077                          LCDsend@c 0073  
                        ?_ReadI2C 0070             _rd2RegCompleteHandler 0000                          ?_OpenI2C 0070  
          _PIN_MANAGER_Initialize 0FB8             _wr2RegCompleteHandler 0000                         _dtoa$2561 002B  
 ADCC_GetSingleConversion@channel 0072                          ?___awdiv 0070                          ?___awmod 0070  
 __end_of_TMR1_HasOverflowOccured 0DEC                          ?_sprintf 0049                          _T1CKIPPS 0E92  
                  ___wmul@product 0074                        _I2C1_DO_RX 0000                        _I2C1_DO_TX 0000  
                       clear_ram0 0DEC                          _PIE3bits 0719                          _PIR3bits 070F  
                        _PIR4bits 0710                     ??_TMR1_Reload 0072         _I2C1_DO_SEND_RESTART_READ 0000  
                        _SSP1CON1 0190                          _SSP1CON2 0191                          _SSP1STAT 018F  
                       _vfpfcnvrt 03D0                 ??_TMR1_Initialize 0070                        _ADCON0bits 0093  
                      _ADCON1bits 0094                        _ADCON2bits 0095                        _ADCON3bits 0096  
               ___wmul@multiplier 0070                         main@count 00BD                         main@hours 00B9  
                   _I2C1_DO_RESET 0000                        _ADSTATbits 0097                        vfprintf@ap 0044  
                      vfprintf@fp 0046           ??_OSCILLATOR_Initialize 0070                        ?_vfpfcnvrt 0034  
                        _WriteI2C 0049               __end_of_TMR1_Reload 0E1B                        sprintf@fmt 0049  
                        __ptext10 0005                          __ptext11 0E54                          __ptext20 0E9E  
                        __ptext12 00E4                          __ptext21 0E01                          __ptext13 0137  
                      _T1GCONbits 020F                          __ptext30 0DF2                          __ptext22 0FB8  
                        __ptext14 0598                          __ptext31 01F6                          __ptext23 0E09  
                        __ptext15 0DE5                          __ptext32 031E                          __ptext24 0E1B  
                        __ptext16 0E12                          __ptext33 0006                          __ptext25 0EB3  
                        __ptext17 0E43                          __ptext34 0E32                          __ptext26 0E25  
                        __ptext18 0DE8                          __ptext35 06A1                          __ptext27 0ECA  
                        __ptext19 0E77                          __ptext36 0049                          __ptext28 0DF9  
                        __ptext37 0EE2                          __ptext29 0E8A                          __ptext38 0E65  
                    _SSP1CON1bits 0190                      _SSP1CON2bits 0191                 ??_TMR1_StartTimer 0070  
                        _readTC74 0598          _I2C1_CallbackReturnReset 0000        ??_ADCC_GetSingleConversion 0072  
                        main@PMON 00BF                          _vfprintf 0EFC                      _SSP1STATbits 018F  
               ??_TMR1_WriteTimer 0072                      _I2C1_DO_IDLE 0000                      _I2C1_DO_RCEN 0000  
                 main@time_buffer 00B1                        _LCDsend2x4 031E                         sprintf@ap 0052  
         ?_PIN_MANAGER_Initialize 0070           _I2C1_CallbackReturnStop 0000              _I2C1_DO_ADDRESS_NACK 0000  
                     _TMR1_Reload 0E12                       ??_vfpfcnvrt 0036                     __pstringtext1 1000  
                   __pstringtext2 102C                     __pstringtext3 1035                     __pstringtext4 103D  
                   __pstringtext5 0000                          sprintf@f 0054                          sprintf@s 0053  
                      _SSP1DATPPS 0EC6                        _SSP1CLKPPS 0EC5    __end_of_PIN_MANAGER_Initialize 1000  
               ??_ADCC_Initialize 0070                   _TMR1_Initialize 0E9E  
